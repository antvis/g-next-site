{"componentChunkName":"component---node-modules-antv-gatsby-theme-antv-site-templates-document-tsx","path":"/zh/docs/api/devtools/g-devtools","result":{"data":{"site":{"siteMetadata":{"title":"G","githubUrl":"https://github.com/antvis/g","docs":[{"slug":"guide/diving-deeper","title":{"zh":"进阶内容","en":"Diving Deeper"},"order":4},{"slug":"guide/advanced-topics","title":{"zh":"高级话题","en":"Advanced Topics"},"order":5},{"slug":"api/general","title":{"zh":"通用","en":"General"},"order":0},{"slug":"api/canvas","title":{"zh":"画布","en":"Canvas"},"order":0},{"slug":"api/renderer","title":{"zh":"渲染器","en":"Renderer"},"order":0},{"slug":"api/basic","title":{"zh":"基础图形","en":"Basic Shapes"},"order":1},{"slug":"api/advanced","title":{"zh":"高级图形","en":"Advanced Shapes"},"order":2},{"slug":"api/css","title":{"zh":"样式系统","en":"Style System"},"order":null},{"slug":"api/3d","title":{"zh":"三维世界","en":"3D"},"order":3},{"slug":"api/builtin-objects","title":{"zh":"内置对象","en":"Built-in Objects"},"order":3},{"slug":"api/gpgpu","title":{"zh":"GPGPU","en":"GPGPU"},"order":4},{"slug":"api/declarative","title":{"zh":"声明式用法","en":"Declarative programming"},"order":4},{"slug":"api/devtools","title":{"zh":"开发调试工具","en":"Devtools"},"order":5},{"slug":"api/inside-g","title":{"zh":"Inside G","en":"Inside G"},"order":4},{"slug":"plugins","title":{"zh":"插件","en":"Plugins"},"order":null}]},"pathPrefix":""},"markdownRemark":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"我们提供了一款 Chrome 浏览器插件，用于开发时审查画布中的元素。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://github.com/antvis/g/tree/next/packages/g-devtool","target":"_self","rel":["nofollow"]},"children":[{"type":"text","value":"https://github.com/antvis/g/tree/next/packages/g-devtool"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"img","properties":{"src":"https://user-images.githubusercontent.com/15213473/150081267-fb22d227-3946-4f08-88e8-55086d047da0.png","width":"500px"},"children":[]}],"data":{"quirksMode":false}},"tableOfContents":"","fields":{"slug":"/zh/docs/api/devtools/g-devtools","readingTime":{"text":"1 min read","time":9000}},"frontmatter":{"title":"G 开发者工具","contributors":null},"parent":{"__typename":"File","relativePath":"api/devtools/g-devtools.zh.md"}},"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/en/docs/plugins/intro"},"frontmatter":{"title":"Introduction to the plug-in system","order":-100}}},{"node":{"fields":{"slug":"/zh/docs/plugins/intro"},"frontmatter":{"title":"插件系统介绍","order":-100}}},{"node":{"fields":{"slug":"/en/docs/api/canvas"},"frontmatter":{"title":"Canvas","order":-100}}},{"node":{"fields":{"slug":"/zh/docs/api/canvas"},"frontmatter":{"title":"画布","order":-100}}},{"node":{"fields":{"slug":"/en/docs/api/renderer/renderer"},"frontmatter":{"title":"Introduction","order":-99}}},{"node":{"fields":{"slug":"/zh/docs/api/renderer/renderer"},"frontmatter":{"title":"简介","order":-99}}},{"node":{"fields":{"slug":"/en/docs/api/camera"},"frontmatter":{"title":"Camera","order":-98}}},{"node":{"fields":{"slug":"/zh/docs/api/camera"},"frontmatter":{"title":"相机","order":-98}}},{"node":{"fields":{"slug":"/zh/docs/api/animation"},"frontmatter":{"title":"动画","order":-4}}},{"node":{"fields":{"slug":"/en/docs/api/animation"},"frontmatter":{"title":"Animation","order":-4}}},{"node":{"fields":{"slug":"/zh/docs/api/event"},"frontmatter":{"title":"事件","order":-3}}},{"node":{"fields":{"slug":"/en/docs/api/event"},"frontmatter":{"title":"Event","order":-3}}},{"node":{"fields":{"slug":"/zh/docs/plugins/a11y"},"frontmatter":{"title":"g-plugin-a11y","order":-1}}},{"node":{"fields":{"slug":"/en/docs/plugins/a11y"},"frontmatter":{"title":"g-plugin-a11y","order":-1}}},{"node":{"fields":{"slug":"/en/docs/plugins/box2d"},"frontmatter":{"title":"g-plugin-box2d","order":-1}}},{"node":{"fields":{"slug":"/zh/docs/plugins/annotation"},"frontmatter":{"title":"g-plugin-annotation","order":-1}}},{"node":{"fields":{"slug":"/en/docs/plugins/annotation"},"frontmatter":{"title":"g-plugin-annotation","order":-1}}},{"node":{"fields":{"slug":"/zh/docs/plugins/box2d"},"frontmatter":{"title":"g-plugin-box2d","order":-1}}},{"node":{"fields":{"slug":"/en/docs/plugins/gpgpu"},"frontmatter":{"title":"g-plugin-gpgpu","order":-1}}},{"node":{"fields":{"slug":"/zh/docs/plugins/gpgpu"},"frontmatter":{"title":"g-plugin-gpgpu","order":-1}}},{"node":{"fields":{"slug":"/zh/docs/plugins/matterjs"},"frontmatter":{"title":"g-plugin-matterjs","order":-1}}},{"node":{"fields":{"slug":"/en/docs/plugins/matterjs"},"frontmatter":{"title":"g-plugin-matterjs","order":-1}}},{"node":{"fields":{"slug":"/en/docs/plugins/yoga"},"frontmatter":{"title":"g-plugin-yoga","order":-1}}},{"node":{"fields":{"slug":"/en/docs/inside-g/architecture"},"frontmatter":{"title":"Architecture","order":-1}}},{"node":{"fields":{"slug":"/zh/docs/plugins/yoga"},"frontmatter":{"title":"g-plugin-yoga","order":-1}}},{"node":{"fields":{"slug":"/zh/docs/api/basic/concept"},"frontmatter":{"title":"基础概念","order":-1}}},{"node":{"fields":{"slug":"/en/docs/api/basic/concept"},"frontmatter":{"title":"Basic Concepts","order":-1}}},{"node":{"fields":{"slug":"/zh/docs/plugins/css-select"},"frontmatter":{"title":"g-plugin-css-select","order":0}}},{"node":{"fields":{"slug":"/en/docs/plugins/css-select"},"frontmatter":{"title":"g-plugin-css-select","order":0}}},{"node":{"fields":{"slug":"/zh/docs/inside-g/architecture"},"frontmatter":{"title":"架构介绍","order":0}}},{"node":{"fields":{"slug":"/en/docs/guide/introduce"},"frontmatter":{"title":"Introduction","order":0}}},{"node":{"fields":{"slug":"/zh/docs/guide/introduce"},"frontmatter":{"title":"介绍","order":0}}},{"node":{"fields":{"slug":"/en/docs/guide/diving-deeper/scenegraph"},"frontmatter":{"title":"Scene Graph","order":0}}},{"node":{"fields":{"slug":"/zh/docs/guide/diving-deeper/scenegraph"},"frontmatter":{"title":"场景图","order":0}}},{"node":{"fields":{"slug":"/en/docs/api/renderer/canvas"},"frontmatter":{"title":"Canvas Renderer","order":0}}},{"node":{"fields":{"slug":"/zh/docs/api/renderer/canvas"},"frontmatter":{"title":"Canvas 渲染器","order":0}}},{"node":{"fields":{"slug":"/zh/docs/api/renderer/canvaskit"},"frontmatter":{"title":"Canvaskit 渲染器","order":0}}},{"node":{"fields":{"slug":"/en/docs/api/renderer/canvaskit"},"frontmatter":{"title":"Canvaskit Renderer","order":0}}},{"node":{"fields":{"slug":"/zh/docs/api/gpgpu/intro"},"frontmatter":{"title":"简介","order":0}}},{"node":{"fields":{"slug":"/en/docs/api/gpgpu/intro"},"frontmatter":{"title":"Introduction","order":0}}},{"node":{"fields":{"slug":"/en/docs/api/devtools/g-devtools"},"frontmatter":{"title":"G 开发者工具","order":0}}},{"node":{"fields":{"slug":"/zh/docs/api/devtools/g-devtools"},"frontmatter":{"title":"G 开发者工具","order":0}}},{"node":{"fields":{"slug":"/zh/docs/api/declarative/web-components"},"frontmatter":{"title":"使用 Web Components","order":0}}},{"node":{"fields":{"slug":"/en/docs/api/declarative/web-components"},"frontmatter":{"title":"使用 Web Components","order":0}}},{"node":{"fields":{"slug":"/zh/docs/api/css/intro"},"frontmatter":{"title":"简介","order":0}}},{"node":{"fields":{"slug":"/en/docs/api/css/intro"},"frontmatter":{"title":"Introduction","order":0}}},{"node":{"fields":{"slug":"/zh/docs/api/basic/display-object"},"frontmatter":{"title":"DisplayObject","order":0}}},{"node":{"fields":{"slug":"/en/docs/api/basic/display-object"},"frontmatter":{"title":"DisplayObject","order":0}}},{"node":{"fields":{"slug":"/en/docs/plugins/3d"},"frontmatter":{"title":"g-plugin-3d","order":1}}},{"node":{"fields":{"slug":"/zh/docs/plugins/3d"},"frontmatter":{"title":"g-plugin-3d","order":1}}},{"node":{"fields":{"slug":"/zh/docs/inside-g/build"},"frontmatter":{"title":"构建说明","order":1}}},{"node":{"fields":{"slug":"/en/docs/inside-g/build"},"frontmatter":{"title":"构建说明","order":1}}},{"node":{"fields":{"slug":"/en/docs/guide/chapter1"},"frontmatter":{"title":"Section I - Defining the Scenario","order":1}}},{"node":{"fields":{"slug":"/zh/docs/guide/chapter1"},"frontmatter":{"title":"第一节：定义场景","order":1}}},{"node":{"fields":{"slug":"/zh/docs/guide/diving-deeper/solar-system"},"frontmatter":{"title":"创造一个“太阳系”","order":1}}},{"node":{"fields":{"slug":"/en/docs/guide/diving-deeper/solar-system"},"frontmatter":{"title":"创造一个“太阳系”","order":1}}},{"node":{"fields":{"slug":"/zh/docs/guide/advanced-topics/performance-optimization"},"frontmatter":{"title":"性能优化","order":1}}},{"node":{"fields":{"slug":"/en/docs/guide/advanced-topics/performance-optimization"},"frontmatter":{"title":"性能优化","order":1}}},{"node":{"fields":{"slug":"/en/docs/api/renderer/svg"},"frontmatter":{"title":"SVG Renderer","order":1}}},{"node":{"fields":{"slug":"/zh/docs/api/renderer/svg"},"frontmatter":{"title":"SVG 渲染器","order":1}}},{"node":{"fields":{"slug":"/en/docs/api/gpgpu/programing-model"},"frontmatter":{"title":"Programming Model","order":1}}},{"node":{"fields":{"slug":"/zh/docs/api/gpgpu/programing-model"},"frontmatter":{"title":"编程模型","order":1}}},{"node":{"fields":{"slug":"/en/docs/api/devtools/stats"},"frontmatter":{"title":"内置的渲染统计信息","order":1}}},{"node":{"fields":{"slug":"/zh/docs/api/devtools/stats"},"frontmatter":{"title":"内置的渲染统计信息","order":1}}},{"node":{"fields":{"slug":"/zh/docs/api/css/css-typed-om"},"frontmatter":{"title":"CSS Typed OM","order":1}}},{"node":{"fields":{"slug":"/en/docs/api/css/css-typed-om"},"frontmatter":{"title":"CSS Typed OM","order":1}}},{"node":{"fields":{"slug":"/zh/docs/api/css/inheritance"},"frontmatter":{"title":"继承机制","order":1}}},{"node":{"fields":{"slug":"/en/docs/api/css/inheritance"},"frontmatter":{"title":"Inheritance","order":1}}},{"node":{"fields":{"slug":"/zh/docs/api/builtin-objects/event-target"},"frontmatter":{"title":"EventTarget","order":1}}},{"node":{"fields":{"slug":"/en/docs/api/builtin-objects/event-target"},"frontmatter":{"title":"EventTarget","order":1}}},{"node":{"fields":{"slug":"/zh/docs/api/basic/group"},"frontmatter":{"title":"Group 图形分组","order":1}}},{"node":{"fields":{"slug":"/en/docs/api/basic/group"},"frontmatter":{"title":"Group","order":1}}},{"node":{"fields":{"slug":"/zh/docs/api/basic/text"},"frontmatter":{"title":"Text 文本","order":1}}},{"node":{"fields":{"slug":"/zh/docs/api/advanced/arrow"},"frontmatter":{"title":"Arrow 箭头","order":1}}},{"node":{"fields":{"slug":"/en/docs/api/3d/material"},"frontmatter":{"title":"材质","order":1}}},{"node":{"fields":{"slug":"/zh/docs/api/3d/material"},"frontmatter":{"title":"材质","order":1}}},{"node":{"fields":{"slug":"/en/docs/api/basic/text"},"frontmatter":{"title":"Text","order":1}}},{"node":{"fields":{"slug":"/en/docs/plugins/device-renderer"},"frontmatter":{"title":"g-plugin-device-renderer","order":2}}},{"node":{"fields":{"slug":"/zh/docs/plugins/device-renderer"},"frontmatter":{"title":"g-plugin-device-renderer","order":2}}},{"node":{"fields":{"slug":"/en/docs/inside-g/gradient"},"frontmatter":{"title":"渐变色实现","order":2}}},{"node":{"fields":{"slug":"/zh/docs/inside-g/gradient"},"frontmatter":{"title":"渐变色实现","order":2}}},{"node":{"fields":{"slug":"/zh/docs/guide/chapter2"},"frontmatter":{"title":"第二节：使用渲染器","order":2}}},{"node":{"fields":{"slug":"/en/docs/guide/chapter2"},"frontmatter":{"title":"Section II - Using the renderer","order":2}}},{"node":{"fields":{"slug":"/en/docs/guide/diving-deeper/camera"},"frontmatter":{"title":"使用相机","order":2}}},{"node":{"fields":{"slug":"/zh/docs/guide/diving-deeper/camera"},"frontmatter":{"title":"使用相机","order":2}}},{"node":{"fields":{"slug":"/zh/docs/guide/advanced-topics/container"},"frontmatter":{"title":"理解依赖注入与容器","order":2}}},{"node":{"fields":{"slug":"/en/docs/guide/advanced-topics/container"},"frontmatter":{"title":"理解依赖注入与容器","order":2}}},{"node":{"fields":{"slug":"/en/docs/api/renderer/webgl"},"frontmatter":{"title":"WebGL Renderer","order":2}}},{"node":{"fields":{"slug":"/zh/docs/api/renderer/webgl"},"frontmatter":{"title":"WebGL 渲染器","order":2}}},{"node":{"fields":{"slug":"/en/docs/api/gpgpu/compute-pipeline"},"frontmatter":{"title":"Kernel API","order":2}}},{"node":{"fields":{"slug":"/zh/docs/api/gpgpu/compute-pipeline"},"frontmatter":{"title":"Kernel API","order":2}}},{"node":{"fields":{"slug":"/zh/docs/api/css/css-properties-values-api"},"frontmatter":{"title":"CSS Properties & Values API","order":2}}},{"node":{"fields":{"slug":"/en/docs/api/css/css-properties-values-api"},"frontmatter":{"title":"CSS Properties & Values API","order":2}}},{"node":{"fields":{"slug":"/en/docs/api/builtin-objects/node"},"frontmatter":{"title":"Node","order":2}}},{"node":{"fields":{"slug":"/zh/docs/api/builtin-objects/node"},"frontmatter":{"title":"Node","order":2}}},{"node":{"fields":{"slug":"/en/docs/api/basic/circle"},"frontmatter":{"title":"Circle","order":2}}},{"node":{"fields":{"slug":"/zh/docs/api/basic/circle"},"frontmatter":{"title":"Circle 圆形","order":2}}},{"node":{"fields":{"slug":"/en/docs/api/advanced/arrow"},"frontmatter":{"title":"Circle 圆形","order":2}}},{"node":{"fields":{"slug":"/en/docs/api/3d/geometry"},"frontmatter":{"title":"几何","order":2}}},{"node":{"fields":{"slug":"/zh/docs/api/3d/geometry"},"frontmatter":{"title":"几何","order":2}}},{"node":{"fields":{"slug":"/en/docs/plugins/canvas-renderer"},"frontmatter":{"title":"g-plugin-canvas-renderer","order":3}}},{"node":{"fields":{"slug":"/zh/docs/plugins/canvas-renderer"},"frontmatter":{"title":"g-plugin-canvas-renderer","order":3}}},{"node":{"fields":{"slug":"/en/docs/plugins/canvaskit-renderer"},"frontmatter":{"title":"g-plugin-canvaskit-renderer","order":3}}},{"node":{"fields":{"slug":"/zh/docs/plugins/canvaskit-renderer"},"frontmatter":{"title":"g-plugin-canvaskit-renderer","order":3}}},{"node":{"fields":{"slug":"/en/docs/plugins/rough-canvas-renderer"},"frontmatter":{"title":"g-plugin-rough-canvas-renderer","order":3}}},{"node":{"fields":{"slug":"/zh/docs/plugins/rough-svg-renderer"},"frontmatter":{"title":"g-plugin-rough-svg-renderer","order":3}}},{"node":{"fields":{"slug":"/en/docs/plugins/rough-svg-renderer"},"frontmatter":{"title":"g-plugin-rough-svg-renderer","order":3}}},{"node":{"fields":{"slug":"/en/docs/inside-g/line"},"frontmatter":{"title":"Line 的实现","order":3}}},{"node":{"fields":{"slug":"/zh/docs/plugins/rough-canvas-renderer"},"frontmatter":{"title":"g-plugin-rough-canvas-renderer","order":3}}},{"node":{"fields":{"slug":"/en/docs/guide/chapter3"},"frontmatter":{"title":"Section III - Adding some interaction","order":3}}},{"node":{"fields":{"slug":"/en/docs/guide/diving-deeper/animation"},"frontmatter":{"title":"实现一个简单的动画","order":3}}},{"node":{"fields":{"slug":"/zh/docs/inside-g/line"},"frontmatter":{"title":"Line 的实现","order":3}}},{"node":{"fields":{"slug":"/zh/docs/guide/diving-deeper/animation"},"frontmatter":{"title":"实现一个简单的动画","order":3}}},{"node":{"fields":{"slug":"/en/docs/guide/diving-deeper/plugin"},"frontmatter":{"title":"使用插件","order":3}}},{"node":{"fields":{"slug":"/en/docs/guide/advanced-topics/custom-element"},"frontmatter":{"title":"自定义图形","order":3}}},{"node":{"fields":{"slug":"/zh/docs/guide/advanced-topics/custom-element"},"frontmatter":{"title":"自定义图形","order":3}}},{"node":{"fields":{"slug":"/zh/docs/api/renderer/webgpu"},"frontmatter":{"title":"WebGPU 渲染器","order":3}}},{"node":{"fields":{"slug":"/en/docs/api/devtools/third-party"},"frontmatter":{"title":"第三方开发调试工具","order":3}}},{"node":{"fields":{"slug":"/zh/docs/api/devtools/third-party"},"frontmatter":{"title":"第三方开发调试工具","order":3}}},{"node":{"fields":{"slug":"/en/docs/api/builtin-objects/element"},"frontmatter":{"title":"Element","order":3}}},{"node":{"fields":{"slug":"/zh/docs/api/builtin-objects/element"},"frontmatter":{"title":"Element","order":3}}},{"node":{"fields":{"slug":"/en/docs/api/basic/ellipse"},"frontmatter":{"title":"Ellipse","order":3}}},{"node":{"fields":{"slug":"/zh/docs/api/basic/ellipse"},"frontmatter":{"title":"Ellipse 椭圆","order":3}}},{"node":{"fields":{"slug":"/en/docs/api/renderer/webgpu"},"frontmatter":{"title":"WebGPU Renderer","order":3}}},{"node":{"fields":{"slug":"/en/docs/api/3d/mesh"},"frontmatter":{"title":"Mesh","order":3}}},{"node":{"fields":{"slug":"/zh/docs/guide/chapter3"},"frontmatter":{"title":"第三节：增加交互","order":3}}},{"node":{"fields":{"slug":"/zh/docs/guide/diving-deeper/plugin"},"frontmatter":{"title":"使用插件","order":3}}},{"node":{"fields":{"slug":"/en/docs/api/3d/light"},"frontmatter":{"title":"光源","order":3}}},{"node":{"fields":{"slug":"/zh/docs/api/3d/light"},"frontmatter":{"title":"光源","order":3}}},{"node":{"fields":{"slug":"/zh/docs/api/3d/mesh"},"frontmatter":{"title":"Mesh","order":3}}},{"node":{"fields":{"slug":"/zh/docs/plugins/canvas-path-generator"},"frontmatter":{"title":"g-plugin-canvas-path-generator","order":4}}},{"node":{"fields":{"slug":"/zh/docs/plugins/canvas-picker"},"frontmatter":{"title":"g-plugin-canvas-picker","order":4}}},{"node":{"fields":{"slug":"/en/docs/plugins/canvas-path-generator"},"frontmatter":{"title":"g-plugin-canvas-path-generator","order":4}}},{"node":{"fields":{"slug":"/en/docs/plugins/canvas-picker"},"frontmatter":{"title":"g-plugin-canvas-picker","order":4}}},{"node":{"fields":{"slug":"/zh/docs/guide/advanced-topics/event-delegate"},"frontmatter":{"title":"理解事件传播路径","order":4}}},{"node":{"fields":{"slug":"/en/docs/guide/advanced-topics/event-delegate"},"frontmatter":{"title":"理解事件传播路径","order":4}}},{"node":{"fields":{"slug":"/en/docs/api/renderer/custom"},"frontmatter":{"title":"Custom Renderer","order":4}}},{"node":{"fields":{"slug":"/zh/docs/api/renderer/custom"},"frontmatter":{"title":"自定义渲染器","order":4}}},{"node":{"fields":{"slug":"/en/docs/api/builtin-objects/document"},"frontmatter":{"title":"Document","order":4}}},{"node":{"fields":{"slug":"/zh/docs/api/builtin-objects/document"},"frontmatter":{"title":"Document","order":4}}},{"node":{"fields":{"slug":"/en/docs/api/basic/rect"},"frontmatter":{"title":"Rect","order":4}}},{"node":{"fields":{"slug":"/zh/docs/api/basic/rect"},"frontmatter":{"title":"Rect 矩形","order":4}}},{"node":{"fields":{"slug":"/zh/docs/plugins/svg-renderer"},"frontmatter":{"title":"g-plugin-svg-renderer","order":5}}},{"node":{"fields":{"slug":"/en/docs/plugins/svg-renderer"},"frontmatter":{"title":"g-plugin-svg-renderer","order":5}}},{"node":{"fields":{"slug":"/en/docs/guide/advanced-topics/use-react-g"},"frontmatter":{"title":"Using react-g","order":5}}},{"node":{"fields":{"slug":"/zh/docs/guide/advanced-topics/use-react-g"},"frontmatter":{"title":"使用 React 定义图形","order":5}}},{"node":{"fields":{"slug":"/en/docs/api/css/css-layout-api"},"frontmatter":{"title":"CSS Layout API","order":5}}},{"node":{"fields":{"slug":"/zh/docs/api/css/css-layout-api"},"frontmatter":{"title":"CSS Layout API","order":5}}},{"node":{"fields":{"slug":"/en/docs/api/builtin-objects/mutation-observer"},"frontmatter":{"title":"MutationObserver","order":5}}},{"node":{"fields":{"slug":"/zh/docs/api/builtin-objects/mutation-observer"},"frontmatter":{"title":"MutationObserver","order":5}}},{"node":{"fields":{"slug":"/zh/docs/api/basic/image"},"frontmatter":{"title":"Image 图片","order":5}}},{"node":{"fields":{"slug":"/en/docs/api/basic/image"},"frontmatter":{"title":"Image","order":5}}},{"node":{"fields":{"slug":"/en/docs/api/3d/fog"},"frontmatter":{"title":"雾","order":5}}},{"node":{"fields":{"slug":"/zh/docs/api/3d/fog"},"frontmatter":{"title":"雾","order":5}}},{"node":{"fields":{"slug":"/en/docs/plugins/svg-picker"},"frontmatter":{"title":"g-plugin-svg-picker","order":6}}},{"node":{"fields":{"slug":"/zh/docs/plugins/svg-picker"},"frontmatter":{"title":"g-plugin-svg-picker","order":6}}},{"node":{"fields":{"slug":"/zh/docs/guide/advanced-topics/image-exporter"},"frontmatter":{"title":"导出画布内容","order":6}}},{"node":{"fields":{"slug":"/en/docs/guide/advanced-topics/image-exporter"},"frontmatter":{"title":"Exporting the contents of the canvas","order":6}}},{"node":{"fields":{"slug":"/en/docs/guide/advanced-topics/lite"},"frontmatter":{"title":"Using lite version","order":6}}},{"node":{"fields":{"slug":"/zh/docs/guide/advanced-topics/lite"},"frontmatter":{"title":"使用轻量版","order":6}}},{"node":{"fields":{"slug":"/en/docs/api/gpgpu/implements"},"frontmatter":{"title":"Principles of classical GPGPU implementation","order":6}}},{"node":{"fields":{"slug":"/zh/docs/api/gpgpu/webgpu-graph"},"frontmatter":{"title":"webgpu-graph","order":6}}},{"node":{"fields":{"slug":"/en/docs/api/gpgpu/webgpu-graph"},"frontmatter":{"title":"webgpu-graph","order":6}}},{"node":{"fields":{"slug":"/en/docs/api/builtin-objects/utils"},"frontmatter":{"title":"Utils","order":6}}},{"node":{"fields":{"slug":"/zh/docs/api/builtin-objects/utils"},"frontmatter":{"title":"工具方法","order":6}}},{"node":{"fields":{"slug":"/en/docs/api/basic/line"},"frontmatter":{"title":"Line","order":6}}},{"node":{"fields":{"slug":"/zh/docs/api/basic/line"},"frontmatter":{"title":"Line 直线","order":6}}},{"node":{"fields":{"slug":"/zh/docs/api/3d/control"},"frontmatter":{"title":"交互","order":6}}},{"node":{"fields":{"slug":"/en/docs/api/3d/control"},"frontmatter":{"title":"交互","order":6}}},{"node":{"fields":{"slug":"/zh/docs/api/gpgpu/implements"},"frontmatter":{"title":"经典 GPGPU 的实现原理","order":6}}},{"node":{"fields":{"slug":"/zh/docs/plugins/dom-interaction"},"frontmatter":{"title":"g-plugin-dom-interaction","order":7}}},{"node":{"fields":{"slug":"/zh/docs/plugins/dragndrop"},"frontmatter":{"title":"g-plugin-dragndrop","order":7}}},{"node":{"fields":{"slug":"/en/docs/plugins/dragndrop"},"frontmatter":{"title":"g-plugin-dragndrop","order":7}}},{"node":{"fields":{"slug":"/en/docs/plugins/dom-interaction"},"frontmatter":{"title":"g-plugin-dom-interaction","order":7}}},{"node":{"fields":{"slug":"/en/docs/api/basic/polyline"},"frontmatter":{"title":"Polyline","order":7}}},{"node":{"fields":{"slug":"/zh/docs/api/basic/polygon"},"frontmatter":{"title":"Polygon 多边形","order":7}}},{"node":{"fields":{"slug":"/zh/docs/api/basic/polyline"},"frontmatter":{"title":"Polyline 折线","order":7}}},{"node":{"fields":{"slug":"/en/docs/api/basic/polygon"},"frontmatter":{"title":"Polygon","order":7}}},{"node":{"fields":{"slug":"/zh/docs/api/basic/path"},"frontmatter":{"title":"Path 路径","order":8}}},{"node":{"fields":{"slug":"/en/docs/api/basic/path"},"frontmatter":{"title":"Path","order":8}}},{"node":{"fields":{"slug":"/en/docs/api/basic/html"},"frontmatter":{"title":"HTML","order":9}}},{"node":{"fields":{"slug":"/zh/docs/api/basic/html"},"frontmatter":{"title":"HTML 内容","order":9}}},{"node":{"fields":{"slug":"/en/docs/plugins/control"},"frontmatter":{"title":"g-plugin-control","order":10}}},{"node":{"fields":{"slug":"/zh/docs/plugins/control"},"frontmatter":{"title":"g-plugin-control","order":10}}},{"node":{"fields":{"slug":"/zh/docs/guide/diving-deeper/gpgpu"},"frontmatter":{"title":"GPGPU 初体验","order":10}}},{"node":{"fields":{"slug":"/en/docs/guide/diving-deeper/gpgpu"},"frontmatter":{"title":"GPGPU 初体验","order":10}}},{"node":{"fields":{"slug":"/en/docs/guide/diving-deeper/3d"},"frontmatter":{"title":"进入 3D 世界","order":11}}},{"node":{"fields":{"slug":"/zh/docs/guide/diving-deeper/3d"},"frontmatter":{"title":"进入 3D 世界","order":11}}},{"node":{"fields":{"slug":"/en/docs/guide/diving-deeper/box2d"},"frontmatter":{"title":"使用 Box2D 物理引擎","order":12}}},{"node":{"fields":{"slug":"/zh/docs/guide/diving-deeper/box2d"},"frontmatter":{"title":"使用 Box2D 物理引擎","order":12}}},{"node":{"fields":{"slug":"/en/docs/guide/diving-deeper/matterjs"},"frontmatter":{"title":"使用 matter.js 物理引擎","order":12}}},{"node":{"fields":{"slug":"/zh/docs/guide/diving-deeper/matterjs"},"frontmatter":{"title":"使用 matter.js 物理引擎","order":12}}},{"node":{"fields":{"slug":"/en/docs/guide/diving-deeper/yoga"},"frontmatter":{"title":"使用 Yoga 布局引擎","order":13}}},{"node":{"fields":{"slug":"/zh/docs/guide/diving-deeper/yoga"},"frontmatter":{"title":"使用 Yoga 布局引擎","order":13}}},{"node":{"fields":{"slug":"/zh/docs/guide/diving-deeper/d3"},"frontmatter":{"title":"接管 D3 渲染","order":14}}},{"node":{"fields":{"slug":"/en/docs/guide/diving-deeper/d3"},"frontmatter":{"title":"Takeover D3's rendering","order":14}}},{"node":{"fields":{"slug":"/en/docs/guide/diving-deeper/plot"},"frontmatter":{"title":"Takeover Observable Plot's rendering","order":15}}},{"node":{"fields":{"slug":"/zh/docs/guide/diving-deeper/plot"},"frontmatter":{"title":"接管 Observable Plot 渲染","order":15}}},{"node":{"fields":{"slug":"/en/docs/guide/diving-deeper/switch-renderer"},"frontmatter":{"title":"Choose a renderer","order":99}}},{"node":{"fields":{"slug":"/zh/docs/guide/diving-deeper/switch-renderer"},"frontmatter":{"title":"按需引入渲染器","order":99}}},{"node":{"fields":{"slug":"/en/docs/guide/diving-deeper/rendering-on-demand"},"frontmatter":{"title":"Rendering on demand","order":100}}},{"node":{"fields":{"slug":"/zh/docs/guide/diving-deeper/rendering-on-demand"},"frontmatter":{"title":"按需渲染","order":100}}}]}},"pageContext":{"examples":[{"relativePath":"style/demo/color.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/style/demo/color.js","order":1,"filename":"color.js","title":{"zh":"<color>","en":"<color>"},"source":"import { Canvas, CanvasEvent, Circle } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n/**\n * <color>\n * e.g. 'red' '#f00' 'rgb(255,0,0)' 'rgba(255,0,0,0.5)' 'transparent'\n */\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\n// create a circle\nconst circle = new Circle({\n  style: {\n    cx: 200,\n    cy: 200,\n    r: 100,\n    fill: '#f00',\n    stroke: 'black',\n    lineWidth: 10,\n  },\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  // add a circle to canvas\n  canvas.appendChild(circle);\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n\nconst circleFolder = gui.addFolder('circle');\nconst circleConfig = {\n  fill: '#f00',\n};\ncircleFolder\n  .add(circleConfig, 'fill', [\n    'darkcyan',\n    '#f00',\n    '#ff0000',\n    'rgb(255,0,0)',\n    'rgb(100%, 0%, 0%)',\n    'rgba(100%,0%,0%,0.5)',\n    'transparent',\n    'currentColor',\n  ])\n  .onChange((fill) => {\n    circle.style.fill = fill;\n  });\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.color = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * <color>\n   * e.g. 'red' '#f00' 'rgb(255,0,0)' 'rgba(255,0,0,0.5)' 'transparent'\n   */\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  }); // create a circle\n\n  var circle = new _g.Circle({\n    style: {\n      cx: 200,\n      cy: 200,\n      r: 100,\n      fill: '#f00',\n      stroke: 'black',\n      lineWidth: 10\n    }\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    // add a circle to canvas\n    canvas.appendChild(circle);\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n  var circleFolder = gui.addFolder('circle');\n  var circleConfig = {\n    fill: '#f00'\n  };\n  circleFolder.add(circleConfig, 'fill', ['darkcyan', '#f00', '#ff0000', 'rgb(255,0,0)', 'rgb(100%, 0%, 0%)', 'rgba(100%,0%,0%,0.5)', 'transparent', 'currentColor']).onChange(function (fill) {\n    circle.style.fill = fill;\n  });\n});"},{"relativePath":"style/demo/gradient.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/style/demo/gradient.js","order":2,"filename":"gradient.js","title":{"zh":"<gradient>","en":"<gradient>"},"source":"import { Canvas, CanvasEvent, HTML, Line, Path, Rect } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n/**\n * <gradient>\n * e.g. linear-gradient(0deg, blue, green 40%, red)\n *      radial-gradient(circle at center, red 0, blue, green 100%)\n * @see https://developer.mozilla.org/zh-CN/docs/Web/CSS/gradient/linear-gradient\n * @see https://developer.mozilla.org/zh-CN/docs/Web/CSS/gradient/radial-gradient\n *\n * interactive demo:\n * @see https://observablehq.com/@danburzo/css-gradient-line\n */\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst svgRenderer = new SVGRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst webgpuRenderer = new WebGPURenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n});\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\n// single linear gradient\nconst rect1 = new Rect({\n  style: {\n    x: 50,\n    y: 50,\n    width: 200,\n    height: 100,\n    fill: 'linear-gradient(0deg, blue, green 40%, red)',\n  },\n});\n\n// multi linear gradients\nconst rect2 = new Rect({\n  style: {\n    x: 50,\n    y: 250,\n    width: 200,\n    height: 100,\n    fill: `linear-gradient(217deg, rgba(255,0,0,.8), rgba(255,0,0,0) 70.71%),\n            linear-gradient(127deg, rgba(0,255,0,.8), rgba(0,255,0,0) 70.71%),\n            linear-gradient(336deg, rgba(0,0,255,.8), rgba(0,0,255,0) 70.71%)`,\n  },\n});\n\n// single radial gradient\nconst rect3 = new Rect({\n  style: {\n    x: 350,\n    y: 50,\n    width: 200,\n    height: 100,\n    fill: 'radial-gradient(circle at center, red, blue, green 100%)',\n  },\n});\n\n// hard stop\nconst rect4 = new Rect({\n  style: {\n    x: 350,\n    y: 250,\n    width: 200,\n    height: 100,\n    fill: 'radial-gradient(red 50%, blue 50%)',\n  },\n});\n\nconst line1 = new Line({\n  style: {\n    x1: 50,\n    y1: 180,\n    x2: 250,\n    y2: 180,\n    strokeWidth: 10,\n    stroke: 'linear-gradient(0deg, blue, green 40%, red)',\n  },\n});\nconst line2 = new Line({\n  style: {\n    x1: 350,\n    y1: 180,\n    x2: 550,\n    y2: 180,\n    strokeWidth: 10,\n    stroke: 'radial-gradient(circle at center, red, blue, green 100%)',\n  },\n});\n\nconst path = new Path({\n  style: {\n    d: 'M33.6,51S44.36,31.65,48.15,18,64.38,7.42,66.62,18s10.6,33.6,13.15,33.1',\n    transform: 'scale(3) translate(200, 300)',\n    lineWidth: 1,\n    stroke: '#54BECC',\n    fill: 'linear-gradient(-90deg, rgba(178, 230, 181, 0), rgba(178, 230, 181, 0.6) 14%, rgba(166, 221, 179, 0.82) 23%, rgba(101, 171, 170, 0.9) 67%, rgb(23, 80, 157))',\n    shadowType: 'inner',\n    shadowColor: 'red',\n    shadowBlur: 10,\n  },\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  canvas.appendChild(line1);\n  canvas.appendChild(line2);\n  canvas.appendChild(path);\n\n  canvas.appendChild(rect1);\n  canvas.appendChild(rect2);\n  canvas.appendChild(rect3);\n  canvas.appendChild(rect4);\n\n  canvas.appendChild(\n    new HTML({\n      style: {\n        x: 100,\n        y: 20,\n        height: 30,\n        width: 200,\n        innerHTML: 'linear gradient',\n      },\n    }),\n  );\n  canvas.appendChild(\n    new HTML({\n      style: {\n        x: 60,\n        y: 220,\n        height: 30,\n        width: 200,\n        innerHTML: 'multiple linear gradients',\n      },\n    }),\n  );\n  canvas.appendChild(\n    new HTML({\n      style: {\n        x: 350,\n        y: 20,\n        height: 30,\n        width: 200,\n        innerHTML: 'radial gradient',\n      },\n    }),\n  );\n  canvas.appendChild(\n    new HTML({\n      style: {\n        x: 350,\n        y: 220,\n        height: 30,\n        width: 200,\n        innerHTML: 'hard color stop',\n      },\n    }),\n  );\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n\nconst linearGradientFolder = gui.addFolder('linear gradient');\nconst linearGradientConfig = {\n  angle: 0,\n  width: 200,\n  height: 100,\n  'side or corner': 'to right',\n  'green color stop(%)': 40,\n};\nlinearGradientFolder.add(linearGradientConfig, 'angle', 0, 360).onChange((angle) => {\n  rect1.style.fill = `linear-gradient(${angle}deg, blue, green 40%, red)`;\n});\nlinearGradientFolder\n  .add(linearGradientConfig, 'side or corner', [\n    'to left',\n    'to top',\n    'to bottom',\n    'to right',\n    'to left top',\n    'to top left',\n    'to left bottom',\n    'to bottom left',\n    'to right top',\n    'to top right',\n    'to right bottom',\n    'to bottom right',\n  ])\n  .onChange((direction) => {\n    rect1.style.fill = `linear-gradient(${direction}, blue, green 40%, red)`;\n  });\nlinearGradientFolder\n  .add(linearGradientConfig, 'green color stop(%)', 0, 100)\n  .onChange((percentage) => {\n    rect1.style.fill = `linear-gradient(0deg, blue, green ${percentage}%, red)`;\n  });\nlinearGradientFolder.add(linearGradientConfig, 'width', 50, 400).onChange((width) => {\n  rect1.style.width = width;\n});\nlinearGradientFolder.add(linearGradientConfig, 'height', 50, 400).onChange((height) => {\n  rect1.style.height = height;\n});\n\nconst radialGradientFolder = gui.addFolder('radial gradient');\nconst radialGradientConfig = {\n  position: 'center',\n  'green color stop(%)': 100,\n};\nradialGradientFolder\n  .add(radialGradientConfig, 'position', [\n    'top',\n    'left',\n    'bottom',\n    'right',\n    'center',\n    'top left',\n    'left top',\n    'top right',\n    'bottom left',\n    'bottom right',\n    '25% 25%',\n    '50% 50%',\n  ])\n  .onChange((position) => {\n    rect3.style.fill = `radial-gradient(circle at ${position}, red, blue, green 100%)`;\n  });\nradialGradientFolder\n  .add(radialGradientConfig, 'green color stop(%)', 0, 100)\n  .onChange((percentage) => {\n    rect3.style.fill = `radial-gradient(circle at center, red, blue, green ${percentage}%)`;\n  });\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.gradient = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * <gradient>\n   * e.g. linear-gradient(0deg, blue, green 40%, red)\n   *      radial-gradient(circle at center, red 0, blue, green 100%)\n   * @see https://developer.mozilla.org/zh-CN/docs/Web/CSS/gradient/linear-gradient\n   * @see https://developer.mozilla.org/zh-CN/docs/Web/CSS/gradient/radial-gradient\n   *\n   * interactive demo:\n   * @see https://observablehq.com/@danburzo/css-gradient-line\n   */\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var webgpuRenderer = new _gWebgpu.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/'\n  }); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  }); // single linear gradient\n\n  var rect1 = new _g.Rect({\n    style: {\n      x: 50,\n      y: 50,\n      width: 200,\n      height: 100,\n      fill: 'linear-gradient(0deg, blue, green 40%, red)'\n    }\n  }); // multi linear gradients\n\n  var rect2 = new _g.Rect({\n    style: {\n      x: 50,\n      y: 250,\n      width: 200,\n      height: 100,\n      fill: \"linear-gradient(217deg, rgba(255,0,0,.8), rgba(255,0,0,0) 70.71%),\\n            linear-gradient(127deg, rgba(0,255,0,.8), rgba(0,255,0,0) 70.71%),\\n            linear-gradient(336deg, rgba(0,0,255,.8), rgba(0,0,255,0) 70.71%)\"\n    }\n  }); // single radial gradient\n\n  var rect3 = new _g.Rect({\n    style: {\n      x: 350,\n      y: 50,\n      width: 200,\n      height: 100,\n      fill: 'radial-gradient(circle at center, red, blue, green 100%)'\n    }\n  }); // hard stop\n\n  var rect4 = new _g.Rect({\n    style: {\n      x: 350,\n      y: 250,\n      width: 200,\n      height: 100,\n      fill: 'radial-gradient(red 50%, blue 50%)'\n    }\n  });\n  var line1 = new _g.Line({\n    style: {\n      x1: 50,\n      y1: 180,\n      x2: 250,\n      y2: 180,\n      strokeWidth: 10,\n      stroke: 'linear-gradient(0deg, blue, green 40%, red)'\n    }\n  });\n  var line2 = new _g.Line({\n    style: {\n      x1: 350,\n      y1: 180,\n      x2: 550,\n      y2: 180,\n      strokeWidth: 10,\n      stroke: 'radial-gradient(circle at center, red, blue, green 100%)'\n    }\n  });\n  var path = new _g.Path({\n    style: {\n      d: 'M33.6,51S44.36,31.65,48.15,18,64.38,7.42,66.62,18s10.6,33.6,13.15,33.1',\n      transform: 'scale(3) translate(200, 300)',\n      lineWidth: 1,\n      stroke: '#54BECC',\n      fill: 'linear-gradient(-90deg, rgba(178, 230, 181, 0), rgba(178, 230, 181, 0.6) 14%, rgba(166, 221, 179, 0.82) 23%, rgba(101, 171, 170, 0.9) 67%, rgb(23, 80, 157))',\n      shadowType: 'inner',\n      shadowColor: 'red',\n      shadowBlur: 10\n    }\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    canvas.appendChild(line1);\n    canvas.appendChild(line2);\n    canvas.appendChild(path);\n    canvas.appendChild(rect1);\n    canvas.appendChild(rect2);\n    canvas.appendChild(rect3);\n    canvas.appendChild(rect4);\n    canvas.appendChild(new _g.HTML({\n      style: {\n        x: 100,\n        y: 20,\n        height: 30,\n        width: 200,\n        innerHTML: 'linear gradient'\n      }\n    }));\n    canvas.appendChild(new _g.HTML({\n      style: {\n        x: 60,\n        y: 220,\n        height: 30,\n        width: 200,\n        innerHTML: 'multiple linear gradients'\n      }\n    }));\n    canvas.appendChild(new _g.HTML({\n      style: {\n        x: 350,\n        y: 20,\n        height: 30,\n        width: 200,\n        innerHTML: 'radial gradient'\n      }\n    }));\n    canvas.appendChild(new _g.HTML({\n      style: {\n        x: 350,\n        y: 220,\n        height: 30,\n        width: 200,\n        innerHTML: 'hard color stop'\n      }\n    }));\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n  var linearGradientFolder = gui.addFolder('linear gradient');\n  var linearGradientConfig = {\n    angle: 0,\n    width: 200,\n    height: 100,\n    'side or corner': 'to right',\n    'green color stop(%)': 40\n  };\n  linearGradientFolder.add(linearGradientConfig, 'angle', 0, 360).onChange(function (angle) {\n    rect1.style.fill = \"linear-gradient(\".concat(angle, \"deg, blue, green 40%, red)\");\n  });\n  linearGradientFolder.add(linearGradientConfig, 'side or corner', ['to left', 'to top', 'to bottom', 'to right', 'to left top', 'to top left', 'to left bottom', 'to bottom left', 'to right top', 'to top right', 'to right bottom', 'to bottom right']).onChange(function (direction) {\n    rect1.style.fill = \"linear-gradient(\".concat(direction, \", blue, green 40%, red)\");\n  });\n  linearGradientFolder.add(linearGradientConfig, 'green color stop(%)', 0, 100).onChange(function (percentage) {\n    rect1.style.fill = \"linear-gradient(0deg, blue, green \".concat(percentage, \"%, red)\");\n  });\n  linearGradientFolder.add(linearGradientConfig, 'width', 50, 400).onChange(function (width) {\n    rect1.style.width = width;\n  });\n  linearGradientFolder.add(linearGradientConfig, 'height', 50, 400).onChange(function (height) {\n    rect1.style.height = height;\n  });\n  var radialGradientFolder = gui.addFolder('radial gradient');\n  var radialGradientConfig = {\n    position: 'center',\n    'green color stop(%)': 100\n  };\n  radialGradientFolder.add(radialGradientConfig, 'position', ['top', 'left', 'bottom', 'right', 'center', 'top left', 'left top', 'top right', 'bottom left', 'bottom right', '25% 25%', '50% 50%']).onChange(function (position) {\n    rect3.style.fill = \"radial-gradient(circle at \".concat(position, \", red, blue, green 100%)\");\n  });\n  radialGradientFolder.add(radialGradientConfig, 'green color stop(%)', 0, 100).onChange(function (percentage) {\n    rect3.style.fill = \"radial-gradient(circle at center, red, blue, green \".concat(percentage, \"%)\");\n  });\n});"},{"relativePath":"style/demo/custom-property.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/style/demo/custom-property.js","order":6,"filename":"custom-property.js","title":{"zh":"自定义属性","en":"Use custom property"},"source":"import { Canvas, CanvasEvent, CSS, CustomElement, Polyline, PropertySyntax } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst svgRenderer = new SVGRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\n// register custom property\nCSS.registerProperty({\n  name: 'myNumber',\n  syntax: PropertySyntax.NUMBER,\n  initialValue: '0',\n  interpolable: true,\n});\nCSS.registerProperty({\n  name: 'myAngle',\n  syntax: PropertySyntax.ANGLE,\n  initialValue: '0',\n  interpolable: true,\n});\nCSS.registerProperty({\n  name: 'myLength',\n  syntax: PropertySyntax.LENGTH,\n  initialValue: '0',\n  interpolable: true,\n});\nCSS.registerProperty({\n  name: 'myLengthOrPercentage',\n  syntax: PropertySyntax.LENGTH_PERCENTAGE,\n  initialValue: '0',\n  interpolable: true,\n});\n\nclass MyCustomElement extends CustomElement {\n  connectedCallback() {\n    this.appendChild(new Polyline({ style: { points: '100,100 200,200', stroke: 'red' } }));\n  }\n}\nconst myCustomElement = new MyCustomElement();\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  canvas.appendChild(myCustomElement);\n\n  const animation = myCustomElement.animate(\n    [\n      {\n        myAngle: '20deg',\n        myLength: '10px',\n        myNumber: 0,\n        myLengthOrPercentage: '50%',\n      },\n      {\n        myAngle: '10deg',\n        myLength: '20px',\n        myNumber: 1,\n        myLengthOrPercentage: '100%',\n      },\n    ],\n    { duration: 2000, fill: 'both' },\n  );\n\n  if (animation) {\n    animation.onframe = () => {\n      console.log(\n        myCustomElement.style.myAngle,\n        myCustomElement.style.myLength,\n        myCustomElement.style.myNumber,\n        myCustomElement.style.myLengthOrPercentage,\n      );\n    };\n  }\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n","babeledSource":"function _instanceof(left, right) { if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.customProperty = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  }); // register custom property\n\n  _g.CSS.registerProperty({\n    name: 'myNumber',\n    syntax: _g.PropertySyntax.NUMBER,\n    initialValue: '0',\n    interpolable: true\n  });\n\n  _g.CSS.registerProperty({\n    name: 'myAngle',\n    syntax: _g.PropertySyntax.ANGLE,\n    initialValue: '0',\n    interpolable: true\n  });\n\n  _g.CSS.registerProperty({\n    name: 'myLength',\n    syntax: _g.PropertySyntax.LENGTH,\n    initialValue: '0',\n    interpolable: true\n  });\n\n  _g.CSS.registerProperty({\n    name: 'myLengthOrPercentage',\n    syntax: _g.PropertySyntax.LENGTH_PERCENTAGE,\n    initialValue: '0',\n    interpolable: true\n  });\n\n  var MyCustomElement = /*#__PURE__*/function (_CustomElement) {\n    _inherits(MyCustomElement, _CustomElement);\n\n    var _super = _createSuper(MyCustomElement);\n\n    function MyCustomElement() {\n      _classCallCheck(this, MyCustomElement);\n\n      return _super.apply(this, arguments);\n    }\n\n    _createClass(MyCustomElement, [{\n      key: \"connectedCallback\",\n      value: function connectedCallback() {\n        this.appendChild(new _g.Polyline({\n          style: {\n            points: '100,100 200,200',\n            stroke: 'red'\n          }\n        }));\n      }\n    }]);\n\n    return MyCustomElement;\n  }(_g.CustomElement);\n\n  var myCustomElement = new MyCustomElement();\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    canvas.appendChild(myCustomElement);\n    var animation = myCustomElement.animate([{\n      myAngle: '20deg',\n      myLength: '10px',\n      myNumber: 0,\n      myLengthOrPercentage: '50%'\n    }, {\n      myAngle: '10deg',\n      myLength: '20px',\n      myNumber: 1,\n      myLengthOrPercentage: '100%'\n    }], {\n      duration: 2000,\n      fill: 'both'\n    });\n\n    if (animation) {\n      animation.onframe = function () {\n        console.log(myCustomElement.style.myAngle, myCustomElement.style.myLength, myCustomElement.style.myNumber, myCustomElement.style.myLengthOrPercentage);\n      };\n    }\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n});"},{"relativePath":"style/demo/length.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/style/demo/length.js","order":5,"filename":"length.js","title":{"zh":"<length>","en":"<length>"},"source":"import { Canvas, CanvasEvent, Circle, Group } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n/**\n * <length>\n *\n * support the following units:\n * e.g. '100px' '20rem' '10em'\n */\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\nconst group = new Group({\n  style: {\n    fontSize: '20px',\n  },\n});\n// create a circle\nconst circle = new Circle({\n  style: {\n    cx: 200,\n    cy: 200,\n    r: '100px',\n    fill: '#f00',\n    stroke: 'black',\n    lineWidth: 10,\n    cursor: 'pointer',\n  },\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  // add a circle to canvas\n  canvas.appendChild(group);\n  group.appendChild(circle);\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n\nconst circleFolder = gui.addFolder('circle');\nconst circleConfig = {\n  r: '100px',\n};\ncircleFolder.add(circleConfig, 'r', ['100px', '2rem', '5em']).onChange((r) => {\n  circle.style.r = r;\n});\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.length = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * <length>\n   *\n   * support the following units:\n   * e.g. '100px' '20rem' '10em'\n   */\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  var group = new _g.Group({\n    style: {\n      fontSize: '20px'\n    }\n  }); // create a circle\n\n  var circle = new _g.Circle({\n    style: {\n      cx: 200,\n      cy: 200,\n      r: '100px',\n      fill: '#f00',\n      stroke: 'black',\n      lineWidth: 10,\n      cursor: 'pointer'\n    }\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    // add a circle to canvas\n    canvas.appendChild(group);\n    group.appendChild(circle);\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n  var circleFolder = gui.addFolder('circle');\n  var circleConfig = {\n    r: '100px'\n  };\n  circleFolder.add(circleConfig, 'r', ['100px', '2rem', '5em']).onChange(function (r) {\n    circle.style.r = r;\n  });\n});"},{"relativePath":"style/demo/inheritance.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/style/demo/inheritance.js","order":0,"filename":"inheritance.js","title":{"zh":"属性继承","en":"Inheritance"},"source":"import { Canvas, CanvasEvent, Group, Rect, Text } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n/**\n * inheritance\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/inheritance\n */\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  /**\n   * default values defined in <Text>:\n   * * fill: 'black'\n   *\n   * inherit from document.documentElement:\n   * * fontSize: '16px'\n   * * fontFamily: 'sans-serif'\n   * * fontStyle: 'normal'\n   * * fontWeight: 'normal'\n   * * fontVariant: 'normal'\n   * * visibility: 'visible'\n   * * pointerEvents: 'auto'\n   */\n  const text1 = new Text({\n    style: {\n      x: 100,\n      y: 100,\n      text: 'hello',\n      cursor: 'pointer',\n    },\n  });\n  canvas.appendChild(text1);\n\n  /**\n   * override default value `fill` with `red`:\n   */\n  const text2 = new Text({\n    style: {\n      x: 100,\n      y: 150,\n      text: 'hello',\n      fill: 'red',\n      cursor: 'pointer',\n    },\n  });\n  canvas.appendChild(text2);\n\n  /**\n   * override inherited `fontSize`\n   */\n  const text3 = new Text({\n    style: {\n      x: 100,\n      y: 200,\n      text: 'hello',\n      fill: 'red',\n      fontSize: 20, // user-defined\n      cursor: 'pointer',\n    },\n  });\n  canvas.appendChild(text3);\n\n  const rect = new Rect({\n    style: {\n      x: 100,\n      y: 250,\n      width: 300,\n      height: 50,\n      fill: 'grey',\n      cursor: 'pointer',\n    },\n  });\n  canvas.appendChild(rect);\n  /**\n   * inherit from <Rect> which is also inherited from document.documentElement.\n   */\n  const text4 = new Text({\n    style: {\n      y: 12,\n      text: 'hello from <Rect>',\n      cursor: 'pointer',\n    },\n  });\n  rect.appendChild(text4);\n\n  /**\n   * override `fontSize`\n   */\n  const group = new Group({\n    style: {\n      x: 100,\n      y: 400,\n      fontSize: 32,\n      cursor: 'pointer',\n    },\n  });\n  canvas.appendChild(group);\n  const text5 = new Text({\n    style: {\n      y: 12,\n      text: 'hello from <Group>',\n      cursor: 'pointer',\n    },\n  });\n  group.appendChild(text5);\n  const text6 = new Text({\n    style: {\n      y: 32,\n      text: 'hello from <Group>',\n      cursor: 'pointer',\n    },\n  });\n  group.appendChild(text6);\n\n  // stats\n  const stats = new Stats();\n  stats.showPanel(0);\n  const $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  const $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n    if (stats) {\n      stats.update();\n    }\n  });\n\n  // GUI\n  const gui = new lil.GUI({ autoPlace: false });\n  $wrapper.appendChild(gui.domElement);\n  const rendererFolder = gui.addFolder('renderer');\n  const rendererConfig = {\n    renderer: 'canvas',\n  };\n  rendererFolder\n    .add(rendererConfig, 'renderer', ['canvas', 'webgl', 'svg'])\n    .onChange((renderer) => {\n      canvas.setRenderer(\n        renderer === 'canvas' ? canvasRenderer : renderer === 'webgl' ? webglRenderer : svgRenderer,\n      );\n    });\n  rendererFolder.open();\n\n  const documentElementFolder = gui.addFolder('documentElement');\n  const documentElementConfig = {\n    fontSize: 16,\n    fontFamily: 'sans-serif',\n    fontStyle: 'normal',\n    visibility: 'unset',\n    pointerEvents: 'unset',\n  };\n  documentElementFolder.add(documentElementConfig, 'fontSize', 1, 32).onChange((fontSize) => {\n    canvas.document.documentElement.style.fontSize = `${fontSize}px`;\n  });\n  documentElementFolder\n    .add(documentElementConfig, 'fontFamily', [\n      'PingFang SC',\n      'fantasy',\n      'Arial',\n      'Times',\n      'Microsoft YaHei',\n    ])\n    .onChange((fontFamily) => {\n      canvas.document.documentElement.style.fontFamily = fontFamily;\n    });\n  documentElementFolder\n    .add(documentElementConfig, 'fontStyle', ['normal', 'italic', 'oblique'])\n    .onChange((fontStyle) => {\n      canvas.document.documentElement.style.fontStyle = fontStyle;\n    });\n  documentElementFolder\n    .add(documentElementConfig, 'visibility', ['unset', 'visible', 'hidden'])\n    .onChange((visibility) => {\n      canvas.document.documentElement.style.visibility = visibility;\n    });\n  documentElementFolder\n    .add(documentElementConfig, 'pointerEvents', ['unset', 'auto', 'none'])\n    .onChange((pointerEvents) => {\n      canvas.document.documentElement.style.pointerEvents = pointerEvents;\n    });\n\n  const groupFolder = gui.addFolder('group');\n  const groupConfig = {\n    fontSize: 32,\n    visibility: 'unset',\n    pointerEvents: 'unset',\n  };\n  groupFolder.add(groupConfig, 'fontSize', 1, 32).onChange((fontSize) => {\n    group.style.fontSize = `${fontSize}px`;\n  });\n  groupFolder\n    .add(groupConfig, 'visibility', ['unset', 'visible', 'hidden'])\n    .onChange((visibility) => {\n      group.style.visibility = visibility;\n    });\n  groupFolder\n    .add(groupConfig, 'pointerEvents', ['unset', 'auto', 'none'])\n    .onChange((pointerEvents) => {\n      group.style.pointerEvents = pointerEvents;\n    });\n  groupFolder.open();\n});\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.inheritance = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * inheritance\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/inheritance\n   */\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    /**\n     * default values defined in <Text>:\n     * * fill: 'black'\n     *\n     * inherit from document.documentElement:\n     * * fontSize: '16px'\n     * * fontFamily: 'sans-serif'\n     * * fontStyle: 'normal'\n     * * fontWeight: 'normal'\n     * * fontVariant: 'normal'\n     * * visibility: 'visible'\n     * * pointerEvents: 'auto'\n     */\n    var text1 = new _g.Text({\n      style: {\n        x: 100,\n        y: 100,\n        text: 'hello',\n        cursor: 'pointer'\n      }\n    });\n    canvas.appendChild(text1);\n    /**\n     * override default value `fill` with `red`:\n     */\n\n    var text2 = new _g.Text({\n      style: {\n        x: 100,\n        y: 150,\n        text: 'hello',\n        fill: 'red',\n        cursor: 'pointer'\n      }\n    });\n    canvas.appendChild(text2);\n    /**\n     * override inherited `fontSize`\n     */\n\n    var text3 = new _g.Text({\n      style: {\n        x: 100,\n        y: 200,\n        text: 'hello',\n        fill: 'red',\n        fontSize: 20,\n        // user-defined\n        cursor: 'pointer'\n      }\n    });\n    canvas.appendChild(text3);\n    var rect = new _g.Rect({\n      style: {\n        x: 100,\n        y: 250,\n        width: 300,\n        height: 50,\n        fill: 'grey',\n        cursor: 'pointer'\n      }\n    });\n    canvas.appendChild(rect);\n    /**\n     * inherit from <Rect> which is also inherited from document.documentElement.\n     */\n\n    var text4 = new _g.Text({\n      style: {\n        y: 12,\n        text: 'hello from <Rect>',\n        cursor: 'pointer'\n      }\n    });\n    rect.appendChild(text4);\n    /**\n     * override `fontSize`\n     */\n\n    var group = new _g.Group({\n      style: {\n        x: 100,\n        y: 400,\n        fontSize: 32,\n        cursor: 'pointer'\n      }\n    });\n    canvas.appendChild(group);\n    var text5 = new _g.Text({\n      style: {\n        y: 12,\n        text: 'hello from <Group>',\n        cursor: 'pointer'\n      }\n    });\n    group.appendChild(text5);\n    var text6 = new _g.Text({\n      style: {\n        y: 32,\n        text: 'hello from <Group>',\n        cursor: 'pointer'\n      }\n    });\n    group.appendChild(text6); // stats\n\n    var stats = new _stats.default();\n    stats.showPanel(0);\n    var $stats = stats.dom;\n    $stats.style.position = 'absolute';\n    $stats.style.left = '0px';\n    $stats.style.top = '0px';\n    var $wrapper = document.getElementById('container');\n    $wrapper.appendChild($stats);\n    canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n      if (stats) {\n        stats.update();\n      }\n    }); // GUI\n\n    var gui = new lil.GUI({\n      autoPlace: false\n    });\n    $wrapper.appendChild(gui.domElement);\n    var rendererFolder = gui.addFolder('renderer');\n    var rendererConfig = {\n      renderer: 'canvas'\n    };\n    rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'webgl', 'svg']).onChange(function (renderer) {\n      canvas.setRenderer(renderer === 'canvas' ? canvasRenderer : renderer === 'webgl' ? webglRenderer : svgRenderer);\n    });\n    rendererFolder.open();\n    var documentElementFolder = gui.addFolder('documentElement');\n    var documentElementConfig = {\n      fontSize: 16,\n      fontFamily: 'sans-serif',\n      fontStyle: 'normal',\n      visibility: 'unset',\n      pointerEvents: 'unset'\n    };\n    documentElementFolder.add(documentElementConfig, 'fontSize', 1, 32).onChange(function (fontSize) {\n      canvas.document.documentElement.style.fontSize = \"\".concat(fontSize, \"px\");\n    });\n    documentElementFolder.add(documentElementConfig, 'fontFamily', ['PingFang SC', 'fantasy', 'Arial', 'Times', 'Microsoft YaHei']).onChange(function (fontFamily) {\n      canvas.document.documentElement.style.fontFamily = fontFamily;\n    });\n    documentElementFolder.add(documentElementConfig, 'fontStyle', ['normal', 'italic', 'oblique']).onChange(function (fontStyle) {\n      canvas.document.documentElement.style.fontStyle = fontStyle;\n    });\n    documentElementFolder.add(documentElementConfig, 'visibility', ['unset', 'visible', 'hidden']).onChange(function (visibility) {\n      canvas.document.documentElement.style.visibility = visibility;\n    });\n    documentElementFolder.add(documentElementConfig, 'pointerEvents', ['unset', 'auto', 'none']).onChange(function (pointerEvents) {\n      canvas.document.documentElement.style.pointerEvents = pointerEvents;\n    });\n    var groupFolder = gui.addFolder('group');\n    var groupConfig = {\n      fontSize: 32,\n      visibility: 'unset',\n      pointerEvents: 'unset'\n    };\n    groupFolder.add(groupConfig, 'fontSize', 1, 32).onChange(function (fontSize) {\n      group.style.fontSize = \"\".concat(fontSize, \"px\");\n    });\n    groupFolder.add(groupConfig, 'visibility', ['unset', 'visible', 'hidden']).onChange(function (visibility) {\n      group.style.visibility = visibility;\n    });\n    groupFolder.add(groupConfig, 'pointerEvents', ['unset', 'auto', 'none']).onChange(function (pointerEvents) {\n      group.style.pointerEvents = pointerEvents;\n    });\n    groupFolder.open();\n  });\n});"},{"relativePath":"style/demo/pattern.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/style/demo/pattern.js","order":3,"filename":"pattern.js","title":{"zh":"<pattern>","en":"<pattern>"},"source":"import { Canvas, CanvasEvent, HTML, Rect } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport SimplexNoise from 'simplex-noise';\nimport Stats from 'stats.js';\n\n/**\n * <pattern>\n * support the following image source:\n * * HTMLImageElement (<img>)\n * * HTMLCanvasElement (<canvas>)\n * * HTMLVideoElement (<video>)\n * * ImageData\n * @see https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/createPattern#%E5%8F%82%E6%95%B0\n */\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst svgRenderer = new SVGRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst webgpuRenderer = new WebGPURenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n});\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\n// <img> URL\nconst rect1 = new Rect({\n  style: {\n    x: 50,\n    y: 50,\n    width: 200,\n    height: 100,\n    fill: {\n      image:\n        'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*jgjxQ57sACsAAAAAAAAAAAAAARQnAQ',\n      repetition: 'repeat',\n    },\n  },\n});\n\n// HTMLCanvasElement (<canvas>)\n// @see https://observablehq.com/@awoodruff/canvas-cartography-nacis-2019\nconst patternCanvas = document.createElement('canvas');\npatternCanvas.width = 20;\npatternCanvas.height = 20;\nconst ctx = patternCanvas.getContext('2d');\nctx.strokeStyle = '#333';\nctx.lineWidth = 1;\nctx.beginPath();\nfor (let i = 0.5; i < 20; i += 5) {\n  ctx.moveTo(0, i);\n  ctx.lineTo(20, i);\n}\nctx.stroke();\nconst rect3 = new Rect({\n  style: {\n    x: 50,\n    y: 200,\n    width: 200,\n    height: 100,\n    fill: {\n      image: patternCanvas,\n      repetition: 'repeat',\n    },\n  },\n});\n\nconst width = 200;\nconst height = 100;\nconst noiseCanvas = document.createElement('canvas');\nnoiseCanvas.width = width;\nnoiseCanvas.height = height;\nconst context = noiseCanvas.getContext('2d');\nconst image = context.createImageData(width, height);\nconst noise = new SimplexNoise();\nfor (let z = 0, y = 0, i = 0; y < height; ++y) {\n  for (let x = 0; x < width; ++x, i += 4) {\n    image.data[i + 3] = (noise.noise2D(x / 64, y / 64) + 1) * 128;\n  }\n}\ncontext.putImageData(image, 0, 0);\nconst rect4 = new Rect({\n  style: {\n    x: 300,\n    y: 200,\n    width: 200,\n    height: 100,\n    fill: {\n      image: context.canvas,\n      repetition: 'repeat',\n    },\n  },\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  canvas.appendChild(rect1);\n  canvas.appendChild(rect3);\n  canvas.appendChild(rect4);\n\n  // HTMLImageElement(<img>)\n  const image = new window.Image();\n  image.onload = () => {\n    const rect2 = new Rect({\n      style: {\n        x: 300,\n        y: 50,\n        width: 200,\n        height: 100,\n        fill: {\n          image,\n          repetition: 'repeat',\n        },\n      },\n    });\n    canvas.appendChild(rect2);\n  };\n  // without `crossOrigin`, it will throw 'WebGL2RenderingContext': Tainted canvases may not be loaded.\n  image.crossOrigin = 'Anonymous';\n  image.src =\n    'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*jgjxQ57sACsAAAAAAAAAAAAAARQnAQ';\n\n  // HTMLVideoElement(<video>)\n  const video = document.createElement('video');\n  video.src =\n    'https://gw.alipayobjects.com/v/rms_6ae20b/afts/video/A*VD0TTbZB9WMAAAAAAAAAAAAAARQnAQ/720P';\n  video.crossOrigin = 'Anonymous';\n  video.autoplay = true;\n  video.controls = false;\n  video.muted = true;\n  video.height = 100;\n  video.width = 200;\n\n  video.onloadeddata = function () {\n    const rect5 = new Rect({\n      style: {\n        x: 50,\n        y: 350,\n        width: 200,\n        height: 100,\n        fill: {\n          image: video,\n          repetition: 'no-repeat',\n        },\n      },\n    });\n    canvas.appendChild(rect5);\n  };\n\n  canvas.appendChild(\n    new HTML({\n      style: {\n        x: 100,\n        y: 20,\n        height: 30,\n        width: 200,\n        innerHTML: 'image URL',\n      },\n    }),\n  );\n\n  canvas.appendChild(\n    new HTML({\n      style: {\n        x: 300,\n        y: 20,\n        height: 30,\n        width: 200,\n        innerHTML: 'HTMLImageElement(&lt;img&gt;)',\n      },\n    }),\n  );\n\n  canvas.appendChild(\n    new HTML({\n      style: {\n        x: 50,\n        y: 170,\n        height: 30,\n        width: 300,\n        innerHTML: 'HTMLCanvasElement(&lt;canvas&gt;)',\n      },\n    }),\n  );\n\n  canvas.appendChild(\n    new HTML({\n      style: {\n        x: 50,\n        y: 320,\n        height: 30,\n        width: 300,\n        innerHTML: 'HTMLVideoElement(&lt;video&gt;)',\n      },\n    }),\n  );\n\n  canvas.appendChild(\n    new HTML({\n      style: {\n        x: 300,\n        y: 170,\n        height: 30,\n        width: 300,\n        innerHTML: 'Perlin Noise',\n      },\n    }),\n  );\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n\nconst patternFolder = gui.addFolder('pattern');\nconst patternConfig = {\n  repetition: 'repeat',\n};\npatternFolder\n  .add(patternConfig, 'repetition', ['repeat', 'repeat-x', 'repeat-y', 'no-repeat'])\n  .onChange((repetition) => {\n    rect1.style.fill = {\n      image:\n        'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*jgjxQ57sACsAAAAAAAAAAAAAARQnAQ',\n      repetition,\n    };\n  });\npatternFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"simplex-noise\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"simplex-noise\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.simplexNoise, global.stats);\n    global.pattern = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _simplexNoise, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _simplexNoise = _interopRequireDefault(_simplexNoise);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * <pattern>\n   * support the following image source:\n   * * HTMLImageElement (<img>)\n   * * HTMLCanvasElement (<canvas>)\n   * * HTMLVideoElement (<video>)\n   * * ImageData\n   * @see https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/createPattern#%E5%8F%82%E6%95%B0\n   */\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var webgpuRenderer = new _gWebgpu.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/'\n  }); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  }); // <img> URL\n\n  var rect1 = new _g.Rect({\n    style: {\n      x: 50,\n      y: 50,\n      width: 200,\n      height: 100,\n      fill: {\n        image: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*jgjxQ57sACsAAAAAAAAAAAAAARQnAQ',\n        repetition: 'repeat'\n      }\n    }\n  }); // HTMLCanvasElement (<canvas>)\n  // @see https://observablehq.com/@awoodruff/canvas-cartography-nacis-2019\n\n  var patternCanvas = document.createElement('canvas');\n  patternCanvas.width = 20;\n  patternCanvas.height = 20;\n  var ctx = patternCanvas.getContext('2d');\n  ctx.strokeStyle = '#333';\n  ctx.lineWidth = 1;\n  ctx.beginPath();\n\n  for (var i = 0.5; i < 20; i += 5) {\n    ctx.moveTo(0, i);\n    ctx.lineTo(20, i);\n  }\n\n  ctx.stroke();\n  var rect3 = new _g.Rect({\n    style: {\n      x: 50,\n      y: 200,\n      width: 200,\n      height: 100,\n      fill: {\n        image: patternCanvas,\n        repetition: 'repeat'\n      }\n    }\n  });\n  var width = 200;\n  var height = 100;\n  var noiseCanvas = document.createElement('canvas');\n  noiseCanvas.width = width;\n  noiseCanvas.height = height;\n  var context = noiseCanvas.getContext('2d');\n  var image = context.createImageData(width, height);\n  var noise = new _simplexNoise.default();\n\n  for (var z = 0, y = 0, _i = 0; y < height; ++y) {\n    for (var x = 0; x < width; ++x, _i += 4) {\n      image.data[_i + 3] = (noise.noise2D(x / 64, y / 64) + 1) * 128;\n    }\n  }\n\n  context.putImageData(image, 0, 0);\n  var rect4 = new _g.Rect({\n    style: {\n      x: 300,\n      y: 200,\n      width: 200,\n      height: 100,\n      fill: {\n        image: context.canvas,\n        repetition: 'repeat'\n      }\n    }\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    canvas.appendChild(rect1);\n    canvas.appendChild(rect3);\n    canvas.appendChild(rect4); // HTMLImageElement(<img>)\n\n    var image = new window.Image();\n\n    image.onload = function () {\n      var rect2 = new _g.Rect({\n        style: {\n          x: 300,\n          y: 50,\n          width: 200,\n          height: 100,\n          fill: {\n            image: image,\n            repetition: 'repeat'\n          }\n        }\n      });\n      canvas.appendChild(rect2);\n    }; // without `crossOrigin`, it will throw 'WebGL2RenderingContext': Tainted canvases may not be loaded.\n\n\n    image.crossOrigin = 'Anonymous';\n    image.src = 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*jgjxQ57sACsAAAAAAAAAAAAAARQnAQ'; // HTMLVideoElement(<video>)\n\n    var video = document.createElement('video');\n    video.src = 'https://gw.alipayobjects.com/v/rms_6ae20b/afts/video/A*VD0TTbZB9WMAAAAAAAAAAAAAARQnAQ/720P';\n    video.crossOrigin = 'Anonymous';\n    video.autoplay = true;\n    video.controls = false;\n    video.muted = true;\n    video.height = 100;\n    video.width = 200;\n\n    video.onloadeddata = function () {\n      var rect5 = new _g.Rect({\n        style: {\n          x: 50,\n          y: 350,\n          width: 200,\n          height: 100,\n          fill: {\n            image: video,\n            repetition: 'no-repeat'\n          }\n        }\n      });\n      canvas.appendChild(rect5);\n    };\n\n    canvas.appendChild(new _g.HTML({\n      style: {\n        x: 100,\n        y: 20,\n        height: 30,\n        width: 200,\n        innerHTML: 'image URL'\n      }\n    }));\n    canvas.appendChild(new _g.HTML({\n      style: {\n        x: 300,\n        y: 20,\n        height: 30,\n        width: 200,\n        innerHTML: 'HTMLImageElement(&lt;img&gt;)'\n      }\n    }));\n    canvas.appendChild(new _g.HTML({\n      style: {\n        x: 50,\n        y: 170,\n        height: 30,\n        width: 300,\n        innerHTML: 'HTMLCanvasElement(&lt;canvas&gt;)'\n      }\n    }));\n    canvas.appendChild(new _g.HTML({\n      style: {\n        x: 50,\n        y: 320,\n        height: 30,\n        width: 300,\n        innerHTML: 'HTMLVideoElement(&lt;video&gt;)'\n      }\n    }));\n    canvas.appendChild(new _g.HTML({\n      style: {\n        x: 300,\n        y: 170,\n        height: 30,\n        width: 300,\n        innerHTML: 'Perlin Noise'\n      }\n    }));\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n  var patternFolder = gui.addFolder('pattern');\n  var patternConfig = {\n    repetition: 'repeat'\n  };\n  patternFolder.add(patternConfig, 'repetition', ['repeat', 'repeat-x', 'repeat-y', 'no-repeat']).onChange(function (repetition) {\n    rect1.style.fill = {\n      image: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*jgjxQ57sACsAAAAAAAAAAAAAARQnAQ',\n      repetition: repetition\n    };\n  });\n  patternFolder.open();\n});"},{"relativePath":"style/demo/paint.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/style/demo/paint.js","order":4,"filename":"paint.js","title":{"zh":"<paint>","en":"<paint>"},"source":"import { Canvas, CanvasEvent, Circle } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n/**\n * <paint>\n * include <color> <gradient> <pattern>\n */\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\n// create a circle\nconst circle = new Circle({\n  style: {\n    cx: 200,\n    cy: 200,\n    r: 100,\n    fill: '#f00',\n    stroke: 'black',\n    lineWidth: 10,\n    cursor: 'pointer',\n  },\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  // add a circle to canvas\n  canvas.appendChild(circle);\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n\nconst circleFolder = gui.addFolder('circle');\nconst circleConfig = {\n  fill: '#f00',\n};\nconst linearGradient = 'linear-gradient(0deg, blue, green 40%, red)';\nconst radialGradient = 'radial-gradient(circle at center, red, blue, green 100%)';\nconst pattern = {\n  image: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*jgjxQ57sACsAAAAAAAAAAAAAARQnAQ',\n};\ncircleFolder\n  .add(circleConfig, 'fill', [\n    'none',\n    '#f00',\n    'transparent',\n    linearGradient,\n    radialGradient,\n    'pattern',\n  ])\n  .onChange((fill) => {\n    circle.style.fill = fill === 'pattern' ? pattern : fill;\n  });\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.paint = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * <paint>\n   * include <color> <gradient> <pattern>\n   */\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  }); // create a circle\n\n  var circle = new _g.Circle({\n    style: {\n      cx: 200,\n      cy: 200,\n      r: 100,\n      fill: '#f00',\n      stroke: 'black',\n      lineWidth: 10,\n      cursor: 'pointer'\n    }\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    // add a circle to canvas\n    canvas.appendChild(circle);\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n  var circleFolder = gui.addFolder('circle');\n  var circleConfig = {\n    fill: '#f00'\n  };\n  var linearGradient = 'linear-gradient(0deg, blue, green 40%, red)';\n  var radialGradient = 'radial-gradient(circle at center, red, blue, green 100%)';\n  var pattern = {\n    image: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*jgjxQ57sACsAAAAAAAAAAAAAARQnAQ'\n  };\n  circleFolder.add(circleConfig, 'fill', ['none', '#f00', 'transparent', linearGradient, radialGradient, 'pattern']).onChange(function (fill) {\n    circle.style.fill = fill === 'pattern' ? pattern : fill;\n  });\n});"},{"relativePath":"shape/demo/arrow.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/shape/demo/arrow.js","order":9,"filename":"arrow.js","title":{"zh":"箭头","en":"Arrow"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*EzqjQYMeYoMAAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent, Circle, CustomElement, Image, Line, Path, Polyline } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Arrow } from '@antv/g-components';\nimport { Plugin } from '@antv/g-plugin-dragndrop';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n});\nconst webgpuRenderer = new WebGPURenderer();\n\ncanvasRenderer.registerPlugin(new Plugin());\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\n// create an arrow\nconst lineArrow = new Arrow({\n  id: 'lineArrow',\n  style: {\n    body: new Line({\n      style: {\n        x1: 200,\n        y1: 100,\n        x2: 0,\n        y2: 0,\n      },\n    }),\n    startHead: true,\n    stroke: '#1890FF',\n    lineWidth: 10,\n    cursor: 'pointer',\n    increasedLineWidthForHitTesting: 40,\n  },\n});\nlineArrow.translate(200, 100);\n\nconst handle1 = new Circle({\n  id: 'handle1',\n  style: {\n    cx: 400,\n    cy: 200,\n    r: 10,\n    fill: 'red',\n    draggable: true,\n  },\n});\nconst handle2 = handle1.cloneNode();\nhandle2.id = 'handle2';\nhandle2.style.cx = 200;\nhandle2.style.cy = 100;\n\nconst polylineArrow = new Arrow({\n  id: 'polylineArrow',\n  style: {\n    body: new Polyline({\n      style: {\n        points: [\n          [0, 0],\n          [50, 0],\n          [50, 50],\n          [100, 50],\n          [100, 100],\n          [150, 100],\n        ],\n      },\n    }),\n    startHead: true,\n    stroke: '#1890FF',\n    lineWidth: 10,\n    cursor: 'pointer',\n  },\n});\npolylineArrow.translate(200, 200);\n\nconst pathArrow = new Arrow({\n  id: 'pathArrow',\n  style: {\n    body: new Path({\n      style: {\n        path: 'M 100,300' + 'l 50,-25' + 'a25,25 -30 0,1 50,-80',\n      },\n    }),\n    startHead: true,\n    stroke: '#1890FF',\n    lineWidth: 10,\n    cursor: 'pointer',\n  },\n});\npathArrow.translate(100, 150);\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  canvas.appendChild(lineArrow);\n  canvas.appendChild(polylineArrow);\n  canvas.appendChild(pathArrow);\n\n  canvas.appendChild(handle1);\n  canvas.appendChild(handle2);\n});\n\nlet shiftX = 0;\nlet shiftY = 0;\nfunction moveAt(target, canvasX, canvasY) {\n  target.setPosition(canvasX - shiftX, canvasY - shiftY);\n\n  if (target.id === 'handle1') {\n    const lineBody = lineArrow.getBody();\n    lineBody.style.x1 = canvasX - shiftX - 200;\n    lineBody.style.y1 = canvasY - shiftY - 100;\n  } else if (target.id === 'handle2') {\n    const lineBody = lineArrow.getBody();\n    lineBody.style.x2 = canvasX - shiftX - 200;\n    lineBody.style.y2 = canvasY - shiftY - 100;\n  }\n}\n\ncanvas.addEventListener('dragstart', function (e) {\n  const [x, y] = e.target.getPosition();\n  shiftX = e.canvasX - x;\n  shiftY = e.canvasY - y;\n\n  moveAt(e.target, e.canvasX, e.canvasY);\n});\ncanvas.addEventListener('drag', function (e) {\n  moveAt(e.target, e.canvasX, e.canvasY);\n});\n\nlineArrow.addEventListener('mouseenter', () => {\n  lineArrow.setAttribute('stroke', '#2FC25B');\n});\nlineArrow.addEventListener('mouseleave', () => {\n  lineArrow.setAttribute('stroke', '#1890FF');\n});\n\npolylineArrow.addEventListener('mouseenter', () => {\n  polylineArrow.setAttribute('stroke', '#2FC25B');\n});\npolylineArrow.addEventListener('mouseleave', () => {\n  polylineArrow.setAttribute('stroke', '#1890FF');\n});\n\npathArrow.addEventListener('mouseenter', () => {\n  pathArrow.setAttribute('stroke', '#2FC25B');\n});\npathArrow.addEventListener('mouseleave', () => {\n  pathArrow.setAttribute('stroke', '#1890FF');\n});\n\n// define my custom arrow head\nclass MyCustomArrowHead extends CustomElement {\n  static tag = 'my-arrow-head';\n\n  constructor(config) {\n    super({\n      ...config,\n      type: MyCustomArrowHead.tag,\n    });\n\n    // just draw a simple triangle, eg. '<|'\n    this.head = new Path({\n      style: {\n        path: 'M 10,10 L -10,0 L 10,-10 Z',\n      },\n    });\n\n    this.appendChild(this.head);\n  }\n\n  attributeChangedCallback(name, oldValue, value) {\n    this.head.setAttribute(name, value);\n  }\n}\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n\nconst lineArrowFolder = gui.addFolder('line arrow');\nconst lineArrowConfig = {\n  stroke: '#1890FF',\n  lineWidth: 10,\n  strokeOpacity: 1,\n  startHead: 'default',\n  endHead: 'none',\n  startHeadOffset: 0,\n  endHeadOffset: 0,\n};\n\nlineArrowFolder.addColor(lineArrowConfig, 'stroke').onChange((color) => {\n  lineArrow.setAttribute('stroke', color);\n});\nlineArrowFolder.add(lineArrowConfig, 'lineWidth', 1, 20).onChange((lineWidth) => {\n  lineArrow.setAttribute('lineWidth', lineWidth);\n});\nlineArrowFolder.add(lineArrowConfig, 'strokeOpacity', 0, 1, 0.1).onChange((opacity) => {\n  lineArrow.setAttribute('strokeOpacity', opacity);\n});\nlineArrowFolder\n  .add(lineArrowConfig, 'startHead', ['none', 'default', 'circle', 'image', 'custom arrowhead'])\n  .onChange((type) => {\n    if (type === 'none') {\n      lineArrow.setAttribute('startHead', false);\n    } else if (type === 'default') {\n      lineArrow.setAttribute('startHead', true);\n    } else if (type === 'circle') {\n      lineArrow.setAttribute('startHead', new Circle({ style: { r: 10 } }));\n    } else if (type === 'image') {\n      const image = new Image({\n        style: {\n          width: 50,\n          height: 50,\n          anchor: [0.5, 0.5],\n          transformOrigin: 'center',\n          img: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ',\n        },\n      });\n      image.rotateLocal(90);\n      lineArrow.setAttribute('startHead', image);\n    } else if (type === 'custom arrowhead') {\n      lineArrow.setAttribute('startHead', new MyCustomArrowHead({ style: {} }));\n    }\n  });\nlineArrowFolder\n  .add(lineArrowConfig, 'endHead', ['none', 'default', 'circle', 'image', 'custom arrowhead'])\n  .onChange((type) => {\n    if (type === 'none') {\n      lineArrow.setAttribute('endHead', false);\n    } else if (type === 'default') {\n      lineArrow.setAttribute('endHead', true);\n    } else if (type === 'circle') {\n      lineArrow.setAttribute('endHead', new Circle({ style: { r: 10 } }));\n    } else if (type === 'image') {\n      const image = new Image({\n        style: {\n          width: 50,\n          height: 50,\n          anchor: [0.5, 0.5],\n          transformOrigin: 'center',\n          img: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ',\n        },\n      });\n      image.rotateLocal(90);\n      lineArrow.setAttribute('endHead', image);\n    } else if (type === 'custom arrowhead') {\n      lineArrow.setAttribute('endHead', new MyCustomArrowHead({ style: {} }));\n    }\n  });\nlineArrowFolder.add(lineArrowConfig, 'startHeadOffset', -20, 20).onChange((startHeadOffset) => {\n  lineArrow.setAttribute('startHeadOffset', startHeadOffset);\n});\nlineArrowFolder.add(lineArrowConfig, 'endHeadOffset', -20, 20).onChange((endHeadOffset) => {\n  lineArrow.setAttribute('endHeadOffset', endHeadOffset);\n});\nlineArrowFolder.open();\n\nconst polylineArrowFolder = gui.addFolder('polyline arrow');\nconst polylineArrowConfig = {\n  stroke: '#1890FF',\n  lineWidth: 10,\n  strokeOpacity: 1,\n  startHead: 'default',\n  endHead: 'none',\n  startHeadOffset: 0,\n  endHeadOffset: 0,\n};\npolylineArrowFolder.addColor(polylineArrowConfig, 'stroke').onChange((color) => {\n  polylineArrow.setAttribute('stroke', color);\n});\npolylineArrowFolder.add(polylineArrowConfig, 'lineWidth', 1, 20).onChange((lineWidth) => {\n  polylineArrow.setAttribute('lineWidth', lineWidth);\n});\npolylineArrowFolder.add(polylineArrowConfig, 'strokeOpacity', 0, 1, 0.1).onChange((opacity) => {\n  polylineArrow.setAttribute('strokeOpacity', opacity);\n});\npolylineArrowFolder\n  .add(polylineArrowConfig, 'startHead', ['none', 'default', 'circle', 'image', 'custom arrowhead'])\n  .onChange((type) => {\n    if (type === 'none') {\n      polylineArrow.setAttribute('startHead', false);\n    } else if (type === 'default') {\n      polylineArrow.setAttribute('startHead', true);\n    } else if (type === 'circle') {\n      polylineArrow.setAttribute('startHead', new Circle({ style: { r: 10 } }));\n    } else if (type === 'image') {\n      const image = new Image({\n        style: {\n          width: 50,\n          height: 50,\n          anchor: [0.5, 0.5],\n          transformOrigin: 'center',\n          img: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ',\n        },\n      });\n      image.rotateLocal(90);\n      polylineArrow.setAttribute('startHead', image);\n    } else if (type === 'custom arrowhead') {\n      polylineArrow.setAttribute('startHead', new MyCustomArrowHead({ style: {} }));\n    }\n  });\npolylineArrowFolder\n  .add(polylineArrowConfig, 'endHead', ['none', 'default', 'circle', 'image', 'custom arrowhead'])\n  .onChange((type) => {\n    if (type === 'none') {\n      polylineArrow.setAttribute('endHead', false);\n    } else if (type === 'default') {\n      polylineArrow.setAttribute('endHead', true);\n    } else if (type === 'circle') {\n      polylineArrow.setAttribute('endHead', new Circle({ style: { r: 10 } }));\n    } else if (type === 'image') {\n      const image = new Image({\n        style: {\n          width: 50,\n          height: 50,\n          anchor: [0.5, 0.5],\n          transformOrigin: 'center',\n          img: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ',\n        },\n      });\n      image.rotateLocal(90);\n      polylineArrow.setAttribute('endHead', image);\n    } else if (type === 'custom arrowhead') {\n      polylineArrow.setAttribute('endHead', new MyCustomArrowHead({ style: {} }));\n    }\n  });\npolylineArrowFolder\n  .add(polylineArrowConfig, 'startHeadOffset', -20, 20)\n  .onChange((startHeadOffset) => {\n    polylineArrow.setAttribute('startHeadOffset', startHeadOffset);\n  });\npolylineArrowFolder.add(polylineArrowConfig, 'endHeadOffset', -20, 20).onChange((endHeadOffset) => {\n  polylineArrow.setAttribute('endHeadOffset', endHeadOffset);\n});\n\nconst pathArrowFolder = gui.addFolder('path arrow');\nconst pathArrowConfig = {\n  stroke: '#1890FF',\n  lineWidth: 10,\n  strokeOpacity: 1,\n  startHead: 'default',\n  endHead: 'none',\n  startHeadOffset: 0,\n  endHeadOffset: 0,\n};\npathArrowFolder.addColor(pathArrowConfig, 'stroke').onChange((color) => {\n  pathArrow.setAttribute('stroke', color);\n});\npathArrowFolder.add(pathArrowConfig, 'lineWidth', 1, 20).onChange((lineWidth) => {\n  pathArrow.setAttribute('lineWidth', lineWidth);\n});\npathArrowFolder.add(pathArrowConfig, 'strokeOpacity', 0, 1, 0.1).onChange((opacity) => {\n  pathArrow.setAttribute('strokeOpacity', opacity);\n});\npathArrowFolder\n  .add(pathArrowConfig, 'startHead', ['none', 'default', 'circle', 'image', 'custom arrowhead'])\n  .onChange((type) => {\n    if (type === 'none') {\n      pathArrow.setAttribute('startHead', false);\n    } else if (type === 'default') {\n      pathArrow.setAttribute('startHead', true);\n    } else if (type === 'circle') {\n      pathArrow.setAttribute('startHead', new Circle({ style: { r: 10 } }));\n    } else if (type === 'image') {\n      const image = new Image({\n        style: {\n          width: 50,\n          height: 50,\n          anchor: [0.5, 0.5],\n          transformOrigin: 'center',\n          img: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ',\n        },\n      });\n      image.rotateLocal(90);\n      pathArrow.setAttribute('startHead', image);\n    } else if (type === 'custom arrowhead') {\n      pathArrow.setAttribute('startHead', new MyCustomArrowHead({ style: {} }));\n    }\n  });\npathArrowFolder\n  .add(pathArrowConfig, 'endHead', ['none', 'default', 'circle', 'image', 'custom arrowhead'])\n  .onChange((type) => {\n    if (type === 'none') {\n      pathArrow.setAttribute('endHead', false);\n    } else if (type === 'default') {\n      pathArrow.setAttribute('endHead', true);\n    } else if (type === 'circle') {\n      pathArrow.setAttribute('endHead', new Circle({ style: { r: 10 } }));\n    } else if (type === 'image') {\n      const image = new Image({\n        style: {\n          width: 50,\n          height: 50,\n          anchor: [0.5, 0.5],\n          transformOrigin: 'center',\n          img: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ',\n        },\n      });\n      image.rotateLocal(90);\n      pathArrow.setAttribute('endHead', image);\n    } else if (type === 'custom arrowhead') {\n      pathArrow.setAttribute('endHead', new MyCustomArrowHead({ style: {} }));\n    }\n  });\npathArrowFolder.add(pathArrowConfig, 'startHeadOffset', -20, 20).onChange((startHeadOffset) => {\n  pathArrow.setAttribute('startHeadOffset', startHeadOffset);\n});\npathArrowFolder.add(pathArrowConfig, 'endHeadOffset', -20, 20).onChange((endHeadOffset) => {\n  pathArrow.setAttribute('endHeadOffset', endHeadOffset);\n});\n","babeledSource":"function _instanceof(left, right) { if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-components\", \"@antv/g-plugin-dragndrop\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-components\"), require(\"@antv/g-plugin-dragndrop\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gComponents, global.gPluginDragndrop, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.arrow = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gComponents, _gPluginDragndrop, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/'\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer();\n  canvasRenderer.registerPlugin(new _gPluginDragndrop.Plugin()); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  }); // create an arrow\n\n  var lineArrow = new _gComponents.Arrow({\n    id: 'lineArrow',\n    style: {\n      body: new _g.Line({\n        style: {\n          x1: 200,\n          y1: 100,\n          x2: 0,\n          y2: 0\n        }\n      }),\n      startHead: true,\n      stroke: '#1890FF',\n      lineWidth: 10,\n      cursor: 'pointer',\n      increasedLineWidthForHitTesting: 40\n    }\n  });\n  lineArrow.translate(200, 100);\n  var handle1 = new _g.Circle({\n    id: 'handle1',\n    style: {\n      cx: 400,\n      cy: 200,\n      r: 10,\n      fill: 'red',\n      draggable: true\n    }\n  });\n  var handle2 = handle1.cloneNode();\n  handle2.id = 'handle2';\n  handle2.style.cx = 200;\n  handle2.style.cy = 100;\n  var polylineArrow = new _gComponents.Arrow({\n    id: 'polylineArrow',\n    style: {\n      body: new _g.Polyline({\n        style: {\n          points: [[0, 0], [50, 0], [50, 50], [100, 50], [100, 100], [150, 100]]\n        }\n      }),\n      startHead: true,\n      stroke: '#1890FF',\n      lineWidth: 10,\n      cursor: 'pointer'\n    }\n  });\n  polylineArrow.translate(200, 200);\n  var pathArrow = new _gComponents.Arrow({\n    id: 'pathArrow',\n    style: {\n      body: new _g.Path({\n        style: {\n          path: 'M 100,300' + 'l 50,-25' + 'a25,25 -30 0,1 50,-80'\n        }\n      }),\n      startHead: true,\n      stroke: '#1890FF',\n      lineWidth: 10,\n      cursor: 'pointer'\n    }\n  });\n  pathArrow.translate(100, 150);\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    canvas.appendChild(lineArrow);\n    canvas.appendChild(polylineArrow);\n    canvas.appendChild(pathArrow);\n    canvas.appendChild(handle1);\n    canvas.appendChild(handle2);\n  });\n  var shiftX = 0;\n  var shiftY = 0;\n\n  function moveAt(target, canvasX, canvasY) {\n    target.setPosition(canvasX - shiftX, canvasY - shiftY);\n\n    if (target.id === 'handle1') {\n      var lineBody = lineArrow.getBody();\n      lineBody.style.x1 = canvasX - shiftX - 200;\n      lineBody.style.y1 = canvasY - shiftY - 100;\n    } else if (target.id === 'handle2') {\n      var _lineBody = lineArrow.getBody();\n\n      _lineBody.style.x2 = canvasX - shiftX - 200;\n      _lineBody.style.y2 = canvasY - shiftY - 100;\n    }\n  }\n\n  canvas.addEventListener('dragstart', function (e) {\n    var _e$target$getPosition = e.target.getPosition(),\n        _e$target$getPosition2 = _slicedToArray(_e$target$getPosition, 2),\n        x = _e$target$getPosition2[0],\n        y = _e$target$getPosition2[1];\n\n    shiftX = e.canvasX - x;\n    shiftY = e.canvasY - y;\n    moveAt(e.target, e.canvasX, e.canvasY);\n  });\n  canvas.addEventListener('drag', function (e) {\n    moveAt(e.target, e.canvasX, e.canvasY);\n  });\n  lineArrow.addEventListener('mouseenter', function () {\n    lineArrow.setAttribute('stroke', '#2FC25B');\n  });\n  lineArrow.addEventListener('mouseleave', function () {\n    lineArrow.setAttribute('stroke', '#1890FF');\n  });\n  polylineArrow.addEventListener('mouseenter', function () {\n    polylineArrow.setAttribute('stroke', '#2FC25B');\n  });\n  polylineArrow.addEventListener('mouseleave', function () {\n    polylineArrow.setAttribute('stroke', '#1890FF');\n  });\n  pathArrow.addEventListener('mouseenter', function () {\n    pathArrow.setAttribute('stroke', '#2FC25B');\n  });\n  pathArrow.addEventListener('mouseleave', function () {\n    pathArrow.setAttribute('stroke', '#1890FF');\n  }); // define my custom arrow head\n\n  var MyCustomArrowHead = /*#__PURE__*/function (_CustomElement) {\n    _inherits(MyCustomArrowHead, _CustomElement);\n\n    var _super = _createSuper(MyCustomArrowHead);\n\n    function MyCustomArrowHead(config) {\n      var _this;\n\n      _classCallCheck(this, MyCustomArrowHead);\n\n      _this = _super.call(this, { ...config,\n        type: MyCustomArrowHead.tag\n      }); // just draw a simple triangle, eg. '<|'\n\n      _this.head = new _g.Path({\n        style: {\n          path: 'M 10,10 L -10,0 L 10,-10 Z'\n        }\n      });\n\n      _this.appendChild(_this.head);\n\n      return _this;\n    }\n\n    _createClass(MyCustomArrowHead, [{\n      key: \"attributeChangedCallback\",\n      value: function attributeChangedCallback(name, oldValue, value) {\n        this.head.setAttribute(name, value);\n      }\n    }]);\n\n    return MyCustomArrowHead;\n  }(_g.CustomElement); // stats\n\n\n  _defineProperty(MyCustomArrowHead, \"tag\", 'my-arrow-head');\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n  var lineArrowFolder = gui.addFolder('line arrow');\n  var lineArrowConfig = {\n    stroke: '#1890FF',\n    lineWidth: 10,\n    strokeOpacity: 1,\n    startHead: 'default',\n    endHead: 'none',\n    startHeadOffset: 0,\n    endHeadOffset: 0\n  };\n  lineArrowFolder.addColor(lineArrowConfig, 'stroke').onChange(function (color) {\n    lineArrow.setAttribute('stroke', color);\n  });\n  lineArrowFolder.add(lineArrowConfig, 'lineWidth', 1, 20).onChange(function (lineWidth) {\n    lineArrow.setAttribute('lineWidth', lineWidth);\n  });\n  lineArrowFolder.add(lineArrowConfig, 'strokeOpacity', 0, 1, 0.1).onChange(function (opacity) {\n    lineArrow.setAttribute('strokeOpacity', opacity);\n  });\n  lineArrowFolder.add(lineArrowConfig, 'startHead', ['none', 'default', 'circle', 'image', 'custom arrowhead']).onChange(function (type) {\n    if (type === 'none') {\n      lineArrow.setAttribute('startHead', false);\n    } else if (type === 'default') {\n      lineArrow.setAttribute('startHead', true);\n    } else if (type === 'circle') {\n      lineArrow.setAttribute('startHead', new _g.Circle({\n        style: {\n          r: 10\n        }\n      }));\n    } else if (type === 'image') {\n      var image = new _g.Image({\n        style: {\n          width: 50,\n          height: 50,\n          anchor: [0.5, 0.5],\n          transformOrigin: 'center',\n          img: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ'\n        }\n      });\n      image.rotateLocal(90);\n      lineArrow.setAttribute('startHead', image);\n    } else if (type === 'custom arrowhead') {\n      lineArrow.setAttribute('startHead', new MyCustomArrowHead({\n        style: {}\n      }));\n    }\n  });\n  lineArrowFolder.add(lineArrowConfig, 'endHead', ['none', 'default', 'circle', 'image', 'custom arrowhead']).onChange(function (type) {\n    if (type === 'none') {\n      lineArrow.setAttribute('endHead', false);\n    } else if (type === 'default') {\n      lineArrow.setAttribute('endHead', true);\n    } else if (type === 'circle') {\n      lineArrow.setAttribute('endHead', new _g.Circle({\n        style: {\n          r: 10\n        }\n      }));\n    } else if (type === 'image') {\n      var image = new _g.Image({\n        style: {\n          width: 50,\n          height: 50,\n          anchor: [0.5, 0.5],\n          transformOrigin: 'center',\n          img: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ'\n        }\n      });\n      image.rotateLocal(90);\n      lineArrow.setAttribute('endHead', image);\n    } else if (type === 'custom arrowhead') {\n      lineArrow.setAttribute('endHead', new MyCustomArrowHead({\n        style: {}\n      }));\n    }\n  });\n  lineArrowFolder.add(lineArrowConfig, 'startHeadOffset', -20, 20).onChange(function (startHeadOffset) {\n    lineArrow.setAttribute('startHeadOffset', startHeadOffset);\n  });\n  lineArrowFolder.add(lineArrowConfig, 'endHeadOffset', -20, 20).onChange(function (endHeadOffset) {\n    lineArrow.setAttribute('endHeadOffset', endHeadOffset);\n  });\n  lineArrowFolder.open();\n  var polylineArrowFolder = gui.addFolder('polyline arrow');\n  var polylineArrowConfig = {\n    stroke: '#1890FF',\n    lineWidth: 10,\n    strokeOpacity: 1,\n    startHead: 'default',\n    endHead: 'none',\n    startHeadOffset: 0,\n    endHeadOffset: 0\n  };\n  polylineArrowFolder.addColor(polylineArrowConfig, 'stroke').onChange(function (color) {\n    polylineArrow.setAttribute('stroke', color);\n  });\n  polylineArrowFolder.add(polylineArrowConfig, 'lineWidth', 1, 20).onChange(function (lineWidth) {\n    polylineArrow.setAttribute('lineWidth', lineWidth);\n  });\n  polylineArrowFolder.add(polylineArrowConfig, 'strokeOpacity', 0, 1, 0.1).onChange(function (opacity) {\n    polylineArrow.setAttribute('strokeOpacity', opacity);\n  });\n  polylineArrowFolder.add(polylineArrowConfig, 'startHead', ['none', 'default', 'circle', 'image', 'custom arrowhead']).onChange(function (type) {\n    if (type === 'none') {\n      polylineArrow.setAttribute('startHead', false);\n    } else if (type === 'default') {\n      polylineArrow.setAttribute('startHead', true);\n    } else if (type === 'circle') {\n      polylineArrow.setAttribute('startHead', new _g.Circle({\n        style: {\n          r: 10\n        }\n      }));\n    } else if (type === 'image') {\n      var image = new _g.Image({\n        style: {\n          width: 50,\n          height: 50,\n          anchor: [0.5, 0.5],\n          transformOrigin: 'center',\n          img: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ'\n        }\n      });\n      image.rotateLocal(90);\n      polylineArrow.setAttribute('startHead', image);\n    } else if (type === 'custom arrowhead') {\n      polylineArrow.setAttribute('startHead', new MyCustomArrowHead({\n        style: {}\n      }));\n    }\n  });\n  polylineArrowFolder.add(polylineArrowConfig, 'endHead', ['none', 'default', 'circle', 'image', 'custom arrowhead']).onChange(function (type) {\n    if (type === 'none') {\n      polylineArrow.setAttribute('endHead', false);\n    } else if (type === 'default') {\n      polylineArrow.setAttribute('endHead', true);\n    } else if (type === 'circle') {\n      polylineArrow.setAttribute('endHead', new _g.Circle({\n        style: {\n          r: 10\n        }\n      }));\n    } else if (type === 'image') {\n      var image = new _g.Image({\n        style: {\n          width: 50,\n          height: 50,\n          anchor: [0.5, 0.5],\n          transformOrigin: 'center',\n          img: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ'\n        }\n      });\n      image.rotateLocal(90);\n      polylineArrow.setAttribute('endHead', image);\n    } else if (type === 'custom arrowhead') {\n      polylineArrow.setAttribute('endHead', new MyCustomArrowHead({\n        style: {}\n      }));\n    }\n  });\n  polylineArrowFolder.add(polylineArrowConfig, 'startHeadOffset', -20, 20).onChange(function (startHeadOffset) {\n    polylineArrow.setAttribute('startHeadOffset', startHeadOffset);\n  });\n  polylineArrowFolder.add(polylineArrowConfig, 'endHeadOffset', -20, 20).onChange(function (endHeadOffset) {\n    polylineArrow.setAttribute('endHeadOffset', endHeadOffset);\n  });\n  var pathArrowFolder = gui.addFolder('path arrow');\n  var pathArrowConfig = {\n    stroke: '#1890FF',\n    lineWidth: 10,\n    strokeOpacity: 1,\n    startHead: 'default',\n    endHead: 'none',\n    startHeadOffset: 0,\n    endHeadOffset: 0\n  };\n  pathArrowFolder.addColor(pathArrowConfig, 'stroke').onChange(function (color) {\n    pathArrow.setAttribute('stroke', color);\n  });\n  pathArrowFolder.add(pathArrowConfig, 'lineWidth', 1, 20).onChange(function (lineWidth) {\n    pathArrow.setAttribute('lineWidth', lineWidth);\n  });\n  pathArrowFolder.add(pathArrowConfig, 'strokeOpacity', 0, 1, 0.1).onChange(function (opacity) {\n    pathArrow.setAttribute('strokeOpacity', opacity);\n  });\n  pathArrowFolder.add(pathArrowConfig, 'startHead', ['none', 'default', 'circle', 'image', 'custom arrowhead']).onChange(function (type) {\n    if (type === 'none') {\n      pathArrow.setAttribute('startHead', false);\n    } else if (type === 'default') {\n      pathArrow.setAttribute('startHead', true);\n    } else if (type === 'circle') {\n      pathArrow.setAttribute('startHead', new _g.Circle({\n        style: {\n          r: 10\n        }\n      }));\n    } else if (type === 'image') {\n      var image = new _g.Image({\n        style: {\n          width: 50,\n          height: 50,\n          anchor: [0.5, 0.5],\n          transformOrigin: 'center',\n          img: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ'\n        }\n      });\n      image.rotateLocal(90);\n      pathArrow.setAttribute('startHead', image);\n    } else if (type === 'custom arrowhead') {\n      pathArrow.setAttribute('startHead', new MyCustomArrowHead({\n        style: {}\n      }));\n    }\n  });\n  pathArrowFolder.add(pathArrowConfig, 'endHead', ['none', 'default', 'circle', 'image', 'custom arrowhead']).onChange(function (type) {\n    if (type === 'none') {\n      pathArrow.setAttribute('endHead', false);\n    } else if (type === 'default') {\n      pathArrow.setAttribute('endHead', true);\n    } else if (type === 'circle') {\n      pathArrow.setAttribute('endHead', new _g.Circle({\n        style: {\n          r: 10\n        }\n      }));\n    } else if (type === 'image') {\n      var image = new _g.Image({\n        style: {\n          width: 50,\n          height: 50,\n          anchor: [0.5, 0.5],\n          transformOrigin: 'center',\n          img: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ'\n        }\n      });\n      image.rotateLocal(90);\n      pathArrow.setAttribute('endHead', image);\n    } else if (type === 'custom arrowhead') {\n      pathArrow.setAttribute('endHead', new MyCustomArrowHead({\n        style: {}\n      }));\n    }\n  });\n  pathArrowFolder.add(pathArrowConfig, 'startHeadOffset', -20, 20).onChange(function (startHeadOffset) {\n    pathArrow.setAttribute('startHeadOffset', startHeadOffset);\n  });\n  pathArrowFolder.add(pathArrowConfig, 'endHeadOffset', -20, 20).onChange(function (endHeadOffset) {\n    pathArrow.setAttribute('endHeadOffset', endHeadOffset);\n  });\n});"},{"relativePath":"shape/demo/custom-element.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/shape/demo/custom-element.js","order":14,"filename":"custom-element.js","title":{"zh":"自定义元素","en":"Custom Element"},"source":"import { Canvas, CanvasEvent, CSS, CustomElement, Polyline, PropertySyntax } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst svgRenderer = new SVGRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\n// register custom property\nCSS.registerProperty({\n  name: 'myNumber',\n  syntax: PropertySyntax.NUMBER,\n  initialValue: '0',\n  interpolable: true,\n});\nCSS.registerProperty({\n  name: 'myAngle',\n  syntax: PropertySyntax.ANGLE,\n  initialValue: '0',\n  interpolable: true,\n});\nCSS.registerProperty({\n  name: 'myLength',\n  syntax: PropertySyntax.LENGTH,\n  initialValue: '0',\n  interpolable: true,\n});\nCSS.registerProperty({\n  name: 'myLengthOrPercentage',\n  syntax: PropertySyntax.LENGTH_PERCENTAGE,\n  initialValue: '0',\n  interpolable: true,\n});\n\nclass MyCustomElement extends CustomElement {\n  connectedCallback() {\n    this.appendChild(new Polyline({ style: { points: '100,100 200,200', stroke: 'red' } }));\n  }\n}\nconst myCustomElement = new MyCustomElement();\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  canvas.appendChild(myCustomElement);\n\n  const animation = myCustomElement.animate(\n    [\n      {\n        myAngle: '20deg',\n        myLength: '10px',\n        myNumber: 0,\n        myLengthOrPercentage: '50%',\n      },\n      {\n        myAngle: '10deg',\n        myLength: '20px',\n        myNumber: 1,\n        myLengthOrPercentage: '100%',\n      },\n    ],\n    { duration: 2000, fill: 'both' },\n  );\n\n  if (animation) {\n    animation.onframe = () => {\n      console.log(\n        myCustomElement.style.myAngle,\n        myCustomElement.style.myLength,\n        myCustomElement.style.myNumber,\n        myCustomElement.style.myLengthOrPercentage,\n      );\n    };\n  }\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n","babeledSource":"function _instanceof(left, right) { if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.customElement = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  }); // register custom property\n\n  _g.CSS.registerProperty({\n    name: 'myNumber',\n    syntax: _g.PropertySyntax.NUMBER,\n    initialValue: '0',\n    interpolable: true\n  });\n\n  _g.CSS.registerProperty({\n    name: 'myAngle',\n    syntax: _g.PropertySyntax.ANGLE,\n    initialValue: '0',\n    interpolable: true\n  });\n\n  _g.CSS.registerProperty({\n    name: 'myLength',\n    syntax: _g.PropertySyntax.LENGTH,\n    initialValue: '0',\n    interpolable: true\n  });\n\n  _g.CSS.registerProperty({\n    name: 'myLengthOrPercentage',\n    syntax: _g.PropertySyntax.LENGTH_PERCENTAGE,\n    initialValue: '0',\n    interpolable: true\n  });\n\n  var MyCustomElement = /*#__PURE__*/function (_CustomElement) {\n    _inherits(MyCustomElement, _CustomElement);\n\n    var _super = _createSuper(MyCustomElement);\n\n    function MyCustomElement() {\n      _classCallCheck(this, MyCustomElement);\n\n      return _super.apply(this, arguments);\n    }\n\n    _createClass(MyCustomElement, [{\n      key: \"connectedCallback\",\n      value: function connectedCallback() {\n        this.appendChild(new _g.Polyline({\n          style: {\n            points: '100,100 200,200',\n            stroke: 'red'\n          }\n        }));\n      }\n    }]);\n\n    return MyCustomElement;\n  }(_g.CustomElement);\n\n  var myCustomElement = new MyCustomElement();\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    canvas.appendChild(myCustomElement);\n    var animation = myCustomElement.animate([{\n      myAngle: '20deg',\n      myLength: '10px',\n      myNumber: 0,\n      myLengthOrPercentage: '50%'\n    }, {\n      myAngle: '10deg',\n      myLength: '20px',\n      myNumber: 1,\n      myLengthOrPercentage: '100%'\n    }], {\n      duration: 2000,\n      fill: 'both'\n    });\n\n    if (animation) {\n      animation.onframe = function () {\n        console.log(myCustomElement.style.myAngle, myCustomElement.style.myLength, myCustomElement.style.myNumber, myCustomElement.style.myLengthOrPercentage);\n      };\n    }\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n});"},{"relativePath":"shape/demo/clip.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/shape/demo/clip.js","order":10,"filename":"clip.js","title":{"zh":"裁剪区域","en":"Clip Path"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*Iy4RQZgT3EUAAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent, Circle, Group, Image, Path, Rect, Text } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// clip path shape\nconst clipPathCircle = new Circle({\n  style: {\n    cx: 100,\n    cy: 100,\n    r: 50,\n  },\n});\nconst clipPathRect = new Rect({\n  style: {\n    x: 100,\n    y: 100,\n    width: 50,\n    height: 50,\n  },\n});\nconst clipPath = new Path({\n  style: {\n    stroke: 'black',\n    lineWidth: 2,\n    path: 'M 10,10 L -10,0 L 10,-10 Z',\n    anchor: [0.5, 0.5],\n  },\n});\n\nclipPath.setLocalPosition(100, 100);\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\nconst image = new Image({\n  style: {\n    x: 200,\n    y: 100,\n    width: 200,\n    height: 200,\n    img: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*8TlCRIsKeUkAAAAAAAAAAAAAARQnAQ',\n    clipPath: clipPathCircle,\n  },\n});\n\nconst image2 = new Image({\n  style: {\n    x: 200,\n    y: 200,\n    width: 200,\n    height: 200,\n    img: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ',\n    clipPath: clipPathCircle,\n  },\n});\n\nconst group = new Group({\n  style: {\n    x: 200,\n    y: 300,\n    clipPath: clipPathCircle,\n    cursor: 'pointer',\n  },\n});\nconst textStyle = {\n  fontFamily: 'PingFang SC',\n  text: '这是测试文本',\n  fontSize: 40,\n  fill: '#1890FF',\n  stroke: '#F04864',\n  lineWidth: 5,\n};\nconst text1 = new Text({\n  style: textStyle,\n});\nconst text2 = new Text({\n  style: textStyle,\n});\nconst text3 = new Text({\n  style: textStyle,\n});\ntext2.translateLocal(0, 50);\ntext3.translateLocal(0, 100);\ngroup.appendChild(text1);\ngroup.appendChild(text2);\ngroup.appendChild(text3);\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  canvas.appendChild(image);\n  canvas.appendChild(image2);\n  canvas.appendChild(group);\n\n  clipPathCircle.animate([{ transform: 'scale(1)' }, { transform: 'scale(1.2)' }], {\n    duration: 1500,\n    iterations: Infinity,\n  });\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n\nconst clipFolder = gui.addFolder('clipPath');\nconst clipConfig = {\n  clipPath: 'circle',\n  r: 50,\n};\n\nclipFolder.add(clipConfig, 'clipPath', ['circle', 'rect', 'path', 'null']).onChange((type) => {\n  switch (type) {\n    case 'circle':\n      image.style.clipPath = clipPathCircle;\n      break;\n    case 'rect':\n      image.style.clipPath = clipPathRect;\n      break;\n    case 'path':\n      image.style.clipPath = clipPath;\n      break;\n    case 'null': // clear clip path\n      image.style.clipPath = null;\n      // image.setClip(null);\n      break;\n  }\n});\nclipFolder.add(clipConfig, 'r', 0, 100).onChange((r) => {\n  clipPathCircle.style.r = r;\n});\nclipFolder.open();\n\nconst imageFolder = gui.addFolder('image');\nconst config = {\n  x: 200,\n  y: 100,\n  width: 200,\n  height: 200,\n  opacity: 1,\n  anchorX: 0,\n  anchorY: 0,\n  src: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ',\n};\nimageFolder.add(config, 'x', 0, 400).onChange((x) => {\n  image.style.x = x;\n});\nimageFolder.add(config, 'y', 0, 400).onChange((y) => {\n  image.style.y = y;\n});\nimageFolder.add(config, 'width', 0, 400).onChange((width) => {\n  image.style.width = width;\n});\nimageFolder.add(config, 'height', 0, 400).onChange((height) => {\n  image.style.height = height;\n});\nimageFolder.add(config, 'anchorX', 0, 1, 0.1).onChange((anchorX) => {\n  image.style.anchor = [anchorX, config.anchorY];\n});\nimageFolder.add(config, 'anchorY', 0, 1, 0.1).onChange((anchorY) => {\n  image.style.anchor = [config.anchorX, anchorY];\n});\nimageFolder.add(config, 'opacity', 0, 1, 0.1).onChange((opacity) => {\n  image.style.opacity = opacity;\n});\nimageFolder\n  .add(config, 'src', [\n    'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ',\n    'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*8eoKRbfOwgAAAAAAAAAAAABkARQnAQ',\n  ])\n  .onChange((src) => {\n    image.style.img = src;\n  });\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.clip = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // clip path shape\n\n  var clipPathCircle = new _g.Circle({\n    style: {\n      cx: 100,\n      cy: 100,\n      r: 50\n    }\n  });\n  var clipPathRect = new _g.Rect({\n    style: {\n      x: 100,\n      y: 100,\n      width: 50,\n      height: 50\n    }\n  });\n  var clipPath = new _g.Path({\n    style: {\n      stroke: 'black',\n      lineWidth: 2,\n      path: 'M 10,10 L -10,0 L 10,-10 Z',\n      anchor: [0.5, 0.5]\n    }\n  });\n  clipPath.setLocalPosition(100, 100); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  var image = new _g.Image({\n    style: {\n      x: 200,\n      y: 100,\n      width: 200,\n      height: 200,\n      img: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*8TlCRIsKeUkAAAAAAAAAAAAAARQnAQ',\n      clipPath: clipPathCircle\n    }\n  });\n  var image2 = new _g.Image({\n    style: {\n      x: 200,\n      y: 200,\n      width: 200,\n      height: 200,\n      img: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ',\n      clipPath: clipPathCircle\n    }\n  });\n  var group = new _g.Group({\n    style: {\n      x: 200,\n      y: 300,\n      clipPath: clipPathCircle,\n      cursor: 'pointer'\n    }\n  });\n  var textStyle = {\n    fontFamily: 'PingFang SC',\n    text: '这是测试文本',\n    fontSize: 40,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 5\n  };\n  var text1 = new _g.Text({\n    style: textStyle\n  });\n  var text2 = new _g.Text({\n    style: textStyle\n  });\n  var text3 = new _g.Text({\n    style: textStyle\n  });\n  text2.translateLocal(0, 50);\n  text3.translateLocal(0, 100);\n  group.appendChild(text1);\n  group.appendChild(text2);\n  group.appendChild(text3);\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    canvas.appendChild(image);\n    canvas.appendChild(image2);\n    canvas.appendChild(group);\n    clipPathCircle.animate([{\n      transform: 'scale(1)'\n    }, {\n      transform: 'scale(1.2)'\n    }], {\n      duration: 1500,\n      iterations: Infinity\n    });\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n  var clipFolder = gui.addFolder('clipPath');\n  var clipConfig = {\n    clipPath: 'circle',\n    r: 50\n  };\n  clipFolder.add(clipConfig, 'clipPath', ['circle', 'rect', 'path', 'null']).onChange(function (type) {\n    switch (type) {\n      case 'circle':\n        image.style.clipPath = clipPathCircle;\n        break;\n\n      case 'rect':\n        image.style.clipPath = clipPathRect;\n        break;\n\n      case 'path':\n        image.style.clipPath = clipPath;\n        break;\n\n      case 'null':\n        // clear clip path\n        image.style.clipPath = null; // image.setClip(null);\n\n        break;\n    }\n  });\n  clipFolder.add(clipConfig, 'r', 0, 100).onChange(function (r) {\n    clipPathCircle.style.r = r;\n  });\n  clipFolder.open();\n  var imageFolder = gui.addFolder('image');\n  var config = {\n    x: 200,\n    y: 100,\n    width: 200,\n    height: 200,\n    opacity: 1,\n    anchorX: 0,\n    anchorY: 0,\n    src: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ'\n  };\n  imageFolder.add(config, 'x', 0, 400).onChange(function (x) {\n    image.style.x = x;\n  });\n  imageFolder.add(config, 'y', 0, 400).onChange(function (y) {\n    image.style.y = y;\n  });\n  imageFolder.add(config, 'width', 0, 400).onChange(function (width) {\n    image.style.width = width;\n  });\n  imageFolder.add(config, 'height', 0, 400).onChange(function (height) {\n    image.style.height = height;\n  });\n  imageFolder.add(config, 'anchorX', 0, 1, 0.1).onChange(function (anchorX) {\n    image.style.anchor = [anchorX, config.anchorY];\n  });\n  imageFolder.add(config, 'anchorY', 0, 1, 0.1).onChange(function (anchorY) {\n    image.style.anchor = [config.anchorX, anchorY];\n  });\n  imageFolder.add(config, 'opacity', 0, 1, 0.1).onChange(function (opacity) {\n    image.style.opacity = opacity;\n  });\n  imageFolder.add(config, 'src', ['https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ', 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*8eoKRbfOwgAAAAAAAAAAAABkARQnAQ']).onChange(function (src) {\n    image.style.img = src;\n  });\n});"},{"relativePath":"shape/demo/gradient.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/shape/demo/gradient.js","order":11,"filename":"gradient.js","title":{"zh":"渐变色和模式","en":"Gradient & Pattern"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*WK1jQIIUP0cAAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent, Circle } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\nconst linearGradient = 'l(0) 0:#ffffff 0.5:#7ec2f3 1:#1890ff';\nconst radialGradient = 'r(0.5, 0.5, 1) 0:#ffffff 1:#1890ff';\nconst pattern = 'p(a) https://gw.alipayobjects.com/zos/rmsportal/ibtwzHXSxomqbZCPMLqS.png';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf',\n    },\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\n// create a circle\nconst circle = new Circle({\n  style: {\n    cx: 300,\n    cy: 200,\n    r: 100,\n    fill: linearGradient,\n    stroke: '#F04864',\n    lineWidth: 4,\n  },\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  // add a circle to canvas\n  canvas.appendChild(circle);\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n\nconst circleFolder = gui.addFolder('circle');\nconst circleConfig = {\n  r: 100,\n  fill: 'linear',\n  stroke: '#F04864',\n  lineWidth: 4,\n  fillOpacity: 1,\n  strokeOpacity: 1,\n  anchorX: 0.5,\n  anchorY: 0.5,\n};\ncircleFolder.add(circleConfig, 'r', 50, 200).onChange((radius) => {\n  circle.style.r = radius;\n});\ncircleFolder.add(circleConfig, 'fill', ['linear', 'radial', 'pattern']).onChange((color) => {\n  if (color === 'linear') {\n    circle.style.fill = linearGradient;\n  } else if (color === 'radial') {\n    circle.style.fill = radialGradient;\n  } else if (color === 'pattern') {\n    circle.style.fill = pattern;\n  }\n});\ncircleFolder.addColor(circleConfig, 'stroke').onChange((color) => {\n  circle.attr('stroke', color);\n});\ncircleFolder.add(circleConfig, 'lineWidth', 1, 20).onChange((lineWidth) => {\n  circle.attr('lineWidth', lineWidth);\n});\ncircleFolder.add(circleConfig, 'fillOpacity', 0, 1, 0.1).onChange((opacity) => {\n  circle.attr('fillOpacity', opacity);\n});\ncircleFolder.add(circleConfig, 'strokeOpacity', 0, 1, 0.1).onChange((opacity) => {\n  circle.attr('strokeOpacity', opacity);\n});\ncircleFolder.open();\n\nconst transformFolder = gui.addFolder('transform');\nconst transformConfig = {\n  localPositionX: 200,\n  localPositionY: 100,\n  localScale: 1,\n  localEulerAngles: 0,\n  transformOrigin: 'left top',\n  anchorX: 0,\n  anchorY: 0,\n};\ntransformFolder\n  .add(transformConfig, 'transformOrigin', [\n    'left top',\n    'center',\n    'right bottom',\n    '50% 50%',\n    '50px 50px',\n  ])\n  .onChange((transformOrigin) => {\n    circle.style.transformOrigin = transformOrigin;\n  });\ntransformFolder.add(transformConfig, 'localPositionX', 0, 600).onChange((localPositionX) => {\n  const [lx, ly] = circle.getLocalPosition();\n  circle.setLocalPosition(localPositionX, ly);\n});\ntransformFolder.add(transformConfig, 'localPositionY', 0, 500).onChange((localPositionY) => {\n  const [lx, ly] = circle.getLocalPosition();\n  circle.setLocalPosition(lx, localPositionY);\n});\ntransformFolder.add(transformConfig, 'localScale', 0.2, 5).onChange((localScale) => {\n  circle.setLocalScale(localScale);\n});\ntransformFolder.add(transformConfig, 'localEulerAngles', 0, 360).onChange((localEulerAngles) => {\n  circle.setLocalEulerAngles(localEulerAngles);\n});\ntransformFolder.add(transformConfig, 'anchorX', 0, 1).onChange((anchorX) => {\n  circle.style.anchor = [anchorX, transformConfig.anchorY];\n});\ntransformFolder.add(transformConfig, 'anchorY', 0, 1).onChange((anchorY) => {\n  circle.style.anchor = [transformConfig.anchorX, anchorY];\n});\ntransformFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.gradient = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  var linearGradient = 'l(0) 0:#ffffff 0.5:#7ec2f3 1:#1890ff';\n  var radialGradient = 'r(0.5, 0.5, 1) 0:#ffffff 1:#1890ff';\n  var pattern = 'p(a) https://gw.alipayobjects.com/zos/rmsportal/ibtwzHXSxomqbZCPMLqS.png'; // create a renderer\n\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf'\n    }, {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  }); // create a circle\n\n  var circle = new _g.Circle({\n    style: {\n      cx: 300,\n      cy: 200,\n      r: 100,\n      fill: linearGradient,\n      stroke: '#F04864',\n      lineWidth: 4\n    }\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    // add a circle to canvas\n    canvas.appendChild(circle);\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n  var circleFolder = gui.addFolder('circle');\n  var circleConfig = {\n    r: 100,\n    fill: 'linear',\n    stroke: '#F04864',\n    lineWidth: 4,\n    fillOpacity: 1,\n    strokeOpacity: 1,\n    anchorX: 0.5,\n    anchorY: 0.5\n  };\n  circleFolder.add(circleConfig, 'r', 50, 200).onChange(function (radius) {\n    circle.style.r = radius;\n  });\n  circleFolder.add(circleConfig, 'fill', ['linear', 'radial', 'pattern']).onChange(function (color) {\n    if (color === 'linear') {\n      circle.style.fill = linearGradient;\n    } else if (color === 'radial') {\n      circle.style.fill = radialGradient;\n    } else if (color === 'pattern') {\n      circle.style.fill = pattern;\n    }\n  });\n  circleFolder.addColor(circleConfig, 'stroke').onChange(function (color) {\n    circle.attr('stroke', color);\n  });\n  circleFolder.add(circleConfig, 'lineWidth', 1, 20).onChange(function (lineWidth) {\n    circle.attr('lineWidth', lineWidth);\n  });\n  circleFolder.add(circleConfig, 'fillOpacity', 0, 1, 0.1).onChange(function (opacity) {\n    circle.attr('fillOpacity', opacity);\n  });\n  circleFolder.add(circleConfig, 'strokeOpacity', 0, 1, 0.1).onChange(function (opacity) {\n    circle.attr('strokeOpacity', opacity);\n  });\n  circleFolder.open();\n  var transformFolder = gui.addFolder('transform');\n  var transformConfig = {\n    localPositionX: 200,\n    localPositionY: 100,\n    localScale: 1,\n    localEulerAngles: 0,\n    transformOrigin: 'left top',\n    anchorX: 0,\n    anchorY: 0\n  };\n  transformFolder.add(transformConfig, 'transformOrigin', ['left top', 'center', 'right bottom', '50% 50%', '50px 50px']).onChange(function (transformOrigin) {\n    circle.style.transformOrigin = transformOrigin;\n  });\n  transformFolder.add(transformConfig, 'localPositionX', 0, 600).onChange(function (localPositionX) {\n    var _circle$getLocalPosit = circle.getLocalPosition(),\n        _circle$getLocalPosit2 = _slicedToArray(_circle$getLocalPosit, 2),\n        lx = _circle$getLocalPosit2[0],\n        ly = _circle$getLocalPosit2[1];\n\n    circle.setLocalPosition(localPositionX, ly);\n  });\n  transformFolder.add(transformConfig, 'localPositionY', 0, 500).onChange(function (localPositionY) {\n    var _circle$getLocalPosit3 = circle.getLocalPosition(),\n        _circle$getLocalPosit4 = _slicedToArray(_circle$getLocalPosit3, 2),\n        lx = _circle$getLocalPosit4[0],\n        ly = _circle$getLocalPosit4[1];\n\n    circle.setLocalPosition(lx, localPositionY);\n  });\n  transformFolder.add(transformConfig, 'localScale', 0.2, 5).onChange(function (localScale) {\n    circle.setLocalScale(localScale);\n  });\n  transformFolder.add(transformConfig, 'localEulerAngles', 0, 360).onChange(function (localEulerAngles) {\n    circle.setLocalEulerAngles(localEulerAngles);\n  });\n  transformFolder.add(transformConfig, 'anchorX', 0, 1).onChange(function (anchorX) {\n    circle.style.anchor = [anchorX, transformConfig.anchorY];\n  });\n  transformFolder.add(transformConfig, 'anchorY', 0, 1).onChange(function (anchorY) {\n    circle.style.anchor = [transformConfig.anchorX, anchorY];\n  });\n  transformFolder.open();\n});"},{"relativePath":"shape/demo/filter.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/shape/demo/filter.js","order":12,"filename":"filter.js","title":{"zh":"滤镜","en":"Filter"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*8BomR52SOm4AAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent, Circle } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\nconst blur = 'blur(5px)';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\n// create a circle\nconst circle = new Circle({\n  style: {\n    cx: 300,\n    cy: 200,\n    r: 100,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 4,\n    filter: blur,\n  },\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  // add a circle to canvas\n  canvas.appendChild(circle);\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n\nconst circleFolder = gui.addFolder('circle');\nconst circleConfig = {\n  r: 100,\n  fill: '#1890FF',\n  stroke: '#F04864',\n  lineWidth: 4,\n  fillOpacity: 1,\n  strokeOpacity: 1,\n  anchorX: 0.5,\n  anchorY: 0.5,\n};\ncircleFolder.add(circleConfig, 'r', 50, 200).onChange((radius) => {\n  circle.style.r = radius;\n});\ncircleFolder.addColor(circleConfig, 'fill').onChange((color) => {\n  circle.style.fill = color;\n});\ncircleFolder.addColor(circleConfig, 'stroke').onChange((color) => {\n  circle.attr('stroke', color);\n});\ncircleFolder.add(circleConfig, 'lineWidth', 1, 20).onChange((lineWidth) => {\n  circle.attr('lineWidth', lineWidth);\n});\ncircleFolder.add(circleConfig, 'fillOpacity', 0, 1, 0.1).onChange((opacity) => {\n  circle.attr('fillOpacity', opacity);\n});\ncircleFolder.add(circleConfig, 'strokeOpacity', 0, 1, 0.1).onChange((opacity) => {\n  circle.attr('strokeOpacity', opacity);\n});\ncircleFolder.add(circleConfig, 'anchorX', 0, 1, 0.1).onChange((anchorX) => {\n  circle.attr('anchor', [anchorX, circleConfig.anchorY]);\n});\ncircleFolder.add(circleConfig, 'anchorY', 0, 1, 0.1).onChange((anchorY) => {\n  circle.attr('anchor', [circleConfig.anchorX, anchorY]);\n});\n\nconst blurFolder = gui.addFolder('blur');\nconst blurConfig = {\n  enable: true,\n  radius: 5,\n};\nblurFolder.add(blurConfig, 'enable').onChange(() => {\n  circle.style.filter = generateFilter();\n});\nblurFolder.add(blurConfig, 'radius', 0, 20).onChange(() => {\n  circle.style.filter = generateFilter();\n});\nblurFolder.open();\n\nconst brightnessFolder = gui.addFolder('brightness');\nconst brightnessConfig = {\n  enable: false,\n  brightness: 1,\n};\nbrightnessFolder.add(brightnessConfig, 'enable').onChange(() => {\n  circle.style.filter = generateFilter();\n});\nbrightnessFolder.add(brightnessConfig, 'brightness', 0, 4, 0.1).onChange(() => {\n  circle.style.filter = generateFilter();\n});\nbrightnessFolder.open();\n\nconst dropShadowFolder = gui.addFolder('drop-shadow');\nconst dropShadowConfig = {\n  enable: false,\n  offsetX: 0,\n  offsetY: 0,\n  radius: 0,\n  color: '#000',\n};\ndropShadowFolder.add(dropShadowConfig, 'enable').onChange(() => {\n  circle.style.filter = generateFilter();\n});\ndropShadowFolder.add(dropShadowConfig, 'offsetX', -10, 10).onChange(() => {\n  circle.style.filter = generateFilter();\n});\ndropShadowFolder.add(dropShadowConfig, 'offsetY', -10, 10).onChange(() => {\n  circle.style.filter = generateFilter();\n});\ndropShadowFolder.add(dropShadowConfig, 'radius', 0, 10).onChange(() => {\n  circle.style.filter = generateFilter();\n});\ndropShadowFolder.addColor(dropShadowConfig, 'color').onChange(() => {\n  circle.style.filter = generateFilter();\n});\ndropShadowFolder.open();\n\nconst contrastFolder = gui.addFolder('contrast');\nconst contrastConfig = {\n  enable: false,\n  contrast: 1,\n};\ncontrastFolder.add(contrastConfig, 'enable').onChange(() => {\n  circle.style.filter = generateFilter();\n});\ncontrastFolder.add(contrastConfig, 'contrast', 0, 4, 0.1).onChange(() => {\n  circle.style.filter = generateFilter();\n});\ncontrastFolder.open();\n\nconst grayscaleFolder = gui.addFolder('grayscale');\nconst grayscaleConfig = {\n  enable: false,\n  grayscale: 0,\n};\ngrayscaleFolder.add(grayscaleConfig, 'enable').onChange(() => {\n  circle.style.filter = generateFilter();\n});\ngrayscaleFolder.add(grayscaleConfig, 'grayscale', 0, 1, 0.1).onChange(() => {\n  circle.style.filter = generateFilter();\n});\ngrayscaleFolder.open();\n\nconst sepiaFolder = gui.addFolder('sepia');\nconst sepiaConfig = {\n  enable: false,\n  sepia: 0,\n};\nsepiaFolder.add(sepiaConfig, 'enable').onChange(() => {\n  circle.style.filter = generateFilter();\n});\nsepiaFolder.add(sepiaConfig, 'sepia', 0, 1, 0.1).onChange(() => {\n  circle.style.filter = generateFilter();\n});\nsepiaFolder.open();\n\nconst saturateFolder = gui.addFolder('saturate');\nconst saturateConfig = {\n  enable: false,\n  saturate: 0,\n};\nsaturateFolder.add(saturateConfig, 'enable').onChange(() => {\n  circle.style.filter = generateFilter();\n});\nsaturateFolder.add(saturateConfig, 'saturate', 0, 1, 0.1).onChange(() => {\n  circle.style.filter = generateFilter();\n});\nsaturateFolder.open();\n\nconst hueRotateFolder = gui.addFolder('hue-rotate');\nconst hueRotateConfig = {\n  enable: false,\n  angle: 0,\n};\nhueRotateFolder.add(hueRotateConfig, 'enable').onChange(() => {\n  circle.style.filter = generateFilter();\n});\nhueRotateFolder.add(hueRotateConfig, 'angle', 0, 360).onChange(() => {\n  circle.style.filter = generateFilter();\n});\nhueRotateFolder.open();\n\nconst invertFolder = gui.addFolder('invert');\nconst invertConfig = {\n  enable: false,\n  amount: 0,\n};\ninvertFolder.add(invertConfig, 'enable').onChange(() => {\n  circle.style.filter = generateFilter();\n});\ninvertFolder.add(invertConfig, 'amount', 0, 1, 0.1).onChange(() => {\n  circle.style.filter = generateFilter();\n});\ninvertFolder.open();\n\nconst generateFilter = () => {\n  return [\n    blurConfig.enable ? `blur(${blurConfig.radius}px)` : '',\n    brightnessConfig.enable ? `brightness(${brightnessConfig.brightness})` : '',\n    dropShadowConfig.enable\n      ? `drop-shadow(${dropShadowConfig.offsetX}px ${dropShadowConfig.offsetY}px ${dropShadowConfig.radius}px ${dropShadowConfig.color})`\n      : '',\n    contrastConfig.enable ? `contrast(${contrastConfig.contrast})` : '',\n    grayscaleConfig.enable ? `grayscale(${grayscaleConfig.grayscale})` : '',\n    sepiaConfig.enable ? `sepia(${sepiaConfig.sepia})` : '',\n    saturateConfig.enable ? `saturate(${saturateConfig.saturate})` : '',\n    hueRotateConfig.enable ? `hue-rotate(${hueRotateConfig.angle}deg)` : '',\n    invertConfig.enable ? `invert(${invertConfig.amount})` : '',\n  ].join(' ');\n};\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.filter = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  var blur = 'blur(5px)'; // create a renderer\n\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  }); // create a circle\n\n  var circle = new _g.Circle({\n    style: {\n      cx: 300,\n      cy: 200,\n      r: 100,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n      filter: blur\n    }\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    // add a circle to canvas\n    canvas.appendChild(circle);\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n  var circleFolder = gui.addFolder('circle');\n  var circleConfig = {\n    r: 100,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 4,\n    fillOpacity: 1,\n    strokeOpacity: 1,\n    anchorX: 0.5,\n    anchorY: 0.5\n  };\n  circleFolder.add(circleConfig, 'r', 50, 200).onChange(function (radius) {\n    circle.style.r = radius;\n  });\n  circleFolder.addColor(circleConfig, 'fill').onChange(function (color) {\n    circle.style.fill = color;\n  });\n  circleFolder.addColor(circleConfig, 'stroke').onChange(function (color) {\n    circle.attr('stroke', color);\n  });\n  circleFolder.add(circleConfig, 'lineWidth', 1, 20).onChange(function (lineWidth) {\n    circle.attr('lineWidth', lineWidth);\n  });\n  circleFolder.add(circleConfig, 'fillOpacity', 0, 1, 0.1).onChange(function (opacity) {\n    circle.attr('fillOpacity', opacity);\n  });\n  circleFolder.add(circleConfig, 'strokeOpacity', 0, 1, 0.1).onChange(function (opacity) {\n    circle.attr('strokeOpacity', opacity);\n  });\n  circleFolder.add(circleConfig, 'anchorX', 0, 1, 0.1).onChange(function (anchorX) {\n    circle.attr('anchor', [anchorX, circleConfig.anchorY]);\n  });\n  circleFolder.add(circleConfig, 'anchorY', 0, 1, 0.1).onChange(function (anchorY) {\n    circle.attr('anchor', [circleConfig.anchorX, anchorY]);\n  });\n  var blurFolder = gui.addFolder('blur');\n  var blurConfig = {\n    enable: true,\n    radius: 5\n  };\n  blurFolder.add(blurConfig, 'enable').onChange(function () {\n    circle.style.filter = generateFilter();\n  });\n  blurFolder.add(blurConfig, 'radius', 0, 20).onChange(function () {\n    circle.style.filter = generateFilter();\n  });\n  blurFolder.open();\n  var brightnessFolder = gui.addFolder('brightness');\n  var brightnessConfig = {\n    enable: false,\n    brightness: 1\n  };\n  brightnessFolder.add(brightnessConfig, 'enable').onChange(function () {\n    circle.style.filter = generateFilter();\n  });\n  brightnessFolder.add(brightnessConfig, 'brightness', 0, 4, 0.1).onChange(function () {\n    circle.style.filter = generateFilter();\n  });\n  brightnessFolder.open();\n  var dropShadowFolder = gui.addFolder('drop-shadow');\n  var dropShadowConfig = {\n    enable: false,\n    offsetX: 0,\n    offsetY: 0,\n    radius: 0,\n    color: '#000'\n  };\n  dropShadowFolder.add(dropShadowConfig, 'enable').onChange(function () {\n    circle.style.filter = generateFilter();\n  });\n  dropShadowFolder.add(dropShadowConfig, 'offsetX', -10, 10).onChange(function () {\n    circle.style.filter = generateFilter();\n  });\n  dropShadowFolder.add(dropShadowConfig, 'offsetY', -10, 10).onChange(function () {\n    circle.style.filter = generateFilter();\n  });\n  dropShadowFolder.add(dropShadowConfig, 'radius', 0, 10).onChange(function () {\n    circle.style.filter = generateFilter();\n  });\n  dropShadowFolder.addColor(dropShadowConfig, 'color').onChange(function () {\n    circle.style.filter = generateFilter();\n  });\n  dropShadowFolder.open();\n  var contrastFolder = gui.addFolder('contrast');\n  var contrastConfig = {\n    enable: false,\n    contrast: 1\n  };\n  contrastFolder.add(contrastConfig, 'enable').onChange(function () {\n    circle.style.filter = generateFilter();\n  });\n  contrastFolder.add(contrastConfig, 'contrast', 0, 4, 0.1).onChange(function () {\n    circle.style.filter = generateFilter();\n  });\n  contrastFolder.open();\n  var grayscaleFolder = gui.addFolder('grayscale');\n  var grayscaleConfig = {\n    enable: false,\n    grayscale: 0\n  };\n  grayscaleFolder.add(grayscaleConfig, 'enable').onChange(function () {\n    circle.style.filter = generateFilter();\n  });\n  grayscaleFolder.add(grayscaleConfig, 'grayscale', 0, 1, 0.1).onChange(function () {\n    circle.style.filter = generateFilter();\n  });\n  grayscaleFolder.open();\n  var sepiaFolder = gui.addFolder('sepia');\n  var sepiaConfig = {\n    enable: false,\n    sepia: 0\n  };\n  sepiaFolder.add(sepiaConfig, 'enable').onChange(function () {\n    circle.style.filter = generateFilter();\n  });\n  sepiaFolder.add(sepiaConfig, 'sepia', 0, 1, 0.1).onChange(function () {\n    circle.style.filter = generateFilter();\n  });\n  sepiaFolder.open();\n  var saturateFolder = gui.addFolder('saturate');\n  var saturateConfig = {\n    enable: false,\n    saturate: 0\n  };\n  saturateFolder.add(saturateConfig, 'enable').onChange(function () {\n    circle.style.filter = generateFilter();\n  });\n  saturateFolder.add(saturateConfig, 'saturate', 0, 1, 0.1).onChange(function () {\n    circle.style.filter = generateFilter();\n  });\n  saturateFolder.open();\n  var hueRotateFolder = gui.addFolder('hue-rotate');\n  var hueRotateConfig = {\n    enable: false,\n    angle: 0\n  };\n  hueRotateFolder.add(hueRotateConfig, 'enable').onChange(function () {\n    circle.style.filter = generateFilter();\n  });\n  hueRotateFolder.add(hueRotateConfig, 'angle', 0, 360).onChange(function () {\n    circle.style.filter = generateFilter();\n  });\n  hueRotateFolder.open();\n  var invertFolder = gui.addFolder('invert');\n  var invertConfig = {\n    enable: false,\n    amount: 0\n  };\n  invertFolder.add(invertConfig, 'enable').onChange(function () {\n    circle.style.filter = generateFilter();\n  });\n  invertFolder.add(invertConfig, 'amount', 0, 1, 0.1).onChange(function () {\n    circle.style.filter = generateFilter();\n  });\n  invertFolder.open();\n\n  var generateFilter = function generateFilter() {\n    return [blurConfig.enable ? \"blur(\".concat(blurConfig.radius, \"px)\") : '', brightnessConfig.enable ? \"brightness(\".concat(brightnessConfig.brightness, \")\") : '', dropShadowConfig.enable ? \"drop-shadow(\".concat(dropShadowConfig.offsetX, \"px \").concat(dropShadowConfig.offsetY, \"px \").concat(dropShadowConfig.radius, \"px \").concat(dropShadowConfig.color, \")\") : '', contrastConfig.enable ? \"contrast(\".concat(contrastConfig.contrast, \")\") : '', grayscaleConfig.enable ? \"grayscale(\".concat(grayscaleConfig.grayscale, \")\") : '', sepiaConfig.enable ? \"sepia(\".concat(sepiaConfig.sepia, \")\") : '', saturateConfig.enable ? \"saturate(\".concat(saturateConfig.saturate, \")\") : '', hueRotateConfig.enable ? \"hue-rotate(\".concat(hueRotateConfig.angle, \"deg)\") : '', invertConfig.enable ? \"invert(\".concat(invertConfig.amount, \")\") : ''].join(' ');\n  };\n});"},{"relativePath":"shape/demo/html.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/shape/demo/html.js","order":13,"filename":"html.js","title":{"zh":"HTML 内容","en":"HTML Content"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*qGIRSaeHsTQAAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent, CustomElement, HTML, Line, Rect, Text } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf',\n    },\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\n// create a line\nconst line = new Line({\n  style: {\n    x1: 200,\n    y1: 100,\n    x2: 400,\n    y2: 100,\n    stroke: '#1890FF',\n    lineWidth: 2,\n  },\n});\nconst p1 = new HTML({\n  id: 'p1',\n  name: 'p1-name',\n  className: 'p1-classname',\n  style: {\n    x: 200,\n    y: 100,\n    width: 60,\n    height: 30,\n    innerHTML: 'p1',\n  },\n});\nconst p2 = new HTML({\n  id: 'p2',\n  name: 'p2-name',\n  className: 'p2-classname',\n  style: {\n    x: 400,\n    y: 100,\n    width: 60,\n    height: 30,\n    innerHTML: 'p2',\n  },\n});\n\nconst rect = new Rect({\n  name: 'test-name',\n  style: {\n    x: 200,\n    y: 200,\n    width: 300,\n    height: 100,\n    fill: '#1890FF',\n  },\n});\nconst text = new Text({\n  style: {\n    x: 150,\n    y: 50,\n    text: 'Hover me!',\n    fontSize: 22,\n    fill: '#000',\n    textAlign: 'center',\n    textBaseline: 'middle',\n  },\n});\nrect.appendChild(text);\nconst tooltip = new HTML({\n  style: {\n    x: 0,\n    y: 0,\n    innerHTML: 'Tooltip',\n    fill: 'white',\n    stroke: 'black',\n    lineWidth: 6,\n    width: 100,\n    height: 30,\n    pointerEvents: 'none',\n    visibility: 'hidden',\n  },\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  canvas.appendChild(line);\n  canvas.appendChild(p1);\n  canvas.appendChild(p2);\n  canvas.appendChild(rect);\n  canvas.appendChild(tooltip);\n});\n\nrect.addEventListener('mousemove', (e) => {\n  tooltip.setPosition(e.x, e.y);\n  tooltip.style.visibility = 'visible';\n\n  console.log('move', e.target);\n});\nrect.addEventListener('mouseleave', (e) => {\n  tooltip.setPosition(0, 0);\n  tooltip.style.visibility = 'hidden';\n\n  console.log('leave', e.target);\n});\n\nclass Custom extends CustomElement {\n  connectedCallback() {\n    const tooltip = new HTML({\n      style: {\n        x: 0,\n        y: 0,\n        innerHTML: 'Tooltip',\n        fill: 'white',\n        stroke: 'black',\n        lineWidth: 6,\n        width: 100,\n        height: 30,\n      },\n    });\n    this.appendChild(tooltip);\n    this.appendChild(new Rect({ style: { width: 100, height: 100, x: 0, y: 40, fill: 'red' } }));\n  }\n}\nconst customEl = new Custom({\n  style: {\n    transform: 'translate(200, 330)',\n  },\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  canvas.appendChild(customEl);\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n\nconst lineFolder = gui.addFolder('line');\nconst lineConfig = {\n  stroke: '#1890FF',\n  lineWidth: 2,\n  strokeOpacity: 1,\n  anchorX: 0,\n  anchorY: 0,\n  x1: 200,\n  y1: 100,\n  x2: 400,\n  y2: 100,\n};\nlineFolder.add(lineConfig, 'x1', 0, 400).onChange((x1) => {\n  line.style.x1 = x1;\n  p1.style.x = x1;\n});\nlineFolder.add(lineConfig, 'y1', 0, 400).onChange((y1) => {\n  line.style.y1 = y1;\n  p1.style.y = y1;\n});\nlineFolder.add(lineConfig, 'x2', 0, 400).onChange((x2) => {\n  line.style.x2 = x2;\n  p2.style.x = x2;\n});\nlineFolder.add(lineConfig, 'y2', 0, 400).onChange((y2) => {\n  line.style.y2 = y2;\n  p2.style.y = y2;\n});\nlineFolder.addColor(lineConfig, 'stroke').onChange((color) => {\n  line.style.stroke = color;\n});\nlineFolder.add(lineConfig, 'lineWidth', 1, 20).onChange((lineWidth) => {\n  line.style.lineWidth = lineWidth;\n});\nlineFolder.add(lineConfig, 'strokeOpacity', 0, 1, 0.1).onChange((opacity) => {\n  line.style.strokeOpacity = opacity;\n});\nlineFolder.add(lineConfig, 'anchorX', 0, 1, 0.1).onChange((anchorX) => {\n  line.attr('anchor', [anchorX, lineConfig.anchorY]);\n});\nlineFolder.add(lineConfig, 'anchorY', 0, 1, 0.1).onChange((anchorY) => {\n  line.attr('anchor', [lineConfig.anchorX, anchorY]);\n});\nlineFolder.open();\n","babeledSource":"function _instanceof(left, right) { if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) { return !!right[Symbol.hasInstance](left); } else { return left instanceof right; } }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.html = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf'\n    }, {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  }); // create a line\n\n  var line = new _g.Line({\n    style: {\n      x1: 200,\n      y1: 100,\n      x2: 400,\n      y2: 100,\n      stroke: '#1890FF',\n      lineWidth: 2\n    }\n  });\n  var p1 = new _g.HTML({\n    id: 'p1',\n    name: 'p1-name',\n    className: 'p1-classname',\n    style: {\n      x: 200,\n      y: 100,\n      width: 60,\n      height: 30,\n      innerHTML: 'p1'\n    }\n  });\n  var p2 = new _g.HTML({\n    id: 'p2',\n    name: 'p2-name',\n    className: 'p2-classname',\n    style: {\n      x: 400,\n      y: 100,\n      width: 60,\n      height: 30,\n      innerHTML: 'p2'\n    }\n  });\n  var rect = new _g.Rect({\n    name: 'test-name',\n    style: {\n      x: 200,\n      y: 200,\n      width: 300,\n      height: 100,\n      fill: '#1890FF'\n    }\n  });\n  var text = new _g.Text({\n    style: {\n      x: 150,\n      y: 50,\n      text: 'Hover me!',\n      fontSize: 22,\n      fill: '#000',\n      textAlign: 'center',\n      textBaseline: 'middle'\n    }\n  });\n  rect.appendChild(text);\n  var tooltip = new _g.HTML({\n    style: {\n      x: 0,\n      y: 0,\n      innerHTML: 'Tooltip',\n      fill: 'white',\n      stroke: 'black',\n      lineWidth: 6,\n      width: 100,\n      height: 30,\n      pointerEvents: 'none',\n      visibility: 'hidden'\n    }\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    canvas.appendChild(line);\n    canvas.appendChild(p1);\n    canvas.appendChild(p2);\n    canvas.appendChild(rect);\n    canvas.appendChild(tooltip);\n  });\n  rect.addEventListener('mousemove', function (e) {\n    tooltip.setPosition(e.x, e.y);\n    tooltip.style.visibility = 'visible';\n    console.log('move', e.target);\n  });\n  rect.addEventListener('mouseleave', function (e) {\n    tooltip.setPosition(0, 0);\n    tooltip.style.visibility = 'hidden';\n    console.log('leave', e.target);\n  });\n\n  var Custom = /*#__PURE__*/function (_CustomElement) {\n    _inherits(Custom, _CustomElement);\n\n    var _super = _createSuper(Custom);\n\n    function Custom() {\n      _classCallCheck(this, Custom);\n\n      return _super.apply(this, arguments);\n    }\n\n    _createClass(Custom, [{\n      key: \"connectedCallback\",\n      value: function connectedCallback() {\n        var tooltip = new _g.HTML({\n          style: {\n            x: 0,\n            y: 0,\n            innerHTML: 'Tooltip',\n            fill: 'white',\n            stroke: 'black',\n            lineWidth: 6,\n            width: 100,\n            height: 30\n          }\n        });\n        this.appendChild(tooltip);\n        this.appendChild(new _g.Rect({\n          style: {\n            width: 100,\n            height: 100,\n            x: 0,\n            y: 40,\n            fill: 'red'\n          }\n        }));\n      }\n    }]);\n\n    return Custom;\n  }(_g.CustomElement);\n\n  var customEl = new Custom({\n    style: {\n      transform: 'translate(200, 330)'\n    }\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    canvas.appendChild(customEl);\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n  var lineFolder = gui.addFolder('line');\n  var lineConfig = {\n    stroke: '#1890FF',\n    lineWidth: 2,\n    strokeOpacity: 1,\n    anchorX: 0,\n    anchorY: 0,\n    x1: 200,\n    y1: 100,\n    x2: 400,\n    y2: 100\n  };\n  lineFolder.add(lineConfig, 'x1', 0, 400).onChange(function (x1) {\n    line.style.x1 = x1;\n    p1.style.x = x1;\n  });\n  lineFolder.add(lineConfig, 'y1', 0, 400).onChange(function (y1) {\n    line.style.y1 = y1;\n    p1.style.y = y1;\n  });\n  lineFolder.add(lineConfig, 'x2', 0, 400).onChange(function (x2) {\n    line.style.x2 = x2;\n    p2.style.x = x2;\n  });\n  lineFolder.add(lineConfig, 'y2', 0, 400).onChange(function (y2) {\n    line.style.y2 = y2;\n    p2.style.y = y2;\n  });\n  lineFolder.addColor(lineConfig, 'stroke').onChange(function (color) {\n    line.style.stroke = color;\n  });\n  lineFolder.add(lineConfig, 'lineWidth', 1, 20).onChange(function (lineWidth) {\n    line.style.lineWidth = lineWidth;\n  });\n  lineFolder.add(lineConfig, 'strokeOpacity', 0, 1, 0.1).onChange(function (opacity) {\n    line.style.strokeOpacity = opacity;\n  });\n  lineFolder.add(lineConfig, 'anchorX', 0, 1, 0.1).onChange(function (anchorX) {\n    line.attr('anchor', [anchorX, lineConfig.anchorY]);\n  });\n  lineFolder.add(lineConfig, 'anchorY', 0, 1, 0.1).onChange(function (anchorY) {\n    line.attr('anchor', [lineConfig.anchorX, anchorY]);\n  });\n  lineFolder.open();\n});"},{"relativePath":"shape/demo/ellipse.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/shape/demo/ellipse.js","order":1,"filename":"ellipse.js","title":{"zh":"椭圆","en":"Ellipse"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*8eoKRbfOwgAAAAAAAAAAAABkARQnAQ","source":"import { Canvas, CanvasEvent, Ellipse } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf',\n    },\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\nconst ellipse = new Ellipse({\n  style: {\n    cx: 300,\n    cy: 200,\n    rx: 100,\n    ry: 150,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 4,\n    cursor: 'pointer',\n  },\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  canvas.appendChild(ellipse);\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n\nconst ellipseFolder = gui.addFolder('ellipse');\nconst ellipseConfig = {\n  cx: 300,\n  cy: 200,\n  rx: 100,\n  ry: 150,\n  fill: '#1890FF',\n  stroke: '#F04864',\n  lineWidth: 4,\n  fillOpacity: 1,\n  strokeOpacity: 1,\n  increasedLineWidthForHitTesting: 0,\n  cursor: 'pointer',\n  shadowColor: '#fff',\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  pointerEvents: 'auto',\n  visibility: 'visible',\n};\nellipseFolder.add(ellipseConfig, 'cx', 0, 600).onChange((cx) => {\n  ellipse.style.cx = cx;\n});\nellipseFolder.add(ellipseConfig, 'cy', 0, 600).onChange((cy) => {\n  ellipse.style.cy = cy;\n});\nellipseFolder.add(ellipseConfig, 'rx', 50, 200).onChange((rx) => {\n  ellipse.style.rx = rx;\n});\nellipseFolder.add(ellipseConfig, 'ry', 50, 200).onChange((ry) => {\n  ellipse.style.ry = ry;\n});\nellipseFolder.addColor(ellipseConfig, 'fill').onChange((color) => {\n  ellipse.style.fill = color;\n});\nellipseFolder.addColor(ellipseConfig, 'stroke').onChange((color) => {\n  ellipse.style.stroke = color;\n});\nellipseFolder.add(ellipseConfig, 'lineWidth', 1, 20).onChange((lineWidth) => {\n  ellipse.style.lineWidth = lineWidth;\n});\nellipseFolder.add(ellipseConfig, 'fillOpacity', 0, 1, 0.1).onChange((opacity) => {\n  ellipse.style.fillOpacity = opacity;\n});\nellipseFolder.add(ellipseConfig, 'strokeOpacity', 0, 1, 0.1).onChange((opacity) => {\n  ellipse.style.strokeOpacity = opacity;\n});\nellipseFolder.open();\nellipseFolder\n  .add(ellipseConfig, 'increasedLineWidthForHitTesting', 0, 200)\n  .onChange((increasedLineWidthForHitTesting) => {\n    ellipse.style.increasedLineWidthForHitTesting = increasedLineWidthForHitTesting;\n  });\nellipseFolder\n  .add(ellipseConfig, 'cursor', ['default', 'pointer', 'help', 'progress', 'text', 'move'])\n  .onChange((cursor) => {\n    ellipse.style.cursor = cursor;\n  });\nellipseFolder.addColor(ellipseConfig, 'shadowColor').onChange((color) => {\n  ellipse.attr('shadowColor', color);\n});\nellipseFolder.add(ellipseConfig, 'shadowBlur', 0, 100).onChange((shadowBlur) => {\n  ellipse.style.shadowBlur = shadowBlur;\n});\nellipseFolder.add(ellipseConfig, 'shadowOffsetX', -50, 50).onChange((shadowOffsetX) => {\n  ellipse.style.shadowOffsetX = shadowOffsetX;\n});\nellipseFolder.add(ellipseConfig, 'shadowOffsetY', -50, 50).onChange((shadowOffsetY) => {\n  ellipse.style.shadowOffsetY = shadowOffsetY;\n});\nellipseFolder\n  .add(ellipseConfig, 'pointerEvents', [\n    'none',\n    'auto',\n    'stroke',\n    'fill',\n    'painted',\n    'visible',\n    'visiblestroke',\n    'visiblefill',\n    'visiblepainted',\n    'all',\n  ])\n  .onChange((pointerEvents) => {\n    ellipse.style.pointerEvents = pointerEvents;\n  });\nellipseFolder.add(ellipseConfig, 'visibility', ['visible', 'hidden']).onChange((visibility) => {\n  ellipse.style.visibility = visibility;\n});\n\nconst transformFolder = gui.addFolder('transform');\nconst transformConfig = {\n  localPositionX: 300,\n  localPositionY: 200,\n  localScale: 1,\n  localEulerAngles: 0,\n  transformOrigin: 'center',\n  anchorX: 0.5,\n  anchorY: 0.5,\n};\ntransformFolder\n  .add(transformConfig, 'transformOrigin', [\n    'left top',\n    'center',\n    'right bottom',\n    '50% 50%',\n    '50px 50px',\n  ])\n  .onChange((transformOrigin) => {\n    ellipse.style.transformOrigin = transformOrigin;\n  });\ntransformFolder.add(transformConfig, 'localPositionX', 0, 600).onChange((localPositionX) => {\n  const [lx, ly] = ellipse.getLocalPosition();\n  ellipse.setLocalPosition(localPositionX, ly);\n});\ntransformFolder.add(transformConfig, 'localPositionY', 0, 500).onChange((localPositionY) => {\n  const [lx, ly] = ellipse.getLocalPosition();\n  ellipse.setLocalPosition(lx, localPositionY);\n});\ntransformFolder.add(transformConfig, 'localScale', 0.2, 5).onChange((localScale) => {\n  ellipse.setLocalScale(localScale);\n});\ntransformFolder.add(transformConfig, 'localEulerAngles', 0, 360).onChange((localEulerAngles) => {\n  ellipse.setLocalEulerAngles(localEulerAngles);\n});\ntransformFolder.add(transformConfig, 'anchorX', 0, 1).onChange((anchorX) => {\n  ellipse.style.anchor = [anchorX, transformConfig.anchorY];\n});\ntransformFolder.add(transformConfig, 'anchorY', 0, 1).onChange((anchorY) => {\n  ellipse.style.anchor = [transformConfig.anchorX, anchorY];\n});\ntransformFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.ellipse = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf'\n    }, {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  var ellipse = new _g.Ellipse({\n    style: {\n      cx: 300,\n      cy: 200,\n      rx: 100,\n      ry: 150,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n      cursor: 'pointer'\n    }\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    canvas.appendChild(ellipse);\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n  var ellipseFolder = gui.addFolder('ellipse');\n  var ellipseConfig = {\n    cx: 300,\n    cy: 200,\n    rx: 100,\n    ry: 150,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 4,\n    fillOpacity: 1,\n    strokeOpacity: 1,\n    increasedLineWidthForHitTesting: 0,\n    cursor: 'pointer',\n    shadowColor: '#fff',\n    shadowBlur: 0,\n    shadowOffsetX: 0,\n    shadowOffsetY: 0,\n    pointerEvents: 'auto',\n    visibility: 'visible'\n  };\n  ellipseFolder.add(ellipseConfig, 'cx', 0, 600).onChange(function (cx) {\n    ellipse.style.cx = cx;\n  });\n  ellipseFolder.add(ellipseConfig, 'cy', 0, 600).onChange(function (cy) {\n    ellipse.style.cy = cy;\n  });\n  ellipseFolder.add(ellipseConfig, 'rx', 50, 200).onChange(function (rx) {\n    ellipse.style.rx = rx;\n  });\n  ellipseFolder.add(ellipseConfig, 'ry', 50, 200).onChange(function (ry) {\n    ellipse.style.ry = ry;\n  });\n  ellipseFolder.addColor(ellipseConfig, 'fill').onChange(function (color) {\n    ellipse.style.fill = color;\n  });\n  ellipseFolder.addColor(ellipseConfig, 'stroke').onChange(function (color) {\n    ellipse.style.stroke = color;\n  });\n  ellipseFolder.add(ellipseConfig, 'lineWidth', 1, 20).onChange(function (lineWidth) {\n    ellipse.style.lineWidth = lineWidth;\n  });\n  ellipseFolder.add(ellipseConfig, 'fillOpacity', 0, 1, 0.1).onChange(function (opacity) {\n    ellipse.style.fillOpacity = opacity;\n  });\n  ellipseFolder.add(ellipseConfig, 'strokeOpacity', 0, 1, 0.1).onChange(function (opacity) {\n    ellipse.style.strokeOpacity = opacity;\n  });\n  ellipseFolder.open();\n  ellipseFolder.add(ellipseConfig, 'increasedLineWidthForHitTesting', 0, 200).onChange(function (increasedLineWidthForHitTesting) {\n    ellipse.style.increasedLineWidthForHitTesting = increasedLineWidthForHitTesting;\n  });\n  ellipseFolder.add(ellipseConfig, 'cursor', ['default', 'pointer', 'help', 'progress', 'text', 'move']).onChange(function (cursor) {\n    ellipse.style.cursor = cursor;\n  });\n  ellipseFolder.addColor(ellipseConfig, 'shadowColor').onChange(function (color) {\n    ellipse.attr('shadowColor', color);\n  });\n  ellipseFolder.add(ellipseConfig, 'shadowBlur', 0, 100).onChange(function (shadowBlur) {\n    ellipse.style.shadowBlur = shadowBlur;\n  });\n  ellipseFolder.add(ellipseConfig, 'shadowOffsetX', -50, 50).onChange(function (shadowOffsetX) {\n    ellipse.style.shadowOffsetX = shadowOffsetX;\n  });\n  ellipseFolder.add(ellipseConfig, 'shadowOffsetY', -50, 50).onChange(function (shadowOffsetY) {\n    ellipse.style.shadowOffsetY = shadowOffsetY;\n  });\n  ellipseFolder.add(ellipseConfig, 'pointerEvents', ['none', 'auto', 'stroke', 'fill', 'painted', 'visible', 'visiblestroke', 'visiblefill', 'visiblepainted', 'all']).onChange(function (pointerEvents) {\n    ellipse.style.pointerEvents = pointerEvents;\n  });\n  ellipseFolder.add(ellipseConfig, 'visibility', ['visible', 'hidden']).onChange(function (visibility) {\n    ellipse.style.visibility = visibility;\n  });\n  var transformFolder = gui.addFolder('transform');\n  var transformConfig = {\n    localPositionX: 300,\n    localPositionY: 200,\n    localScale: 1,\n    localEulerAngles: 0,\n    transformOrigin: 'center',\n    anchorX: 0.5,\n    anchorY: 0.5\n  };\n  transformFolder.add(transformConfig, 'transformOrigin', ['left top', 'center', 'right bottom', '50% 50%', '50px 50px']).onChange(function (transformOrigin) {\n    ellipse.style.transformOrigin = transformOrigin;\n  });\n  transformFolder.add(transformConfig, 'localPositionX', 0, 600).onChange(function (localPositionX) {\n    var _ellipse$getLocalPosi = ellipse.getLocalPosition(),\n        _ellipse$getLocalPosi2 = _slicedToArray(_ellipse$getLocalPosi, 2),\n        lx = _ellipse$getLocalPosi2[0],\n        ly = _ellipse$getLocalPosi2[1];\n\n    ellipse.setLocalPosition(localPositionX, ly);\n  });\n  transformFolder.add(transformConfig, 'localPositionY', 0, 500).onChange(function (localPositionY) {\n    var _ellipse$getLocalPosi3 = ellipse.getLocalPosition(),\n        _ellipse$getLocalPosi4 = _slicedToArray(_ellipse$getLocalPosi3, 2),\n        lx = _ellipse$getLocalPosi4[0],\n        ly = _ellipse$getLocalPosi4[1];\n\n    ellipse.setLocalPosition(lx, localPositionY);\n  });\n  transformFolder.add(transformConfig, 'localScale', 0.2, 5).onChange(function (localScale) {\n    ellipse.setLocalScale(localScale);\n  });\n  transformFolder.add(transformConfig, 'localEulerAngles', 0, 360).onChange(function (localEulerAngles) {\n    ellipse.setLocalEulerAngles(localEulerAngles);\n  });\n  transformFolder.add(transformConfig, 'anchorX', 0, 1).onChange(function (anchorX) {\n    ellipse.style.anchor = [anchorX, transformConfig.anchorY];\n  });\n  transformFolder.add(transformConfig, 'anchorY', 0, 1).onChange(function (anchorY) {\n    ellipse.style.anchor = [transformConfig.anchorX, anchorY];\n  });\n  transformFolder.open();\n});"},{"relativePath":"shape/demo/image.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/shape/demo/image.js","order":3,"filename":"image.js","title":{"zh":"图片","en":"Image"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*OIAmRpwhNWYAAAAAAAAAAABkARQnAQ","source":"import { Canvas, CanvasEvent, Image } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf',\n    },\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\nconst image = new Image({\n  style: {\n    x: 200,\n    y: 100,\n    width: 200,\n    height: 200,\n    img: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ',\n    cursor: 'pointer',\n  },\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  canvas.appendChild(image);\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n\nconst imageFolder = gui.addFolder('image');\nconst config = {\n  x: 200,\n  y: 100,\n  width: 200,\n  height: 200,\n  opacity: 1,\n  src: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ',\n  pointerEvents: 'auto',\n  visibility: 'visible',\n};\nimageFolder.add(config, 'x', 0, 400).onChange((x) => {\n  image.style.x = x;\n});\nimageFolder.add(config, 'y', 0, 400).onChange((y) => {\n  image.style.y = y;\n});\nimageFolder.add(config, 'width', 0, 400).onChange((width) => {\n  image.style.width = width;\n});\nimageFolder.add(config, 'height', 0, 400).onChange((height) => {\n  image.style.height = height;\n});\nimageFolder.add(config, 'opacity', 0, 1, 0.1).onChange((opacity) => {\n  image.style.opacity = opacity;\n});\nimageFolder\n  .add(config, 'src', [\n    'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ',\n    'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*8eoKRbfOwgAAAAAAAAAAAABkARQnAQ',\n  ])\n  .onChange((src) => {\n    image.style.img = src;\n  });\nimageFolder\n  .add(config, 'pointerEvents', [\n    'none',\n    'auto',\n    'stroke',\n    'fill',\n    'painted',\n    'visible',\n    'visiblestroke',\n    'visiblefill',\n    'visiblepainted',\n    'all',\n  ])\n  .onChange((pointerEvents) => {\n    image.style.pointerEvents = pointerEvents;\n  });\nimageFolder.add(config, 'visibility', ['visible', 'hidden']).onChange((visibility) => {\n  image.style.visibility = visibility;\n});\nimageFolder.open();\n\nconst transformFolder = gui.addFolder('transform');\nconst transformConfig = {\n  localPositionX: 200,\n  localPositionY: 100,\n  localScaleX: 1,\n  localScaleY: 1,\n  localEulerAngles: 0,\n  skewX: 0,\n  skewY: 0,\n  transformOrigin: 'left top',\n  anchorX: 0,\n  anchorY: 0,\n};\ntransformFolder\n  .add(transformConfig, 'transformOrigin', [\n    'left top',\n    'center',\n    'right bottom',\n    '50% 50%',\n    '50px 50px',\n  ])\n  .onChange((transformOrigin) => {\n    image.style.transformOrigin = transformOrigin;\n  });\ntransformFolder.add(transformConfig, 'localPositionX', 0, 600).onChange((localPositionX) => {\n  const [lx, ly] = image.getLocalPosition();\n  image.setLocalPosition(localPositionX, ly);\n});\ntransformFolder.add(transformConfig, 'localPositionY', 0, 500).onChange((localPositionY) => {\n  const [lx, ly] = image.getLocalPosition();\n  image.setLocalPosition(lx, localPositionY);\n});\ntransformFolder.add(transformConfig, 'localScaleX', -5, 5).onChange((localScaleX) => {\n  if (localScaleX === 0) {\n    localScaleX = 0.0001;\n  }\n  image.setLocalScale(localScaleX, transformConfig.localScaleY);\n});\ntransformFolder.add(transformConfig, 'localScaleY', -5, 5).onChange((localScaleY) => {\n  if (localScaleY === 0) {\n    localScaleY = 0.0001;\n  }\n  image.setLocalScale(transformConfig.localScaleX, localScaleY);\n});\ntransformFolder.add(transformConfig, 'localEulerAngles', 0, 360).onChange((localEulerAngles) => {\n  image.setLocalEulerAngles(localEulerAngles);\n});\ntransformFolder.add(transformConfig, 'skewX', -180, 180).onChange((skewX) => {\n  image.setLocalSkew(skewX * (Math.PI / 180), transformConfig.skewY * (Math.PI / 180));\n});\ntransformFolder.add(transformConfig, 'skewY', -180, 180).onChange((skewY) => {\n  image.setLocalSkew(transformConfig.skewX * (Math.PI / 180), skewY * (Math.PI / 180));\n});\ntransformFolder.add(transformConfig, 'anchorX', 0, 1).onChange((anchorX) => {\n  image.style.anchor = [anchorX, transformConfig.anchorY];\n});\ntransformFolder.add(transformConfig, 'anchorY', 0, 1).onChange((anchorY) => {\n  image.style.anchor = [transformConfig.anchorX, anchorY];\n});\ntransformFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.image = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf'\n    }, {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  var image = new _g.Image({\n    style: {\n      x: 200,\n      y: 100,\n      width: 200,\n      height: 200,\n      img: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ',\n      cursor: 'pointer'\n    }\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    canvas.appendChild(image);\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n  var imageFolder = gui.addFolder('image');\n  var config = {\n    x: 200,\n    y: 100,\n    width: 200,\n    height: 200,\n    opacity: 1,\n    src: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ',\n    pointerEvents: 'auto',\n    visibility: 'visible'\n  };\n  imageFolder.add(config, 'x', 0, 400).onChange(function (x) {\n    image.style.x = x;\n  });\n  imageFolder.add(config, 'y', 0, 400).onChange(function (y) {\n    image.style.y = y;\n  });\n  imageFolder.add(config, 'width', 0, 400).onChange(function (width) {\n    image.style.width = width;\n  });\n  imageFolder.add(config, 'height', 0, 400).onChange(function (height) {\n    image.style.height = height;\n  });\n  imageFolder.add(config, 'opacity', 0, 1, 0.1).onChange(function (opacity) {\n    image.style.opacity = opacity;\n  });\n  imageFolder.add(config, 'src', ['https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ', 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*8eoKRbfOwgAAAAAAAAAAAABkARQnAQ']).onChange(function (src) {\n    image.style.img = src;\n  });\n  imageFolder.add(config, 'pointerEvents', ['none', 'auto', 'stroke', 'fill', 'painted', 'visible', 'visiblestroke', 'visiblefill', 'visiblepainted', 'all']).onChange(function (pointerEvents) {\n    image.style.pointerEvents = pointerEvents;\n  });\n  imageFolder.add(config, 'visibility', ['visible', 'hidden']).onChange(function (visibility) {\n    image.style.visibility = visibility;\n  });\n  imageFolder.open();\n  var transformFolder = gui.addFolder('transform');\n  var transformConfig = {\n    localPositionX: 200,\n    localPositionY: 100,\n    localScaleX: 1,\n    localScaleY: 1,\n    localEulerAngles: 0,\n    skewX: 0,\n    skewY: 0,\n    transformOrigin: 'left top',\n    anchorX: 0,\n    anchorY: 0\n  };\n  transformFolder.add(transformConfig, 'transformOrigin', ['left top', 'center', 'right bottom', '50% 50%', '50px 50px']).onChange(function (transformOrigin) {\n    image.style.transformOrigin = transformOrigin;\n  });\n  transformFolder.add(transformConfig, 'localPositionX', 0, 600).onChange(function (localPositionX) {\n    var _image$getLocalPositi = image.getLocalPosition(),\n        _image$getLocalPositi2 = _slicedToArray(_image$getLocalPositi, 2),\n        lx = _image$getLocalPositi2[0],\n        ly = _image$getLocalPositi2[1];\n\n    image.setLocalPosition(localPositionX, ly);\n  });\n  transformFolder.add(transformConfig, 'localPositionY', 0, 500).onChange(function (localPositionY) {\n    var _image$getLocalPositi3 = image.getLocalPosition(),\n        _image$getLocalPositi4 = _slicedToArray(_image$getLocalPositi3, 2),\n        lx = _image$getLocalPositi4[0],\n        ly = _image$getLocalPositi4[1];\n\n    image.setLocalPosition(lx, localPositionY);\n  });\n  transformFolder.add(transformConfig, 'localScaleX', -5, 5).onChange(function (localScaleX) {\n    if (localScaleX === 0) {\n      localScaleX = 0.0001;\n    }\n\n    image.setLocalScale(localScaleX, transformConfig.localScaleY);\n  });\n  transformFolder.add(transformConfig, 'localScaleY', -5, 5).onChange(function (localScaleY) {\n    if (localScaleY === 0) {\n      localScaleY = 0.0001;\n    }\n\n    image.setLocalScale(transformConfig.localScaleX, localScaleY);\n  });\n  transformFolder.add(transformConfig, 'localEulerAngles', 0, 360).onChange(function (localEulerAngles) {\n    image.setLocalEulerAngles(localEulerAngles);\n  });\n  transformFolder.add(transformConfig, 'skewX', -180, 180).onChange(function (skewX) {\n    image.setLocalSkew(skewX * (Math.PI / 180), transformConfig.skewY * (Math.PI / 180));\n  });\n  transformFolder.add(transformConfig, 'skewY', -180, 180).onChange(function (skewY) {\n    image.setLocalSkew(transformConfig.skewX * (Math.PI / 180), skewY * (Math.PI / 180));\n  });\n  transformFolder.add(transformConfig, 'anchorX', 0, 1).onChange(function (anchorX) {\n    image.style.anchor = [anchorX, transformConfig.anchorY];\n  });\n  transformFolder.add(transformConfig, 'anchorY', 0, 1).onChange(function (anchorY) {\n    image.style.anchor = [transformConfig.anchorX, anchorY];\n  });\n  transformFolder.open();\n});"},{"relativePath":"shape/demo/circle.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/shape/demo/circle.js","order":0,"filename":"circle.js","title":{"zh":"圆","en":"Circle"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*FfHBTr2ACAkAAAAAAAAAAABkARQnAQ","source":"import { Canvas, CanvasEvent, Circle } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst svgRenderer = new SVGRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst webgpuRenderer = new WebGPURenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf',\n    },\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\n// create a circle\nconst circle = new Circle({\n  style: {\n    cx: 300,\n    cy: 200,\n    r: 100,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 4,\n    shadowColor: 'black',\n    shadowBlur: 20,\n    cursor: 'pointer',\n  },\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  // add a circle to canvas\n  canvas.appendChild(circle);\n});\n\n// use AntV G devtools\nwindow.__g_instances__ = [canvas];\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n\nconst circleFolder = gui.addFolder('circle');\nconst circleConfig = {\n  cx: 300,\n  cy: 200,\n  r: 100,\n  fill: '#1890FF',\n  stroke: '#F04864',\n  lineWidth: 4,\n  lineDash: 0,\n  lineDashOffset: 0,\n  fillOpacity: 1,\n  strokeOpacity: 1,\n  shadowType: 'outer',\n  shadowColor: '#000',\n  shadowBlur: 20,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  increasedLineWidthForHitTesting: 0,\n  cursor: 'pointer',\n  pointerEvents: 'auto',\n  visibility: 'visible',\n};\ncircleFolder.add(circleConfig, 'cx', 0, 600).onChange((cx) => {\n  circle.style.cx = cx;\n});\ncircleFolder.add(circleConfig, 'cy', 0, 600).onChange((cy) => {\n  circle.style.cy = cy;\n});\ncircleFolder.add(circleConfig, 'r', 50, 200).onChange((r) => {\n  circle.style.r = r;\n});\ncircleFolder.addColor(circleConfig, 'fill').onChange((color) => {\n  circle.style.fill = color;\n});\ncircleFolder.addColor(circleConfig, 'stroke').onChange((color) => {\n  circle.attr('stroke', color);\n});\ncircleFolder.add(circleConfig, 'shadowType', ['inner', 'outer']).onChange((shadowType) => {\n  circle.attr('shadowType', shadowType);\n});\ncircleFolder.addColor(circleConfig, 'shadowColor').onChange((color) => {\n  circle.attr('shadowColor', color);\n});\ncircleFolder.add(circleConfig, 'shadowBlur', 0, 100).onChange((shadowBlur) => {\n  circle.style.shadowBlur = shadowBlur;\n});\ncircleFolder.add(circleConfig, 'shadowOffsetX', -50, 50).onChange((shadowOffsetX) => {\n  circle.style.shadowOffsetX = shadowOffsetX;\n});\ncircleFolder.add(circleConfig, 'shadowOffsetY', -50, 50).onChange((shadowOffsetY) => {\n  circle.style.shadowOffsetY = shadowOffsetY;\n});\ncircleFolder.add(circleConfig, 'lineWidth', 1, 20).onChange((lineWidth) => {\n  circle.style.lineWidth = lineWidth;\n});\ncircleFolder.add(circleConfig, 'lineDash', 0, 100).onChange((lineDash) => {\n  circle.style.lineDash = [lineDash];\n});\ncircleFolder.add(circleConfig, 'lineDashOffset', 0, 100).onChange((lineDashOffset) => {\n  circle.style.lineDashOffset = lineDashOffset;\n});\ncircleFolder.add(circleConfig, 'fillOpacity', 0, 1, 0.1).onChange((opacity) => {\n  circle.style.fillOpacity = opacity;\n});\ncircleFolder.add(circleConfig, 'strokeOpacity', 0, 1, 0.1).onChange((opacity) => {\n  circle.style.strokeOpacity = opacity;\n});\ncircleFolder\n  .add(circleConfig, 'increasedLineWidthForHitTesting', 0, 200)\n  .onChange((increasedLineWidthForHitTesting) => {\n    circle.style.increasedLineWidthForHitTesting = increasedLineWidthForHitTesting;\n  });\ncircleFolder\n  .add(circleConfig, 'cursor', ['default', 'pointer', 'help', 'progress', 'text', 'move'])\n  .onChange((cursor) => {\n    circle.style.cursor = cursor;\n  });\ncircleFolder\n  .add(circleConfig, 'pointerEvents', [\n    'none',\n    'auto',\n    'stroke',\n    'fill',\n    'painted',\n    'visible',\n    'visiblestroke',\n    'visiblefill',\n    'visiblepainted',\n    'all',\n  ])\n  .onChange((pointerEvents) => {\n    circle.style.pointerEvents = pointerEvents;\n  });\ncircleFolder.add(circleConfig, 'visibility', ['visible', 'hidden']).onChange((visibility) => {\n  circle.style.visibility = visibility;\n});\n\nconst transformFolder = gui.addFolder('transform');\nconst transformConfig = {\n  localPositionX: 300,\n  localPositionY: 200,\n  localScale: 1,\n  localEulerAngles: 0,\n  transformOrigin: 'center',\n  anchorX: 0.5,\n  anchorY: 0.5,\n};\ntransformFolder\n  .add(transformConfig, 'transformOrigin', [\n    'left top',\n    'center',\n    'right bottom',\n    '50% 50%',\n    '50px 50px',\n  ])\n  .onChange((transformOrigin) => {\n    circle.style.transformOrigin = transformOrigin;\n  });\ntransformFolder.add(transformConfig, 'localPositionX', 0, 600).onChange((localPositionX) => {\n  const [lx, ly] = circle.getLocalPosition();\n  circle.setLocalPosition(localPositionX, ly);\n});\ntransformFolder.add(transformConfig, 'localPositionY', 0, 500).onChange((localPositionY) => {\n  const [lx, ly] = circle.getLocalPosition();\n  circle.setLocalPosition(lx, localPositionY);\n});\ntransformFolder.add(transformConfig, 'localScale', 0.2, 5).onChange((localScale) => {\n  circle.setLocalScale(localScale);\n});\ntransformFolder.add(transformConfig, 'localEulerAngles', 0, 360).onChange((localEulerAngles) => {\n  circle.setLocalEulerAngles(localEulerAngles);\n});\ntransformFolder.add(transformConfig, 'anchorX', 0, 1).onChange((anchorX) => {\n  circle.style.anchor = [anchorX, transformConfig.anchorY];\n});\ntransformFolder.add(transformConfig, 'anchorY', 0, 1).onChange((anchorY) => {\n  circle.style.anchor = [transformConfig.anchorX, anchorY];\n});\ntransformFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.circle = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var webgpuRenderer = new _gWebgpu.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf'\n    }, {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  }); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  }); // create a circle\n\n  var circle = new _g.Circle({\n    style: {\n      cx: 300,\n      cy: 200,\n      r: 100,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n      shadowColor: 'black',\n      shadowBlur: 20,\n      cursor: 'pointer'\n    }\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    // add a circle to canvas\n    canvas.appendChild(circle);\n  }); // use AntV G devtools\n\n  window.__g_instances__ = [canvas]; // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n  var circleFolder = gui.addFolder('circle');\n  var circleConfig = {\n    cx: 300,\n    cy: 200,\n    r: 100,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 4,\n    lineDash: 0,\n    lineDashOffset: 0,\n    fillOpacity: 1,\n    strokeOpacity: 1,\n    shadowType: 'outer',\n    shadowColor: '#000',\n    shadowBlur: 20,\n    shadowOffsetX: 0,\n    shadowOffsetY: 0,\n    increasedLineWidthForHitTesting: 0,\n    cursor: 'pointer',\n    pointerEvents: 'auto',\n    visibility: 'visible'\n  };\n  circleFolder.add(circleConfig, 'cx', 0, 600).onChange(function (cx) {\n    circle.style.cx = cx;\n  });\n  circleFolder.add(circleConfig, 'cy', 0, 600).onChange(function (cy) {\n    circle.style.cy = cy;\n  });\n  circleFolder.add(circleConfig, 'r', 50, 200).onChange(function (r) {\n    circle.style.r = r;\n  });\n  circleFolder.addColor(circleConfig, 'fill').onChange(function (color) {\n    circle.style.fill = color;\n  });\n  circleFolder.addColor(circleConfig, 'stroke').onChange(function (color) {\n    circle.attr('stroke', color);\n  });\n  circleFolder.add(circleConfig, 'shadowType', ['inner', 'outer']).onChange(function (shadowType) {\n    circle.attr('shadowType', shadowType);\n  });\n  circleFolder.addColor(circleConfig, 'shadowColor').onChange(function (color) {\n    circle.attr('shadowColor', color);\n  });\n  circleFolder.add(circleConfig, 'shadowBlur', 0, 100).onChange(function (shadowBlur) {\n    circle.style.shadowBlur = shadowBlur;\n  });\n  circleFolder.add(circleConfig, 'shadowOffsetX', -50, 50).onChange(function (shadowOffsetX) {\n    circle.style.shadowOffsetX = shadowOffsetX;\n  });\n  circleFolder.add(circleConfig, 'shadowOffsetY', -50, 50).onChange(function (shadowOffsetY) {\n    circle.style.shadowOffsetY = shadowOffsetY;\n  });\n  circleFolder.add(circleConfig, 'lineWidth', 1, 20).onChange(function (lineWidth) {\n    circle.style.lineWidth = lineWidth;\n  });\n  circleFolder.add(circleConfig, 'lineDash', 0, 100).onChange(function (lineDash) {\n    circle.style.lineDash = [lineDash];\n  });\n  circleFolder.add(circleConfig, 'lineDashOffset', 0, 100).onChange(function (lineDashOffset) {\n    circle.style.lineDashOffset = lineDashOffset;\n  });\n  circleFolder.add(circleConfig, 'fillOpacity', 0, 1, 0.1).onChange(function (opacity) {\n    circle.style.fillOpacity = opacity;\n  });\n  circleFolder.add(circleConfig, 'strokeOpacity', 0, 1, 0.1).onChange(function (opacity) {\n    circle.style.strokeOpacity = opacity;\n  });\n  circleFolder.add(circleConfig, 'increasedLineWidthForHitTesting', 0, 200).onChange(function (increasedLineWidthForHitTesting) {\n    circle.style.increasedLineWidthForHitTesting = increasedLineWidthForHitTesting;\n  });\n  circleFolder.add(circleConfig, 'cursor', ['default', 'pointer', 'help', 'progress', 'text', 'move']).onChange(function (cursor) {\n    circle.style.cursor = cursor;\n  });\n  circleFolder.add(circleConfig, 'pointerEvents', ['none', 'auto', 'stroke', 'fill', 'painted', 'visible', 'visiblestroke', 'visiblefill', 'visiblepainted', 'all']).onChange(function (pointerEvents) {\n    circle.style.pointerEvents = pointerEvents;\n  });\n  circleFolder.add(circleConfig, 'visibility', ['visible', 'hidden']).onChange(function (visibility) {\n    circle.style.visibility = visibility;\n  });\n  var transformFolder = gui.addFolder('transform');\n  var transformConfig = {\n    localPositionX: 300,\n    localPositionY: 200,\n    localScale: 1,\n    localEulerAngles: 0,\n    transformOrigin: 'center',\n    anchorX: 0.5,\n    anchorY: 0.5\n  };\n  transformFolder.add(transformConfig, 'transformOrigin', ['left top', 'center', 'right bottom', '50% 50%', '50px 50px']).onChange(function (transformOrigin) {\n    circle.style.transformOrigin = transformOrigin;\n  });\n  transformFolder.add(transformConfig, 'localPositionX', 0, 600).onChange(function (localPositionX) {\n    var _circle$getLocalPosit = circle.getLocalPosition(),\n        _circle$getLocalPosit2 = _slicedToArray(_circle$getLocalPosit, 2),\n        lx = _circle$getLocalPosit2[0],\n        ly = _circle$getLocalPosit2[1];\n\n    circle.setLocalPosition(localPositionX, ly);\n  });\n  transformFolder.add(transformConfig, 'localPositionY', 0, 500).onChange(function (localPositionY) {\n    var _circle$getLocalPosit3 = circle.getLocalPosition(),\n        _circle$getLocalPosit4 = _slicedToArray(_circle$getLocalPosit3, 2),\n        lx = _circle$getLocalPosit4[0],\n        ly = _circle$getLocalPosit4[1];\n\n    circle.setLocalPosition(lx, localPositionY);\n  });\n  transformFolder.add(transformConfig, 'localScale', 0.2, 5).onChange(function (localScale) {\n    circle.setLocalScale(localScale);\n  });\n  transformFolder.add(transformConfig, 'localEulerAngles', 0, 360).onChange(function (localEulerAngles) {\n    circle.setLocalEulerAngles(localEulerAngles);\n  });\n  transformFolder.add(transformConfig, 'anchorX', 0, 1).onChange(function (anchorX) {\n    circle.style.anchor = [anchorX, transformConfig.anchorY];\n  });\n  transformFolder.add(transformConfig, 'anchorY', 0, 1).onChange(function (anchorY) {\n    circle.style.anchor = [transformConfig.anchorX, anchorY];\n  });\n  transformFolder.open();\n});"},{"relativePath":"shape/demo/marker.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/shape/demo/marker.js","order":15,"filename":"marker.js","title":{"zh":"标记图形","en":"Marker"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*X5W_TYz-2SIAAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent, Circle, Image, Line, Path, Rect } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Plugin } from '@antv/g-plugin-dragndrop';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n/**\n * Draw arrows with marker, ported from\n * @see https://g6.antv.vision/zh/examples/item/arrows#built-in-arrows\n */\n\nconst plugin = new Plugin();\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\ncanvasRenderer.registerPlugin(plugin);\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf',\n    },\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\ncanvaskitRenderer.registerPlugin(plugin);\nconst webglRenderer = new WebGLRenderer();\nwebglRenderer.registerPlugin(plugin);\nconst svgRenderer = new SVGRenderer();\nsvgRenderer.registerPlugin(plugin);\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\n/**\n * Arrow with triangle marker\n */\nconst arrowMarker = new Path({\n  style: {\n    path: 'M 10,10 L -10,0 L 10,-10 Z',\n    stroke: '#1890FF',\n    anchor: '0.5 0.5',\n    transformOrigin: 'center',\n  },\n});\nconst handle1 = new Circle({\n  id: 'handle1',\n  style: {\n    draggable: true,\n    cursor: 'move',\n    fill: '#DEE9FF',\n    stroke: '#5B8FF9',\n    r: 10,\n    cx: 100,\n    cy: 50,\n  },\n});\nconst handle2 = handle1.cloneNode();\nhandle2.id = 'handle2';\nhandle2.style.cx = 300;\nhandle2.style.cy = 50;\nconst arrow1 = new Line({\n  style: {\n    x1: 100,\n    y1: 50,\n    x2: 300,\n    y2: 50,\n    stroke: '#F6BD16',\n    lineWidth: 6,\n    markerEnd: arrowMarker,\n    markerEndOffset: 28,\n  },\n});\n\n/**\n * Arrow with rect marker\n */\nconst rectMarker = new Rect({\n  style: {\n    width: 20,\n    height: 20,\n    fill: '#F6BD16',\n    anchor: '0.5 0.5',\n    transformOrigin: 'center',\n  },\n});\nconst handle3 = handle1.cloneNode();\nhandle3.id = 'handle3';\nhandle3.style.cx = 100;\nhandle3.style.cy = 150;\nconst handle4 = handle1.cloneNode();\nhandle4.id = 'handle4';\nhandle4.style.cx = 300;\nhandle4.style.cy = 150;\nconst arrow2 = new Line({\n  style: {\n    x1: 100,\n    y1: 150,\n    x2: 300,\n    y2: 150,\n    stroke: '#F6BD16',\n    lineWidth: 6,\n    markerEnd: rectMarker,\n    markerEndOffset: 28,\n  },\n});\n\n/**\n * Arrow with image marker\n */\nconst imageMarker = new Image({\n  style: {\n    width: 50,\n    height: 50,\n    src: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ',\n    anchor: '0.5 0.5',\n    transformOrigin: 'center',\n    transform: 'rotate(90deg)',\n  },\n});\nconst handle5 = handle1.cloneNode();\nhandle5.id = 'handle5';\nhandle5.style.cx = 100;\nhandle5.style.cy = 250;\nconst handle6 = handle1.cloneNode();\nhandle6.id = 'handle6';\nhandle6.style.cx = 300;\nhandle6.style.cy = 250;\nconst arrow3 = new Line({\n  style: {\n    x1: 100,\n    y1: 250,\n    x2: 300,\n    y2: 250,\n    stroke: '#F6BD16',\n    lineWidth: 6,\n    markerEnd: imageMarker,\n    markerEndOffset: 40,\n  },\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  canvas.appendChild(arrow1);\n  canvas.appendChild(handle1);\n  canvas.appendChild(handle2);\n\n  canvas.appendChild(arrow2);\n  canvas.appendChild(handle3);\n  canvas.appendChild(handle4);\n\n  canvas.appendChild(arrow3);\n  canvas.appendChild(handle5);\n  canvas.appendChild(handle6);\n\n  let shiftX = 0;\n  let shiftY = 0;\n  function moveAt(target, canvasX, canvasY) {\n    const newPosX = canvasX - shiftX;\n    const newPosY = canvasY - shiftY;\n    target.setPosition(newPosX, newPosY);\n\n    // re-define arrow\n    if (target.id === 'handle1') {\n      arrow1.style.x1 = newPosX;\n      arrow1.style.y1 = newPosY;\n    } else if (target.id === 'handle2') {\n      arrow1.style.x2 = newPosX;\n      arrow1.style.y2 = newPosY;\n    } else if (target.id === 'handle3') {\n      arrow2.style.x1 = newPosX;\n      arrow2.style.y1 = newPosY;\n    } else if (target.id === 'handle4') {\n      arrow2.style.x2 = newPosX;\n      arrow2.style.y2 = newPosY;\n    } else if (target.id === 'handle5') {\n      arrow3.style.x1 = newPosX;\n      arrow3.style.y1 = newPosY;\n    } else if (target.id === 'handle6') {\n      arrow3.style.x2 = newPosX;\n      arrow3.style.y2 = newPosY;\n    }\n  }\n\n  canvas.addEventListener('dragstart', function (e) {\n    const [x, y] = e.target.getPosition();\n    shiftX = e.canvasX - x;\n    shiftY = e.canvasY - y;\n\n    moveAt(e.target, e.canvasX, e.canvasY);\n  });\n  canvas.addEventListener('drag', function (e) {\n    moveAt(e.target, e.canvasX, e.canvasY);\n  });\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-plugin-dragndrop\", \"@antv/g-svg\", \"@antv/g-webgl\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-plugin-dragndrop\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gPluginDragndrop, global.gSvg, global.gWebgl, global.lilGui, global.stats);\n    global.marker = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gPluginDragndrop, _gSvg, _gWebgl, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  /**\n   * Draw arrows with marker, ported from\n   * @see https://g6.antv.vision/zh/examples/item/arrows#built-in-arrows\n   */\n  var plugin = new _gPluginDragndrop.Plugin(); // create a renderer\n\n  var canvasRenderer = new _gCanvas.Renderer();\n  canvasRenderer.registerPlugin(plugin);\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf'\n    }, {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  canvaskitRenderer.registerPlugin(plugin);\n  var webglRenderer = new _gWebgl.Renderer();\n  webglRenderer.registerPlugin(plugin);\n  var svgRenderer = new _gSvg.Renderer();\n  svgRenderer.registerPlugin(plugin); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  /**\n   * Arrow with triangle marker\n   */\n\n  var arrowMarker = new _g.Path({\n    style: {\n      path: 'M 10,10 L -10,0 L 10,-10 Z',\n      stroke: '#1890FF',\n      anchor: '0.5 0.5',\n      transformOrigin: 'center'\n    }\n  });\n  var handle1 = new _g.Circle({\n    id: 'handle1',\n    style: {\n      draggable: true,\n      cursor: 'move',\n      fill: '#DEE9FF',\n      stroke: '#5B8FF9',\n      r: 10,\n      cx: 100,\n      cy: 50\n    }\n  });\n  var handle2 = handle1.cloneNode();\n  handle2.id = 'handle2';\n  handle2.style.cx = 300;\n  handle2.style.cy = 50;\n  var arrow1 = new _g.Line({\n    style: {\n      x1: 100,\n      y1: 50,\n      x2: 300,\n      y2: 50,\n      stroke: '#F6BD16',\n      lineWidth: 6,\n      markerEnd: arrowMarker,\n      markerEndOffset: 28\n    }\n  });\n  /**\n   * Arrow with rect marker\n   */\n\n  var rectMarker = new _g.Rect({\n    style: {\n      width: 20,\n      height: 20,\n      fill: '#F6BD16',\n      anchor: '0.5 0.5',\n      transformOrigin: 'center'\n    }\n  });\n  var handle3 = handle1.cloneNode();\n  handle3.id = 'handle3';\n  handle3.style.cx = 100;\n  handle3.style.cy = 150;\n  var handle4 = handle1.cloneNode();\n  handle4.id = 'handle4';\n  handle4.style.cx = 300;\n  handle4.style.cy = 150;\n  var arrow2 = new _g.Line({\n    style: {\n      x1: 100,\n      y1: 150,\n      x2: 300,\n      y2: 150,\n      stroke: '#F6BD16',\n      lineWidth: 6,\n      markerEnd: rectMarker,\n      markerEndOffset: 28\n    }\n  });\n  /**\n   * Arrow with image marker\n   */\n\n  var imageMarker = new _g.Image({\n    style: {\n      width: 50,\n      height: 50,\n      src: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ',\n      anchor: '0.5 0.5',\n      transformOrigin: 'center',\n      transform: 'rotate(90deg)'\n    }\n  });\n  var handle5 = handle1.cloneNode();\n  handle5.id = 'handle5';\n  handle5.style.cx = 100;\n  handle5.style.cy = 250;\n  var handle6 = handle1.cloneNode();\n  handle6.id = 'handle6';\n  handle6.style.cx = 300;\n  handle6.style.cy = 250;\n  var arrow3 = new _g.Line({\n    style: {\n      x1: 100,\n      y1: 250,\n      x2: 300,\n      y2: 250,\n      stroke: '#F6BD16',\n      lineWidth: 6,\n      markerEnd: imageMarker,\n      markerEndOffset: 40\n    }\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    canvas.appendChild(arrow1);\n    canvas.appendChild(handle1);\n    canvas.appendChild(handle2);\n    canvas.appendChild(arrow2);\n    canvas.appendChild(handle3);\n    canvas.appendChild(handle4);\n    canvas.appendChild(arrow3);\n    canvas.appendChild(handle5);\n    canvas.appendChild(handle6);\n    var shiftX = 0;\n    var shiftY = 0;\n\n    function moveAt(target, canvasX, canvasY) {\n      var newPosX = canvasX - shiftX;\n      var newPosY = canvasY - shiftY;\n      target.setPosition(newPosX, newPosY); // re-define arrow\n\n      if (target.id === 'handle1') {\n        arrow1.style.x1 = newPosX;\n        arrow1.style.y1 = newPosY;\n      } else if (target.id === 'handle2') {\n        arrow1.style.x2 = newPosX;\n        arrow1.style.y2 = newPosY;\n      } else if (target.id === 'handle3') {\n        arrow2.style.x1 = newPosX;\n        arrow2.style.y1 = newPosY;\n      } else if (target.id === 'handle4') {\n        arrow2.style.x2 = newPosX;\n        arrow2.style.y2 = newPosY;\n      } else if (target.id === 'handle5') {\n        arrow3.style.x1 = newPosX;\n        arrow3.style.y1 = newPosY;\n      } else if (target.id === 'handle6') {\n        arrow3.style.x2 = newPosX;\n        arrow3.style.y2 = newPosY;\n      }\n    }\n\n    canvas.addEventListener('dragstart', function (e) {\n      var _e$target$getPosition = e.target.getPosition(),\n          _e$target$getPosition2 = _slicedToArray(_e$target$getPosition, 2),\n          x = _e$target$getPosition2[0],\n          y = _e$target$getPosition2[1];\n\n      shiftX = e.canvasX - x;\n      shiftY = e.canvasY - y;\n      moveAt(e.target, e.canvasX, e.canvasY);\n    });\n    canvas.addEventListener('drag', function (e) {\n      moveAt(e.target, e.canvasX, e.canvasY);\n    });\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n});"},{"relativePath":"shape/demo/line.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/shape/demo/line.js","order":4,"filename":"line.js","title":{"zh":"直线","en":"Line"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*7YsyTJDA_CMAAAAAAAAAAABkARQnAQ","source":"import { Canvas, CanvasEvent, Circle, Image, Line, Path } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf',\n    },\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\n// create a line\nconst line1 = new Line({\n  style: {\n    x1: 200,\n    y1: 100,\n    x2: 400,\n    y2: 100,\n    stroke: '#1890FF',\n    lineWidth: 2,\n    cursor: 'pointer',\n  },\n});\n\nconst line2 = new Line({\n  style: {\n    x1: 200,\n    y1: 150,\n    x2: 400,\n    y2: 150,\n    lineWidth: 2,\n    lineDash: [10, 10],\n    stroke: '#F04864',\n  },\n});\nconst line3 = new Line({\n  style: {\n    x1: 200,\n    y1: 200,\n    x2: 400,\n    y2: 200,\n    lineWidth: 2,\n    stroke: 'l(0) 0:#F04864 0.5:#7EC2F3 1:#1890FF',\n  },\n});\n\nconst arrowMarker = new Path({\n  style: {\n    path: 'M 10,10 L -10,0 L 10,-10 Z',\n    stroke: '#1890FF',\n    anchor: '0.5 0.5',\n    transformOrigin: 'center',\n  },\n});\nconst circleMarker = new Circle({\n  style: {\n    r: 10,\n    stroke: '#1890FF',\n  },\n});\nconst imageMarker = new Image({\n  style: {\n    width: 50,\n    height: 50,\n    anchor: [0.5, 0.5],\n    transformOrigin: 'center',\n    transform: 'rotate(90deg)',\n    img: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ',\n  },\n});\n\nconst arrowLine = new Line({\n  style: {\n    x1: 200,\n    y1: 250,\n    x2: 400,\n    y2: 250,\n    stroke: '#1890FF',\n    lineWidth: 2,\n    cursor: 'pointer',\n    markerStart: arrowMarker,\n    markerEnd: circleMarker,\n  },\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  canvas.appendChild(line1);\n  canvas.appendChild(line2);\n  canvas.appendChild(line3);\n  canvas.appendChild(arrowLine);\n\n  line2.animate([{ lineDashOffset: -20 }, { lineDashOffset: 0 }], {\n    duration: 1500,\n    iterations: Infinity,\n  });\n\n  line3.animate(\n    [\n      { x1: 200, lineWidth: 2 },\n      { x1: 0, lineWidth: 10 },\n    ],\n    {\n      duration: 1500,\n      iterations: Infinity,\n      easing: 'cubic-bezier(0.250, 0.460, 0.450, 0.940)',\n    },\n  );\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\n\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n\nconst lineFolder = gui.addFolder('line1');\nconst lineConfig = {\n  stroke: '#1890FF',\n  lineWidth: 2,\n  lineJoin: 'miter',\n  lineCap: 'butt',\n  strokeOpacity: 1,\n  x1: 200,\n  y1: 100,\n  x2: 400,\n  y2: 100,\n  lineDash: 0,\n  lineDashOffset: 0,\n  increasedLineWidthForHitTesting: 0,\n  cursor: 'pointer',\n  shadowColor: '#fff',\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  pointerEvents: 'auto',\n  visibility: 'visible',\n};\nlineFolder.add(lineConfig, 'lineJoin', ['miter', 'round', 'bevel']).onChange((lineJoin) => {\n  line1.style.lineJoin = lineJoin;\n});\nlineFolder.add(lineConfig, 'lineCap', ['butt', 'round', 'square']).onChange((lineCap) => {\n  line1.style.lineCap = lineCap;\n});\nlineFolder.add(lineConfig, 'lineDash', 0, 100).onChange((lineDash) => {\n  line1.style.lineDash = [lineDash];\n});\nlineFolder.add(lineConfig, 'lineDashOffset', 0, 100).onChange((lineDashOffset) => {\n  line1.style.lineDashOffset = lineDashOffset;\n});\nlineFolder.add(lineConfig, 'x1', 0, 400).onChange((x1) => {\n  line1.style.x1 = x1;\n});\nlineFolder.add(lineConfig, 'y1', 0, 400).onChange((y1) => {\n  line1.style.y1 = y1;\n});\nlineFolder.add(lineConfig, 'x2', 0, 400).onChange((x2) => {\n  line1.style.x2 = x2;\n});\nlineFolder.add(lineConfig, 'y2', 0, 400).onChange((y2) => {\n  line1.style.y2 = y2;\n});\nlineFolder.addColor(lineConfig, 'stroke').onChange((color) => {\n  line1.style.stroke = color;\n});\nlineFolder.add(lineConfig, 'lineWidth', 1, 20).onChange((lineWidth) => {\n  line1.style.lineWidth = lineWidth;\n});\nlineFolder.add(lineConfig, 'strokeOpacity', 0, 1, 0.1).onChange((opacity) => {\n  line1.style.strokeOpacity = opacity;\n});\nlineFolder\n  .add(lineConfig, 'increasedLineWidthForHitTesting', 0, 200)\n  .onChange((increasedLineWidthForHitTesting) => {\n    line1.style.increasedLineWidthForHitTesting = increasedLineWidthForHitTesting;\n  });\nlineFolder\n  .add(lineConfig, 'cursor', ['default', 'pointer', 'help', 'progress', 'text', 'move'])\n  .onChange((cursor) => {\n    line1.style.cursor = cursor;\n  });\nlineFolder.addColor(lineConfig, 'shadowColor').onChange((color) => {\n  line1.attr('shadowColor', color);\n});\nlineFolder.add(lineConfig, 'shadowBlur', 0, 100).onChange((shadowBlur) => {\n  line1.style.shadowBlur = shadowBlur;\n});\nlineFolder.add(lineConfig, 'shadowOffsetX', -50, 50).onChange((shadowOffsetX) => {\n  line1.style.shadowOffsetX = shadowOffsetX;\n});\nlineFolder.add(lineConfig, 'shadowOffsetY', -50, 50).onChange((shadowOffsetY) => {\n  line1.style.shadowOffsetY = shadowOffsetY;\n});\nlineFolder\n  .add(lineConfig, 'pointerEvents', [\n    'none',\n    'auto',\n    'stroke',\n    'fill',\n    'painted',\n    'visible',\n    'visiblestroke',\n    'visiblefill',\n    'visiblepainted',\n    'all',\n  ])\n  .onChange((pointerEvents) => {\n    line1.style.pointerEvents = pointerEvents;\n  });\nlineFolder.add(lineConfig, 'visibility', ['visible', 'hidden']).onChange((visibility) => {\n  line1.style.visibility = visibility;\n});\n\nconst transformFolder = gui.addFolder('transform');\nconst transformConfig = {\n  localPositionX: 200,\n  localPositionY: 100,\n  localScale: 1,\n  localEulerAngles: 0,\n  transformOrigin: 'left top',\n  anchorX: 0,\n  anchorY: 0,\n};\ntransformFolder\n  .add(transformConfig, 'transformOrigin', [\n    'left top',\n    'center',\n    'right bottom',\n    '50% 50%',\n    '50px 50px',\n  ])\n  .onChange((transformOrigin) => {\n    line1.style.transformOrigin = transformOrigin;\n  });\ntransformFolder.add(transformConfig, 'localPositionX', 0, 600).onChange((localPositionX) => {\n  const [lx, ly] = line1.getLocalPosition();\n  line1.setLocalPosition(localPositionX, ly);\n});\ntransformFolder.add(transformConfig, 'localPositionY', 0, 500).onChange((localPositionY) => {\n  const [lx, ly] = line1.getLocalPosition();\n  line1.setLocalPosition(lx, localPositionY);\n});\ntransformFolder.add(transformConfig, 'localScale', 0.2, 5).onChange((localScale) => {\n  line1.setLocalScale(localScale);\n});\ntransformFolder.add(transformConfig, 'localEulerAngles', 0, 360).onChange((localEulerAngles) => {\n  line1.setLocalEulerAngles(localEulerAngles);\n});\ntransformFolder.add(transformConfig, 'anchorX', 0, 1).onChange((anchorX) => {\n  line1.style.anchor = [anchorX, transformConfig.anchorY];\n});\ntransformFolder.add(transformConfig, 'anchorY', 0, 1).onChange((anchorY) => {\n  line1.style.anchor = [transformConfig.anchorX, anchorY];\n});\ntransformFolder.close();\n\nconst markerFolder = gui.addFolder('marker');\nconst markerConfig = {\n  markerStart: 'path',\n  markerEnd: 'circle',\n  markerStartOffset: 0,\n  markerEndOffset: 0,\n  x1: 200,\n  y1: 250,\n  x2: 400,\n  y2: 250,\n};\nmarkerFolder\n  .add(markerConfig, 'markerStart', ['path', 'circle', 'image', 'null'])\n  .onChange((markerStartStr) => {\n    let markerStart;\n    if (markerStartStr === 'path') {\n      markerStart = arrowMarker;\n    } else if (markerStartStr === 'circle') {\n      markerStart = circleMarker;\n    } else if (markerStartStr === 'image') {\n      markerStart = imageMarker;\n    } else {\n      markerStart = null;\n    }\n\n    arrowLine.style.markerStart = markerStart;\n  });\nmarkerFolder\n  .add(markerConfig, 'markerEnd', ['path', 'circle', 'image', 'null'])\n  .onChange((markerEndStr) => {\n    let markerEnd;\n    if (markerEndStr === 'path') {\n      markerEnd = arrowMarker;\n    } else if (markerEndStr === 'circle') {\n      markerEnd = circleMarker;\n    } else if (markerEndStr === 'image') {\n      markerEnd = imageMarker;\n    } else {\n      markerEnd = null;\n    }\n\n    arrowLine.style.markerEnd = markerEnd;\n  });\nmarkerFolder.add(markerConfig, 'markerStartOffset', -20, 20).onChange((markerStartOffset) => {\n  arrowLine.style.markerStartOffset = markerStartOffset;\n});\nmarkerFolder.add(markerConfig, 'markerEndOffset', -20, 20).onChange((markerEndOffset) => {\n  arrowLine.style.markerEndOffset = markerEndOffset;\n});\nmarkerFolder.add(markerConfig, 'x1', 0, 400).onChange((x1) => {\n  arrowLine.style.x1 = x1;\n});\nmarkerFolder.add(markerConfig, 'y1', 0, 400).onChange((y1) => {\n  arrowLine.style.y1 = y1;\n});\nmarkerFolder.add(markerConfig, 'x2', 0, 400).onChange((x2) => {\n  arrowLine.style.x2 = x2;\n});\nmarkerFolder.add(markerConfig, 'y2', 0, 400).onChange((y2) => {\n  arrowLine.style.y2 = y2;\n});\nmarkerFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.line = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf'\n    }, {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  }); // create a line\n\n  var line1 = new _g.Line({\n    style: {\n      x1: 200,\n      y1: 100,\n      x2: 400,\n      y2: 100,\n      stroke: '#1890FF',\n      lineWidth: 2,\n      cursor: 'pointer'\n    }\n  });\n  var line2 = new _g.Line({\n    style: {\n      x1: 200,\n      y1: 150,\n      x2: 400,\n      y2: 150,\n      lineWidth: 2,\n      lineDash: [10, 10],\n      stroke: '#F04864'\n    }\n  });\n  var line3 = new _g.Line({\n    style: {\n      x1: 200,\n      y1: 200,\n      x2: 400,\n      y2: 200,\n      lineWidth: 2,\n      stroke: 'l(0) 0:#F04864 0.5:#7EC2F3 1:#1890FF'\n    }\n  });\n  var arrowMarker = new _g.Path({\n    style: {\n      path: 'M 10,10 L -10,0 L 10,-10 Z',\n      stroke: '#1890FF',\n      anchor: '0.5 0.5',\n      transformOrigin: 'center'\n    }\n  });\n  var circleMarker = new _g.Circle({\n    style: {\n      r: 10,\n      stroke: '#1890FF'\n    }\n  });\n  var imageMarker = new _g.Image({\n    style: {\n      width: 50,\n      height: 50,\n      anchor: [0.5, 0.5],\n      transformOrigin: 'center',\n      transform: 'rotate(90deg)',\n      img: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ'\n    }\n  });\n  var arrowLine = new _g.Line({\n    style: {\n      x1: 200,\n      y1: 250,\n      x2: 400,\n      y2: 250,\n      stroke: '#1890FF',\n      lineWidth: 2,\n      cursor: 'pointer',\n      markerStart: arrowMarker,\n      markerEnd: circleMarker\n    }\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    canvas.appendChild(line1);\n    canvas.appendChild(line2);\n    canvas.appendChild(line3);\n    canvas.appendChild(arrowLine);\n    line2.animate([{\n      lineDashOffset: -20\n    }, {\n      lineDashOffset: 0\n    }], {\n      duration: 1500,\n      iterations: Infinity\n    });\n    line3.animate([{\n      x1: 200,\n      lineWidth: 2\n    }, {\n      x1: 0,\n      lineWidth: 10\n    }], {\n      duration: 1500,\n      iterations: Infinity,\n      easing: 'cubic-bezier(0.250, 0.460, 0.450, 0.940)'\n    });\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n  var lineFolder = gui.addFolder('line1');\n  var lineConfig = {\n    stroke: '#1890FF',\n    lineWidth: 2,\n    lineJoin: 'miter',\n    lineCap: 'butt',\n    strokeOpacity: 1,\n    x1: 200,\n    y1: 100,\n    x2: 400,\n    y2: 100,\n    lineDash: 0,\n    lineDashOffset: 0,\n    increasedLineWidthForHitTesting: 0,\n    cursor: 'pointer',\n    shadowColor: '#fff',\n    shadowBlur: 0,\n    shadowOffsetX: 0,\n    shadowOffsetY: 0,\n    pointerEvents: 'auto',\n    visibility: 'visible'\n  };\n  lineFolder.add(lineConfig, 'lineJoin', ['miter', 'round', 'bevel']).onChange(function (lineJoin) {\n    line1.style.lineJoin = lineJoin;\n  });\n  lineFolder.add(lineConfig, 'lineCap', ['butt', 'round', 'square']).onChange(function (lineCap) {\n    line1.style.lineCap = lineCap;\n  });\n  lineFolder.add(lineConfig, 'lineDash', 0, 100).onChange(function (lineDash) {\n    line1.style.lineDash = [lineDash];\n  });\n  lineFolder.add(lineConfig, 'lineDashOffset', 0, 100).onChange(function (lineDashOffset) {\n    line1.style.lineDashOffset = lineDashOffset;\n  });\n  lineFolder.add(lineConfig, 'x1', 0, 400).onChange(function (x1) {\n    line1.style.x1 = x1;\n  });\n  lineFolder.add(lineConfig, 'y1', 0, 400).onChange(function (y1) {\n    line1.style.y1 = y1;\n  });\n  lineFolder.add(lineConfig, 'x2', 0, 400).onChange(function (x2) {\n    line1.style.x2 = x2;\n  });\n  lineFolder.add(lineConfig, 'y2', 0, 400).onChange(function (y2) {\n    line1.style.y2 = y2;\n  });\n  lineFolder.addColor(lineConfig, 'stroke').onChange(function (color) {\n    line1.style.stroke = color;\n  });\n  lineFolder.add(lineConfig, 'lineWidth', 1, 20).onChange(function (lineWidth) {\n    line1.style.lineWidth = lineWidth;\n  });\n  lineFolder.add(lineConfig, 'strokeOpacity', 0, 1, 0.1).onChange(function (opacity) {\n    line1.style.strokeOpacity = opacity;\n  });\n  lineFolder.add(lineConfig, 'increasedLineWidthForHitTesting', 0, 200).onChange(function (increasedLineWidthForHitTesting) {\n    line1.style.increasedLineWidthForHitTesting = increasedLineWidthForHitTesting;\n  });\n  lineFolder.add(lineConfig, 'cursor', ['default', 'pointer', 'help', 'progress', 'text', 'move']).onChange(function (cursor) {\n    line1.style.cursor = cursor;\n  });\n  lineFolder.addColor(lineConfig, 'shadowColor').onChange(function (color) {\n    line1.attr('shadowColor', color);\n  });\n  lineFolder.add(lineConfig, 'shadowBlur', 0, 100).onChange(function (shadowBlur) {\n    line1.style.shadowBlur = shadowBlur;\n  });\n  lineFolder.add(lineConfig, 'shadowOffsetX', -50, 50).onChange(function (shadowOffsetX) {\n    line1.style.shadowOffsetX = shadowOffsetX;\n  });\n  lineFolder.add(lineConfig, 'shadowOffsetY', -50, 50).onChange(function (shadowOffsetY) {\n    line1.style.shadowOffsetY = shadowOffsetY;\n  });\n  lineFolder.add(lineConfig, 'pointerEvents', ['none', 'auto', 'stroke', 'fill', 'painted', 'visible', 'visiblestroke', 'visiblefill', 'visiblepainted', 'all']).onChange(function (pointerEvents) {\n    line1.style.pointerEvents = pointerEvents;\n  });\n  lineFolder.add(lineConfig, 'visibility', ['visible', 'hidden']).onChange(function (visibility) {\n    line1.style.visibility = visibility;\n  });\n  var transformFolder = gui.addFolder('transform');\n  var transformConfig = {\n    localPositionX: 200,\n    localPositionY: 100,\n    localScale: 1,\n    localEulerAngles: 0,\n    transformOrigin: 'left top',\n    anchorX: 0,\n    anchorY: 0\n  };\n  transformFolder.add(transformConfig, 'transformOrigin', ['left top', 'center', 'right bottom', '50% 50%', '50px 50px']).onChange(function (transformOrigin) {\n    line1.style.transformOrigin = transformOrigin;\n  });\n  transformFolder.add(transformConfig, 'localPositionX', 0, 600).onChange(function (localPositionX) {\n    var _line1$getLocalPositi = line1.getLocalPosition(),\n        _line1$getLocalPositi2 = _slicedToArray(_line1$getLocalPositi, 2),\n        lx = _line1$getLocalPositi2[0],\n        ly = _line1$getLocalPositi2[1];\n\n    line1.setLocalPosition(localPositionX, ly);\n  });\n  transformFolder.add(transformConfig, 'localPositionY', 0, 500).onChange(function (localPositionY) {\n    var _line1$getLocalPositi3 = line1.getLocalPosition(),\n        _line1$getLocalPositi4 = _slicedToArray(_line1$getLocalPositi3, 2),\n        lx = _line1$getLocalPositi4[0],\n        ly = _line1$getLocalPositi4[1];\n\n    line1.setLocalPosition(lx, localPositionY);\n  });\n  transformFolder.add(transformConfig, 'localScale', 0.2, 5).onChange(function (localScale) {\n    line1.setLocalScale(localScale);\n  });\n  transformFolder.add(transformConfig, 'localEulerAngles', 0, 360).onChange(function (localEulerAngles) {\n    line1.setLocalEulerAngles(localEulerAngles);\n  });\n  transformFolder.add(transformConfig, 'anchorX', 0, 1).onChange(function (anchorX) {\n    line1.style.anchor = [anchorX, transformConfig.anchorY];\n  });\n  transformFolder.add(transformConfig, 'anchorY', 0, 1).onChange(function (anchorY) {\n    line1.style.anchor = [transformConfig.anchorX, anchorY];\n  });\n  transformFolder.close();\n  var markerFolder = gui.addFolder('marker');\n  var markerConfig = {\n    markerStart: 'path',\n    markerEnd: 'circle',\n    markerStartOffset: 0,\n    markerEndOffset: 0,\n    x1: 200,\n    y1: 250,\n    x2: 400,\n    y2: 250\n  };\n  markerFolder.add(markerConfig, 'markerStart', ['path', 'circle', 'image', 'null']).onChange(function (markerStartStr) {\n    var markerStart;\n\n    if (markerStartStr === 'path') {\n      markerStart = arrowMarker;\n    } else if (markerStartStr === 'circle') {\n      markerStart = circleMarker;\n    } else if (markerStartStr === 'image') {\n      markerStart = imageMarker;\n    } else {\n      markerStart = null;\n    }\n\n    arrowLine.style.markerStart = markerStart;\n  });\n  markerFolder.add(markerConfig, 'markerEnd', ['path', 'circle', 'image', 'null']).onChange(function (markerEndStr) {\n    var markerEnd;\n\n    if (markerEndStr === 'path') {\n      markerEnd = arrowMarker;\n    } else if (markerEndStr === 'circle') {\n      markerEnd = circleMarker;\n    } else if (markerEndStr === 'image') {\n      markerEnd = imageMarker;\n    } else {\n      markerEnd = null;\n    }\n\n    arrowLine.style.markerEnd = markerEnd;\n  });\n  markerFolder.add(markerConfig, 'markerStartOffset', -20, 20).onChange(function (markerStartOffset) {\n    arrowLine.style.markerStartOffset = markerStartOffset;\n  });\n  markerFolder.add(markerConfig, 'markerEndOffset', -20, 20).onChange(function (markerEndOffset) {\n    arrowLine.style.markerEndOffset = markerEndOffset;\n  });\n  markerFolder.add(markerConfig, 'x1', 0, 400).onChange(function (x1) {\n    arrowLine.style.x1 = x1;\n  });\n  markerFolder.add(markerConfig, 'y1', 0, 400).onChange(function (y1) {\n    arrowLine.style.y1 = y1;\n  });\n  markerFolder.add(markerConfig, 'x2', 0, 400).onChange(function (x2) {\n    arrowLine.style.x2 = x2;\n  });\n  markerFolder.add(markerConfig, 'y2', 0, 400).onChange(function (y2) {\n    arrowLine.style.y2 = y2;\n  });\n  markerFolder.open();\n});"},{"relativePath":"shape/demo/path.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/shape/demo/path.js","order":8,"filename":"path.js","title":{"zh":"路径","en":"Path"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*nw3DSKlj9t4AAAAAAAAAAABkARQnAQ","source":"import { Canvas, CanvasEvent, Circle, Group, Image, Path } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n});\nconst webgpuRenderer = new WebGPURenderer();\n\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\nconst path = new Path({\n  style: {\n    path: [\n      ['M', 57.06339097770921, -18.541019662496844],\n      ['L', 13.225168176580645, -18.202882373436317],\n      ['L', 3.67394039744206e-15, -60],\n      ['L', -13.225168176580643, -18.202882373436317],\n      ['L', -57.06339097770921, -18.54101966249685],\n      ['L', -21.398771616640953, 6.952882373436324],\n      ['L', -35.267115137548394, 48.54101966249684],\n      ['L', -4.133182947122317e-15, 22.5],\n      ['L', 35.26711513754837, 48.54101966249685],\n      ['L', 21.398771616640953, 6.952882373436322],\n      ['Z'],\n    ],\n    stroke: '#1890FF',\n    lineWidth: 1,\n  },\n});\npath.translate(100, 250);\nconst pointInPath = new Circle({\n  style: {\n    r: 10,\n    fill: 'red',\n  },\n});\n\nconst path1 = new Path({\n  style: {\n    path: [\n      ['M', 100, 100],\n      ['L', 200, 100],\n    ],\n    stroke: '#F04864',\n    lineDash: [10],\n  },\n});\nconst path2 = new Path({\n  style: {\n    transform: 'translate(200, 100) scale(10)',\n    path: 'M2 4C0.8954304997175604 3.9999999991219815 -1.3527075029566811e-16 4.895430499717561 0 6C0 6 0 9.9375 0 12C1.3527075029566811e-16 13.10456950028244 0.8954304997175604 14.00000000087802 2 14C8 14 10.25 14 14 14C15.104569499040734 13.99999999912198 16 13.104569499040734 16 12C16 9 16 7.875 16 6C16 4.895430500959266 15.104569499040734 4.0000000008780185 14 4C13.414 4 13.194249999999998 4 12.828 4C12.297610373455704 3.9998867247945213 11.788985462367364 3.7890987493850155 11.414 3.414C11 3 10.84475 2.8447500000000003 10.586 2.5860000000000003C10.211014537632636 2.210901250614985 9.702389626544296 2.0001132752054787 9.172 2.0000000000000004C8 2.0000000000000004 7.560500000000001 2.0000000000000004 6.828000000000001 2.0000000000000004C6.297610373455706 2.0001132752054787 5.788985462367367 2.210901250614985 5.4140000000000015 2.5860000000000003C5.000000000000002 3 4.844750000000001 3.1552499999999997 4.586000000000001 3.414C4.211014537632636 3.7890987493850155 3.7023896265442966 3.9998867247945213 3.1720000000000015 4C2.5860000000000016 4 2.3662500000000017 4 2.0000000000000018 4C2.000000000000001 4 2.000000000000001 4 2 4M10.5 8.5C10.5 6.575499102701247 8.416666666666666 5.372686041889527 6.75 6.334936490538903C5.976497308103742 6.781518477924107 5.5 7.606836025229591 5.5 8.5C5.5 10.424500897298753 7.583333333333334 11.627313958110474 9.25 10.665063509461097C10.023502691896258 10.218481522075892 10.5 9.39316397477041 10.5 8.5C10.5 8.5 10.5 8.5 10.5 8.5M2.5 6C2.1150998205402494 6.000000000305956 1.874537208444147 5.583333333830511 2.0669872979090567 5.2500000003442C2.1563036954051213 5.095299461648009 2.321367204761929 4.999999999858005 2.5 5C2.8849001794597506 5.000000000305956 3.125462791688336 5.416666667163845 2.933012701693495 5.7500000003442C2.8436963042354777 5.904700538406512 2.6786327946700927 5.999999999858005 2.5 6C2.5 6 2.5 6 2.5 6M11.5 8.5C11.5 11.194301256218253 8.583333333333334 12.878239541354663 6.250000000000001 11.531088913245537C5.167096231345241 10.90587413090625 4.5 9.750429564678573 4.5 8.5C4.5 5.805698743781747 7.416666666666667 4.121760458645338 9.75 5.468911086754464C10.832903768654761 6.094125869093751 11.5 7.249570435321427 11.5 8.5C11.5 8.5 11.5 8.5 11.5 8.5',\n    lineWidth: 1,\n    lineJoin: 'round',\n    stroke: '#54BECC',\n    cursor: 'pointer',\n  },\n});\npath2.addEventListener('mouseenter', () => {\n  path2.style.stroke = 'red';\n});\npath2.addEventListener('mouseleave', () => {\n  path2.style.stroke = '#54BECC';\n});\n\nconst path3 = new Path({\n  style: {\n    lineWidth: 1,\n    stroke: '#54BECC',\n    path: 'M 0,40 C 5.5555555555555545,40,22.222222222222218,44.44444444444445,33.33333333333333,40 C 44.444444444444436,35.55555555555556,55.55555555555554,14.66666666666667,66.66666666666666,13.333333333333336 C 77.77777777777777,12.000000000000002,88.88888888888887,32,100,32 C 111.11111111111113,32,122.22222222222221,14.66666666666667,133.33333333333331,13.333333333333336 C 144.44444444444443,12.000000000000002,155.55555555555557,24,166.66666666666669,24 C 177.7777777777778,24,188.8888888888889,11.111111111111114,200,13.333333333333336 C 211.1111111111111,15.555555555555557,222.22222222222226,35.111111111111114,233.33333333333334,37.333333333333336 C 244.44444444444443,39.55555555555555,255.55555555555551,31.22222222222223,266.66666666666663,26.66666666666667 C 277.77777777777777,22.111111111111114,294.4444444444444,12.777777777777779,300,10',\n  },\n});\nconst pointInPath3 = new Circle({\n  style: {\n    r: 10,\n    fill: 'red',\n  },\n});\n\nfunction getCirclePath(cx, cy, rx, ry) {\n  return [\n    // ['M', cx, cy - ry],\n    // ['A', rx, ry, 0, 1, 1, cx, cy + ry],\n    // ['A', rx, ry, 0, 1, 1, cx, cy - ry],\n\n    ['M', cx - rx, ry],\n    ['A', rx, ry, 0, 1, 0, cx + rx, ry],\n    ['A', rx, ry, 0, 1, 0, cx - rx, ry],\n    ['Z'],\n  ];\n}\n\nconst circlePath = new Path({\n  style: {\n    path: getCirclePath(0, 0, 100, 100),\n    lineWidth: 1,\n    stroke: '#54BECC',\n    cursor: 'pointer',\n  },\n});\n\nconst path4 = new Path({\n  style: {\n    transform: 'translate(300, 100) scale(0.4)',\n    lineWidth: 10,\n    lineJoin: 'round',\n    stroke: '#54BECC',\n    cursor: 'pointer',\n    path:\n      'M 100,300' +\n      'l 50,-25' +\n      'a25,25 -30 0,1 50,-25' +\n      'l 50,-25' +\n      'a25,50 -30 0,1 50,-25' +\n      'l 50,-25' +\n      'a25,75 -30 0,1 50,-25' +\n      'l 50,-25' +\n      'a25,100 -30 0,1 50,-25' +\n      'l 50,-25' +\n      'l 0, 200,' +\n      'z',\n  },\n});\nconst pointInPath4 = new Circle({\n  style: {\n    r: 10,\n    fill: 'red',\n  },\n});\n\nconst path5 = new Path({\n  style: {\n    transform: 'translate(300, 160) scale(4)',\n    lineWidth: 2,\n    stroke: '#54BECC',\n    path: 'M 134 -126 C 152 -126 152 -151 170 -151z',\n  },\n});\nconst pointInPath5 = new Circle({\n  style: {\n    r: 10,\n    fill: 'red',\n  },\n});\n\nconst arrowMarker = new Path({\n  style: {\n    path: 'M 10,10 L -10,0 L 10,-10 Z',\n    stroke: '#1890FF',\n    anchor: '0.5 0.5',\n    transformOrigin: 'center',\n  },\n});\nconst circleMarker = new Circle({\n  style: {\n    r: 10,\n    stroke: '#1890FF',\n  },\n});\nconst imageMarker = new Image({\n  style: {\n    width: 50,\n    height: 50,\n    anchor: [0.5, 0.5],\n    transformOrigin: 'center',\n    transform: 'rotate(90deg)',\n    img: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ',\n  },\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  canvas.appendChild(path);\n  canvas.appendChild(path1);\n  canvas.appendChild(path2);\n  canvas.appendChild(path3);\n  canvas.appendChild(path4);\n  canvas.appendChild(path5);\n  canvas.appendChild(circlePath);\n  circlePath.setPosition(100, 300);\n\n  canvas.appendChild(pointInPath);\n  canvas.appendChild(pointInPath3);\n  canvas.appendChild(pointInPath4);\n  canvas.appendChild(pointInPath5);\n});\n\nconst g = new Group({\n  style: {\n    transform: 'translate(400, 400) scale(0.5)',\n  },\n});\nconst p1 = new Path({\n  style: {\n    d: 'M1.2858791391047205e-14,-209.99999999999994A209.99999999999994,209.99999999999994,0,0,1,207.94618110413055,29.298221178223883L0,0Z',\n    fill: 'red',\n  },\n});\nconst p2 = new Path({\n  style: {\n    d: 'M207.94618110413066,29.298221178223898A210.00000000000006,210.00000000000006,0,0,1,137.74500635698746,158.512817222184L0,0Z',\n    fill: 'green',\n  },\n});\nconst p3 = new Path({\n  style: {\n    d: 'M137.7450063569874,158.51281722218394A209.99999999999997,209.99999999999997,0,0,1,-6.530971076665772,209.89841928131747L0,0Z',\n    fill: 'blue',\n  },\n});\nconst p4 = new Path({\n  style: {\n    d: 'M-6.530971076665824,209.8984192813175A210,210,0,0,1,-168.7343604741219,-125.01486149809983L0,0Z',\n    fill: 'yellow',\n  },\n});\nconst p5 = new Path({\n  style: {\n    d: 'M-168.7343604741219,-125.01486149809983A210,210,0,0,1,-3.377057564320937e-14,-210L0,0Z',\n    fill: 'black',\n  },\n});\ng.appendChild(p1);\ng.appendChild(p2);\ng.appendChild(p3);\ng.appendChild(p4);\ng.appendChild(p5);\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  canvas.appendChild(g);\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\n\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n\nconst circleFolder = gui.addFolder('circle');\nconst circleConfig = {\n  r: 100,\n  lineWidth: 1,\n  lineDash: 0,\n  lineDashOffset: 0,\n  anchorX: 0,\n  anchorY: 0,\n  shadowColor: '#fff',\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  pointerEvents: 'auto',\n  visibility: 'visible',\n};\ncircleFolder.add(circleConfig, 'r', 0, 200).onChange((r) => {\n  circlePath.style.path = getCirclePath(0, 0, r, r);\n  circlePath.setPosition(100, 300);\n});\ncircleFolder.add(circleConfig, 'lineWidth', 1, 20).onChange((lineWidth) => {\n  circlePath.style.lineWidth = lineWidth;\n});\ncircleFolder.add(circleConfig, 'lineDash', 0, 100).onChange((lineDash) => {\n  circlePath.style.lineDash = [lineDash];\n});\ncircleFolder.add(circleConfig, 'lineDashOffset', 0, 100).onChange((lineDashOffset) => {\n  circlePath.style.lineDashOffset = lineDashOffset;\n});\ncircleFolder.add(circleConfig, 'anchorX', 0, 1).onChange((anchorX) => {\n  circlePath.style.anchor = [anchorX, circleConfig.anchorY];\n});\ncircleFolder.add(circleConfig, 'anchorY', 0, 1).onChange((anchorY) => {\n  circlePath.style.anchor = [circleConfig.anchorX, anchorY];\n});\ncircleFolder.addColor(circleConfig, 'shadowColor').onChange((color) => {\n  circlePath.attr('shadowColor', color);\n});\ncircleFolder.add(circleConfig, 'shadowBlur', 0, 100).onChange((shadowBlur) => {\n  circlePath.style.shadowBlur = shadowBlur;\n});\ncircleFolder.add(circleConfig, 'shadowOffsetX', -50, 50).onChange((shadowOffsetX) => {\n  circlePath.style.shadowOffsetX = shadowOffsetX;\n});\ncircleFolder.add(circleConfig, 'shadowOffsetY', -50, 50).onChange((shadowOffsetY) => {\n  circlePath.style.shadowOffsetY = shadowOffsetY;\n});\ncircleFolder\n  .add(circleConfig, 'pointerEvents', [\n    'none',\n    'auto',\n    'stroke',\n    'fill',\n    'painted',\n    'visible',\n    'visiblestroke',\n    'visiblefill',\n    'visiblepainted',\n    'all',\n  ])\n  .onChange((pointerEvents) => {\n    circlePath.style.pointerEvents = pointerEvents;\n  });\ncircleFolder.add(circleConfig, 'visibility', ['visible', 'hidden']).onChange((visibility) => {\n  circlePath.style.visibility = visibility;\n});\ncircleFolder.open();\n\nconst pathFolder = gui.addFolder('path');\nconst pathConfig = {\n  increasedLineWidthForHitTesting: 0,\n  cursor: 'pointer',\n};\npathFolder\n  .add(pathConfig, 'increasedLineWidthForHitTesting', 0, 200)\n  .onChange((increasedLineWidthForHitTesting) => {\n    path2.style.increasedLineWidthForHitTesting = increasedLineWidthForHitTesting;\n  });\npathFolder\n  .add(pathConfig, 'cursor', ['default', 'pointer', 'help', 'progress', 'text', 'move'])\n  .onChange((cursor) => {\n    path2.style.cursor = cursor;\n  });\n\nconst getPointFolder = gui.addFolder('getPoint');\nconst getPointConfig = {\n  ratio: 0,\n};\ngetPointFolder.add(getPointConfig, 'ratio', 0, 1).onChange((ratio) => {\n  let point = path3.getPoint(ratio);\n  if (point) {\n    pointInPath3.setLocalPosition(point.x, point.y);\n  }\n\n  point = path4.getPoint(ratio);\n  if (point) {\n    pointInPath4.setLocalPosition(point.x, point.y);\n  }\n\n  point = path5.getPoint(ratio);\n  if (point) {\n    pointInPath5.setLocalPosition(point.x, point.y);\n  }\n\n  point = path.getPoint(ratio);\n  if (point) {\n    pointInPath.setLocalPosition(point.x, point.y);\n  }\n});\n\nconst markerFolder = gui.addFolder('marker');\nconst markerConfig = {\n  markerStart: 'null',\n  markerEnd: 'null',\n  markerMid: 'null',\n  markerStartOffset: 0,\n  markerEndOffset: 0,\n};\nmarkerFolder\n  .add(markerConfig, 'markerStart', ['path', 'circle', 'image', 'null'])\n  .onChange((markerStartStr) => {\n    let markerStart;\n    if (markerStartStr === 'path') {\n      markerStart = arrowMarker.cloneNode();\n    } else if (markerStartStr === 'circle') {\n      markerStart = circleMarker.cloneNode();\n    } else if (markerStartStr === 'image') {\n      markerStart = imageMarker.cloneNode();\n    } else {\n      markerStart = null;\n    }\n\n    path3.style.markerStart = markerStart;\n  });\nmarkerFolder\n  .add(markerConfig, 'markerMid', ['path', 'circle', 'image', 'null'])\n  .onChange((markerMidStr) => {\n    let markerMid;\n    if (markerMidStr === 'path') {\n      markerMid = arrowMarker.cloneNode();\n    } else if (markerMidStr === 'circle') {\n      markerMid = circleMarker.cloneNode();\n    } else if (markerMidStr === 'image') {\n      markerMid = imageMarker.cloneNode();\n    } else {\n      markerMid = null;\n    }\n\n    path3.style.markerMid = markerMid;\n  });\nmarkerFolder\n  .add(markerConfig, 'markerEnd', ['path', 'circle', 'image', 'null'])\n  .onChange((markerEndStr) => {\n    let markerEnd;\n    if (markerEndStr === 'path') {\n      markerEnd = arrowMarker.cloneNode();\n    } else if (markerEndStr === 'circle') {\n      markerEnd = circleMarker.cloneNode();\n    } else if (markerEndStr === 'image') {\n      markerEnd = imageMarker.cloneNode();\n    } else {\n      markerEnd = null;\n    }\n\n    path3.style.markerEnd = markerEnd;\n  });\nmarkerFolder.add(markerConfig, 'markerStartOffset', -20, 20).onChange((markerStartOffset) => {\n  path3.style.markerStartOffset = markerStartOffset;\n});\nmarkerFolder.add(markerConfig, 'markerEndOffset', -20, 20).onChange((markerEndOffset) => {\n  path3.style.markerEndOffset = markerEndOffset;\n});\nmarkerFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.path = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/'\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer();\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  var path = new _g.Path({\n    style: {\n      path: [['M', 57.06339097770921, -18.541019662496844], ['L', 13.225168176580645, -18.202882373436317], ['L', 3.67394039744206e-15, -60], ['L', -13.225168176580643, -18.202882373436317], ['L', -57.06339097770921, -18.54101966249685], ['L', -21.398771616640953, 6.952882373436324], ['L', -35.267115137548394, 48.54101966249684], ['L', -4.133182947122317e-15, 22.5], ['L', 35.26711513754837, 48.54101966249685], ['L', 21.398771616640953, 6.952882373436322], ['Z']],\n      stroke: '#1890FF',\n      lineWidth: 1\n    }\n  });\n  path.translate(100, 250);\n  var pointInPath = new _g.Circle({\n    style: {\n      r: 10,\n      fill: 'red'\n    }\n  });\n  var path1 = new _g.Path({\n    style: {\n      path: [['M', 100, 100], ['L', 200, 100]],\n      stroke: '#F04864',\n      lineDash: [10]\n    }\n  });\n  var path2 = new _g.Path({\n    style: {\n      transform: 'translate(200, 100) scale(10)',\n      path: 'M2 4C0.8954304997175604 3.9999999991219815 -1.3527075029566811e-16 4.895430499717561 0 6C0 6 0 9.9375 0 12C1.3527075029566811e-16 13.10456950028244 0.8954304997175604 14.00000000087802 2 14C8 14 10.25 14 14 14C15.104569499040734 13.99999999912198 16 13.104569499040734 16 12C16 9 16 7.875 16 6C16 4.895430500959266 15.104569499040734 4.0000000008780185 14 4C13.414 4 13.194249999999998 4 12.828 4C12.297610373455704 3.9998867247945213 11.788985462367364 3.7890987493850155 11.414 3.414C11 3 10.84475 2.8447500000000003 10.586 2.5860000000000003C10.211014537632636 2.210901250614985 9.702389626544296 2.0001132752054787 9.172 2.0000000000000004C8 2.0000000000000004 7.560500000000001 2.0000000000000004 6.828000000000001 2.0000000000000004C6.297610373455706 2.0001132752054787 5.788985462367367 2.210901250614985 5.4140000000000015 2.5860000000000003C5.000000000000002 3 4.844750000000001 3.1552499999999997 4.586000000000001 3.414C4.211014537632636 3.7890987493850155 3.7023896265442966 3.9998867247945213 3.1720000000000015 4C2.5860000000000016 4 2.3662500000000017 4 2.0000000000000018 4C2.000000000000001 4 2.000000000000001 4 2 4M10.5 8.5C10.5 6.575499102701247 8.416666666666666 5.372686041889527 6.75 6.334936490538903C5.976497308103742 6.781518477924107 5.5 7.606836025229591 5.5 8.5C5.5 10.424500897298753 7.583333333333334 11.627313958110474 9.25 10.665063509461097C10.023502691896258 10.218481522075892 10.5 9.39316397477041 10.5 8.5C10.5 8.5 10.5 8.5 10.5 8.5M2.5 6C2.1150998205402494 6.000000000305956 1.874537208444147 5.583333333830511 2.0669872979090567 5.2500000003442C2.1563036954051213 5.095299461648009 2.321367204761929 4.999999999858005 2.5 5C2.8849001794597506 5.000000000305956 3.125462791688336 5.416666667163845 2.933012701693495 5.7500000003442C2.8436963042354777 5.904700538406512 2.6786327946700927 5.999999999858005 2.5 6C2.5 6 2.5 6 2.5 6M11.5 8.5C11.5 11.194301256218253 8.583333333333334 12.878239541354663 6.250000000000001 11.531088913245537C5.167096231345241 10.90587413090625 4.5 9.750429564678573 4.5 8.5C4.5 5.805698743781747 7.416666666666667 4.121760458645338 9.75 5.468911086754464C10.832903768654761 6.094125869093751 11.5 7.249570435321427 11.5 8.5C11.5 8.5 11.5 8.5 11.5 8.5',\n      lineWidth: 1,\n      lineJoin: 'round',\n      stroke: '#54BECC',\n      cursor: 'pointer'\n    }\n  });\n  path2.addEventListener('mouseenter', function () {\n    path2.style.stroke = 'red';\n  });\n  path2.addEventListener('mouseleave', function () {\n    path2.style.stroke = '#54BECC';\n  });\n  var path3 = new _g.Path({\n    style: {\n      lineWidth: 1,\n      stroke: '#54BECC',\n      path: 'M 0,40 C 5.5555555555555545,40,22.222222222222218,44.44444444444445,33.33333333333333,40 C 44.444444444444436,35.55555555555556,55.55555555555554,14.66666666666667,66.66666666666666,13.333333333333336 C 77.77777777777777,12.000000000000002,88.88888888888887,32,100,32 C 111.11111111111113,32,122.22222222222221,14.66666666666667,133.33333333333331,13.333333333333336 C 144.44444444444443,12.000000000000002,155.55555555555557,24,166.66666666666669,24 C 177.7777777777778,24,188.8888888888889,11.111111111111114,200,13.333333333333336 C 211.1111111111111,15.555555555555557,222.22222222222226,35.111111111111114,233.33333333333334,37.333333333333336 C 244.44444444444443,39.55555555555555,255.55555555555551,31.22222222222223,266.66666666666663,26.66666666666667 C 277.77777777777777,22.111111111111114,294.4444444444444,12.777777777777779,300,10'\n    }\n  });\n  var pointInPath3 = new _g.Circle({\n    style: {\n      r: 10,\n      fill: 'red'\n    }\n  });\n\n  function getCirclePath(cx, cy, rx, ry) {\n    return [// ['M', cx, cy - ry],\n    // ['A', rx, ry, 0, 1, 1, cx, cy + ry],\n    // ['A', rx, ry, 0, 1, 1, cx, cy - ry],\n    ['M', cx - rx, ry], ['A', rx, ry, 0, 1, 0, cx + rx, ry], ['A', rx, ry, 0, 1, 0, cx - rx, ry], ['Z']];\n  }\n\n  var circlePath = new _g.Path({\n    style: {\n      path: getCirclePath(0, 0, 100, 100),\n      lineWidth: 1,\n      stroke: '#54BECC',\n      cursor: 'pointer'\n    }\n  });\n  var path4 = new _g.Path({\n    style: {\n      transform: 'translate(300, 100) scale(0.4)',\n      lineWidth: 10,\n      lineJoin: 'round',\n      stroke: '#54BECC',\n      cursor: 'pointer',\n      path: 'M 100,300' + 'l 50,-25' + 'a25,25 -30 0,1 50,-25' + 'l 50,-25' + 'a25,50 -30 0,1 50,-25' + 'l 50,-25' + 'a25,75 -30 0,1 50,-25' + 'l 50,-25' + 'a25,100 -30 0,1 50,-25' + 'l 50,-25' + 'l 0, 200,' + 'z'\n    }\n  });\n  var pointInPath4 = new _g.Circle({\n    style: {\n      r: 10,\n      fill: 'red'\n    }\n  });\n  var path5 = new _g.Path({\n    style: {\n      transform: 'translate(300, 160) scale(4)',\n      lineWidth: 2,\n      stroke: '#54BECC',\n      path: 'M 134 -126 C 152 -126 152 -151 170 -151z'\n    }\n  });\n  var pointInPath5 = new _g.Circle({\n    style: {\n      r: 10,\n      fill: 'red'\n    }\n  });\n  var arrowMarker = new _g.Path({\n    style: {\n      path: 'M 10,10 L -10,0 L 10,-10 Z',\n      stroke: '#1890FF',\n      anchor: '0.5 0.5',\n      transformOrigin: 'center'\n    }\n  });\n  var circleMarker = new _g.Circle({\n    style: {\n      r: 10,\n      stroke: '#1890FF'\n    }\n  });\n  var imageMarker = new _g.Image({\n    style: {\n      width: 50,\n      height: 50,\n      anchor: [0.5, 0.5],\n      transformOrigin: 'center',\n      transform: 'rotate(90deg)',\n      img: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ'\n    }\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    canvas.appendChild(path);\n    canvas.appendChild(path1);\n    canvas.appendChild(path2);\n    canvas.appendChild(path3);\n    canvas.appendChild(path4);\n    canvas.appendChild(path5);\n    canvas.appendChild(circlePath);\n    circlePath.setPosition(100, 300);\n    canvas.appendChild(pointInPath);\n    canvas.appendChild(pointInPath3);\n    canvas.appendChild(pointInPath4);\n    canvas.appendChild(pointInPath5);\n  });\n  var g = new _g.Group({\n    style: {\n      transform: 'translate(400, 400) scale(0.5)'\n    }\n  });\n  var p1 = new _g.Path({\n    style: {\n      d: 'M1.2858791391047205e-14,-209.99999999999994A209.99999999999994,209.99999999999994,0,0,1,207.94618110413055,29.298221178223883L0,0Z',\n      fill: 'red'\n    }\n  });\n  var p2 = new _g.Path({\n    style: {\n      d: 'M207.94618110413066,29.298221178223898A210.00000000000006,210.00000000000006,0,0,1,137.74500635698746,158.512817222184L0,0Z',\n      fill: 'green'\n    }\n  });\n  var p3 = new _g.Path({\n    style: {\n      d: 'M137.7450063569874,158.51281722218394A209.99999999999997,209.99999999999997,0,0,1,-6.530971076665772,209.89841928131747L0,0Z',\n      fill: 'blue'\n    }\n  });\n  var p4 = new _g.Path({\n    style: {\n      d: 'M-6.530971076665824,209.8984192813175A210,210,0,0,1,-168.7343604741219,-125.01486149809983L0,0Z',\n      fill: 'yellow'\n    }\n  });\n  var p5 = new _g.Path({\n    style: {\n      d: 'M-168.7343604741219,-125.01486149809983A210,210,0,0,1,-3.377057564320937e-14,-210L0,0Z',\n      fill: 'black'\n    }\n  });\n  g.appendChild(p1);\n  g.appendChild(p2);\n  g.appendChild(p3);\n  g.appendChild(p4);\n  g.appendChild(p5);\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    canvas.appendChild(g);\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n  var circleFolder = gui.addFolder('circle');\n  var circleConfig = {\n    r: 100,\n    lineWidth: 1,\n    lineDash: 0,\n    lineDashOffset: 0,\n    anchorX: 0,\n    anchorY: 0,\n    shadowColor: '#fff',\n    shadowBlur: 0,\n    shadowOffsetX: 0,\n    shadowOffsetY: 0,\n    pointerEvents: 'auto',\n    visibility: 'visible'\n  };\n  circleFolder.add(circleConfig, 'r', 0, 200).onChange(function (r) {\n    circlePath.style.path = getCirclePath(0, 0, r, r);\n    circlePath.setPosition(100, 300);\n  });\n  circleFolder.add(circleConfig, 'lineWidth', 1, 20).onChange(function (lineWidth) {\n    circlePath.style.lineWidth = lineWidth;\n  });\n  circleFolder.add(circleConfig, 'lineDash', 0, 100).onChange(function (lineDash) {\n    circlePath.style.lineDash = [lineDash];\n  });\n  circleFolder.add(circleConfig, 'lineDashOffset', 0, 100).onChange(function (lineDashOffset) {\n    circlePath.style.lineDashOffset = lineDashOffset;\n  });\n  circleFolder.add(circleConfig, 'anchorX', 0, 1).onChange(function (anchorX) {\n    circlePath.style.anchor = [anchorX, circleConfig.anchorY];\n  });\n  circleFolder.add(circleConfig, 'anchorY', 0, 1).onChange(function (anchorY) {\n    circlePath.style.anchor = [circleConfig.anchorX, anchorY];\n  });\n  circleFolder.addColor(circleConfig, 'shadowColor').onChange(function (color) {\n    circlePath.attr('shadowColor', color);\n  });\n  circleFolder.add(circleConfig, 'shadowBlur', 0, 100).onChange(function (shadowBlur) {\n    circlePath.style.shadowBlur = shadowBlur;\n  });\n  circleFolder.add(circleConfig, 'shadowOffsetX', -50, 50).onChange(function (shadowOffsetX) {\n    circlePath.style.shadowOffsetX = shadowOffsetX;\n  });\n  circleFolder.add(circleConfig, 'shadowOffsetY', -50, 50).onChange(function (shadowOffsetY) {\n    circlePath.style.shadowOffsetY = shadowOffsetY;\n  });\n  circleFolder.add(circleConfig, 'pointerEvents', ['none', 'auto', 'stroke', 'fill', 'painted', 'visible', 'visiblestroke', 'visiblefill', 'visiblepainted', 'all']).onChange(function (pointerEvents) {\n    circlePath.style.pointerEvents = pointerEvents;\n  });\n  circleFolder.add(circleConfig, 'visibility', ['visible', 'hidden']).onChange(function (visibility) {\n    circlePath.style.visibility = visibility;\n  });\n  circleFolder.open();\n  var pathFolder = gui.addFolder('path');\n  var pathConfig = {\n    increasedLineWidthForHitTesting: 0,\n    cursor: 'pointer'\n  };\n  pathFolder.add(pathConfig, 'increasedLineWidthForHitTesting', 0, 200).onChange(function (increasedLineWidthForHitTesting) {\n    path2.style.increasedLineWidthForHitTesting = increasedLineWidthForHitTesting;\n  });\n  pathFolder.add(pathConfig, 'cursor', ['default', 'pointer', 'help', 'progress', 'text', 'move']).onChange(function (cursor) {\n    path2.style.cursor = cursor;\n  });\n  var getPointFolder = gui.addFolder('getPoint');\n  var getPointConfig = {\n    ratio: 0\n  };\n  getPointFolder.add(getPointConfig, 'ratio', 0, 1).onChange(function (ratio) {\n    var point = path3.getPoint(ratio);\n\n    if (point) {\n      pointInPath3.setLocalPosition(point.x, point.y);\n    }\n\n    point = path4.getPoint(ratio);\n\n    if (point) {\n      pointInPath4.setLocalPosition(point.x, point.y);\n    }\n\n    point = path5.getPoint(ratio);\n\n    if (point) {\n      pointInPath5.setLocalPosition(point.x, point.y);\n    }\n\n    point = path.getPoint(ratio);\n\n    if (point) {\n      pointInPath.setLocalPosition(point.x, point.y);\n    }\n  });\n  var markerFolder = gui.addFolder('marker');\n  var markerConfig = {\n    markerStart: 'null',\n    markerEnd: 'null',\n    markerMid: 'null',\n    markerStartOffset: 0,\n    markerEndOffset: 0\n  };\n  markerFolder.add(markerConfig, 'markerStart', ['path', 'circle', 'image', 'null']).onChange(function (markerStartStr) {\n    var markerStart;\n\n    if (markerStartStr === 'path') {\n      markerStart = arrowMarker.cloneNode();\n    } else if (markerStartStr === 'circle') {\n      markerStart = circleMarker.cloneNode();\n    } else if (markerStartStr === 'image') {\n      markerStart = imageMarker.cloneNode();\n    } else {\n      markerStart = null;\n    }\n\n    path3.style.markerStart = markerStart;\n  });\n  markerFolder.add(markerConfig, 'markerMid', ['path', 'circle', 'image', 'null']).onChange(function (markerMidStr) {\n    var markerMid;\n\n    if (markerMidStr === 'path') {\n      markerMid = arrowMarker.cloneNode();\n    } else if (markerMidStr === 'circle') {\n      markerMid = circleMarker.cloneNode();\n    } else if (markerMidStr === 'image') {\n      markerMid = imageMarker.cloneNode();\n    } else {\n      markerMid = null;\n    }\n\n    path3.style.markerMid = markerMid;\n  });\n  markerFolder.add(markerConfig, 'markerEnd', ['path', 'circle', 'image', 'null']).onChange(function (markerEndStr) {\n    var markerEnd;\n\n    if (markerEndStr === 'path') {\n      markerEnd = arrowMarker.cloneNode();\n    } else if (markerEndStr === 'circle') {\n      markerEnd = circleMarker.cloneNode();\n    } else if (markerEndStr === 'image') {\n      markerEnd = imageMarker.cloneNode();\n    } else {\n      markerEnd = null;\n    }\n\n    path3.style.markerEnd = markerEnd;\n  });\n  markerFolder.add(markerConfig, 'markerStartOffset', -20, 20).onChange(function (markerStartOffset) {\n    path3.style.markerStartOffset = markerStartOffset;\n  });\n  markerFolder.add(markerConfig, 'markerEndOffset', -20, 20).onChange(function (markerEndOffset) {\n    path3.style.markerEndOffset = markerEndOffset;\n  });\n  markerFolder.open();\n});"},{"relativePath":"shape/demo/polygon.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/shape/demo/polygon.js","order":6,"filename":"polygon.js","title":{"zh":"多边形","en":"Polygon"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*ooeZRJF65nIAAAAAAAAAAABkARQnAQ","source":"import { Canvas, CanvasEvent, Circle, Image, Path, Polygon } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf',\n    },\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\n// create a polygon\nconst polygon = new Polygon({\n  style: {\n    points: [\n      [200, 100],\n      [400, 100],\n      [400 + 200 * Math.sin(Math.PI / 6), 100 + 200 * Math.cos(Math.PI / 6)],\n      [400, 100 + 200 * Math.cos(Math.PI / 6) * 2],\n      [200, 100 + 200 * Math.cos(Math.PI / 6) * 2],\n      [200 - 200 * Math.sin(Math.PI / 6), 100 + 200 * Math.cos(Math.PI / 6)],\n    ],\n    fill: '#C6E5FF',\n    stroke: '#1890FF',\n    lineWidth: 2,\n    cursor: 'pointer',\n  },\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  // add a polygon to canvas\n  canvas.appendChild(polygon);\n});\n\nconst arrowMarker = new Path({\n  style: {\n    path: 'M 10,10 L -10,0 L 10,-10 Z',\n    stroke: '#1890FF',\n    anchor: '0.5 0.5',\n    transformOrigin: 'center',\n  },\n});\nconst circleMarker = new Circle({\n  style: {\n    r: 10,\n    stroke: '#1890FF',\n  },\n});\nconst imageMarker = new Image({\n  style: {\n    width: 50,\n    height: 50,\n    anchor: [0.5, 0.5],\n    transformOrigin: 'center',\n    transform: 'rotate(90deg)',\n    img: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ',\n  },\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n\nconst polygonFolder = gui.addFolder('polygon');\nconst polygonConfig = {\n  fill: '#C6E5FF',\n  stroke: '#1890FF',\n  lineWidth: 2,\n  fillOpacity: 1,\n  strokeOpacity: 1,\n  anchorX: 0,\n  anchorY: 0,\n  lineDash: 0,\n  lineDashOffset: 0,\n  increasedLineWidthForHitTesting: 0,\n  cursor: 'pointer',\n  shadowColor: '#fff',\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  pointerEvents: 'auto',\n  visibility: 'visible',\n};\npolygonFolder.addColor(polygonConfig, 'fill').onChange((color) => {\n  polygon.style.fill = color;\n});\npolygonFolder.addColor(polygonConfig, 'stroke').onChange((color) => {\n  polygon.style.stroke = color;\n});\npolygonFolder.add(polygonConfig, 'lineWidth', 1, 20).onChange((lineWidth) => {\n  polygon.style.lineWidth = lineWidth;\n});\npolygonFolder.add(polygonConfig, 'lineDash', 0, 100).onChange((lineDash) => {\n  polygon.style.lineDash = [lineDash];\n});\npolygonFolder.add(polygonConfig, 'lineDashOffset', 0, 100).onChange((lineDashOffset) => {\n  polygon.style.lineDashOffset = lineDashOffset;\n});\npolygonFolder.add(polygonConfig, 'fillOpacity', 0, 1, 0.1).onChange((opacity) => {\n  polygon.style.fillOpacity = opacity;\n});\npolygonFolder.add(polygonConfig, 'strokeOpacity', 0, 1, 0.1).onChange((opacity) => {\n  polygon.style.strokeOpacity = opacity;\n});\npolygonFolder\n  .add(polygonConfig, 'increasedLineWidthForHitTesting', 0, 200)\n  .onChange((increasedLineWidthForHitTesting) => {\n    polygon.style.increasedLineWidthForHitTesting = increasedLineWidthForHitTesting;\n  });\npolygonFolder\n  .add(polygonConfig, 'cursor', ['default', 'pointer', 'help', 'progress', 'text', 'move'])\n  .onChange((cursor) => {\n    polygon.style.cursor = cursor;\n  });\npolygonFolder.addColor(polygonConfig, 'shadowColor').onChange((color) => {\n  polygon.attr('shadowColor', color);\n});\npolygonFolder.add(polygonConfig, 'shadowBlur', 0, 100).onChange((shadowBlur) => {\n  polygon.style.shadowBlur = shadowBlur;\n});\npolygonFolder.add(polygonConfig, 'shadowOffsetX', -50, 50).onChange((shadowOffsetX) => {\n  polygon.style.shadowOffsetX = shadowOffsetX;\n});\npolygonFolder.add(polygonConfig, 'shadowOffsetY', -50, 50).onChange((shadowOffsetY) => {\n  polygon.style.shadowOffsetY = shadowOffsetY;\n});\npolygonFolder\n  .add(polygonConfig, 'pointerEvents', [\n    'none',\n    'auto',\n    'stroke',\n    'fill',\n    'painted',\n    'visible',\n    'visiblestroke',\n    'visiblefill',\n    'visiblepainted',\n    'all',\n  ])\n  .onChange((pointerEvents) => {\n    polygon.style.pointerEvents = pointerEvents;\n  });\npolygonFolder.add(polygonConfig, 'visibility', ['visible', 'hidden']).onChange((visibility) => {\n  polygon.style.visibility = visibility;\n});\n\nconst transformFolder = gui.addFolder('transform');\nconst transformConfig = {\n  localPositionX: 100,\n  localPositionY: 100,\n  localScale: 1,\n  localEulerAngles: 0,\n  transformOrigin: 'left top',\n  anchorX: 0,\n  anchorY: 0,\n};\ntransformFolder\n  .add(transformConfig, 'transformOrigin', [\n    'left top',\n    'center',\n    'right bottom',\n    '50% 50%',\n    '50px 50px',\n  ])\n  .onChange((transformOrigin) => {\n    polygon.style.transformOrigin = transformOrigin;\n  });\ntransformFolder.add(transformConfig, 'localPositionX', 0, 600).onChange((localPositionX) => {\n  const [lx, ly] = polygon.getLocalPosition();\n  polygon.setLocalPosition(localPositionX, ly);\n});\ntransformFolder.add(transformConfig, 'localPositionY', 0, 500).onChange((localPositionY) => {\n  const [lx, ly] = polygon.getLocalPosition();\n  polygon.setLocalPosition(lx, localPositionY);\n});\ntransformFolder.add(transformConfig, 'localScale', 0.2, 5).onChange((localScale) => {\n  polygon.setLocalScale(localScale);\n});\ntransformFolder.add(transformConfig, 'localEulerAngles', 0, 360).onChange((localEulerAngles) => {\n  polygon.setLocalEulerAngles(localEulerAngles);\n});\ntransformFolder.add(transformConfig, 'anchorX', 0, 1).onChange((anchorX) => {\n  polygon.style.anchor = [anchorX, transformConfig.anchorY];\n});\ntransformFolder.add(transformConfig, 'anchorY', 0, 1).onChange((anchorY) => {\n  polygon.style.anchor = [transformConfig.anchorX, anchorY];\n});\ntransformFolder.close();\n\nconst markerFolder = gui.addFolder('marker');\nconst markerConfig = {\n  markerStart: 'null',\n  markerEnd: 'null',\n  markerMid: 'null',\n  markerStartOffset: 0,\n  markerEndOffset: 0,\n};\nmarkerFolder\n  .add(markerConfig, 'markerStart', ['path', 'circle', 'image', 'null'])\n  .onChange((markerStartStr) => {\n    let markerStart;\n    if (markerStartStr === 'path') {\n      markerStart = arrowMarker.cloneNode();\n    } else if (markerStartStr === 'circle') {\n      markerStart = circleMarker.cloneNode();\n    } else if (markerStartStr === 'image') {\n      markerStart = imageMarker.cloneNode();\n    } else {\n      markerStart = null;\n    }\n\n    polygon.style.markerStart = markerStart;\n  });\nmarkerFolder\n  .add(markerConfig, 'markerMid', ['path', 'circle', 'image', 'null'])\n  .onChange((markerMidStr) => {\n    let markerMid;\n    if (markerMidStr === 'path') {\n      markerMid = arrowMarker.cloneNode();\n    } else if (markerMidStr === 'circle') {\n      markerMid = circleMarker.cloneNode();\n    } else if (markerMidStr === 'image') {\n      markerMid = imageMarker.cloneNode();\n    } else {\n      markerMid = null;\n    }\n\n    polygon.style.markerMid = markerMid;\n  });\nmarkerFolder\n  .add(markerConfig, 'markerEnd', ['path', 'circle', 'image', 'null'])\n  .onChange((markerEndStr) => {\n    let markerEnd;\n    if (markerEndStr === 'path') {\n      markerEnd = arrowMarker.cloneNode();\n    } else if (markerEndStr === 'circle') {\n      markerEnd = circleMarker.cloneNode();\n    } else if (markerEndStr === 'image') {\n      markerEnd = imageMarker.cloneNode();\n    } else {\n      markerEnd = null;\n    }\n\n    polygon.style.markerEnd = markerEnd;\n  });\nmarkerFolder.add(markerConfig, 'markerStartOffset', -20, 20).onChange((markerStartOffset) => {\n  polygon.style.markerStartOffset = markerStartOffset;\n});\nmarkerFolder.add(markerConfig, 'markerEndOffset', -20, 20).onChange((markerEndOffset) => {\n  polygon.style.markerEndOffset = markerEndOffset;\n});\nmarkerFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.polygon = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf'\n    }, {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  }); // create a polygon\n\n  var polygon = new _g.Polygon({\n    style: {\n      points: [[200, 100], [400, 100], [400 + 200 * Math.sin(Math.PI / 6), 100 + 200 * Math.cos(Math.PI / 6)], [400, 100 + 200 * Math.cos(Math.PI / 6) * 2], [200, 100 + 200 * Math.cos(Math.PI / 6) * 2], [200 - 200 * Math.sin(Math.PI / 6), 100 + 200 * Math.cos(Math.PI / 6)]],\n      fill: '#C6E5FF',\n      stroke: '#1890FF',\n      lineWidth: 2,\n      cursor: 'pointer'\n    }\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    // add a polygon to canvas\n    canvas.appendChild(polygon);\n  });\n  var arrowMarker = new _g.Path({\n    style: {\n      path: 'M 10,10 L -10,0 L 10,-10 Z',\n      stroke: '#1890FF',\n      anchor: '0.5 0.5',\n      transformOrigin: 'center'\n    }\n  });\n  var circleMarker = new _g.Circle({\n    style: {\n      r: 10,\n      stroke: '#1890FF'\n    }\n  });\n  var imageMarker = new _g.Image({\n    style: {\n      width: 50,\n      height: 50,\n      anchor: [0.5, 0.5],\n      transformOrigin: 'center',\n      transform: 'rotate(90deg)',\n      img: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ'\n    }\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n  var polygonFolder = gui.addFolder('polygon');\n  var polygonConfig = {\n    fill: '#C6E5FF',\n    stroke: '#1890FF',\n    lineWidth: 2,\n    fillOpacity: 1,\n    strokeOpacity: 1,\n    anchorX: 0,\n    anchorY: 0,\n    lineDash: 0,\n    lineDashOffset: 0,\n    increasedLineWidthForHitTesting: 0,\n    cursor: 'pointer',\n    shadowColor: '#fff',\n    shadowBlur: 0,\n    shadowOffsetX: 0,\n    shadowOffsetY: 0,\n    pointerEvents: 'auto',\n    visibility: 'visible'\n  };\n  polygonFolder.addColor(polygonConfig, 'fill').onChange(function (color) {\n    polygon.style.fill = color;\n  });\n  polygonFolder.addColor(polygonConfig, 'stroke').onChange(function (color) {\n    polygon.style.stroke = color;\n  });\n  polygonFolder.add(polygonConfig, 'lineWidth', 1, 20).onChange(function (lineWidth) {\n    polygon.style.lineWidth = lineWidth;\n  });\n  polygonFolder.add(polygonConfig, 'lineDash', 0, 100).onChange(function (lineDash) {\n    polygon.style.lineDash = [lineDash];\n  });\n  polygonFolder.add(polygonConfig, 'lineDashOffset', 0, 100).onChange(function (lineDashOffset) {\n    polygon.style.lineDashOffset = lineDashOffset;\n  });\n  polygonFolder.add(polygonConfig, 'fillOpacity', 0, 1, 0.1).onChange(function (opacity) {\n    polygon.style.fillOpacity = opacity;\n  });\n  polygonFolder.add(polygonConfig, 'strokeOpacity', 0, 1, 0.1).onChange(function (opacity) {\n    polygon.style.strokeOpacity = opacity;\n  });\n  polygonFolder.add(polygonConfig, 'increasedLineWidthForHitTesting', 0, 200).onChange(function (increasedLineWidthForHitTesting) {\n    polygon.style.increasedLineWidthForHitTesting = increasedLineWidthForHitTesting;\n  });\n  polygonFolder.add(polygonConfig, 'cursor', ['default', 'pointer', 'help', 'progress', 'text', 'move']).onChange(function (cursor) {\n    polygon.style.cursor = cursor;\n  });\n  polygonFolder.addColor(polygonConfig, 'shadowColor').onChange(function (color) {\n    polygon.attr('shadowColor', color);\n  });\n  polygonFolder.add(polygonConfig, 'shadowBlur', 0, 100).onChange(function (shadowBlur) {\n    polygon.style.shadowBlur = shadowBlur;\n  });\n  polygonFolder.add(polygonConfig, 'shadowOffsetX', -50, 50).onChange(function (shadowOffsetX) {\n    polygon.style.shadowOffsetX = shadowOffsetX;\n  });\n  polygonFolder.add(polygonConfig, 'shadowOffsetY', -50, 50).onChange(function (shadowOffsetY) {\n    polygon.style.shadowOffsetY = shadowOffsetY;\n  });\n  polygonFolder.add(polygonConfig, 'pointerEvents', ['none', 'auto', 'stroke', 'fill', 'painted', 'visible', 'visiblestroke', 'visiblefill', 'visiblepainted', 'all']).onChange(function (pointerEvents) {\n    polygon.style.pointerEvents = pointerEvents;\n  });\n  polygonFolder.add(polygonConfig, 'visibility', ['visible', 'hidden']).onChange(function (visibility) {\n    polygon.style.visibility = visibility;\n  });\n  var transformFolder = gui.addFolder('transform');\n  var transformConfig = {\n    localPositionX: 100,\n    localPositionY: 100,\n    localScale: 1,\n    localEulerAngles: 0,\n    transformOrigin: 'left top',\n    anchorX: 0,\n    anchorY: 0\n  };\n  transformFolder.add(transformConfig, 'transformOrigin', ['left top', 'center', 'right bottom', '50% 50%', '50px 50px']).onChange(function (transformOrigin) {\n    polygon.style.transformOrigin = transformOrigin;\n  });\n  transformFolder.add(transformConfig, 'localPositionX', 0, 600).onChange(function (localPositionX) {\n    var _polygon$getLocalPosi = polygon.getLocalPosition(),\n        _polygon$getLocalPosi2 = _slicedToArray(_polygon$getLocalPosi, 2),\n        lx = _polygon$getLocalPosi2[0],\n        ly = _polygon$getLocalPosi2[1];\n\n    polygon.setLocalPosition(localPositionX, ly);\n  });\n  transformFolder.add(transformConfig, 'localPositionY', 0, 500).onChange(function (localPositionY) {\n    var _polygon$getLocalPosi3 = polygon.getLocalPosition(),\n        _polygon$getLocalPosi4 = _slicedToArray(_polygon$getLocalPosi3, 2),\n        lx = _polygon$getLocalPosi4[0],\n        ly = _polygon$getLocalPosi4[1];\n\n    polygon.setLocalPosition(lx, localPositionY);\n  });\n  transformFolder.add(transformConfig, 'localScale', 0.2, 5).onChange(function (localScale) {\n    polygon.setLocalScale(localScale);\n  });\n  transformFolder.add(transformConfig, 'localEulerAngles', 0, 360).onChange(function (localEulerAngles) {\n    polygon.setLocalEulerAngles(localEulerAngles);\n  });\n  transformFolder.add(transformConfig, 'anchorX', 0, 1).onChange(function (anchorX) {\n    polygon.style.anchor = [anchorX, transformConfig.anchorY];\n  });\n  transformFolder.add(transformConfig, 'anchorY', 0, 1).onChange(function (anchorY) {\n    polygon.style.anchor = [transformConfig.anchorX, anchorY];\n  });\n  transformFolder.close();\n  var markerFolder = gui.addFolder('marker');\n  var markerConfig = {\n    markerStart: 'null',\n    markerEnd: 'null',\n    markerMid: 'null',\n    markerStartOffset: 0,\n    markerEndOffset: 0\n  };\n  markerFolder.add(markerConfig, 'markerStart', ['path', 'circle', 'image', 'null']).onChange(function (markerStartStr) {\n    var markerStart;\n\n    if (markerStartStr === 'path') {\n      markerStart = arrowMarker.cloneNode();\n    } else if (markerStartStr === 'circle') {\n      markerStart = circleMarker.cloneNode();\n    } else if (markerStartStr === 'image') {\n      markerStart = imageMarker.cloneNode();\n    } else {\n      markerStart = null;\n    }\n\n    polygon.style.markerStart = markerStart;\n  });\n  markerFolder.add(markerConfig, 'markerMid', ['path', 'circle', 'image', 'null']).onChange(function (markerMidStr) {\n    var markerMid;\n\n    if (markerMidStr === 'path') {\n      markerMid = arrowMarker.cloneNode();\n    } else if (markerMidStr === 'circle') {\n      markerMid = circleMarker.cloneNode();\n    } else if (markerMidStr === 'image') {\n      markerMid = imageMarker.cloneNode();\n    } else {\n      markerMid = null;\n    }\n\n    polygon.style.markerMid = markerMid;\n  });\n  markerFolder.add(markerConfig, 'markerEnd', ['path', 'circle', 'image', 'null']).onChange(function (markerEndStr) {\n    var markerEnd;\n\n    if (markerEndStr === 'path') {\n      markerEnd = arrowMarker.cloneNode();\n    } else if (markerEndStr === 'circle') {\n      markerEnd = circleMarker.cloneNode();\n    } else if (markerEndStr === 'image') {\n      markerEnd = imageMarker.cloneNode();\n    } else {\n      markerEnd = null;\n    }\n\n    polygon.style.markerEnd = markerEnd;\n  });\n  markerFolder.add(markerConfig, 'markerStartOffset', -20, 20).onChange(function (markerStartOffset) {\n    polygon.style.markerStartOffset = markerStartOffset;\n  });\n  markerFolder.add(markerConfig, 'markerEndOffset', -20, 20).onChange(function (markerEndOffset) {\n    polygon.style.markerEndOffset = markerEndOffset;\n  });\n  markerFolder.open();\n});"},{"relativePath":"shape/demo/rect.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/shape/demo/rect.js","order":2,"filename":"rect.js","title":{"zh":"矩形","en":"Rectangle"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*owKfQKVFG1wAAAAAAAAAAABkARQnAQ","source":"import { Canvas, CanvasEvent, Rect } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf',\n    },\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\nconst rect = new Rect({\n  style: {\n    x: 100,\n    y: 100,\n    width: 300,\n    height: 200,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 4,\n    radius: [0, 4, 8, 16],\n    cursor: 'pointer',\n  },\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  canvas.appendChild(rect);\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n\nconst rectFolder = gui.addFolder('rect');\nconst rectConfig = {\n  x: 200,\n  y: 100,\n  width: 300,\n  height: 200,\n  fill: '#1890FF',\n  stroke: '#F04864',\n  lineWidth: 4,\n  lineDash: 0,\n  lineDashOffset: 0,\n  radiusTL: 0,\n  radiusTR: 4,\n  radiusBR: 8,\n  radiusBL: 16,\n  fillOpacity: 1,\n  strokeOpacity: 1,\n  increasedLineWidthForHitTesting: 0,\n  cursor: 'pointer',\n  shadowColor: '#fff',\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  pointerEvents: 'auto',\n  visibility: 'visible',\n};\nrectFolder.add(rectConfig, 'x', 0, 400).onChange((x) => {\n  rect.style.x = x;\n});\nrectFolder.add(rectConfig, 'y', 0, 400).onChange((y) => {\n  rect.style.y = y;\n});\nrectFolder.add(rectConfig, 'width', -400, 400).onChange((width) => {\n  rect.style.width = width;\n});\nrectFolder.add(rectConfig, 'height', -400, 400).onChange((height) => {\n  rect.style.height = height;\n});\nrectFolder.addColor(rectConfig, 'fill').onChange((color) => {\n  rect.style.fill = color;\n});\nrectFolder.addColor(rectConfig, 'stroke').onChange((color) => {\n  rect.style.stroke = color;\n});\nrectFolder.add(rectConfig, 'radiusTL', 0, 20).onChange((radiusTL) => {\n  rect.style.radius = [radiusTL, rectConfig.radiusTR, rectConfig.radiusBR, rectConfig.radiusBL];\n});\nrectFolder.add(rectConfig, 'radiusTR', 0, 20).onChange((radiusTR) => {\n  rect.style.radius = [rectConfig.radiusTL, radiusTR, rectConfig.radiusBR, rectConfig.radiusBL];\n});\nrectFolder.add(rectConfig, 'radiusBR', 0, 20).onChange((radiusBR) => {\n  rect.style.radius = [rectConfig.radiusTL, rectConfig.radiusTR, radiusBR, rectConfig.radiusBL];\n});\nrectFolder.add(rectConfig, 'radiusBL', 0, 20).onChange((radiusBL) => {\n  rect.style.radius = [rectConfig.radiusTL, rectConfig.radiusTR, rectConfig.radiusBR, radiusBL];\n});\nrectFolder.add(rectConfig, 'lineWidth', 1, 20).onChange((lineWidth) => {\n  rect.style.lineWidth = lineWidth;\n});\nrectFolder.add(rectConfig, 'lineDash', 0, 100).onChange((lineDash) => {\n  rect.style.lineDash = [lineDash];\n});\nrectFolder.add(rectConfig, 'lineDashOffset', 0, 100).onChange((lineDashOffset) => {\n  rect.style.lineDashOffset = lineDashOffset;\n});\nrectFolder.add(rectConfig, 'fillOpacity', 0, 1, 0.1).onChange((opacity) => {\n  rect.style.fillOpacity = opacity;\n});\nrectFolder.add(rectConfig, 'strokeOpacity', 0, 1, 0.1).onChange((opacity) => {\n  rect.style.strokeOpacity = opacity;\n});\nrectFolder\n  .add(rectConfig, 'increasedLineWidthForHitTesting', 0, 200)\n  .onChange((increasedLineWidthForHitTesting) => {\n    rect.style.increasedLineWidthForHitTesting = increasedLineWidthForHitTesting;\n  });\nrectFolder\n  .add(rectConfig, 'cursor', ['default', 'pointer', 'help', 'progress', 'text', 'move'])\n  .onChange((cursor) => {\n    rect.style.cursor = cursor;\n  });\nrectFolder.addColor(rectConfig, 'shadowColor').onChange((color) => {\n  rect.attr('shadowColor', color);\n});\nrectFolder.add(rectConfig, 'shadowBlur', 0, 100).onChange((shadowBlur) => {\n  rect.style.shadowBlur = shadowBlur;\n});\nrectFolder.add(rectConfig, 'shadowOffsetX', -50, 50).onChange((shadowOffsetX) => {\n  rect.style.shadowOffsetX = shadowOffsetX;\n});\nrectFolder.add(rectConfig, 'shadowOffsetY', -50, 50).onChange((shadowOffsetY) => {\n  rect.style.shadowOffsetY = shadowOffsetY;\n});\nrectFolder\n  .add(rectConfig, 'pointerEvents', [\n    'none',\n    'auto',\n    'stroke',\n    'fill',\n    'painted',\n    'visible',\n    'visiblestroke',\n    'visiblefill',\n    'visiblepainted',\n    'all',\n  ])\n  .onChange((pointerEvents) => {\n    rect.style.pointerEvents = pointerEvents;\n  });\nrectFolder.add(rectConfig, 'visibility', ['visible', 'hidden']).onChange((visibility) => {\n  rect.style.visibility = visibility;\n});\nrectFolder.open();\n\nconst transformFolder = gui.addFolder('transform');\nconst transformConfig = {\n  localPositionX: 200,\n  localPositionY: 100,\n  localScale: 1,\n  localEulerAngles: 0,\n  transformOrigin: 'left top',\n  anchorX: 0,\n  anchorY: 0,\n};\ntransformFolder\n  .add(transformConfig, 'transformOrigin', [\n    'left top',\n    'center',\n    'right bottom',\n    '50% 50%',\n    '50px 50px',\n  ])\n  .onChange((transformOrigin) => {\n    rect.style.transformOrigin = transformOrigin;\n  });\ntransformFolder.add(transformConfig, 'localPositionX', 0, 600).onChange((localPositionX) => {\n  const [lx, ly] = rect.getLocalPosition();\n  rect.setLocalPosition(localPositionX, ly);\n});\ntransformFolder.add(transformConfig, 'localPositionY', 0, 500).onChange((localPositionY) => {\n  const [lx, ly] = rect.getLocalPosition();\n  rect.setLocalPosition(lx, localPositionY);\n});\ntransformFolder.add(transformConfig, 'localScale', 0.2, 5).onChange((localScale) => {\n  rect.setLocalScale(localScale);\n});\ntransformFolder.add(transformConfig, 'localEulerAngles', 0, 360).onChange((localEulerAngles) => {\n  rect.setLocalEulerAngles(localEulerAngles);\n});\ntransformFolder.add(transformConfig, 'anchorX', 0, 1).onChange((anchorX) => {\n  rect.style.anchor = [anchorX, transformConfig.anchorY];\n});\ntransformFolder.add(transformConfig, 'anchorY', 0, 1).onChange((anchorY) => {\n  rect.style.anchor = [transformConfig.anchorX, anchorY];\n});\ntransformFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.rect = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf'\n    }, {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  var rect = new _g.Rect({\n    style: {\n      x: 100,\n      y: 100,\n      width: 300,\n      height: 200,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n      radius: [0, 4, 8, 16],\n      cursor: 'pointer'\n    }\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    canvas.appendChild(rect);\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n  var rectFolder = gui.addFolder('rect');\n  var rectConfig = {\n    x: 200,\n    y: 100,\n    width: 300,\n    height: 200,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 4,\n    lineDash: 0,\n    lineDashOffset: 0,\n    radiusTL: 0,\n    radiusTR: 4,\n    radiusBR: 8,\n    radiusBL: 16,\n    fillOpacity: 1,\n    strokeOpacity: 1,\n    increasedLineWidthForHitTesting: 0,\n    cursor: 'pointer',\n    shadowColor: '#fff',\n    shadowBlur: 0,\n    shadowOffsetX: 0,\n    shadowOffsetY: 0,\n    pointerEvents: 'auto',\n    visibility: 'visible'\n  };\n  rectFolder.add(rectConfig, 'x', 0, 400).onChange(function (x) {\n    rect.style.x = x;\n  });\n  rectFolder.add(rectConfig, 'y', 0, 400).onChange(function (y) {\n    rect.style.y = y;\n  });\n  rectFolder.add(rectConfig, 'width', -400, 400).onChange(function (width) {\n    rect.style.width = width;\n  });\n  rectFolder.add(rectConfig, 'height', -400, 400).onChange(function (height) {\n    rect.style.height = height;\n  });\n  rectFolder.addColor(rectConfig, 'fill').onChange(function (color) {\n    rect.style.fill = color;\n  });\n  rectFolder.addColor(rectConfig, 'stroke').onChange(function (color) {\n    rect.style.stroke = color;\n  });\n  rectFolder.add(rectConfig, 'radiusTL', 0, 20).onChange(function (radiusTL) {\n    rect.style.radius = [radiusTL, rectConfig.radiusTR, rectConfig.radiusBR, rectConfig.radiusBL];\n  });\n  rectFolder.add(rectConfig, 'radiusTR', 0, 20).onChange(function (radiusTR) {\n    rect.style.radius = [rectConfig.radiusTL, radiusTR, rectConfig.radiusBR, rectConfig.radiusBL];\n  });\n  rectFolder.add(rectConfig, 'radiusBR', 0, 20).onChange(function (radiusBR) {\n    rect.style.radius = [rectConfig.radiusTL, rectConfig.radiusTR, radiusBR, rectConfig.radiusBL];\n  });\n  rectFolder.add(rectConfig, 'radiusBL', 0, 20).onChange(function (radiusBL) {\n    rect.style.radius = [rectConfig.radiusTL, rectConfig.radiusTR, rectConfig.radiusBR, radiusBL];\n  });\n  rectFolder.add(rectConfig, 'lineWidth', 1, 20).onChange(function (lineWidth) {\n    rect.style.lineWidth = lineWidth;\n  });\n  rectFolder.add(rectConfig, 'lineDash', 0, 100).onChange(function (lineDash) {\n    rect.style.lineDash = [lineDash];\n  });\n  rectFolder.add(rectConfig, 'lineDashOffset', 0, 100).onChange(function (lineDashOffset) {\n    rect.style.lineDashOffset = lineDashOffset;\n  });\n  rectFolder.add(rectConfig, 'fillOpacity', 0, 1, 0.1).onChange(function (opacity) {\n    rect.style.fillOpacity = opacity;\n  });\n  rectFolder.add(rectConfig, 'strokeOpacity', 0, 1, 0.1).onChange(function (opacity) {\n    rect.style.strokeOpacity = opacity;\n  });\n  rectFolder.add(rectConfig, 'increasedLineWidthForHitTesting', 0, 200).onChange(function (increasedLineWidthForHitTesting) {\n    rect.style.increasedLineWidthForHitTesting = increasedLineWidthForHitTesting;\n  });\n  rectFolder.add(rectConfig, 'cursor', ['default', 'pointer', 'help', 'progress', 'text', 'move']).onChange(function (cursor) {\n    rect.style.cursor = cursor;\n  });\n  rectFolder.addColor(rectConfig, 'shadowColor').onChange(function (color) {\n    rect.attr('shadowColor', color);\n  });\n  rectFolder.add(rectConfig, 'shadowBlur', 0, 100).onChange(function (shadowBlur) {\n    rect.style.shadowBlur = shadowBlur;\n  });\n  rectFolder.add(rectConfig, 'shadowOffsetX', -50, 50).onChange(function (shadowOffsetX) {\n    rect.style.shadowOffsetX = shadowOffsetX;\n  });\n  rectFolder.add(rectConfig, 'shadowOffsetY', -50, 50).onChange(function (shadowOffsetY) {\n    rect.style.shadowOffsetY = shadowOffsetY;\n  });\n  rectFolder.add(rectConfig, 'pointerEvents', ['none', 'auto', 'stroke', 'fill', 'painted', 'visible', 'visiblestroke', 'visiblefill', 'visiblepainted', 'all']).onChange(function (pointerEvents) {\n    rect.style.pointerEvents = pointerEvents;\n  });\n  rectFolder.add(rectConfig, 'visibility', ['visible', 'hidden']).onChange(function (visibility) {\n    rect.style.visibility = visibility;\n  });\n  rectFolder.open();\n  var transformFolder = gui.addFolder('transform');\n  var transformConfig = {\n    localPositionX: 200,\n    localPositionY: 100,\n    localScale: 1,\n    localEulerAngles: 0,\n    transformOrigin: 'left top',\n    anchorX: 0,\n    anchorY: 0\n  };\n  transformFolder.add(transformConfig, 'transformOrigin', ['left top', 'center', 'right bottom', '50% 50%', '50px 50px']).onChange(function (transformOrigin) {\n    rect.style.transformOrigin = transformOrigin;\n  });\n  transformFolder.add(transformConfig, 'localPositionX', 0, 600).onChange(function (localPositionX) {\n    var _rect$getLocalPositio = rect.getLocalPosition(),\n        _rect$getLocalPositio2 = _slicedToArray(_rect$getLocalPositio, 2),\n        lx = _rect$getLocalPositio2[0],\n        ly = _rect$getLocalPositio2[1];\n\n    rect.setLocalPosition(localPositionX, ly);\n  });\n  transformFolder.add(transformConfig, 'localPositionY', 0, 500).onChange(function (localPositionY) {\n    var _rect$getLocalPositio3 = rect.getLocalPosition(),\n        _rect$getLocalPositio4 = _slicedToArray(_rect$getLocalPositio3, 2),\n        lx = _rect$getLocalPositio4[0],\n        ly = _rect$getLocalPositio4[1];\n\n    rect.setLocalPosition(lx, localPositionY);\n  });\n  transformFolder.add(transformConfig, 'localScale', 0.2, 5).onChange(function (localScale) {\n    rect.setLocalScale(localScale);\n  });\n  transformFolder.add(transformConfig, 'localEulerAngles', 0, 360).onChange(function (localEulerAngles) {\n    rect.setLocalEulerAngles(localEulerAngles);\n  });\n  transformFolder.add(transformConfig, 'anchorX', 0, 1).onChange(function (anchorX) {\n    rect.style.anchor = [anchorX, transformConfig.anchorY];\n  });\n  transformFolder.add(transformConfig, 'anchorY', 0, 1).onChange(function (anchorY) {\n    rect.style.anchor = [transformConfig.anchorX, anchorY];\n  });\n  transformFolder.open();\n});"},{"relativePath":"shape/demo/text.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/shape/demo/text.js","order":7,"filename":"text.js","title":{"zh":"文本","en":"Text"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*FdtgQLndl8IAAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent, Circle, Rect, Text } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\nimport WebFont from 'webfontloader';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSansCJKsc-VF.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\n// create a line of text\nconst text = new Text({\n  style: {\n    x: 100,\n    y: 300,\n    fontFamily: 'PingFang SC',\n    text: '这是测试文本This is text',\n    fontSize: 60,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 5,\n  },\n});\n\n// display anchor\nconst origin = new Circle({\n  style: {\n    r: 20,\n    fill: 'red',\n  },\n});\norigin.setPosition(text.getPosition());\n\n// display bounds\nconst bounds = new Rect({\n  style: {\n    stroke: 'black',\n    lineWidth: 2,\n  },\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  canvas.appendChild(bounds);\n  canvas.appendChild(text);\n  canvas.appendChild(origin);\n\n  WebFont.load({\n    google: {\n      families: ['Gaegu'],\n    },\n    active: () => {\n      const text = new Text({\n        style: {\n          x: 100,\n          y: 100,\n          fontFamily: 'Gaegu',\n          text: 'Almost before we knew it, we had left the ground.',\n          fontSize: 30,\n          fill: '#1890FF',\n          stroke: '#F04864',\n          lineWidth: 5,\n        },\n      });\n      canvas.appendChild(text);\n    },\n  });\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n\n  const bounding = text.getBounds();\n  if (bounding) {\n    const { center, halfExtents } = bounding;\n    bounds.attr('width', halfExtents[0] * 2);\n    bounds.attr('height', halfExtents[1] * 2);\n    bounds.setPosition(center[0] - halfExtents[0], center[1] - halfExtents[1]);\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n\nconst fontFolder = gui.addFolder('font');\nconst fontConfig = {\n  text: '这是测试文本This is text',\n  fontFamily: 'PingFang SC',\n  fontSize: 60,\n  fontStyle: 'normal',\n  fontWeight: 'normal',\n  fontVariant: 'normal',\n  textTransform: 'none',\n};\nfontFolder.add(fontConfig, 'text').onFinishChange((content) => {\n  text.attr('text', content);\n});\nfontFolder\n  .add(fontConfig, 'fontFamily', ['PingFang SC', 'fantasy', 'Arial', 'Times', 'Microsoft YaHei'])\n  .onChange((fontFamily) => {\n    text.attr('fontFamily', fontFamily);\n  });\nfontFolder.add(fontConfig, 'fontSize', 10, 100).onChange((fontSize) => {\n  text.attr('fontSize', fontSize);\n});\nfontFolder.add(fontConfig, 'fontStyle', ['normal', 'italic', 'oblique']).onChange((fontStyle) => {\n  text.attr('fontStyle', fontStyle);\n});\nfontFolder\n  .add(fontConfig, 'fontWeight', ['normal', 'bold', 'bolder', 'lighter', '100', '200', '400'])\n  .onChange((fontWeight) => {\n    text.attr('fontWeight', fontWeight);\n  });\nfontFolder.add(fontConfig, 'fontVariant', ['normal', 'small-caps']).onChange((fontVariant) => {\n  text.attr('fontVariant', fontVariant);\n});\nfontFolder\n  .add(fontConfig, 'textTransform', ['capitalize', 'uppercase', 'lowercase', 'none'])\n  .onChange((transform) => {\n    text.attr('textTransform', transform);\n  });\n\nconst fillStrokeFolder = gui.addFolder('fill & stroke');\nconst fillStrokeConfig = {\n  fill: '#1890FF',\n  fillOpacity: 1,\n  stroke: '#F04864',\n  strokeOpacity: 1,\n  lineWidth: 5,\n  lineJoin: 'miter',\n  visible: true,\n};\nfillStrokeFolder.addColor(fillStrokeConfig, 'fill').onChange((color) => {\n  text.attr('fill', color);\n});\nfillStrokeFolder.add(fillStrokeConfig, 'fillOpacity', 0, 1).onChange((fillOpacity) => {\n  text.attr('fillOpacity', fillOpacity);\n});\nfillStrokeFolder.addColor(fillStrokeConfig, 'stroke').onChange((color) => {\n  text.attr('stroke', color);\n});\nfillStrokeFolder.add(fillStrokeConfig, 'lineWidth', 0, 10).onChange((lineWidth) => {\n  text.attr('lineWidth', lineWidth);\n});\nfillStrokeFolder\n  .add(fillStrokeConfig, 'lineJoin', ['miter', 'round', 'bevel'])\n  .onChange((lineJoin) => {\n    text.attr('lineJoin', lineJoin);\n  });\nfillStrokeFolder.add(fillStrokeConfig, 'strokeOpacity', 0, 1).onChange((strokeOpacity) => {\n  text.attr('strokeOpacity', strokeOpacity);\n});\nfillStrokeFolder.add(fillStrokeConfig, 'visible').onChange((visible) => {\n  if (visible) {\n    text.style.visibility = 'visible';\n    // text.show();\n  } else {\n    text.style.visibility = 'hidden';\n    // text.hide();\n  }\n});\n\nconst layoutFolder = gui.addFolder('layout');\nconst layoutConfig = {\n  letterSpacing: 0,\n  textBaseline: 'alphabetic',\n};\nlayoutFolder.add(layoutConfig, 'letterSpacing', 0, 10).onChange((letterSpacing) => {\n  text.attr('letterSpacing', letterSpacing);\n});\nlayoutFolder\n  .add(layoutConfig, 'textBaseline', [\n    'alphabetic',\n    'bottom',\n    'middle',\n    'top',\n    'hanging',\n    'ideographic',\n  ])\n  .onChange((textBaseline) => {\n    text.attr('textBaseline', textBaseline);\n  });\n\nconst multilineFolder = gui.addFolder('multiline');\nconst multilineConfig = {\n  breakWords: false,\n  wordWrap: false,\n  wordWrapWidth: 100,\n  lineHeight: 0,\n  leading: 0,\n  textAlign: 'start',\n  whiteSpace: 'pre',\n};\nmultilineFolder.add(multilineConfig, 'breakWords').onChange((breakWords) => {\n  text.attr('breakWords', breakWords);\n});\nmultilineFolder.add(multilineConfig, 'wordWrap').onChange((wordWrap) => {\n  text.attr('wordWrap', wordWrap);\n});\n\nconst lineBlocks = [];\nmultilineFolder.add(multilineConfig, 'wordWrapWidth', 0, 500).onChange((wordWrapWidth) => {\n  text.attr('wordWrapWidth', wordWrapWidth);\n  lineBlocks.forEach((block) => block.remove());\n\n  text.getLineBoundingRects().forEach(({ x, y, width, height }) => {\n    const block = new Rect({\n      style: {\n        x,\n        y,\n        width,\n        height,\n        stroke: 'black',\n        lineWidth: 2,\n      },\n    });\n    lineBlocks.push(block);\n    text.appendChild(block);\n  });\n});\nmultilineFolder.add(multilineConfig, 'lineHeight', 0, 100).onChange((lineHeight) => {\n  text.attr('lineHeight', lineHeight);\n});\nmultilineFolder.add(multilineConfig, 'leading', 0, 30).onChange((leading) => {\n  text.attr('leading', leading);\n});\nmultilineFolder\n  .add(multilineConfig, 'textAlign', ['start', 'end', 'center', 'left', 'right'])\n  .onChange((textAlign) => {\n    text.attr('textAlign', textAlign);\n  });\nmultilineFolder\n  .add(multilineConfig, 'whiteSpace', ['pre', 'normal', 'pre-line'])\n  .onChange((whiteSpace) => {\n    text.attr('whiteSpace', whiteSpace);\n  });\n\nconst transformFolder = gui.addFolder('transform');\nconst transformConfig = {\n  localPositionX: 100,\n  localPositionY: 300,\n  localScale: 1,\n  localEulerAngles: 0,\n  transformOrigin: 'left top',\n  anchorX: 0,\n  anchorY: 0,\n  dx: 0,\n  dy: 0,\n};\ntransformFolder\n  .add(transformConfig, 'transformOrigin', [\n    'left top',\n    'center',\n    'right bottom',\n    '50% 50%',\n    '50px 50px',\n  ])\n  .onChange((transformOrigin) => {\n    text.style.transformOrigin = transformOrigin;\n  });\ntransformFolder.add(transformConfig, 'localPositionX', 0, 600).onChange((localPositionX) => {\n  const [lx, ly] = text.getLocalPosition();\n  text.setLocalPosition(localPositionX, ly);\n});\ntransformFolder.add(transformConfig, 'localPositionY', 0, 500).onChange((localPositionY) => {\n  const [lx, ly] = text.getLocalPosition();\n  text.setLocalPosition(lx, localPositionY);\n});\ntransformFolder.add(transformConfig, 'localScale', 0.2, 5).onChange((localScale) => {\n  text.setLocalScale(localScale);\n});\ntransformFolder.add(transformConfig, 'localEulerAngles', 0, 360).onChange((localEulerAngles) => {\n  text.setLocalEulerAngles(localEulerAngles);\n});\ntransformFolder.add(transformConfig, 'anchorX', 0, 1).onChange((anchorX) => {\n  text.style.anchor = [anchorX, transformConfig.anchorY];\n});\ntransformFolder.add(transformConfig, 'anchorY', 0, 1).onChange((anchorY) => {\n  text.style.anchor = [transformConfig.anchorX, anchorY];\n});\ntransformFolder.add(transformConfig, 'anchorX', 0, 1).onChange((anchorX) => {\n  text.style.anchor = [anchorX, transformConfig.anchorY];\n});\ntransformFolder.add(transformConfig, 'dx', -100, 100).onChange((dx) => {\n  text.style.dx = dx;\n});\ntransformFolder.add(transformConfig, 'dy', -100, 100).onChange((dy) => {\n  text.style.dy = dy;\n});\ntransformFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\", \"webfontloader\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"), require(\"webfontloader\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats, global.webfontloader);\n    global.text = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats, _webfontloader) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n  _webfontloader = _interopRequireDefault(_webfontloader);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSansCJKsc-VF.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  }); // create a line of text\n\n  var text = new _g.Text({\n    style: {\n      x: 100,\n      y: 300,\n      fontFamily: 'PingFang SC',\n      text: '这是测试文本This is text',\n      fontSize: 60,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 5\n    }\n  }); // display anchor\n\n  var origin = new _g.Circle({\n    style: {\n      r: 20,\n      fill: 'red'\n    }\n  });\n  origin.setPosition(text.getPosition()); // display bounds\n\n  var bounds = new _g.Rect({\n    style: {\n      stroke: 'black',\n      lineWidth: 2\n    }\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    canvas.appendChild(bounds);\n    canvas.appendChild(text);\n    canvas.appendChild(origin);\n\n    _webfontloader.default.load({\n      google: {\n        families: ['Gaegu']\n      },\n      active: function active() {\n        var text = new _g.Text({\n          style: {\n            x: 100,\n            y: 100,\n            fontFamily: 'Gaegu',\n            text: 'Almost before we knew it, we had left the ground.',\n            fontSize: 30,\n            fill: '#1890FF',\n            stroke: '#F04864',\n            lineWidth: 5\n          }\n        });\n        canvas.appendChild(text);\n      }\n    });\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n\n    var bounding = text.getBounds();\n\n    if (bounding) {\n      var center = bounding.center,\n          halfExtents = bounding.halfExtents;\n      bounds.attr('width', halfExtents[0] * 2);\n      bounds.attr('height', halfExtents[1] * 2);\n      bounds.setPosition(center[0] - halfExtents[0], center[1] - halfExtents[1]);\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n  var fontFolder = gui.addFolder('font');\n  var fontConfig = {\n    text: '这是测试文本This is text',\n    fontFamily: 'PingFang SC',\n    fontSize: 60,\n    fontStyle: 'normal',\n    fontWeight: 'normal',\n    fontVariant: 'normal',\n    textTransform: 'none'\n  };\n  fontFolder.add(fontConfig, 'text').onFinishChange(function (content) {\n    text.attr('text', content);\n  });\n  fontFolder.add(fontConfig, 'fontFamily', ['PingFang SC', 'fantasy', 'Arial', 'Times', 'Microsoft YaHei']).onChange(function (fontFamily) {\n    text.attr('fontFamily', fontFamily);\n  });\n  fontFolder.add(fontConfig, 'fontSize', 10, 100).onChange(function (fontSize) {\n    text.attr('fontSize', fontSize);\n  });\n  fontFolder.add(fontConfig, 'fontStyle', ['normal', 'italic', 'oblique']).onChange(function (fontStyle) {\n    text.attr('fontStyle', fontStyle);\n  });\n  fontFolder.add(fontConfig, 'fontWeight', ['normal', 'bold', 'bolder', 'lighter', '100', '200', '400']).onChange(function (fontWeight) {\n    text.attr('fontWeight', fontWeight);\n  });\n  fontFolder.add(fontConfig, 'fontVariant', ['normal', 'small-caps']).onChange(function (fontVariant) {\n    text.attr('fontVariant', fontVariant);\n  });\n  fontFolder.add(fontConfig, 'textTransform', ['capitalize', 'uppercase', 'lowercase', 'none']).onChange(function (transform) {\n    text.attr('textTransform', transform);\n  });\n  var fillStrokeFolder = gui.addFolder('fill & stroke');\n  var fillStrokeConfig = {\n    fill: '#1890FF',\n    fillOpacity: 1,\n    stroke: '#F04864',\n    strokeOpacity: 1,\n    lineWidth: 5,\n    lineJoin: 'miter',\n    visible: true\n  };\n  fillStrokeFolder.addColor(fillStrokeConfig, 'fill').onChange(function (color) {\n    text.attr('fill', color);\n  });\n  fillStrokeFolder.add(fillStrokeConfig, 'fillOpacity', 0, 1).onChange(function (fillOpacity) {\n    text.attr('fillOpacity', fillOpacity);\n  });\n  fillStrokeFolder.addColor(fillStrokeConfig, 'stroke').onChange(function (color) {\n    text.attr('stroke', color);\n  });\n  fillStrokeFolder.add(fillStrokeConfig, 'lineWidth', 0, 10).onChange(function (lineWidth) {\n    text.attr('lineWidth', lineWidth);\n  });\n  fillStrokeFolder.add(fillStrokeConfig, 'lineJoin', ['miter', 'round', 'bevel']).onChange(function (lineJoin) {\n    text.attr('lineJoin', lineJoin);\n  });\n  fillStrokeFolder.add(fillStrokeConfig, 'strokeOpacity', 0, 1).onChange(function (strokeOpacity) {\n    text.attr('strokeOpacity', strokeOpacity);\n  });\n  fillStrokeFolder.add(fillStrokeConfig, 'visible').onChange(function (visible) {\n    if (visible) {\n      text.style.visibility = 'visible'; // text.show();\n    } else {\n      text.style.visibility = 'hidden'; // text.hide();\n    }\n  });\n  var layoutFolder = gui.addFolder('layout');\n  var layoutConfig = {\n    letterSpacing: 0,\n    textBaseline: 'alphabetic'\n  };\n  layoutFolder.add(layoutConfig, 'letterSpacing', 0, 10).onChange(function (letterSpacing) {\n    text.attr('letterSpacing', letterSpacing);\n  });\n  layoutFolder.add(layoutConfig, 'textBaseline', ['alphabetic', 'bottom', 'middle', 'top', 'hanging', 'ideographic']).onChange(function (textBaseline) {\n    text.attr('textBaseline', textBaseline);\n  });\n  var multilineFolder = gui.addFolder('multiline');\n  var multilineConfig = {\n    breakWords: false,\n    wordWrap: false,\n    wordWrapWidth: 100,\n    lineHeight: 0,\n    leading: 0,\n    textAlign: 'start',\n    whiteSpace: 'pre'\n  };\n  multilineFolder.add(multilineConfig, 'breakWords').onChange(function (breakWords) {\n    text.attr('breakWords', breakWords);\n  });\n  multilineFolder.add(multilineConfig, 'wordWrap').onChange(function (wordWrap) {\n    text.attr('wordWrap', wordWrap);\n  });\n  var lineBlocks = [];\n  multilineFolder.add(multilineConfig, 'wordWrapWidth', 0, 500).onChange(function (wordWrapWidth) {\n    text.attr('wordWrapWidth', wordWrapWidth);\n    lineBlocks.forEach(function (block) {\n      return block.remove();\n    });\n    text.getLineBoundingRects().forEach(function (_ref) {\n      var x = _ref.x,\n          y = _ref.y,\n          width = _ref.width,\n          height = _ref.height;\n      var block = new _g.Rect({\n        style: {\n          x: x,\n          y: y,\n          width: width,\n          height: height,\n          stroke: 'black',\n          lineWidth: 2\n        }\n      });\n      lineBlocks.push(block);\n      text.appendChild(block);\n    });\n  });\n  multilineFolder.add(multilineConfig, 'lineHeight', 0, 100).onChange(function (lineHeight) {\n    text.attr('lineHeight', lineHeight);\n  });\n  multilineFolder.add(multilineConfig, 'leading', 0, 30).onChange(function (leading) {\n    text.attr('leading', leading);\n  });\n  multilineFolder.add(multilineConfig, 'textAlign', ['start', 'end', 'center', 'left', 'right']).onChange(function (textAlign) {\n    text.attr('textAlign', textAlign);\n  });\n  multilineFolder.add(multilineConfig, 'whiteSpace', ['pre', 'normal', 'pre-line']).onChange(function (whiteSpace) {\n    text.attr('whiteSpace', whiteSpace);\n  });\n  var transformFolder = gui.addFolder('transform');\n  var transformConfig = {\n    localPositionX: 100,\n    localPositionY: 300,\n    localScale: 1,\n    localEulerAngles: 0,\n    transformOrigin: 'left top',\n    anchorX: 0,\n    anchorY: 0,\n    dx: 0,\n    dy: 0\n  };\n  transformFolder.add(transformConfig, 'transformOrigin', ['left top', 'center', 'right bottom', '50% 50%', '50px 50px']).onChange(function (transformOrigin) {\n    text.style.transformOrigin = transformOrigin;\n  });\n  transformFolder.add(transformConfig, 'localPositionX', 0, 600).onChange(function (localPositionX) {\n    var _text$getLocalPositio = text.getLocalPosition(),\n        _text$getLocalPositio2 = _slicedToArray(_text$getLocalPositio, 2),\n        lx = _text$getLocalPositio2[0],\n        ly = _text$getLocalPositio2[1];\n\n    text.setLocalPosition(localPositionX, ly);\n  });\n  transformFolder.add(transformConfig, 'localPositionY', 0, 500).onChange(function (localPositionY) {\n    var _text$getLocalPositio3 = text.getLocalPosition(),\n        _text$getLocalPositio4 = _slicedToArray(_text$getLocalPositio3, 2),\n        lx = _text$getLocalPositio4[0],\n        ly = _text$getLocalPositio4[1];\n\n    text.setLocalPosition(lx, localPositionY);\n  });\n  transformFolder.add(transformConfig, 'localScale', 0.2, 5).onChange(function (localScale) {\n    text.setLocalScale(localScale);\n  });\n  transformFolder.add(transformConfig, 'localEulerAngles', 0, 360).onChange(function (localEulerAngles) {\n    text.setLocalEulerAngles(localEulerAngles);\n  });\n  transformFolder.add(transformConfig, 'anchorX', 0, 1).onChange(function (anchorX) {\n    text.style.anchor = [anchorX, transformConfig.anchorY];\n  });\n  transformFolder.add(transformConfig, 'anchorY', 0, 1).onChange(function (anchorY) {\n    text.style.anchor = [transformConfig.anchorX, anchorY];\n  });\n  transformFolder.add(transformConfig, 'anchorX', 0, 1).onChange(function (anchorX) {\n    text.style.anchor = [anchorX, transformConfig.anchorY];\n  });\n  transformFolder.add(transformConfig, 'dx', -100, 100).onChange(function (dx) {\n    text.style.dx = dx;\n  });\n  transformFolder.add(transformConfig, 'dy', -100, 100).onChange(function (dy) {\n    text.style.dy = dy;\n  });\n  transformFolder.open();\n});"},{"relativePath":"scenegraph/demo/clone.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/scenegraph/demo/clone.js","order":7,"filename":"clone.js","title":{"zh":"克隆节点","en":"Clone Node"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*PwEYSI_ijPEAAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent, Circle, Text } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Plugin } from '@antv/g-plugin-dragndrop';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\ncanvasRenderer.registerPlugin(new Plugin());\nconst webglRenderer = new WebGLRenderer();\nwebglRenderer.registerPlugin(new Plugin());\nconst svgRenderer = new SVGRenderer();\nsvgRenderer.registerPlugin(new Plugin());\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  // add a circle to canvas\n  const circle = new Circle({\n    id: 'circle',\n    style: {\n      draggable: true,\n      fill: 'rgb(239, 244, 255)',\n      fillOpacity: 1,\n      lineWidth: 1,\n      opacity: 1,\n      r: 100,\n      stroke: 'rgb(95, 149, 255)',\n      strokeOpacity: 1,\n      cursor: 'pointer',\n    },\n  });\n\n  const text = new Text({\n    id: 'text',\n    style: {\n      draggable: true,\n      fill: '#000',\n      fillOpacity: 0.9,\n      font: `normal normal normal 12px Avenir, -apple-system, system-ui, \"Segoe UI\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei\", \"Helvetica Neue\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n      // fontFamily: `Avenir, -apple-system, system-ui, \"Segoe UI\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei\", \"Helvetica Neue\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n      // fontFamily: 'Arial, sans-serif',\n      // fontFamily: 'sans-serif',\n      fontFamily: 'Avenir',\n      // fontFamily: 'Times',\n      // fontFamily: 'Microsoft YaHei',\n      fontSize: 22,\n      fontStyle: 'normal',\n      fontVariant: 'normal',\n      fontWeight: 'normal',\n      lineWidth: 1,\n      opacity: 1,\n      strokeOpacity: 1,\n      text: 'Drag me',\n      textAlign: 'center',\n      textBaseline: 'middle',\n    },\n  });\n\n  circle.appendChild(text);\n  canvas.appendChild(circle);\n  circle.setPosition(300, 200);\n\n  // handle dragging\n  let shiftX = 0;\n  let shiftY = 0;\n  function moveAt(target, canvasX, canvasY) {\n    target.setPosition(canvasX - shiftX, canvasY - shiftY);\n  }\n  circle.addEventListener('dragstart', function (e) {\n    circle.style.opacity = 0.5;\n    text.style.text = 'Drag me';\n\n    const [x, y] = e.target.getPosition();\n    shiftX = e.canvasX - x;\n    shiftY = e.canvasY - y;\n\n    moveAt(circle, e.canvasX, e.canvasY);\n\n    console.log('dragstart...');\n  });\n  circle.addEventListener('drag', function (e) {\n    moveAt(circle, e.canvasX, e.canvasY);\n    text.style.text = `Dragging...`;\n  });\n  circle.addEventListener('dragend', function (e) {\n    circle.style.opacity = 1;\n    text.style.text = 'Drag me';\n\n    console.log('dragend...');\n  });\n  circle.addEventListener('click', function (e) {\n    console.log('click...');\n  });\n\n  // stats\n  const stats = new Stats();\n  stats.showPanel(0);\n  const $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  const $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n    if (stats) {\n      stats.update();\n    }\n  });\n\n  // GUI\n  const gui = new lil.GUI({ autoPlace: false });\n  $wrapper.appendChild(gui.domElement);\n  const rendererFolder = gui.addFolder('renderer');\n  const rendererConfig = {\n    renderer: 'canvas',\n    clone: () => {\n      const cloned = circle.cloneNode(rendererConfig.deep);\n      canvas.appendChild(cloned);\n      cloned.toBack();\n      cloned.translateLocal(10, 10);\n    },\n    deep: false,\n  };\n  rendererFolder\n    .add(rendererConfig, 'renderer', ['canvas', 'webgl', 'svg'])\n    .onChange((renderer) => {\n      canvas.setRenderer(\n        renderer === 'canvas' ? canvasRenderer : renderer === 'webgl' ? webglRenderer : svgRenderer,\n      );\n    });\n  rendererFolder.add(rendererConfig, 'clone');\n  rendererFolder.add(rendererConfig, 'deep');\n  rendererFolder.open();\n\n  const circleFolder = gui.addFolder('circle');\n  const circleConfig = {\n    r: 100,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 4,\n    fillOpacity: 1,\n    strokeOpacity: 1,\n    anchorX: 0.5,\n    anchorY: 0.5,\n    shadowColor: '#000',\n    shadowBlur: 20,\n    shadowOffsetX: 0,\n    shadowOffsetY: 0,\n  };\n  circleFolder.add(circleConfig, 'r', 50, 200).onChange((radius) => {\n    circle.style.r = radius;\n  });\n  circleFolder.addColor(circleConfig, 'fill').onChange((color) => {\n    circle.style.fill = color;\n  });\n  circleFolder.addColor(circleConfig, 'stroke').onChange((color) => {\n    circle.attr('stroke', color);\n  });\n  circleFolder.addColor(circleConfig, 'shadowColor').onChange((color) => {\n    circle.attr('shadowColor', color);\n  });\n  circleFolder.add(circleConfig, 'shadowBlur', 0, 100).onChange((shadowBlur) => {\n    circle.style.shadowBlur = shadowBlur;\n  });\n  circleFolder.add(circleConfig, 'shadowOffsetX', -50, 50).onChange((shadowOffsetX) => {\n    circle.style.shadowOffsetX = shadowOffsetX;\n  });\n  circleFolder.add(circleConfig, 'shadowOffsetY', -50, 50).onChange((shadowOffsetY) => {\n    circle.style.shadowOffsetY = shadowOffsetY;\n  });\n  circleFolder.add(circleConfig, 'lineWidth', 1, 20).onChange((lineWidth) => {\n    circle.attr('lineWidth', lineWidth);\n  });\n  circleFolder.add(circleConfig, 'fillOpacity', 0, 1, 0.1).onChange((opacity) => {\n    circle.attr('fillOpacity', opacity);\n  });\n  circleFolder.add(circleConfig, 'strokeOpacity', 0, 1, 0.1).onChange((opacity) => {\n    circle.attr('strokeOpacity', opacity);\n  });\n  circleFolder.add(circleConfig, 'anchorX', 0, 1, 0.1).onChange((anchorX) => {\n    circle.attr('anchor', [anchorX, circleConfig.anchorY]);\n  });\n  circleFolder.add(circleConfig, 'anchorY', 0, 1, 0.1).onChange((anchorY) => {\n    circle.attr('anchor', [circleConfig.anchorX, anchorY]);\n  });\n});\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-plugin-dragndrop\", \"@antv/g-svg\", \"@antv/g-webgl\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-plugin-dragndrop\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gPluginDragndrop, global.gSvg, global.gWebgl, global.lilGui, global.stats);\n    global.clone = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gPluginDragndrop, _gSvg, _gWebgl, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  canvasRenderer.registerPlugin(new _gPluginDragndrop.Plugin());\n  var webglRenderer = new _gWebgl.Renderer();\n  webglRenderer.registerPlugin(new _gPluginDragndrop.Plugin());\n  var svgRenderer = new _gSvg.Renderer();\n  svgRenderer.registerPlugin(new _gPluginDragndrop.Plugin()); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    // add a circle to canvas\n    var circle = new _g.Circle({\n      id: 'circle',\n      style: {\n        draggable: true,\n        fill: 'rgb(239, 244, 255)',\n        fillOpacity: 1,\n        lineWidth: 1,\n        opacity: 1,\n        r: 100,\n        stroke: 'rgb(95, 149, 255)',\n        strokeOpacity: 1,\n        cursor: 'pointer'\n      }\n    });\n    var text = new _g.Text({\n      id: 'text',\n      style: {\n        draggable: true,\n        fill: '#000',\n        fillOpacity: 0.9,\n        font: \"normal normal normal 12px Avenir, -apple-system, system-ui, \\\"Segoe UI\\\", \\\"PingFang SC\\\", \\\"Hiragino Sans GB\\\", \\\"Microsoft YaHei\\\", \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\"\",\n        // fontFamily: `Avenir, -apple-system, system-ui, \"Segoe UI\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei\", \"Helvetica Neue\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n        // fontFamily: 'Arial, sans-serif',\n        // fontFamily: 'sans-serif',\n        fontFamily: 'Avenir',\n        // fontFamily: 'Times',\n        // fontFamily: 'Microsoft YaHei',\n        fontSize: 22,\n        fontStyle: 'normal',\n        fontVariant: 'normal',\n        fontWeight: 'normal',\n        lineWidth: 1,\n        opacity: 1,\n        strokeOpacity: 1,\n        text: 'Drag me',\n        textAlign: 'center',\n        textBaseline: 'middle'\n      }\n    });\n    circle.appendChild(text);\n    canvas.appendChild(circle);\n    circle.setPosition(300, 200); // handle dragging\n\n    var shiftX = 0;\n    var shiftY = 0;\n\n    function moveAt(target, canvasX, canvasY) {\n      target.setPosition(canvasX - shiftX, canvasY - shiftY);\n    }\n\n    circle.addEventListener('dragstart', function (e) {\n      circle.style.opacity = 0.5;\n      text.style.text = 'Drag me';\n\n      var _e$target$getPosition = e.target.getPosition(),\n          _e$target$getPosition2 = _slicedToArray(_e$target$getPosition, 2),\n          x = _e$target$getPosition2[0],\n          y = _e$target$getPosition2[1];\n\n      shiftX = e.canvasX - x;\n      shiftY = e.canvasY - y;\n      moveAt(circle, e.canvasX, e.canvasY);\n      console.log('dragstart...');\n    });\n    circle.addEventListener('drag', function (e) {\n      moveAt(circle, e.canvasX, e.canvasY);\n      text.style.text = \"Dragging...\";\n    });\n    circle.addEventListener('dragend', function (e) {\n      circle.style.opacity = 1;\n      text.style.text = 'Drag me';\n      console.log('dragend...');\n    });\n    circle.addEventListener('click', function (e) {\n      console.log('click...');\n    }); // stats\n\n    var stats = new _stats.default();\n    stats.showPanel(0);\n    var $stats = stats.dom;\n    $stats.style.position = 'absolute';\n    $stats.style.left = '0px';\n    $stats.style.top = '0px';\n    var $wrapper = document.getElementById('container');\n    $wrapper.appendChild($stats);\n    canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n      if (stats) {\n        stats.update();\n      }\n    }); // GUI\n\n    var gui = new lil.GUI({\n      autoPlace: false\n    });\n    $wrapper.appendChild(gui.domElement);\n    var rendererFolder = gui.addFolder('renderer');\n    var rendererConfig = {\n      renderer: 'canvas',\n      clone: function clone() {\n        var cloned = circle.cloneNode(rendererConfig.deep);\n        canvas.appendChild(cloned);\n        cloned.toBack();\n        cloned.translateLocal(10, 10);\n      },\n      deep: false\n    };\n    rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'webgl', 'svg']).onChange(function (renderer) {\n      canvas.setRenderer(renderer === 'canvas' ? canvasRenderer : renderer === 'webgl' ? webglRenderer : svgRenderer);\n    });\n    rendererFolder.add(rendererConfig, 'clone');\n    rendererFolder.add(rendererConfig, 'deep');\n    rendererFolder.open();\n    var circleFolder = gui.addFolder('circle');\n    var circleConfig = {\n      r: 100,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n      fillOpacity: 1,\n      strokeOpacity: 1,\n      anchorX: 0.5,\n      anchorY: 0.5,\n      shadowColor: '#000',\n      shadowBlur: 20,\n      shadowOffsetX: 0,\n      shadowOffsetY: 0\n    };\n    circleFolder.add(circleConfig, 'r', 50, 200).onChange(function (radius) {\n      circle.style.r = radius;\n    });\n    circleFolder.addColor(circleConfig, 'fill').onChange(function (color) {\n      circle.style.fill = color;\n    });\n    circleFolder.addColor(circleConfig, 'stroke').onChange(function (color) {\n      circle.attr('stroke', color);\n    });\n    circleFolder.addColor(circleConfig, 'shadowColor').onChange(function (color) {\n      circle.attr('shadowColor', color);\n    });\n    circleFolder.add(circleConfig, 'shadowBlur', 0, 100).onChange(function (shadowBlur) {\n      circle.style.shadowBlur = shadowBlur;\n    });\n    circleFolder.add(circleConfig, 'shadowOffsetX', -50, 50).onChange(function (shadowOffsetX) {\n      circle.style.shadowOffsetX = shadowOffsetX;\n    });\n    circleFolder.add(circleConfig, 'shadowOffsetY', -50, 50).onChange(function (shadowOffsetY) {\n      circle.style.shadowOffsetY = shadowOffsetY;\n    });\n    circleFolder.add(circleConfig, 'lineWidth', 1, 20).onChange(function (lineWidth) {\n      circle.attr('lineWidth', lineWidth);\n    });\n    circleFolder.add(circleConfig, 'fillOpacity', 0, 1, 0.1).onChange(function (opacity) {\n      circle.attr('fillOpacity', opacity);\n    });\n    circleFolder.add(circleConfig, 'strokeOpacity', 0, 1, 0.1).onChange(function (opacity) {\n      circle.attr('strokeOpacity', opacity);\n    });\n    circleFolder.add(circleConfig, 'anchorX', 0, 1, 0.1).onChange(function (anchorX) {\n      circle.attr('anchor', [anchorX, circleConfig.anchorY]);\n    });\n    circleFolder.add(circleConfig, 'anchorY', 0, 1, 0.1).onChange(function (anchorY) {\n      circle.attr('anchor', [circleConfig.anchorX, anchorY]);\n    });\n  });\n});"},{"relativePath":"scenegraph/demo/change-z-index.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/scenegraph/demo/change-z-index.js","order":6,"filename":"change-z-index.js","title":{"zh":"修改 Group 上的 zIndex","en":"Change zIndex on Group"},"source":"import { Canvas, CanvasEvent, Group, Rect } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst svgRenderer = new SVGRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst webgpuRenderer = new WebGPURenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf',\n    },\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\nconst group1 = new Group();\nconst group2 = new Group();\nconst rect1 = new Rect({\n  style: {\n    width: 100,\n    height: 100,\n    fill: 'blue',\n  },\n});\nconst rect2 = new Rect({\n  style: {\n    x: 50,\n    y: 50,\n    width: 100,\n    height: 100,\n    fill: 'red',\n  },\n});\ngroup1.appendChild(rect1);\ngroup2.appendChild(rect2);\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  canvas.appendChild(group1);\n  canvas.appendChild(group2);\n\n  let t = false;\n  setInterval(() => {\n    if (t) {\n      group1.style.zIndex = 2;\n      group2.style.zIndex = 0;\n    } else {\n      group2.style.zIndex = 2;\n      group1.style.zIndex = 0;\n    }\n    t = !t;\n  }, 1000);\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.changeZIndex = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var webgpuRenderer = new _gWebgpu.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf'\n    }, {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  }); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  var group1 = new _g.Group();\n  var group2 = new _g.Group();\n  var rect1 = new _g.Rect({\n    style: {\n      width: 100,\n      height: 100,\n      fill: 'blue'\n    }\n  });\n  var rect2 = new _g.Rect({\n    style: {\n      x: 50,\n      y: 50,\n      width: 100,\n      height: 100,\n      fill: 'red'\n    }\n  });\n  group1.appendChild(rect1);\n  group2.appendChild(rect2);\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    canvas.appendChild(group1);\n    canvas.appendChild(group2);\n    var t = false;\n    setInterval(function () {\n      if (t) {\n        group1.style.zIndex = 2;\n        group2.style.zIndex = 0;\n      } else {\n        group2.style.zIndex = 2;\n        group1.style.zIndex = 0;\n      }\n\n      t = !t;\n    }, 1000);\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n});"},{"relativePath":"scenegraph/demo/boxmodel.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/scenegraph/demo/boxmodel.js","order":1,"filename":"boxmodel.js","title":{"zh":"盒模型","en":"CSS Box Model"},"source":"import { Canvas, Rect } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n/**\n * CSS Box Model\n * @see https://developer.mozilla.org/zh-CN/docs/learn/css/building_blocks/the_box_model\n *\n * scenegraph:\n * blue rect\n *  -> red rect\n *   -> green rect\n */\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\nconst parent = new Rect({\n  style: {\n    x: 100,\n    y: 100,\n    width: 400,\n    height: 400,\n    fill: '#1890FF',\n  },\n});\ncanvas.appendChild(parent);\n\nconst red = new Rect({\n  style: {\n    x: '50%',\n    y: '50%',\n    width: 100,\n    height: 100,\n    fill: 'red',\n  },\n});\nparent.appendChild(red);\n\nconst green = new Rect({\n  style: {\n    x: '-100%',\n    y: 0,\n    width: '100%',\n    height: '100%',\n    fill: 'green',\n  },\n});\nred.appendChild(green);\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n\nconst parentFolder = gui.addFolder('blue rect');\nconst parentConfig = {\n  x: 100,\n  y: 100,\n  width: 400,\n  height: 400,\n};\nparentFolder\n  .add(parentConfig, 'x', 0, 300)\n  .onChange((x) => {\n    parent.style.x = `${x}px`;\n  })\n  .name('x(in px)');\nparentFolder\n  .add(parentConfig, 'y', 0, 300)\n  .onChange((y) => {\n    parent.style.y = `${y}px`;\n  })\n  .name('y(in px)');\nparentFolder\n  .add(parentConfig, 'width', 0, 600)\n  .onChange((width) => {\n    parent.style.width = width;\n  })\n  .name('width(in px)');\nparentFolder\n  .add(parentConfig, 'height', 0, 600)\n  .onChange((height) => {\n    parent.style.height = height;\n  })\n  .name('height(in px)');\nparentFolder.open();\n\nconst redFolder = gui.addFolder('red rect');\nconst redConfig = {\n  x: 50,\n  y: 50,\n  width: 100,\n  height: 100,\n};\nredFolder\n  .add(redConfig, 'x', 0, 100)\n  .onChange((x) => {\n    red.style.x = `${x}%`;\n  })\n  .name('x(in %)');\nredFolder\n  .add(redConfig, 'y', 0, 100)\n  .onChange((y) => {\n    red.style.y = `${y}%`;\n  })\n  .name('y(in %)');\nredFolder\n  .add(redConfig, 'width', 0, 400)\n  .onChange((width) => {\n    red.style.width = width;\n  })\n  .name('width(in px)');\nredFolder\n  .add(redConfig, 'height', 0, 400)\n  .onChange((height) => {\n    red.style.height = height;\n  })\n  .name('height(in px)');\nredFolder.open();\n\nconst greenFolder = gui.addFolder('green rect');\nconst greenConfig = {\n  x: -100,\n  y: 50,\n  width: 100,\n  height: 100,\n};\ngreenFolder\n  .add(greenConfig, 'x', -100, 100)\n  .onChange((x) => {\n    green.style.x = `${x}%`;\n  })\n  .name('x(in %)');\ngreenFolder\n  .add(greenConfig, 'y', -100, 100)\n  .onChange((y) => {\n    green.style.y = `${y}px`;\n  })\n  .name('y(in px)');\ngreenFolder\n  .add(greenConfig, 'width', 0, 100)\n  .onChange((width) => {\n    green.style.width = `${width}%`;\n  })\n  .name('width(in %)');\ngreenFolder\n  .add(greenConfig, 'height', 0, 100)\n  .onChange((height) => {\n    green.style.height = `${height}%`;\n  })\n  .name('height(in %)');\ngreenFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.boxmodel = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * CSS Box Model\n   * @see https://developer.mozilla.org/zh-CN/docs/learn/css/building_blocks/the_box_model\n   *\n   * scenegraph:\n   * blue rect\n   *  -> red rect\n   *   -> green rect\n   */\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  var parent = new _g.Rect({\n    style: {\n      x: 100,\n      y: 100,\n      width: 400,\n      height: 400,\n      fill: '#1890FF'\n    }\n  });\n  canvas.appendChild(parent);\n  var red = new _g.Rect({\n    style: {\n      x: '50%',\n      y: '50%',\n      width: 100,\n      height: 100,\n      fill: 'red'\n    }\n  });\n  parent.appendChild(red);\n  var green = new _g.Rect({\n    style: {\n      x: '-100%',\n      y: 0,\n      width: '100%',\n      height: '100%',\n      fill: 'green'\n    }\n  });\n  red.appendChild(green); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n  var parentFolder = gui.addFolder('blue rect');\n  var parentConfig = {\n    x: 100,\n    y: 100,\n    width: 400,\n    height: 400\n  };\n  parentFolder.add(parentConfig, 'x', 0, 300).onChange(function (x) {\n    parent.style.x = \"\".concat(x, \"px\");\n  }).name('x(in px)');\n  parentFolder.add(parentConfig, 'y', 0, 300).onChange(function (y) {\n    parent.style.y = \"\".concat(y, \"px\");\n  }).name('y(in px)');\n  parentFolder.add(parentConfig, 'width', 0, 600).onChange(function (width) {\n    parent.style.width = width;\n  }).name('width(in px)');\n  parentFolder.add(parentConfig, 'height', 0, 600).onChange(function (height) {\n    parent.style.height = height;\n  }).name('height(in px)');\n  parentFolder.open();\n  var redFolder = gui.addFolder('red rect');\n  var redConfig = {\n    x: 50,\n    y: 50,\n    width: 100,\n    height: 100\n  };\n  redFolder.add(redConfig, 'x', 0, 100).onChange(function (x) {\n    red.style.x = \"\".concat(x, \"%\");\n  }).name('x(in %)');\n  redFolder.add(redConfig, 'y', 0, 100).onChange(function (y) {\n    red.style.y = \"\".concat(y, \"%\");\n  }).name('y(in %)');\n  redFolder.add(redConfig, 'width', 0, 400).onChange(function (width) {\n    red.style.width = width;\n  }).name('width(in px)');\n  redFolder.add(redConfig, 'height', 0, 400).onChange(function (height) {\n    red.style.height = height;\n  }).name('height(in px)');\n  redFolder.open();\n  var greenFolder = gui.addFolder('green rect');\n  var greenConfig = {\n    x: -100,\n    y: 50,\n    width: 100,\n    height: 100\n  };\n  greenFolder.add(greenConfig, 'x', -100, 100).onChange(function (x) {\n    green.style.x = \"\".concat(x, \"%\");\n  }).name('x(in %)');\n  greenFolder.add(greenConfig, 'y', -100, 100).onChange(function (y) {\n    green.style.y = \"\".concat(y, \"px\");\n  }).name('y(in px)');\n  greenFolder.add(greenConfig, 'width', 0, 100).onChange(function (width) {\n    green.style.width = \"\".concat(width, \"%\");\n  }).name('width(in %)');\n  greenFolder.add(greenConfig, 'height', 0, 100).onChange(function (height) {\n    green.style.height = \"\".concat(height, \"%\");\n  }).name('height(in %)');\n  greenFolder.open();\n});"},{"relativePath":"scenegraph/demo/hierarchy.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/scenegraph/demo/hierarchy.js","order":0,"filename":"hierarchy.js","title":{"zh":"层次结构","en":"Hierarchy"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*ZcrHSoLxRS8AAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent, Circle, Group } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n/**\nsolarSystem\n   |    |\n   |   sun\n   |\n earthOrbit\n   |    |\n   |  earth\n   |\n  moonOrbit\n      |\n     moon\n */\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  const solarSystem = new Group({\n    id: 'solarSystem',\n  });\n  const earthOrbit = new Group({\n    id: 'earthOrbit',\n  });\n  const moonOrbit = new Group({\n    id: 'moonOrbit',\n  });\n\n  const sun = new Circle({\n    id: 'sun',\n    style: {\n      r: 100,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n    },\n  });\n  const earth = new Circle({\n    id: 'earth',\n    style: {\n      r: 50,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n    },\n  });\n  const moon = new Circle({\n    id: 'moon',\n    style: {\n      r: 25,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n    },\n  });\n\n  solarSystem.appendChild(sun);\n  solarSystem.appendChild(earthOrbit);\n  earthOrbit.appendChild(earth);\n  earthOrbit.appendChild(moonOrbit);\n  moonOrbit.appendChild(moon);\n\n  solarSystem.setPosition(300, 250);\n  earthOrbit.translate(100, 0);\n  moonOrbit.translate(100, 0);\n\n  canvas.appendChild(solarSystem);\n\n  // use AntV G devtools\n  window.__g_instances__ = [canvas];\n\n  // stats\n  const stats = new Stats();\n  stats.showPanel(0);\n  const $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  const $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n    if (stats) {\n      stats.update();\n    }\n\n    solarSystem.rotateLocal(1);\n    earthOrbit.rotateLocal(2);\n  });\n\n  // GUI\n  const gui = new lil.GUI({ autoPlace: false });\n  $wrapper.appendChild(gui.domElement);\n  const rendererFolder = gui.addFolder('renderer');\n  const rendererConfig = {\n    renderer: 'canvas',\n  };\n  rendererFolder\n    .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n    .onChange((rendererName) => {\n      let renderer;\n      if (rendererName === 'canvas') {\n        renderer = canvasRenderer;\n      } else if (rendererName === 'svg') {\n        renderer = svgRenderer;\n      } else if (rendererName === 'webgl') {\n        renderer = webglRenderer;\n      } else if (rendererName === 'webgpu') {\n        renderer = webgpuRenderer;\n      } else if (rendererName === 'canvaskit') {\n        renderer = canvaskitRenderer;\n      }\n      canvas.setRenderer(renderer);\n    });\n  rendererFolder.open();\n\n  const sunFolder = gui.addFolder('sun');\n  const sunConfig = {\n    r: 100,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 4,\n    fillOpacity: 1,\n    strokeOpacity: 1,\n    visibility: true,\n    'z-index': 0,\n  };\n  sunFolder.add(sunConfig, 'r', 50, 200).onChange((radius) => {\n    sun.attr('r', radius);\n  });\n  sunFolder.addColor(sunConfig, 'fill').onChange((color) => {\n    sun.attr('fill', color);\n  });\n  sunFolder.addColor(sunConfig, 'stroke').onChange((color) => {\n    sun.attr('stroke', color);\n  });\n  sunFolder.add(sunConfig, 'lineWidth', 1, 20).onChange((lineWidth) => {\n    sun.attr('lineWidth', lineWidth);\n  });\n  sunFolder.add(sunConfig, 'fillOpacity', 0, 1, 0.1).onChange((opacity) => {\n    sun.attr('fillOpacity', opacity);\n  });\n  sunFolder.add(sunConfig, 'strokeOpacity', 0, 1, 0.1).onChange((opacity) => {\n    sun.attr('strokeOpacity', opacity);\n  });\n  sunFolder.add(sunConfig, 'visibility').onChange((visible) => {\n    if (visible) {\n      sun.show();\n    } else {\n      sun.hide();\n    }\n  });\n  sunFolder.add(sunConfig, 'z-index', 0, 100).onChange((zIndex) => {\n    sun.setZIndex(zIndex);\n  });\n  sunFolder.open();\n\n  const earthFolder = gui.addFolder('earth');\n  const earthConfig = {\n    r: 50,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 4,\n    fillOpacity: 1,\n    strokeOpacity: 1,\n    visibility: true,\n  };\n  earthFolder.add(earthConfig, 'r', 50, 200).onChange((radius) => {\n    earth.attr('r', radius);\n  });\n  earthFolder.addColor(earthConfig, 'fill').onChange((color) => {\n    earth.attr('fill', color);\n  });\n  earthFolder.addColor(earthConfig, 'stroke').onChange((color) => {\n    earth.attr('stroke', color);\n  });\n  earthFolder.add(earthConfig, 'lineWidth', 1, 20).onChange((lineWidth) => {\n    earth.attr('lineWidth', lineWidth);\n  });\n  earthFolder.add(earthConfig, 'fillOpacity', 0, 1, 0.1).onChange((opacity) => {\n    earth.attr('fillOpacity', opacity);\n  });\n  earthFolder.add(earthConfig, 'strokeOpacity', 0, 1, 0.1).onChange((opacity) => {\n    earth.attr('strokeOpacity', opacity);\n  });\n  earthFolder.add(earthConfig, 'visibility').onChange((visible) => {\n    if (visible) {\n      earth.show();\n    } else {\n      earth.hide();\n    }\n  });\n\n  const moonFolder = gui.addFolder('moon');\n  const moonConfig = {\n    r: 25,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 4,\n    fillOpacity: 1,\n    strokeOpacity: 1,\n    visibility: true,\n  };\n  moonFolder.add(moonConfig, 'r', 50, 200).onChange((radius) => {\n    moon.attr('r', radius);\n  });\n  moonFolder.addColor(moonConfig, 'fill').onChange((color) => {\n    moon.attr('fill', color);\n  });\n  moonFolder.addColor(moonConfig, 'stroke').onChange((color) => {\n    moon.attr('stroke', color);\n  });\n  moonFolder.add(moonConfig, 'lineWidth', 1, 20).onChange((lineWidth) => {\n    moon.attr('lineWidth', lineWidth);\n  });\n  moonFolder.add(moonConfig, 'fillOpacity', 0, 1, 0.1).onChange((opacity) => {\n    moon.attr('fillOpacity', opacity);\n  });\n  moonFolder.add(moonConfig, 'strokeOpacity', 0, 1, 0.1).onChange((opacity) => {\n    moon.attr('strokeOpacity', opacity);\n  });\n  moonFolder.add(moonConfig, 'visibility').onChange((visible) => {\n    if (visible) {\n      moon.show();\n    } else {\n      moon.hide();\n    }\n  });\n\n  const earthOrbitFolder = gui.addFolder('earthOrbit');\n  const earthOrbitConfig = {\n    visibility: true,\n    'z-index': 0,\n  };\n  earthOrbitFolder.add(earthOrbitConfig, 'visibility').onChange((visible) => {\n    if (visible) {\n      earthOrbit.show();\n    } else {\n      earthOrbit.hide();\n    }\n  });\n  earthOrbitFolder.add(earthOrbitConfig, 'z-index', 0, 100).onChange((zIndex) => {\n    earthOrbit.setZIndex(zIndex);\n  });\n\n  const moonOrbitFolder = gui.addFolder('moonOrbit');\n  const moonOrbitConfig = {\n    visibility: true,\n    'z-index': 0,\n  };\n  moonOrbitFolder.add(moonOrbitConfig, 'visibility').onChange((visible) => {\n    if (visible) {\n      moonOrbit.show();\n    } else {\n      moonOrbit.hide();\n    }\n  });\n  moonOrbitFolder.add(moonOrbitConfig, 'z-index', 0, 100).onChange((zIndex) => {\n    moonOrbit.setZIndex(zIndex);\n  });\n\n  // zIndexFolder.add(zIndexConfig, 'bringToFront').onChange((toFront) => {\n  //   if (toFront) {\n  //     sun.toFront();\n  //   } else {\n  //     sun.toBack();\n  //   }\n  // });\n});\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.hierarchy = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n  solarSystem\n     |    |\n     |   sun\n     |\n   earthOrbit\n     |    |\n     |  earth\n     |\n    moonOrbit\n        |\n       moon\n   */\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    var solarSystem = new _g.Group({\n      id: 'solarSystem'\n    });\n    var earthOrbit = new _g.Group({\n      id: 'earthOrbit'\n    });\n    var moonOrbit = new _g.Group({\n      id: 'moonOrbit'\n    });\n    var sun = new _g.Circle({\n      id: 'sun',\n      style: {\n        r: 100,\n        fill: '#1890FF',\n        stroke: '#F04864',\n        lineWidth: 4\n      }\n    });\n    var earth = new _g.Circle({\n      id: 'earth',\n      style: {\n        r: 50,\n        fill: '#1890FF',\n        stroke: '#F04864',\n        lineWidth: 4\n      }\n    });\n    var moon = new _g.Circle({\n      id: 'moon',\n      style: {\n        r: 25,\n        fill: '#1890FF',\n        stroke: '#F04864',\n        lineWidth: 4\n      }\n    });\n    solarSystem.appendChild(sun);\n    solarSystem.appendChild(earthOrbit);\n    earthOrbit.appendChild(earth);\n    earthOrbit.appendChild(moonOrbit);\n    moonOrbit.appendChild(moon);\n    solarSystem.setPosition(300, 250);\n    earthOrbit.translate(100, 0);\n    moonOrbit.translate(100, 0);\n    canvas.appendChild(solarSystem); // use AntV G devtools\n\n    window.__g_instances__ = [canvas]; // stats\n\n    var stats = new _stats.default();\n    stats.showPanel(0);\n    var $stats = stats.dom;\n    $stats.style.position = 'absolute';\n    $stats.style.left = '0px';\n    $stats.style.top = '0px';\n    var $wrapper = document.getElementById('container');\n    $wrapper.appendChild($stats);\n    canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n      if (stats) {\n        stats.update();\n      }\n\n      solarSystem.rotateLocal(1);\n      earthOrbit.rotateLocal(2);\n    }); // GUI\n\n    var gui = new lil.GUI({\n      autoPlace: false\n    });\n    $wrapper.appendChild(gui.domElement);\n    var rendererFolder = gui.addFolder('renderer');\n    var rendererConfig = {\n      renderer: 'canvas'\n    };\n    rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n      var renderer;\n\n      if (rendererName === 'canvas') {\n        renderer = canvasRenderer;\n      } else if (rendererName === 'svg') {\n        renderer = svgRenderer;\n      } else if (rendererName === 'webgl') {\n        renderer = webglRenderer;\n      } else if (rendererName === 'webgpu') {\n        renderer = webgpuRenderer;\n      } else if (rendererName === 'canvaskit') {\n        renderer = canvaskitRenderer;\n      }\n\n      canvas.setRenderer(renderer);\n    });\n    rendererFolder.open();\n    var sunFolder = gui.addFolder('sun');\n    var sunConfig = {\n      r: 100,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n      fillOpacity: 1,\n      strokeOpacity: 1,\n      visibility: true,\n      'z-index': 0\n    };\n    sunFolder.add(sunConfig, 'r', 50, 200).onChange(function (radius) {\n      sun.attr('r', radius);\n    });\n    sunFolder.addColor(sunConfig, 'fill').onChange(function (color) {\n      sun.attr('fill', color);\n    });\n    sunFolder.addColor(sunConfig, 'stroke').onChange(function (color) {\n      sun.attr('stroke', color);\n    });\n    sunFolder.add(sunConfig, 'lineWidth', 1, 20).onChange(function (lineWidth) {\n      sun.attr('lineWidth', lineWidth);\n    });\n    sunFolder.add(sunConfig, 'fillOpacity', 0, 1, 0.1).onChange(function (opacity) {\n      sun.attr('fillOpacity', opacity);\n    });\n    sunFolder.add(sunConfig, 'strokeOpacity', 0, 1, 0.1).onChange(function (opacity) {\n      sun.attr('strokeOpacity', opacity);\n    });\n    sunFolder.add(sunConfig, 'visibility').onChange(function (visible) {\n      if (visible) {\n        sun.show();\n      } else {\n        sun.hide();\n      }\n    });\n    sunFolder.add(sunConfig, 'z-index', 0, 100).onChange(function (zIndex) {\n      sun.setZIndex(zIndex);\n    });\n    sunFolder.open();\n    var earthFolder = gui.addFolder('earth');\n    var earthConfig = {\n      r: 50,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n      fillOpacity: 1,\n      strokeOpacity: 1,\n      visibility: true\n    };\n    earthFolder.add(earthConfig, 'r', 50, 200).onChange(function (radius) {\n      earth.attr('r', radius);\n    });\n    earthFolder.addColor(earthConfig, 'fill').onChange(function (color) {\n      earth.attr('fill', color);\n    });\n    earthFolder.addColor(earthConfig, 'stroke').onChange(function (color) {\n      earth.attr('stroke', color);\n    });\n    earthFolder.add(earthConfig, 'lineWidth', 1, 20).onChange(function (lineWidth) {\n      earth.attr('lineWidth', lineWidth);\n    });\n    earthFolder.add(earthConfig, 'fillOpacity', 0, 1, 0.1).onChange(function (opacity) {\n      earth.attr('fillOpacity', opacity);\n    });\n    earthFolder.add(earthConfig, 'strokeOpacity', 0, 1, 0.1).onChange(function (opacity) {\n      earth.attr('strokeOpacity', opacity);\n    });\n    earthFolder.add(earthConfig, 'visibility').onChange(function (visible) {\n      if (visible) {\n        earth.show();\n      } else {\n        earth.hide();\n      }\n    });\n    var moonFolder = gui.addFolder('moon');\n    var moonConfig = {\n      r: 25,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n      fillOpacity: 1,\n      strokeOpacity: 1,\n      visibility: true\n    };\n    moonFolder.add(moonConfig, 'r', 50, 200).onChange(function (radius) {\n      moon.attr('r', radius);\n    });\n    moonFolder.addColor(moonConfig, 'fill').onChange(function (color) {\n      moon.attr('fill', color);\n    });\n    moonFolder.addColor(moonConfig, 'stroke').onChange(function (color) {\n      moon.attr('stroke', color);\n    });\n    moonFolder.add(moonConfig, 'lineWidth', 1, 20).onChange(function (lineWidth) {\n      moon.attr('lineWidth', lineWidth);\n    });\n    moonFolder.add(moonConfig, 'fillOpacity', 0, 1, 0.1).onChange(function (opacity) {\n      moon.attr('fillOpacity', opacity);\n    });\n    moonFolder.add(moonConfig, 'strokeOpacity', 0, 1, 0.1).onChange(function (opacity) {\n      moon.attr('strokeOpacity', opacity);\n    });\n    moonFolder.add(moonConfig, 'visibility').onChange(function (visible) {\n      if (visible) {\n        moon.show();\n      } else {\n        moon.hide();\n      }\n    });\n    var earthOrbitFolder = gui.addFolder('earthOrbit');\n    var earthOrbitConfig = {\n      visibility: true,\n      'z-index': 0\n    };\n    earthOrbitFolder.add(earthOrbitConfig, 'visibility').onChange(function (visible) {\n      if (visible) {\n        earthOrbit.show();\n      } else {\n        earthOrbit.hide();\n      }\n    });\n    earthOrbitFolder.add(earthOrbitConfig, 'z-index', 0, 100).onChange(function (zIndex) {\n      earthOrbit.setZIndex(zIndex);\n    });\n    var moonOrbitFolder = gui.addFolder('moonOrbit');\n    var moonOrbitConfig = {\n      visibility: true,\n      'z-index': 0\n    };\n    moonOrbitFolder.add(moonOrbitConfig, 'visibility').onChange(function (visible) {\n      if (visible) {\n        moonOrbit.show();\n      } else {\n        moonOrbit.hide();\n      }\n    });\n    moonOrbitFolder.add(moonOrbitConfig, 'z-index', 0, 100).onChange(function (zIndex) {\n      moonOrbit.setZIndex(zIndex);\n    }); // zIndexFolder.add(zIndexConfig, 'bringToFront').onChange((toFront) => {\n    //   if (toFront) {\n    //     sun.toFront();\n    //   } else {\n    //     sun.toBack();\n    //   }\n    // });\n  });\n});"},{"relativePath":"scenegraph/demo/origin.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/scenegraph/demo/origin.js","order":3,"filename":"origin.js","title":{"zh":"旋转和缩放中心","en":"Origin"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*E7OfQ5-uVgYAAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent, Circle, Group, Polyline, Rect, Text } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  /**\n   * Circle\n   */\n\n  const circle = new Circle({\n    style: {\n      cx: 100,\n      cy: 100,\n      r: 100,\n      fill: '#1890FF',\n    },\n  });\n  canvas.appendChild(circle);\n  circle.animate([{ transform: 'scale(1)' }, { transform: 'scale(0.5)' }], {\n    duration: 500,\n    easing: 'cubic-bezier(0.250, 0.460, 0.450, 0.940)',\n    iterations: Infinity,\n    direction: 'alternate',\n  });\n\n  const circleOrigin = new Circle({\n    id: 'circleOrigin',\n    style: {\n      r: 10,\n      fill: '#F04864',\n    },\n  });\n  circleOrigin.setPosition(100, 100);\n  canvas.appendChild(circleOrigin);\n\n  /**\n   * Group\n   */\n\n  const group = new Group({ id: 'group' });\n  const child1 = new Rect({\n    id: 'rect1',\n    style: {\n      width: 100,\n      height: 100,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n      radius: 8,\n    },\n  });\n  group.appendChild(child1);\n  group.setPosition(200, 100);\n\n  // original position\n  const original = child1.cloneNode();\n  original.setPosition(200, 100);\n  original.style.opacity = 0.5;\n  canvas.appendChild(original);\n\n  const groupOrigin = new Circle({\n    id: 'group-origin',\n    style: {\n      r: 30,\n      fill: '#F04864',\n    },\n  });\n  const originText = new Text({\n    id: 'text',\n    style: {\n      fontFamily: 'PingFang SC',\n      text: 'Origin',\n      fontSize: 16,\n      fill: '#fFF',\n      textAlign: 'center',\n      textBaseline: 'middle',\n    },\n  });\n\n  groupOrigin.appendChild(originText);\n  groupOrigin.setPosition(200, 100);\n\n  canvas.appendChild(group);\n  canvas.appendChild(groupOrigin);\n\n  /**\n   * Text\n   */\n  const text = new Text({\n    id: 'rotated-text',\n    style: {\n      fontFamily: 'PingFang SC',\n      text: 'Lorem ipsum',\n      fontSize: 32,\n      fill: '#FFF',\n      stroke: '#1890FF',\n      lineWidth: 5,\n      // textAlign: 'center',\n      // textBaseline: 'middle',\n    },\n  });\n  text.setPosition(100, 400);\n  canvas.appendChild(text);\n  const textOrigin = new Circle({\n    id: 'textOrigin',\n    style: {\n      r: 10,\n      fill: '#F04864',\n    },\n  });\n  textOrigin.setPosition(100, 400);\n  canvas.appendChild(textOrigin);\n\n  /**\n   * Polyline\n   */\n  const points = [\n    [50, 50],\n    [100, 50],\n    [100, 100],\n    [150, 100],\n    [150, 150],\n    [200, 150],\n  ];\n  const polyline = new Polyline({\n    style: {\n      points,\n      stroke: '#1890FF',\n      lineWidth: 2,\n    },\n  });\n  canvas.appendChild(polyline);\n  polyline.setPosition(300, 300);\n  const polylineOrigin = new Circle({\n    id: 'polyline-origin',\n    style: {\n      r: 10,\n      fill: '#F04864',\n    },\n  });\n  polylineOrigin.setPosition(300, 300);\n  canvas.appendChild(polylineOrigin);\n\n  // stats\n  const stats = new Stats();\n  stats.showPanel(0);\n  const $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  const $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n    if (stats) {\n      stats.update();\n    }\n    group.rotateLocal(1);\n    text.rotateLocal(1);\n    polyline.rotateLocal(1);\n  });\n\n  // GUI\n  const gui = new lil.GUI({ autoPlace: false });\n  $wrapper.appendChild(gui.domElement);\n  const rendererFolder = gui.addFolder('renderer');\n  const rendererConfig = {\n    renderer: 'canvas',\n  };\n  rendererFolder\n    .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n    .onChange((rendererName) => {\n      let renderer;\n      if (rendererName === 'canvas') {\n        renderer = canvasRenderer;\n      } else if (rendererName === 'svg') {\n        renderer = svgRenderer;\n      } else if (rendererName === 'webgl') {\n        renderer = webglRenderer;\n      } else if (rendererName === 'webgpu') {\n        renderer = webgpuRenderer;\n      } else if (rendererName === 'canvaskit') {\n        renderer = canvaskitRenderer;\n      }\n      canvas.setRenderer(renderer);\n    });\n  rendererFolder.open();\n\n  const circleFolder = gui.addFolder('animated circle');\n  const circleConfig = {\n    transformOriginX: 100,\n    transformOriginY: 100,\n    transformOrigin: 'center',\n  };\n  circleFolder\n    .add(circleConfig, 'transformOrigin', [\n      'left top',\n      'center',\n      'right bottom',\n      '50% 50%',\n      '50px 50px',\n    ])\n    .onChange((transformOrigin) => {\n      // set transformOrigin\n      circle.style.transformOrigin = transformOrigin;\n\n      // get calculated origin\n      const [ox, oy] = circle.getOrigin();\n      const x = 100;\n      const y = 100;\n\n      circleOrigin.setPosition(x + ox, y + oy);\n\n      // update dat.gui\n      circleConfig.transformOriginX = ox + x;\n      circleConfig.transformOriginY = oy + y;\n    });\n  circleFolder\n    .add(circleConfig, 'transformOriginX', -200, 200)\n    .onChange((tx) => {\n      circle.style.transformOrigin = `${tx} ${circleConfig.transformOriginY}`;\n\n      const [ox, oy] = circle.getOrigin();\n      const x = 100;\n      const y = 100;\n      circleOrigin.setPosition(x + ox, y + oy);\n    })\n    .listen();\n  circleFolder\n    .add(circleConfig, 'transformOriginY', -200, 200)\n    .onChange((ty) => {\n      circle.style.transformOrigin = `${circleConfig.transformOriginX}px ${ty}px`;\n\n      const [ox, oy] = circle.getOrigin();\n      const x = 100;\n      const y = 100;\n      circleOrigin.setPosition(x + ox, y + oy);\n    })\n    .listen();\n  circleFolder.open();\n\n  const textFolder = gui.addFolder('text');\n  const textConfig = {\n    transformOriginX: 0,\n    transformOriginY: 0,\n    transformOrigin: 'left top',\n  };\n  textFolder\n    .add(textConfig, 'transformOrigin', [\n      'left top',\n      'center',\n      'right bottom',\n      '50% 50%',\n      '50px 50px',\n    ])\n    .onChange((transformOrigin) => {\n      // set transformOrigin\n      text.style.transformOrigin = transformOrigin;\n\n      // get calculated origin\n      const [ox, oy, oz] = text.getOrigin();\n      const [x, y, z] = text.getPosition(); // left top corner of Bounds\n\n      textOrigin.setPosition(x + ox, y + oy, z + oz);\n\n      // update dat.gui\n      textConfig.transformOriginX = ox + x;\n      textConfig.transformOriginY = oy + y;\n    });\n  textFolder\n    .add(textConfig, 'transformOriginX', -200, 200)\n    .onChange((tx) => {\n      text.style.transformOrigin = `${tx} ${textConfig.transformOriginY}`;\n\n      const [ox, oy] = text.getOrigin();\n      const [lx, ly] = text.getPosition();\n      textOrigin.setPosition(lx + ox, ly + oy);\n    })\n    .listen();\n  textFolder\n    .add(textConfig, 'transformOriginY', -200, 200)\n    .onChange((ty) => {\n      text.style.transformOrigin = `${textConfig.transformOriginX}px ${ty}px`;\n\n      const [ox, oy] = text.getOrigin();\n      const [lx, ly] = text.getPosition();\n      textOrigin.setPosition(lx + ox, ly + oy);\n    })\n    .listen();\n  textFolder.open();\n\n  let lastCloned = child1;\n  const groupFolder = gui.addFolder('group');\n  const groupConfig = {\n    transformOriginX: 0,\n    transformOriginY: 0,\n    transformOrigin: 'left top',\n    appendChild: () => {\n      // // reset rotation\n      // group.setEulerAngles(0);\n      // // clone child\n      // const cloned = lastCloned.cloneNode();\n      // cloned.id = 'cloned';\n      // cloned.translateLocal(0, 100);\n      // group.appendChild(cloned);\n      // lastCloned = cloned;\n      // // reset transform origin, which will case re-calc origin\n      // group.style.transformOrigin = group.style.transformOrigin || 'left top';\n      // // get calculated origin\n      // const [ox, oy, oz] = group.style.origin;\n      // const [x, y, z] = group.getPosition(); // left top corner of Bounds\n      // origin.setPosition(x + ox, y + oy, z + oz);\n      // // update dat.gui\n      // groupConfig.originX = ox;\n      // groupConfig.originY = oy;\n    },\n  };\n  groupFolder\n    .add(groupConfig, 'transformOrigin', [\n      'left top',\n      'center',\n      'right bottom',\n      '50% 50%',\n      '50px 50px',\n    ])\n    .onChange((transformOrigin) => {\n      // set transformOrigin\n      group.style.transformOrigin = transformOrigin;\n\n      // get calculated origin\n      const [ox, oy, oz] = group.getOrigin();\n      const [x, y, z] = group.getPosition(); // left top corner of Bounds\n\n      groupOrigin.setPosition(x + ox, y + oy, z + oz);\n\n      // update dat.gui\n      groupConfig.transformOriginX = ox + x;\n      groupConfig.transformOriginY = oy + y;\n    });\n  groupFolder\n    .add(groupConfig, 'transformOriginX', -200, 200)\n    .onChange((tx) => {\n      group.style.transformOrigin = `${tx} ${groupConfig.transformOriginY}`;\n\n      const [ox, oy] = group.getOrigin();\n      const [lx, ly] = group.getPosition();\n      groupOrigin.setPosition(lx + ox, ly + oy);\n    })\n    .listen();\n  groupFolder\n    .add(groupConfig, 'transformOriginY', -200, 200)\n    .onChange((ty) => {\n      group.style.transformOrigin = `${groupConfig.transformOriginX}px ${ty}px`;\n\n      const [ox, oy] = group.getOrigin();\n      const [lx, ly] = group.getPosition();\n      groupOrigin.setPosition(lx + ox, ly + oy);\n    })\n    .listen();\n  groupFolder.add(groupConfig, 'appendChild');\n  groupFolder.open();\n\n  const polylineFolder = gui.addFolder('polyline');\n  const polylineConfig = {\n    transformOriginX: 0,\n    transformOriginY: 0,\n    transformOrigin: 'left top',\n  };\n  polylineFolder\n    .add(polylineConfig, 'transformOrigin', [\n      'left top',\n      'center',\n      'right bottom',\n      '50% 50%',\n      '50px 50px',\n    ])\n    .onChange((transformOrigin) => {\n      // set transformOrigin\n      polyline.style.transformOrigin = transformOrigin;\n\n      // get calculated origin\n      const [ox, oy] = polyline.getOrigin();\n      const x = 300;\n      const y = 300;\n\n      // set origin's position\n      polylineOrigin.setPosition(x + ox, y + oy);\n\n      // update dat.gui\n      polylineConfig.transformOriginX = ox;\n      polylineConfig.transformOriginY = oy;\n    });\n  polylineFolder\n    .add(polylineConfig, 'transformOriginX', -200, 200)\n    .onChange((tx) => {\n      polyline.style.transformOrigin = `${tx} ${polylineConfig.transformOriginY}`;\n\n      const [ox, oy] = polyline.getOrigin();\n      const x = 300;\n      const y = 300;\n      polylineOrigin.setPosition(x + ox, y + oy);\n    })\n    .listen();\n  polylineFolder\n    .add(polylineConfig, 'transformOriginY', -200, 200)\n    .onChange((ty) => {\n      polyline.style.transformOrigin = `${polylineConfig.transformOriginX}px ${ty}px`;\n\n      const [ox, oy] = polyline.getOrigin();\n      const x = 300;\n      const y = 300;\n      polylineOrigin.setPosition(x + ox, y + oy);\n    })\n    .listen();\n  polylineFolder.open();\n});\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.origin = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    /**\n     * Circle\n     */\n    var circle = new _g.Circle({\n      style: {\n        cx: 100,\n        cy: 100,\n        r: 100,\n        fill: '#1890FF'\n      }\n    });\n    canvas.appendChild(circle);\n    circle.animate([{\n      transform: 'scale(1)'\n    }, {\n      transform: 'scale(0.5)'\n    }], {\n      duration: 500,\n      easing: 'cubic-bezier(0.250, 0.460, 0.450, 0.940)',\n      iterations: Infinity,\n      direction: 'alternate'\n    });\n    var circleOrigin = new _g.Circle({\n      id: 'circleOrigin',\n      style: {\n        r: 10,\n        fill: '#F04864'\n      }\n    });\n    circleOrigin.setPosition(100, 100);\n    canvas.appendChild(circleOrigin);\n    /**\n     * Group\n     */\n\n    var group = new _g.Group({\n      id: 'group'\n    });\n    var child1 = new _g.Rect({\n      id: 'rect1',\n      style: {\n        width: 100,\n        height: 100,\n        fill: '#1890FF',\n        stroke: '#F04864',\n        lineWidth: 4,\n        radius: 8\n      }\n    });\n    group.appendChild(child1);\n    group.setPosition(200, 100); // original position\n\n    var original = child1.cloneNode();\n    original.setPosition(200, 100);\n    original.style.opacity = 0.5;\n    canvas.appendChild(original);\n    var groupOrigin = new _g.Circle({\n      id: 'group-origin',\n      style: {\n        r: 30,\n        fill: '#F04864'\n      }\n    });\n    var originText = new _g.Text({\n      id: 'text',\n      style: {\n        fontFamily: 'PingFang SC',\n        text: 'Origin',\n        fontSize: 16,\n        fill: '#fFF',\n        textAlign: 'center',\n        textBaseline: 'middle'\n      }\n    });\n    groupOrigin.appendChild(originText);\n    groupOrigin.setPosition(200, 100);\n    canvas.appendChild(group);\n    canvas.appendChild(groupOrigin);\n    /**\n     * Text\n     */\n\n    var text = new _g.Text({\n      id: 'rotated-text',\n      style: {\n        fontFamily: 'PingFang SC',\n        text: 'Lorem ipsum',\n        fontSize: 32,\n        fill: '#FFF',\n        stroke: '#1890FF',\n        lineWidth: 5 // textAlign: 'center',\n        // textBaseline: 'middle',\n\n      }\n    });\n    text.setPosition(100, 400);\n    canvas.appendChild(text);\n    var textOrigin = new _g.Circle({\n      id: 'textOrigin',\n      style: {\n        r: 10,\n        fill: '#F04864'\n      }\n    });\n    textOrigin.setPosition(100, 400);\n    canvas.appendChild(textOrigin);\n    /**\n     * Polyline\n     */\n\n    var points = [[50, 50], [100, 50], [100, 100], [150, 100], [150, 150], [200, 150]];\n    var polyline = new _g.Polyline({\n      style: {\n        points: points,\n        stroke: '#1890FF',\n        lineWidth: 2\n      }\n    });\n    canvas.appendChild(polyline);\n    polyline.setPosition(300, 300);\n    var polylineOrigin = new _g.Circle({\n      id: 'polyline-origin',\n      style: {\n        r: 10,\n        fill: '#F04864'\n      }\n    });\n    polylineOrigin.setPosition(300, 300);\n    canvas.appendChild(polylineOrigin); // stats\n\n    var stats = new _stats.default();\n    stats.showPanel(0);\n    var $stats = stats.dom;\n    $stats.style.position = 'absolute';\n    $stats.style.left = '0px';\n    $stats.style.top = '0px';\n    var $wrapper = document.getElementById('container');\n    $wrapper.appendChild($stats);\n    canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n      if (stats) {\n        stats.update();\n      }\n\n      group.rotateLocal(1);\n      text.rotateLocal(1);\n      polyline.rotateLocal(1);\n    }); // GUI\n\n    var gui = new lil.GUI({\n      autoPlace: false\n    });\n    $wrapper.appendChild(gui.domElement);\n    var rendererFolder = gui.addFolder('renderer');\n    var rendererConfig = {\n      renderer: 'canvas'\n    };\n    rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n      var renderer;\n\n      if (rendererName === 'canvas') {\n        renderer = canvasRenderer;\n      } else if (rendererName === 'svg') {\n        renderer = svgRenderer;\n      } else if (rendererName === 'webgl') {\n        renderer = webglRenderer;\n      } else if (rendererName === 'webgpu') {\n        renderer = webgpuRenderer;\n      } else if (rendererName === 'canvaskit') {\n        renderer = canvaskitRenderer;\n      }\n\n      canvas.setRenderer(renderer);\n    });\n    rendererFolder.open();\n    var circleFolder = gui.addFolder('animated circle');\n    var circleConfig = {\n      transformOriginX: 100,\n      transformOriginY: 100,\n      transformOrigin: 'center'\n    };\n    circleFolder.add(circleConfig, 'transformOrigin', ['left top', 'center', 'right bottom', '50% 50%', '50px 50px']).onChange(function (transformOrigin) {\n      // set transformOrigin\n      circle.style.transformOrigin = transformOrigin; // get calculated origin\n\n      var _circle$getOrigin = circle.getOrigin(),\n          _circle$getOrigin2 = _slicedToArray(_circle$getOrigin, 2),\n          ox = _circle$getOrigin2[0],\n          oy = _circle$getOrigin2[1];\n\n      var x = 100;\n      var y = 100;\n      circleOrigin.setPosition(x + ox, y + oy); // update dat.gui\n\n      circleConfig.transformOriginX = ox + x;\n      circleConfig.transformOriginY = oy + y;\n    });\n    circleFolder.add(circleConfig, 'transformOriginX', -200, 200).onChange(function (tx) {\n      circle.style.transformOrigin = \"\".concat(tx, \" \").concat(circleConfig.transformOriginY);\n\n      var _circle$getOrigin3 = circle.getOrigin(),\n          _circle$getOrigin4 = _slicedToArray(_circle$getOrigin3, 2),\n          ox = _circle$getOrigin4[0],\n          oy = _circle$getOrigin4[1];\n\n      var x = 100;\n      var y = 100;\n      circleOrigin.setPosition(x + ox, y + oy);\n    }).listen();\n    circleFolder.add(circleConfig, 'transformOriginY', -200, 200).onChange(function (ty) {\n      circle.style.transformOrigin = \"\".concat(circleConfig.transformOriginX, \"px \").concat(ty, \"px\");\n\n      var _circle$getOrigin5 = circle.getOrigin(),\n          _circle$getOrigin6 = _slicedToArray(_circle$getOrigin5, 2),\n          ox = _circle$getOrigin6[0],\n          oy = _circle$getOrigin6[1];\n\n      var x = 100;\n      var y = 100;\n      circleOrigin.setPosition(x + ox, y + oy);\n    }).listen();\n    circleFolder.open();\n    var textFolder = gui.addFolder('text');\n    var textConfig = {\n      transformOriginX: 0,\n      transformOriginY: 0,\n      transformOrigin: 'left top'\n    };\n    textFolder.add(textConfig, 'transformOrigin', ['left top', 'center', 'right bottom', '50% 50%', '50px 50px']).onChange(function (transformOrigin) {\n      // set transformOrigin\n      text.style.transformOrigin = transformOrigin; // get calculated origin\n\n      var _text$getOrigin = text.getOrigin(),\n          _text$getOrigin2 = _slicedToArray(_text$getOrigin, 3),\n          ox = _text$getOrigin2[0],\n          oy = _text$getOrigin2[1],\n          oz = _text$getOrigin2[2];\n\n      var _text$getPosition = text.getPosition(),\n          _text$getPosition2 = _slicedToArray(_text$getPosition, 3),\n          x = _text$getPosition2[0],\n          y = _text$getPosition2[1],\n          z = _text$getPosition2[2]; // left top corner of Bounds\n\n\n      textOrigin.setPosition(x + ox, y + oy, z + oz); // update dat.gui\n\n      textConfig.transformOriginX = ox + x;\n      textConfig.transformOriginY = oy + y;\n    });\n    textFolder.add(textConfig, 'transformOriginX', -200, 200).onChange(function (tx) {\n      text.style.transformOrigin = \"\".concat(tx, \" \").concat(textConfig.transformOriginY);\n\n      var _text$getOrigin3 = text.getOrigin(),\n          _text$getOrigin4 = _slicedToArray(_text$getOrigin3, 2),\n          ox = _text$getOrigin4[0],\n          oy = _text$getOrigin4[1];\n\n      var _text$getPosition3 = text.getPosition(),\n          _text$getPosition4 = _slicedToArray(_text$getPosition3, 2),\n          lx = _text$getPosition4[0],\n          ly = _text$getPosition4[1];\n\n      textOrigin.setPosition(lx + ox, ly + oy);\n    }).listen();\n    textFolder.add(textConfig, 'transformOriginY', -200, 200).onChange(function (ty) {\n      text.style.transformOrigin = \"\".concat(textConfig.transformOriginX, \"px \").concat(ty, \"px\");\n\n      var _text$getOrigin5 = text.getOrigin(),\n          _text$getOrigin6 = _slicedToArray(_text$getOrigin5, 2),\n          ox = _text$getOrigin6[0],\n          oy = _text$getOrigin6[1];\n\n      var _text$getPosition5 = text.getPosition(),\n          _text$getPosition6 = _slicedToArray(_text$getPosition5, 2),\n          lx = _text$getPosition6[0],\n          ly = _text$getPosition6[1];\n\n      textOrigin.setPosition(lx + ox, ly + oy);\n    }).listen();\n    textFolder.open();\n    var lastCloned = child1;\n    var groupFolder = gui.addFolder('group');\n    var groupConfig = {\n      transformOriginX: 0,\n      transformOriginY: 0,\n      transformOrigin: 'left top',\n      appendChild: function appendChild() {// // reset rotation\n        // group.setEulerAngles(0);\n        // // clone child\n        // const cloned = lastCloned.cloneNode();\n        // cloned.id = 'cloned';\n        // cloned.translateLocal(0, 100);\n        // group.appendChild(cloned);\n        // lastCloned = cloned;\n        // // reset transform origin, which will case re-calc origin\n        // group.style.transformOrigin = group.style.transformOrigin || 'left top';\n        // // get calculated origin\n        // const [ox, oy, oz] = group.style.origin;\n        // const [x, y, z] = group.getPosition(); // left top corner of Bounds\n        // origin.setPosition(x + ox, y + oy, z + oz);\n        // // update dat.gui\n        // groupConfig.originX = ox;\n        // groupConfig.originY = oy;\n      }\n    };\n    groupFolder.add(groupConfig, 'transformOrigin', ['left top', 'center', 'right bottom', '50% 50%', '50px 50px']).onChange(function (transformOrigin) {\n      // set transformOrigin\n      group.style.transformOrigin = transformOrigin; // get calculated origin\n\n      var _group$getOrigin = group.getOrigin(),\n          _group$getOrigin2 = _slicedToArray(_group$getOrigin, 3),\n          ox = _group$getOrigin2[0],\n          oy = _group$getOrigin2[1],\n          oz = _group$getOrigin2[2];\n\n      var _group$getPosition = group.getPosition(),\n          _group$getPosition2 = _slicedToArray(_group$getPosition, 3),\n          x = _group$getPosition2[0],\n          y = _group$getPosition2[1],\n          z = _group$getPosition2[2]; // left top corner of Bounds\n\n\n      groupOrigin.setPosition(x + ox, y + oy, z + oz); // update dat.gui\n\n      groupConfig.transformOriginX = ox + x;\n      groupConfig.transformOriginY = oy + y;\n    });\n    groupFolder.add(groupConfig, 'transformOriginX', -200, 200).onChange(function (tx) {\n      group.style.transformOrigin = \"\".concat(tx, \" \").concat(groupConfig.transformOriginY);\n\n      var _group$getOrigin3 = group.getOrigin(),\n          _group$getOrigin4 = _slicedToArray(_group$getOrigin3, 2),\n          ox = _group$getOrigin4[0],\n          oy = _group$getOrigin4[1];\n\n      var _group$getPosition3 = group.getPosition(),\n          _group$getPosition4 = _slicedToArray(_group$getPosition3, 2),\n          lx = _group$getPosition4[0],\n          ly = _group$getPosition4[1];\n\n      groupOrigin.setPosition(lx + ox, ly + oy);\n    }).listen();\n    groupFolder.add(groupConfig, 'transformOriginY', -200, 200).onChange(function (ty) {\n      group.style.transformOrigin = \"\".concat(groupConfig.transformOriginX, \"px \").concat(ty, \"px\");\n\n      var _group$getOrigin5 = group.getOrigin(),\n          _group$getOrigin6 = _slicedToArray(_group$getOrigin5, 2),\n          ox = _group$getOrigin6[0],\n          oy = _group$getOrigin6[1];\n\n      var _group$getPosition5 = group.getPosition(),\n          _group$getPosition6 = _slicedToArray(_group$getPosition5, 2),\n          lx = _group$getPosition6[0],\n          ly = _group$getPosition6[1];\n\n      groupOrigin.setPosition(lx + ox, ly + oy);\n    }).listen();\n    groupFolder.add(groupConfig, 'appendChild');\n    groupFolder.open();\n    var polylineFolder = gui.addFolder('polyline');\n    var polylineConfig = {\n      transformOriginX: 0,\n      transformOriginY: 0,\n      transformOrigin: 'left top'\n    };\n    polylineFolder.add(polylineConfig, 'transformOrigin', ['left top', 'center', 'right bottom', '50% 50%', '50px 50px']).onChange(function (transformOrigin) {\n      // set transformOrigin\n      polyline.style.transformOrigin = transformOrigin; // get calculated origin\n\n      var _polyline$getOrigin = polyline.getOrigin(),\n          _polyline$getOrigin2 = _slicedToArray(_polyline$getOrigin, 2),\n          ox = _polyline$getOrigin2[0],\n          oy = _polyline$getOrigin2[1];\n\n      var x = 300;\n      var y = 300; // set origin's position\n\n      polylineOrigin.setPosition(x + ox, y + oy); // update dat.gui\n\n      polylineConfig.transformOriginX = ox;\n      polylineConfig.transformOriginY = oy;\n    });\n    polylineFolder.add(polylineConfig, 'transformOriginX', -200, 200).onChange(function (tx) {\n      polyline.style.transformOrigin = \"\".concat(tx, \" \").concat(polylineConfig.transformOriginY);\n\n      var _polyline$getOrigin3 = polyline.getOrigin(),\n          _polyline$getOrigin4 = _slicedToArray(_polyline$getOrigin3, 2),\n          ox = _polyline$getOrigin4[0],\n          oy = _polyline$getOrigin4[1];\n\n      var x = 300;\n      var y = 300;\n      polylineOrigin.setPosition(x + ox, y + oy);\n    }).listen();\n    polylineFolder.add(polylineConfig, 'transformOriginY', -200, 200).onChange(function (ty) {\n      polyline.style.transformOrigin = \"\".concat(polylineConfig.transformOriginX, \"px \").concat(ty, \"px\");\n\n      var _polyline$getOrigin5 = polyline.getOrigin(),\n          _polyline$getOrigin6 = _slicedToArray(_polyline$getOrigin5, 2),\n          ox = _polyline$getOrigin6[0],\n          oy = _polyline$getOrigin6[1];\n\n      var x = 300;\n      var y = 300;\n      polylineOrigin.setPosition(x + ox, y + oy);\n    }).listen();\n    polylineFolder.open();\n  });\n});"},{"relativePath":"scenegraph/demo/visibility.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/scenegraph/demo/visibility.js","order":4,"filename":"visibility.js","title":{"zh":"可见性和展示次序","en":"Visibility & Z-index"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*ZcrHSoLxRS8AAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent, Circle, Group } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n/**\nsolarSystem\n   |    |\n   |   sun\n   |\n earthOrbit\n   |    |\n   |  earth\n   |\n  moonOrbit\n      |\n     moon\n */\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  const solarSystem = new Group({\n    id: 'solarSystem',\n  });\n  const earthOrbit = new Group({\n    id: 'earthOrbit',\n  });\n  const moonOrbit = new Group({\n    id: 'moonOrbit',\n  });\n\n  const sun = new Circle({\n    id: 'sun',\n    style: {\n      r: 100,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n    },\n  });\n  const earth = new Circle({\n    id: 'earth',\n    style: {\n      r: 50,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n    },\n  });\n  const moon = new Circle({\n    id: 'moon',\n    style: {\n      r: 25,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n    },\n  });\n\n  solarSystem.appendChild(sun);\n  solarSystem.appendChild(earthOrbit);\n  earthOrbit.appendChild(earth);\n  earthOrbit.appendChild(moonOrbit);\n  moonOrbit.appendChild(moon);\n\n  solarSystem.setPosition(300, 250);\n  earthOrbit.translate(100, 0);\n  moonOrbit.translate(50, 0);\n\n  canvas.appendChild(solarSystem);\n\n  // use AntV G devtools\n  window.__g_instances__ = [canvas];\n\n  // stats\n  const stats = new Stats();\n  stats.showPanel(0);\n  const $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  const $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n    if (stats) {\n      stats.update();\n    }\n  });\n\n  // GUI\n  const gui = new lil.GUI({ autoPlace: false });\n  $wrapper.appendChild(gui.domElement);\n  const rendererFolder = gui.addFolder('renderer');\n  const rendererConfig = {\n    renderer: 'canvas',\n  };\n  rendererFolder\n    .add(rendererConfig, 'renderer', ['canvas', 'webgl', 'svg'])\n    .onChange((renderer) => {\n      canvas.setRenderer(\n        renderer === 'canvas' ? canvasRenderer : renderer === 'webgl' ? webglRenderer : svgRenderer,\n      );\n    });\n  rendererFolder.open();\n\n  const sunFolder = gui.addFolder('sun');\n  const sunConfig = {\n    show: () => {\n      sun.attr('visibility', 'visible');\n    },\n    hide: () => {\n      sun.attr('visibility', 'hidden');\n    },\n    'z-index': 0,\n  };\n  sunFolder.add(sunConfig, 'hide').name('hide');\n  sunFolder.add(sunConfig, 'show').name('show');\n  sunFolder.add(sunConfig, 'z-index', 0, 100).onChange((zIndex) => {\n    sun.style.zIndex = zIndex;\n  });\n  sunFolder.open();\n\n  const earthFolder = gui.addFolder('earth');\n  const earthConfig = {\n    show: () => {\n      earth.attr('visibility', 'visible');\n    },\n    hide: () => {\n      earth.attr('visibility', 'hidden');\n    },\n    'z-index': 0,\n  };\n  earthFolder.add(earthConfig, 'hide').name('hide');\n  earthFolder.add(earthConfig, 'show').name('show');\n  earthFolder.add(earthConfig, 'z-index', 0, 100).onChange((zIndex) => {\n    earth.style.zIndex = zIndex;\n  });\n\n  const moonFolder = gui.addFolder('moon');\n  const moonConfig = {\n    show: () => {\n      moon.attr('visibility', 'visible');\n    },\n    hide: () => {\n      moon.attr('visibility', 'hidden');\n    },\n  };\n  moonFolder.add(moonConfig, 'hide').name('hide');\n  moonFolder.add(moonConfig, 'show').name('show');\n\n  const earthOrbitFolder = gui.addFolder('earthOrbit');\n  const earthOrbitConfig = {\n    show: () => {\n      earthOrbit.attr('visibility', 'visible');\n    },\n    hide: () => {\n      earthOrbit.attr('visibility', 'hidden');\n    },\n    'z-index': 0,\n  };\n  earthOrbitFolder.add(earthOrbitConfig, 'hide').name('hide');\n  earthOrbitFolder.add(earthOrbitConfig, 'show').name('show');\n  earthOrbitFolder.add(earthOrbitConfig, 'z-index', 0, 100).onChange((zIndex) => {\n    earthOrbit.style.zIndex = zIndex;\n  });\n\n  const moonOrbitFolder = gui.addFolder('moonOrbit');\n  const moonOrbitConfig = {\n    show: () => {\n      moonOrbit.attr('visibility', 'visible');\n    },\n    hide: () => {\n      moonOrbit.attr('visibility', 'hidden');\n    },\n    'z-index': 0,\n  };\n  moonOrbitFolder.add(moonOrbitConfig, 'hide').name('hide');\n  moonOrbitFolder.add(moonOrbitConfig, 'show').name('show');\n  moonOrbitFolder.add(moonOrbitConfig, 'z-index', 0, 100).onChange((zIndex) => {\n    moonOrbit.style.zIndex = zIndex;\n  });\n});\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.visibility = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n  solarSystem\n     |    |\n     |   sun\n     |\n   earthOrbit\n     |    |\n     |  earth\n     |\n    moonOrbit\n        |\n       moon\n   */\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    var solarSystem = new _g.Group({\n      id: 'solarSystem'\n    });\n    var earthOrbit = new _g.Group({\n      id: 'earthOrbit'\n    });\n    var moonOrbit = new _g.Group({\n      id: 'moonOrbit'\n    });\n    var sun = new _g.Circle({\n      id: 'sun',\n      style: {\n        r: 100,\n        fill: '#1890FF',\n        stroke: '#F04864',\n        lineWidth: 4\n      }\n    });\n    var earth = new _g.Circle({\n      id: 'earth',\n      style: {\n        r: 50,\n        fill: '#1890FF',\n        stroke: '#F04864',\n        lineWidth: 4\n      }\n    });\n    var moon = new _g.Circle({\n      id: 'moon',\n      style: {\n        r: 25,\n        fill: '#1890FF',\n        stroke: '#F04864',\n        lineWidth: 4\n      }\n    });\n    solarSystem.appendChild(sun);\n    solarSystem.appendChild(earthOrbit);\n    earthOrbit.appendChild(earth);\n    earthOrbit.appendChild(moonOrbit);\n    moonOrbit.appendChild(moon);\n    solarSystem.setPosition(300, 250);\n    earthOrbit.translate(100, 0);\n    moonOrbit.translate(50, 0);\n    canvas.appendChild(solarSystem); // use AntV G devtools\n\n    window.__g_instances__ = [canvas]; // stats\n\n    var stats = new _stats.default();\n    stats.showPanel(0);\n    var $stats = stats.dom;\n    $stats.style.position = 'absolute';\n    $stats.style.left = '0px';\n    $stats.style.top = '0px';\n    var $wrapper = document.getElementById('container');\n    $wrapper.appendChild($stats);\n    canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n      if (stats) {\n        stats.update();\n      }\n    }); // GUI\n\n    var gui = new lil.GUI({\n      autoPlace: false\n    });\n    $wrapper.appendChild(gui.domElement);\n    var rendererFolder = gui.addFolder('renderer');\n    var rendererConfig = {\n      renderer: 'canvas'\n    };\n    rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'webgl', 'svg']).onChange(function (renderer) {\n      canvas.setRenderer(renderer === 'canvas' ? canvasRenderer : renderer === 'webgl' ? webglRenderer : svgRenderer);\n    });\n    rendererFolder.open();\n    var sunFolder = gui.addFolder('sun');\n    var sunConfig = {\n      show: function show() {\n        sun.attr('visibility', 'visible');\n      },\n      hide: function hide() {\n        sun.attr('visibility', 'hidden');\n      },\n      'z-index': 0\n    };\n    sunFolder.add(sunConfig, 'hide').name('hide');\n    sunFolder.add(sunConfig, 'show').name('show');\n    sunFolder.add(sunConfig, 'z-index', 0, 100).onChange(function (zIndex) {\n      sun.style.zIndex = zIndex;\n    });\n    sunFolder.open();\n    var earthFolder = gui.addFolder('earth');\n    var earthConfig = {\n      show: function show() {\n        earth.attr('visibility', 'visible');\n      },\n      hide: function hide() {\n        earth.attr('visibility', 'hidden');\n      },\n      'z-index': 0\n    };\n    earthFolder.add(earthConfig, 'hide').name('hide');\n    earthFolder.add(earthConfig, 'show').name('show');\n    earthFolder.add(earthConfig, 'z-index', 0, 100).onChange(function (zIndex) {\n      earth.style.zIndex = zIndex;\n    });\n    var moonFolder = gui.addFolder('moon');\n    var moonConfig = {\n      show: function show() {\n        moon.attr('visibility', 'visible');\n      },\n      hide: function hide() {\n        moon.attr('visibility', 'hidden');\n      }\n    };\n    moonFolder.add(moonConfig, 'hide').name('hide');\n    moonFolder.add(moonConfig, 'show').name('show');\n    var earthOrbitFolder = gui.addFolder('earthOrbit');\n    var earthOrbitConfig = {\n      show: function show() {\n        earthOrbit.attr('visibility', 'visible');\n      },\n      hide: function hide() {\n        earthOrbit.attr('visibility', 'hidden');\n      },\n      'z-index': 0\n    };\n    earthOrbitFolder.add(earthOrbitConfig, 'hide').name('hide');\n    earthOrbitFolder.add(earthOrbitConfig, 'show').name('show');\n    earthOrbitFolder.add(earthOrbitConfig, 'z-index', 0, 100).onChange(function (zIndex) {\n      earthOrbit.style.zIndex = zIndex;\n    });\n    var moonOrbitFolder = gui.addFolder('moonOrbit');\n    var moonOrbitConfig = {\n      show: function show() {\n        moonOrbit.attr('visibility', 'visible');\n      },\n      hide: function hide() {\n        moonOrbit.attr('visibility', 'hidden');\n      },\n      'z-index': 0\n    };\n    moonOrbitFolder.add(moonOrbitConfig, 'hide').name('hide');\n    moonOrbitFolder.add(moonOrbitConfig, 'show').name('show');\n    moonOrbitFolder.add(moonOrbitConfig, 'z-index', 0, 100).onChange(function (zIndex) {\n      moonOrbit.style.zIndex = zIndex;\n    });\n  });\n});"},{"relativePath":"scenegraph/demo/transform.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/scenegraph/demo/transform.js","order":2,"filename":"transform.js","title":{"zh":"变换","en":"Transform"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*ZcrHSoLxRS8AAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent, Circle, Ellipse } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  const ellipse = new Ellipse({\n    style: {\n      cx: 300,\n      cy: 200,\n      rx: 100,\n      ry: 150,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n    },\n  });\n\n  canvas.appendChild(ellipse);\n\n  // original position\n  const origin = new Circle({\n    style: {\n      r: 20,\n      fill: 'red',\n    },\n  });\n  canvas.appendChild(origin);\n  origin.setLocalPosition(300, 200);\n\n  // stats\n  const stats = new Stats();\n  stats.showPanel(0);\n  const $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  const $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n    if (stats) {\n      stats.update();\n    }\n  });\n\n  // GUI\n  const gui = new lil.GUI({ autoPlace: false });\n  $wrapper.appendChild(gui.domElement);\n  const rendererFolder = gui.addFolder('renderer');\n  const rendererConfig = {\n    renderer: 'canvas',\n  };\n  rendererFolder\n    .add(rendererConfig, 'renderer', ['canvas', 'webgl', 'svg'])\n    .onChange((renderer) => {\n      canvas.setRenderer(\n        renderer === 'canvas' ? canvasRenderer : renderer === 'webgl' ? webglRenderer : svgRenderer,\n      );\n    });\n  rendererFolder.open();\n\n  const ellipseFolder = gui.addFolder('Transform');\n  const ellipseConfig = {\n    translateX: 0,\n    translateY: 0,\n    transformOriginX: 100,\n    transformOriginY: 150,\n    scale: 1,\n    rotate: () => {\n      ellipse.rotateLocal(10);\n    },\n  };\n  ellipseFolder.add(ellipseConfig, 'translateX', -200, 200).onChange((tx) => {\n    // same as:\n    // ellipse.attr('x');\n    // ellipse.attr('y');\n    const [x, y] = ellipse.getPosition();\n    // same as:\n    // * ellipse.move(300 + tx, y);\n    // * ellipse.moveTo(300 + tx, y);\n    ellipse.setPosition(300 + tx, y);\n\n    const [ox, oy] = ellipse.getOrigin();\n    const [lx, ly] = ellipse.getPosition();\n    origin.setPosition(lx + ox, ly + oy);\n  });\n  ellipseFolder.add(ellipseConfig, 'translateY', -200, 200).onChange((ty) => {\n    const [x, y] = ellipse.getPosition();\n    // same as:\n    // * ellipse.move(x, 200 + ty);\n    // * ellipse.moveTo(x, 200 + ty);\n    ellipse.setPosition(x, 200 + ty);\n\n    const [ox, oy] = ellipse.getOrigin();\n    const [lx, ly] = ellipse.getPosition();\n    origin.setPosition(lx + ox, ly + oy);\n  });\n  ellipseFolder.add(ellipseConfig, 'transformOriginX', -200, 200).onChange((tx) => {\n    ellipse.style.transformOrigin = `${tx}px ${ellipseConfig.transformOriginY}px`;\n\n    const [ox, oy] = ellipse.getOrigin();\n    const [lx, ly] = ellipse.getPosition();\n    origin.setPosition(lx + ox, ly + oy);\n  });\n  ellipseFolder.add(ellipseConfig, 'transformOriginY', -200, 200).onChange((ty) => {\n    ellipse.style.transformOrigin = `${ellipseConfig.transformOriginX}px ${ty}px`;\n\n    const [ox, oy] = ellipse.getOrigin();\n    const [lx, ly] = ellipse.getPosition();\n    origin.setPosition(lx + ox, ly + oy);\n  });\n  ellipseFolder.add(ellipseConfig, 'rotate').name('rotate');\n  ellipseFolder.add(ellipseConfig, 'scale', 0.2, 5).onChange((scaling) => {\n    ellipse.setLocalScale(scaling);\n  });\n\n  ellipseFolder.open();\n});\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.transform = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    var ellipse = new _g.Ellipse({\n      style: {\n        cx: 300,\n        cy: 200,\n        rx: 100,\n        ry: 150,\n        fill: '#1890FF',\n        stroke: '#F04864',\n        lineWidth: 4\n      }\n    });\n    canvas.appendChild(ellipse); // original position\n\n    var origin = new _g.Circle({\n      style: {\n        r: 20,\n        fill: 'red'\n      }\n    });\n    canvas.appendChild(origin);\n    origin.setLocalPosition(300, 200); // stats\n\n    var stats = new _stats.default();\n    stats.showPanel(0);\n    var $stats = stats.dom;\n    $stats.style.position = 'absolute';\n    $stats.style.left = '0px';\n    $stats.style.top = '0px';\n    var $wrapper = document.getElementById('container');\n    $wrapper.appendChild($stats);\n    canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n      if (stats) {\n        stats.update();\n      }\n    }); // GUI\n\n    var gui = new lil.GUI({\n      autoPlace: false\n    });\n    $wrapper.appendChild(gui.domElement);\n    var rendererFolder = gui.addFolder('renderer');\n    var rendererConfig = {\n      renderer: 'canvas'\n    };\n    rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'webgl', 'svg']).onChange(function (renderer) {\n      canvas.setRenderer(renderer === 'canvas' ? canvasRenderer : renderer === 'webgl' ? webglRenderer : svgRenderer);\n    });\n    rendererFolder.open();\n    var ellipseFolder = gui.addFolder('Transform');\n    var ellipseConfig = {\n      translateX: 0,\n      translateY: 0,\n      transformOriginX: 100,\n      transformOriginY: 150,\n      scale: 1,\n      rotate: function rotate() {\n        ellipse.rotateLocal(10);\n      }\n    };\n    ellipseFolder.add(ellipseConfig, 'translateX', -200, 200).onChange(function (tx) {\n      // same as:\n      // ellipse.attr('x');\n      // ellipse.attr('y');\n      var _ellipse$getPosition = ellipse.getPosition(),\n          _ellipse$getPosition2 = _slicedToArray(_ellipse$getPosition, 2),\n          x = _ellipse$getPosition2[0],\n          y = _ellipse$getPosition2[1]; // same as:\n      // * ellipse.move(300 + tx, y);\n      // * ellipse.moveTo(300 + tx, y);\n\n\n      ellipse.setPosition(300 + tx, y);\n\n      var _ellipse$getOrigin = ellipse.getOrigin(),\n          _ellipse$getOrigin2 = _slicedToArray(_ellipse$getOrigin, 2),\n          ox = _ellipse$getOrigin2[0],\n          oy = _ellipse$getOrigin2[1];\n\n      var _ellipse$getPosition3 = ellipse.getPosition(),\n          _ellipse$getPosition4 = _slicedToArray(_ellipse$getPosition3, 2),\n          lx = _ellipse$getPosition4[0],\n          ly = _ellipse$getPosition4[1];\n\n      origin.setPosition(lx + ox, ly + oy);\n    });\n    ellipseFolder.add(ellipseConfig, 'translateY', -200, 200).onChange(function (ty) {\n      var _ellipse$getPosition5 = ellipse.getPosition(),\n          _ellipse$getPosition6 = _slicedToArray(_ellipse$getPosition5, 2),\n          x = _ellipse$getPosition6[0],\n          y = _ellipse$getPosition6[1]; // same as:\n      // * ellipse.move(x, 200 + ty);\n      // * ellipse.moveTo(x, 200 + ty);\n\n\n      ellipse.setPosition(x, 200 + ty);\n\n      var _ellipse$getOrigin3 = ellipse.getOrigin(),\n          _ellipse$getOrigin4 = _slicedToArray(_ellipse$getOrigin3, 2),\n          ox = _ellipse$getOrigin4[0],\n          oy = _ellipse$getOrigin4[1];\n\n      var _ellipse$getPosition7 = ellipse.getPosition(),\n          _ellipse$getPosition8 = _slicedToArray(_ellipse$getPosition7, 2),\n          lx = _ellipse$getPosition8[0],\n          ly = _ellipse$getPosition8[1];\n\n      origin.setPosition(lx + ox, ly + oy);\n    });\n    ellipseFolder.add(ellipseConfig, 'transformOriginX', -200, 200).onChange(function (tx) {\n      ellipse.style.transformOrigin = \"\".concat(tx, \"px \").concat(ellipseConfig.transformOriginY, \"px\");\n\n      var _ellipse$getOrigin5 = ellipse.getOrigin(),\n          _ellipse$getOrigin6 = _slicedToArray(_ellipse$getOrigin5, 2),\n          ox = _ellipse$getOrigin6[0],\n          oy = _ellipse$getOrigin6[1];\n\n      var _ellipse$getPosition9 = ellipse.getPosition(),\n          _ellipse$getPosition10 = _slicedToArray(_ellipse$getPosition9, 2),\n          lx = _ellipse$getPosition10[0],\n          ly = _ellipse$getPosition10[1];\n\n      origin.setPosition(lx + ox, ly + oy);\n    });\n    ellipseFolder.add(ellipseConfig, 'transformOriginY', -200, 200).onChange(function (ty) {\n      ellipse.style.transformOrigin = \"\".concat(ellipseConfig.transformOriginX, \"px \").concat(ty, \"px\");\n\n      var _ellipse$getOrigin7 = ellipse.getOrigin(),\n          _ellipse$getOrigin8 = _slicedToArray(_ellipse$getOrigin7, 2),\n          ox = _ellipse$getOrigin8[0],\n          oy = _ellipse$getOrigin8[1];\n\n      var _ellipse$getPosition11 = ellipse.getPosition(),\n          _ellipse$getPosition12 = _slicedToArray(_ellipse$getPosition11, 2),\n          lx = _ellipse$getPosition12[0],\n          ly = _ellipse$getPosition12[1];\n\n      origin.setPosition(lx + ox, ly + oy);\n    });\n    ellipseFolder.add(ellipseConfig, 'rotate').name('rotate');\n    ellipseFolder.add(ellipseConfig, 'scale', 0.2, 5).onChange(function (scaling) {\n      ellipse.setLocalScale(scaling);\n    });\n    ellipseFolder.open();\n  });\n});"},{"relativePath":"scenegraph/demo/z-index.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/scenegraph/demo/z-index.js","order":5,"filename":"z-index.js","title":{"zh":"展示次序","en":"Z-index"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*gW6rQpXFK30AAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent, Rect, Text } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// ul1 -> li1\n//     -> li2\n// ul2 -> li3\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  const ul1 = new Rect({\n    id: 'ul1',\n    style: {\n      width: 400,\n      height: 200,\n      fill: 'blue',\n    },\n  });\n  const ul1Text = new Text({\n    id: 'ui1-text',\n    style: {\n      text: 'ul1',\n      fontSize: 16,\n      fill: 'white',\n    },\n  });\n  const ul2 = new Rect({\n    id: 'ul2',\n    style: {\n      width: 300,\n      height: 250,\n      fill: '#1890FF',\n      lineWidth: 4,\n      stroke: 'white',\n    },\n  });\n  const ul2Text = new Text({\n    id: 'ui2-text',\n    style: {\n      text: 'ul2',\n      fontSize: 16,\n      fill: 'white',\n    },\n  });\n\n  const li1 = new Rect({\n    id: 'li1',\n    style: {\n      width: 200,\n      height: 50,\n      fill: '#1890FF',\n      lineWidth: 4,\n      stroke: 'white',\n    },\n  });\n  const li1Text = new Text({\n    id: 'li1-text',\n    style: {\n      text: 'li1',\n      fontSize: 16,\n      fill: 'white',\n    },\n  });\n  const li2 = new Rect({\n    id: 'li2',\n    style: {\n      width: 200,\n      height: 50,\n      fill: '#1890FF',\n      lineWidth: 4,\n      stroke: 'white',\n    },\n  });\n  const li2Text = new Text({\n    id: 'li2-text',\n    style: {\n      text: 'li2',\n      fontSize: 16,\n      fill: 'white',\n    },\n  });\n\n  ul1Text.translateLocal(260, 20);\n  ul1.appendChild(ul1Text);\n  ul1.setPosition(50, 50);\n  li1Text.translateLocal(10, 20);\n  li1.appendChild(li1Text);\n  li2Text.translateLocal(10, 20);\n  li2.appendChild(li2Text);\n  li2.translateLocal(20, 30);\n  ul1.appendChild(li1);\n  ul1.appendChild(li2);\n\n  ul2Text.translateLocal(60, 20);\n  ul2.appendChild(ul2Text);\n  ul2.setPosition(200, 100);\n\n  canvas.appendChild(ul1);\n  canvas.appendChild(ul2);\n\n  // stats\n  const stats = new Stats();\n  stats.showPanel(0);\n  const $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  const $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n    if (stats) {\n      stats.update();\n    }\n  });\n\n  // GUI\n  const gui = new lil.GUI({ autoPlace: false });\n  $wrapper.appendChild(gui.domElement);\n  const rendererFolder = gui.addFolder('renderer');\n  const rendererConfig = {\n    renderer: 'canvas',\n  };\n  rendererFolder\n    .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n    .onChange((rendererName) => {\n      let renderer;\n      if (rendererName === 'canvas') {\n        renderer = canvasRenderer;\n      } else if (rendererName === 'svg') {\n        renderer = svgRenderer;\n      } else if (rendererName === 'webgl') {\n        renderer = webglRenderer;\n      } else if (rendererName === 'webgpu') {\n        renderer = webgpuRenderer;\n      } else if (rendererName === 'canvaskit') {\n        renderer = canvaskitRenderer;\n      }\n      canvas.setRenderer(renderer);\n    });\n  rendererFolder.open();\n\n  const zIndexFolder = gui.addFolder('z-index');\n  const zIndexConfig = {\n    li1ZIndex: 0,\n    li2ZIndex: 0,\n    ul1ZIndex: 0,\n    ul2ZIndex: 0,\n  };\n  zIndexFolder.add(zIndexConfig, 'li1ZIndex', 0, 100).onChange((zIndex) => {\n    li1.style.zIndex = zIndex;\n  });\n  zIndexFolder.add(zIndexConfig, 'li2ZIndex', 0, 100).onChange((zIndex) => {\n    li2.style.zIndex = zIndex;\n  });\n  zIndexFolder.add(zIndexConfig, 'ul1ZIndex', 0, 100).onChange((zIndex) => {\n    ul1.style.zIndex = zIndex;\n  });\n  zIndexFolder.add(zIndexConfig, 'ul2ZIndex', 0, 100).onChange((zIndex) => {\n    ul2.style.zIndex = zIndex;\n  });\n  zIndexFolder.open();\n});\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.zIndex = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // ul1 -> li1\n  //     -> li2\n  // ul2 -> li3\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    var ul1 = new _g.Rect({\n      id: 'ul1',\n      style: {\n        width: 400,\n        height: 200,\n        fill: 'blue'\n      }\n    });\n    var ul1Text = new _g.Text({\n      id: 'ui1-text',\n      style: {\n        text: 'ul1',\n        fontSize: 16,\n        fill: 'white'\n      }\n    });\n    var ul2 = new _g.Rect({\n      id: 'ul2',\n      style: {\n        width: 300,\n        height: 250,\n        fill: '#1890FF',\n        lineWidth: 4,\n        stroke: 'white'\n      }\n    });\n    var ul2Text = new _g.Text({\n      id: 'ui2-text',\n      style: {\n        text: 'ul2',\n        fontSize: 16,\n        fill: 'white'\n      }\n    });\n    var li1 = new _g.Rect({\n      id: 'li1',\n      style: {\n        width: 200,\n        height: 50,\n        fill: '#1890FF',\n        lineWidth: 4,\n        stroke: 'white'\n      }\n    });\n    var li1Text = new _g.Text({\n      id: 'li1-text',\n      style: {\n        text: 'li1',\n        fontSize: 16,\n        fill: 'white'\n      }\n    });\n    var li2 = new _g.Rect({\n      id: 'li2',\n      style: {\n        width: 200,\n        height: 50,\n        fill: '#1890FF',\n        lineWidth: 4,\n        stroke: 'white'\n      }\n    });\n    var li2Text = new _g.Text({\n      id: 'li2-text',\n      style: {\n        text: 'li2',\n        fontSize: 16,\n        fill: 'white'\n      }\n    });\n    ul1Text.translateLocal(260, 20);\n    ul1.appendChild(ul1Text);\n    ul1.setPosition(50, 50);\n    li1Text.translateLocal(10, 20);\n    li1.appendChild(li1Text);\n    li2Text.translateLocal(10, 20);\n    li2.appendChild(li2Text);\n    li2.translateLocal(20, 30);\n    ul1.appendChild(li1);\n    ul1.appendChild(li2);\n    ul2Text.translateLocal(60, 20);\n    ul2.appendChild(ul2Text);\n    ul2.setPosition(200, 100);\n    canvas.appendChild(ul1);\n    canvas.appendChild(ul2); // stats\n\n    var stats = new _stats.default();\n    stats.showPanel(0);\n    var $stats = stats.dom;\n    $stats.style.position = 'absolute';\n    $stats.style.left = '0px';\n    $stats.style.top = '0px';\n    var $wrapper = document.getElementById('container');\n    $wrapper.appendChild($stats);\n    canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n      if (stats) {\n        stats.update();\n      }\n    }); // GUI\n\n    var gui = new lil.GUI({\n      autoPlace: false\n    });\n    $wrapper.appendChild(gui.domElement);\n    var rendererFolder = gui.addFolder('renderer');\n    var rendererConfig = {\n      renderer: 'canvas'\n    };\n    rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n      var renderer;\n\n      if (rendererName === 'canvas') {\n        renderer = canvasRenderer;\n      } else if (rendererName === 'svg') {\n        renderer = svgRenderer;\n      } else if (rendererName === 'webgl') {\n        renderer = webglRenderer;\n      } else if (rendererName === 'webgpu') {\n        renderer = webgpuRenderer;\n      } else if (rendererName === 'canvaskit') {\n        renderer = canvaskitRenderer;\n      }\n\n      canvas.setRenderer(renderer);\n    });\n    rendererFolder.open();\n    var zIndexFolder = gui.addFolder('z-index');\n    var zIndexConfig = {\n      li1ZIndex: 0,\n      li2ZIndex: 0,\n      ul1ZIndex: 0,\n      ul2ZIndex: 0\n    };\n    zIndexFolder.add(zIndexConfig, 'li1ZIndex', 0, 100).onChange(function (zIndex) {\n      li1.style.zIndex = zIndex;\n    });\n    zIndexFolder.add(zIndexConfig, 'li2ZIndex', 0, 100).onChange(function (zIndex) {\n      li2.style.zIndex = zIndex;\n    });\n    zIndexFolder.add(zIndexConfig, 'ul1ZIndex', 0, 100).onChange(function (zIndex) {\n      ul1.style.zIndex = zIndex;\n    });\n    zIndexFolder.add(zIndexConfig, 'ul2ZIndex', 0, 100).onChange(function (zIndex) {\n      ul2.style.zIndex = zIndex;\n    });\n    zIndexFolder.open();\n  });\n});"},{"relativePath":"shape/demo/polyline.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/shape/demo/polyline.js","order":5,"filename":"polyline.js","title":{"zh":"折线","en":"Polyline"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*bo4rRK0U8PIAAAAAAAAAAABkARQnAQ","source":"import { Canvas, CanvasEvent, Circle, Image, Path, Polyline } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf',\n    },\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\n// create a line\nconst points = [\n  [50, 50],\n  [100, 50],\n  [100, 100],\n  [150, 100],\n  [150, 150],\n  [200, 150],\n  [200, 200],\n  [250, 200],\n  [250, 250],\n  [300, 250],\n  [300, 300],\n  [350, 300],\n  [350, 350],\n  [400, 350],\n  [400, 400],\n  [450, 400],\n];\nconst polyline = new Polyline({\n  style: {\n    points,\n    stroke: '#1890FF',\n    lineWidth: 2,\n    cursor: 'pointer',\n  },\n});\n\nconst arrowMarker = new Path({\n  style: {\n    path: 'M 10,10 L -10,0 L 10,-10 Z',\n    stroke: '#1890FF',\n    anchor: '0.5 0.5',\n    transformOrigin: 'center',\n  },\n});\nconst circleMarker = new Circle({\n  style: {\n    r: 10,\n    stroke: '#1890FF',\n  },\n});\nconst imageMarker = new Image({\n  style: {\n    width: 50,\n    height: 50,\n    anchor: [0.5, 0.5],\n    transformOrigin: 'center',\n    transform: 'rotate(90deg)',\n    img: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ',\n  },\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  canvas.appendChild(polyline);\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n\nconst lineFolder = gui.addFolder('polyline');\nconst lineConfig = {\n  stroke: '#1890FF',\n  lineWidth: 2,\n  lineJoin: 'miter',\n  lineCap: 'butt',\n  lineDash: 0,\n  lineDashOffset: 0,\n  strokeOpacity: 1,\n  firstPointX: 50,\n  firstPointY: 50,\n  visible: true,\n  increasedLineWidthForHitTesting: 0,\n  cursor: 'pointer',\n  shadowColor: '#fff',\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n};\nlineFolder.add(lineConfig, 'firstPointX', 0, 200).onChange((firstPointX) => {\n  const newPoints = [...points];\n  newPoints[0] = [firstPointX, lineConfig.firstPointY];\n  polyline.style.points = newPoints;\n});\nlineFolder.add(lineConfig, 'firstPointY', 0, 200).onChange((firstPointY) => {\n  const newPoints = [...points];\n  newPoints[0] = [lineConfig.firstPointX, firstPointY];\n  polyline.style.points = newPoints;\n});\nlineFolder.addColor(lineConfig, 'stroke').onChange((color) => {\n  polyline.attr('stroke', color);\n});\nlineFolder.add(lineConfig, 'lineWidth', 1, 20).onChange((lineWidth) => {\n  polyline.attr('lineWidth', lineWidth);\n});\nlineFolder.add(lineConfig, 'lineJoin', ['miter', 'round', 'bevel']).onChange((lineJoin) => {\n  polyline.attr('lineJoin', lineJoin);\n});\nlineFolder.add(lineConfig, 'lineCap', ['butt', 'round', 'square']).onChange((lineCap) => {\n  polyline.attr('lineCap', lineCap);\n});\nlineFolder.add(lineConfig, 'lineDash', 0, 100).onChange((lineDash) => {\n  polyline.style.lineDash = [lineDash];\n});\nlineFolder.add(lineConfig, 'lineDashOffset', 0, 100).onChange((lineDashOffset) => {\n  polyline.style.lineDashOffset = lineDashOffset;\n});\nlineFolder.add(lineConfig, 'strokeOpacity', 0, 1, 0.1).onChange((opacity) => {\n  polyline.attr('strokeOpacity', opacity);\n});\nlineFolder.add(lineConfig, 'visible').onChange((visible) => {\n  if (visible) {\n    polyline.style.visibility = 'visible';\n    // polyline.show();\n  } else {\n    polyline.style.visibility = 'hidden';\n    // polyline.hide();\n  }\n});\nlineFolder\n  .add(lineConfig, 'increasedLineWidthForHitTesting', 0, 50)\n  .onChange((increasedLineWidthForHitTesting) => {\n    polyline.style.increasedLineWidthForHitTesting = increasedLineWidthForHitTesting;\n  });\nlineFolder\n  .add(lineConfig, 'cursor', ['default', 'pointer', 'help', 'progress', 'text', 'move'])\n  .onChange((cursor) => {\n    polyline.style.cursor = cursor;\n  });\nlineFolder.addColor(lineConfig, 'shadowColor').onChange((color) => {\n  polyline.attr('shadowColor', color);\n});\nlineFolder.add(lineConfig, 'shadowBlur', 0, 100).onChange((shadowBlur) => {\n  polyline.style.shadowBlur = shadowBlur;\n});\nlineFolder.add(lineConfig, 'shadowOffsetX', -50, 50).onChange((shadowOffsetX) => {\n  polyline.style.shadowOffsetX = shadowOffsetX;\n});\nlineFolder.add(lineConfig, 'shadowOffsetY', -50, 50).onChange((shadowOffsetY) => {\n  polyline.style.shadowOffsetY = shadowOffsetY;\n});\n\nconst transformFolder = gui.addFolder('transform');\nconst transformConfig = {\n  localPositionX: 50,\n  localPositionY: 50,\n  localScale: 1,\n  localEulerAngles: 0,\n  transformOrigin: 'left top',\n  anchorX: 0,\n  anchorY: 0,\n};\ntransformFolder\n  .add(transformConfig, 'transformOrigin', [\n    'left top',\n    'center',\n    'right bottom',\n    '50% 50%',\n    '50px 50px',\n  ])\n  .onChange((transformOrigin) => {\n    polyline.style.transformOrigin = transformOrigin;\n  });\ntransformFolder.add(transformConfig, 'localPositionX', 0, 600).onChange((localPositionX) => {\n  const [lx, ly] = polyline.getLocalPosition();\n  polyline.setLocalPosition(localPositionX, ly);\n});\ntransformFolder.add(transformConfig, 'localPositionY', 0, 500).onChange((localPositionY) => {\n  const [lx, ly] = polyline.getLocalPosition();\n  polyline.setLocalPosition(lx, localPositionY);\n});\ntransformFolder.add(transformConfig, 'localScale', 0.2, 5).onChange((localScale) => {\n  polyline.setLocalScale(localScale);\n});\ntransformFolder.add(transformConfig, 'localEulerAngles', 0, 360).onChange((localEulerAngles) => {\n  polyline.setLocalEulerAngles(localEulerAngles);\n});\ntransformFolder.add(transformConfig, 'anchorX', 0, 1).onChange((anchorX) => {\n  polyline.style.anchor = [anchorX, transformConfig.anchorY];\n});\ntransformFolder.add(transformConfig, 'anchorY', 0, 1).onChange((anchorY) => {\n  polyline.style.anchor = [transformConfig.anchorX, anchorY];\n});\ntransformFolder.close();\n\nconst markerFolder = gui.addFolder('marker');\nconst markerConfig = {\n  markerStart: 'null',\n  markerEnd: 'null',\n  markerMid: 'null',\n  markerStartOffset: 0,\n  markerEndOffset: 0,\n};\nmarkerFolder\n  .add(markerConfig, 'markerStart', ['path', 'circle', 'image', 'null'])\n  .onChange((markerStartStr) => {\n    let markerStart;\n    if (markerStartStr === 'path') {\n      markerStart = arrowMarker.cloneNode();\n    } else if (markerStartStr === 'circle') {\n      markerStart = circleMarker.cloneNode();\n    } else if (markerStartStr === 'image') {\n      markerStart = imageMarker.cloneNode();\n    } else {\n      markerStart = null;\n    }\n\n    polyline.style.markerStart = markerStart;\n  });\nmarkerFolder\n  .add(markerConfig, 'markerMid', ['path', 'circle', 'image', 'null'])\n  .onChange((markerMidStr) => {\n    let markerMid;\n    if (markerMidStr === 'path') {\n      markerMid = arrowMarker.cloneNode();\n    } else if (markerMidStr === 'circle') {\n      markerMid = circleMarker.cloneNode();\n    } else if (markerMidStr === 'image') {\n      markerMid = imageMarker.cloneNode();\n    } else {\n      markerMid = null;\n    }\n\n    polyline.style.markerMid = markerMid;\n  });\nmarkerFolder\n  .add(markerConfig, 'markerEnd', ['path', 'circle', 'image', 'null'])\n  .onChange((markerEndStr) => {\n    let markerEnd;\n    if (markerEndStr === 'path') {\n      markerEnd = arrowMarker.cloneNode();\n    } else if (markerEndStr === 'circle') {\n      markerEnd = circleMarker.cloneNode();\n    } else if (markerEndStr === 'image') {\n      markerEnd = imageMarker.cloneNode();\n    } else {\n      markerEnd = null;\n    }\n\n    polyline.style.markerEnd = markerEnd;\n  });\nmarkerFolder.add(markerConfig, 'markerStartOffset', -20, 20).onChange((markerStartOffset) => {\n  polyline.style.markerStartOffset = markerStartOffset;\n});\nmarkerFolder.add(markerConfig, 'markerEndOffset', -20, 20).onChange((markerEndOffset) => {\n  polyline.style.markerEndOffset = markerEndOffset;\n});\nmarkerFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.polyline = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf'\n    }, {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  }); // create a line\n\n  var points = [[50, 50], [100, 50], [100, 100], [150, 100], [150, 150], [200, 150], [200, 200], [250, 200], [250, 250], [300, 250], [300, 300], [350, 300], [350, 350], [400, 350], [400, 400], [450, 400]];\n  var polyline = new _g.Polyline({\n    style: {\n      points: points,\n      stroke: '#1890FF',\n      lineWidth: 2,\n      cursor: 'pointer'\n    }\n  });\n  var arrowMarker = new _g.Path({\n    style: {\n      path: 'M 10,10 L -10,0 L 10,-10 Z',\n      stroke: '#1890FF',\n      anchor: '0.5 0.5',\n      transformOrigin: 'center'\n    }\n  });\n  var circleMarker = new _g.Circle({\n    style: {\n      r: 10,\n      stroke: '#1890FF'\n    }\n  });\n  var imageMarker = new _g.Image({\n    style: {\n      width: 50,\n      height: 50,\n      anchor: [0.5, 0.5],\n      transformOrigin: 'center',\n      transform: 'rotate(90deg)',\n      img: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ'\n    }\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    canvas.appendChild(polyline);\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n  var lineFolder = gui.addFolder('polyline');\n  var lineConfig = {\n    stroke: '#1890FF',\n    lineWidth: 2,\n    lineJoin: 'miter',\n    lineCap: 'butt',\n    lineDash: 0,\n    lineDashOffset: 0,\n    strokeOpacity: 1,\n    firstPointX: 50,\n    firstPointY: 50,\n    visible: true,\n    increasedLineWidthForHitTesting: 0,\n    cursor: 'pointer',\n    shadowColor: '#fff',\n    shadowBlur: 0,\n    shadowOffsetX: 0,\n    shadowOffsetY: 0\n  };\n  lineFolder.add(lineConfig, 'firstPointX', 0, 200).onChange(function (firstPointX) {\n    var newPoints = [].concat(points);\n    newPoints[0] = [firstPointX, lineConfig.firstPointY];\n    polyline.style.points = newPoints;\n  });\n  lineFolder.add(lineConfig, 'firstPointY', 0, 200).onChange(function (firstPointY) {\n    var newPoints = [].concat(points);\n    newPoints[0] = [lineConfig.firstPointX, firstPointY];\n    polyline.style.points = newPoints;\n  });\n  lineFolder.addColor(lineConfig, 'stroke').onChange(function (color) {\n    polyline.attr('stroke', color);\n  });\n  lineFolder.add(lineConfig, 'lineWidth', 1, 20).onChange(function (lineWidth) {\n    polyline.attr('lineWidth', lineWidth);\n  });\n  lineFolder.add(lineConfig, 'lineJoin', ['miter', 'round', 'bevel']).onChange(function (lineJoin) {\n    polyline.attr('lineJoin', lineJoin);\n  });\n  lineFolder.add(lineConfig, 'lineCap', ['butt', 'round', 'square']).onChange(function (lineCap) {\n    polyline.attr('lineCap', lineCap);\n  });\n  lineFolder.add(lineConfig, 'lineDash', 0, 100).onChange(function (lineDash) {\n    polyline.style.lineDash = [lineDash];\n  });\n  lineFolder.add(lineConfig, 'lineDashOffset', 0, 100).onChange(function (lineDashOffset) {\n    polyline.style.lineDashOffset = lineDashOffset;\n  });\n  lineFolder.add(lineConfig, 'strokeOpacity', 0, 1, 0.1).onChange(function (opacity) {\n    polyline.attr('strokeOpacity', opacity);\n  });\n  lineFolder.add(lineConfig, 'visible').onChange(function (visible) {\n    if (visible) {\n      polyline.style.visibility = 'visible'; // polyline.show();\n    } else {\n      polyline.style.visibility = 'hidden'; // polyline.hide();\n    }\n  });\n  lineFolder.add(lineConfig, 'increasedLineWidthForHitTesting', 0, 50).onChange(function (increasedLineWidthForHitTesting) {\n    polyline.style.increasedLineWidthForHitTesting = increasedLineWidthForHitTesting;\n  });\n  lineFolder.add(lineConfig, 'cursor', ['default', 'pointer', 'help', 'progress', 'text', 'move']).onChange(function (cursor) {\n    polyline.style.cursor = cursor;\n  });\n  lineFolder.addColor(lineConfig, 'shadowColor').onChange(function (color) {\n    polyline.attr('shadowColor', color);\n  });\n  lineFolder.add(lineConfig, 'shadowBlur', 0, 100).onChange(function (shadowBlur) {\n    polyline.style.shadowBlur = shadowBlur;\n  });\n  lineFolder.add(lineConfig, 'shadowOffsetX', -50, 50).onChange(function (shadowOffsetX) {\n    polyline.style.shadowOffsetX = shadowOffsetX;\n  });\n  lineFolder.add(lineConfig, 'shadowOffsetY', -50, 50).onChange(function (shadowOffsetY) {\n    polyline.style.shadowOffsetY = shadowOffsetY;\n  });\n  var transformFolder = gui.addFolder('transform');\n  var transformConfig = {\n    localPositionX: 50,\n    localPositionY: 50,\n    localScale: 1,\n    localEulerAngles: 0,\n    transformOrigin: 'left top',\n    anchorX: 0,\n    anchorY: 0\n  };\n  transformFolder.add(transformConfig, 'transformOrigin', ['left top', 'center', 'right bottom', '50% 50%', '50px 50px']).onChange(function (transformOrigin) {\n    polyline.style.transformOrigin = transformOrigin;\n  });\n  transformFolder.add(transformConfig, 'localPositionX', 0, 600).onChange(function (localPositionX) {\n    var _polyline$getLocalPos = polyline.getLocalPosition(),\n        _polyline$getLocalPos2 = _slicedToArray(_polyline$getLocalPos, 2),\n        lx = _polyline$getLocalPos2[0],\n        ly = _polyline$getLocalPos2[1];\n\n    polyline.setLocalPosition(localPositionX, ly);\n  });\n  transformFolder.add(transformConfig, 'localPositionY', 0, 500).onChange(function (localPositionY) {\n    var _polyline$getLocalPos3 = polyline.getLocalPosition(),\n        _polyline$getLocalPos4 = _slicedToArray(_polyline$getLocalPos3, 2),\n        lx = _polyline$getLocalPos4[0],\n        ly = _polyline$getLocalPos4[1];\n\n    polyline.setLocalPosition(lx, localPositionY);\n  });\n  transformFolder.add(transformConfig, 'localScale', 0.2, 5).onChange(function (localScale) {\n    polyline.setLocalScale(localScale);\n  });\n  transformFolder.add(transformConfig, 'localEulerAngles', 0, 360).onChange(function (localEulerAngles) {\n    polyline.setLocalEulerAngles(localEulerAngles);\n  });\n  transformFolder.add(transformConfig, 'anchorX', 0, 1).onChange(function (anchorX) {\n    polyline.style.anchor = [anchorX, transformConfig.anchorY];\n  });\n  transformFolder.add(transformConfig, 'anchorY', 0, 1).onChange(function (anchorY) {\n    polyline.style.anchor = [transformConfig.anchorX, anchorY];\n  });\n  transformFolder.close();\n  var markerFolder = gui.addFolder('marker');\n  var markerConfig = {\n    markerStart: 'null',\n    markerEnd: 'null',\n    markerMid: 'null',\n    markerStartOffset: 0,\n    markerEndOffset: 0\n  };\n  markerFolder.add(markerConfig, 'markerStart', ['path', 'circle', 'image', 'null']).onChange(function (markerStartStr) {\n    var markerStart;\n\n    if (markerStartStr === 'path') {\n      markerStart = arrowMarker.cloneNode();\n    } else if (markerStartStr === 'circle') {\n      markerStart = circleMarker.cloneNode();\n    } else if (markerStartStr === 'image') {\n      markerStart = imageMarker.cloneNode();\n    } else {\n      markerStart = null;\n    }\n\n    polyline.style.markerStart = markerStart;\n  });\n  markerFolder.add(markerConfig, 'markerMid', ['path', 'circle', 'image', 'null']).onChange(function (markerMidStr) {\n    var markerMid;\n\n    if (markerMidStr === 'path') {\n      markerMid = arrowMarker.cloneNode();\n    } else if (markerMidStr === 'circle') {\n      markerMid = circleMarker.cloneNode();\n    } else if (markerMidStr === 'image') {\n      markerMid = imageMarker.cloneNode();\n    } else {\n      markerMid = null;\n    }\n\n    polyline.style.markerMid = markerMid;\n  });\n  markerFolder.add(markerConfig, 'markerEnd', ['path', 'circle', 'image', 'null']).onChange(function (markerEndStr) {\n    var markerEnd;\n\n    if (markerEndStr === 'path') {\n      markerEnd = arrowMarker.cloneNode();\n    } else if (markerEndStr === 'circle') {\n      markerEnd = circleMarker.cloneNode();\n    } else if (markerEndStr === 'image') {\n      markerEnd = imageMarker.cloneNode();\n    } else {\n      markerEnd = null;\n    }\n\n    polyline.style.markerEnd = markerEnd;\n  });\n  markerFolder.add(markerConfig, 'markerStartOffset', -20, 20).onChange(function (markerStartOffset) {\n    polyline.style.markerStartOffset = markerStartOffset;\n  });\n  markerFolder.add(markerConfig, 'markerEndOffset', -20, 20).onChange(function (markerEndOffset) {\n    polyline.style.markerEndOffset = markerEndOffset;\n  });\n  markerFolder.open();\n});"},{"relativePath":"plugins/demo/canvaskit-emoji.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/plugins/demo/canvaskit-emoji.js","order":2,"filename":"canvaskit-emoji.js","title":{"zh":"绘制 emoji","en":"Draw emoji"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*_q9uQLTx6ssAAAAAAAAAAAAAARQnAQ","source":"import { Canvas, Text } from '@antv/g';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\n\n/**\n * Draw emoji with Noto Emoji\n * ported from @see https://codesandbox.io/s/dsiuc?file=/src/index.js\n * @see https://github.com/googlefonts/noto-emoji\n */\n\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf',\n    },\n    {\n      name: 'Noto Color Emoji',\n      url: '/NotoColorEmoji.ttf',\n    },\n  ],\n});\n\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvaskitRenderer,\n});\n\n(async () => {\n  await canvas.ready;\n\n  const emoji = new Text({\n    style: {\n      fontFamily: 'Roboto, Noto Color Emoji',\n      fontSize: 30,\n      fill: 'black',\n      text: 'Emoji 🍕🍔🍟🥝🍱🕶🎩👩‍👩‍👦👩‍👩‍👧‍👧👩‍👩‍👦👩‍👩‍👧‍👧👩‍👩‍👦👩‍👩‍👧‍👧👩‍👩‍👦👩‍👩‍👧‍👧👩‍👩‍👦👩‍👩‍👧‍👧👩‍👩‍👦👩‍👩‍👧‍👧👩‍👩‍👦👩‍👩‍👧‍👧',\n      wordWrap: true,\n      wordWrapWidth: 200,\n\n      strutStyle: {\n        strutEnabled: true,\n        fontFamilies: ['Roboto', 'Noto Color Emoji'],\n        fontSize: 30,\n        // mapping css line-height to this is does not seem 1:1\n        heightMultiplier: 1,\n        forceStrutHeight: true,\n      },\n    },\n  });\n  emoji.translate(100, 300);\n  canvas.appendChild(emoji);\n})();\n\n// compared with native browser\nconst newStyle = document.createElement('style');\nnewStyle.appendChild(\n  document.createTextNode(`\n@font-face {\n  src: url(\"https://storage.googleapis.com/skia-cdn/google-web-fonts/Roboto-Regular.ttf\");\n  font-family: \"MyRoboto\";\n  font-style: normal;\n}\n\n@font-face {\n  font-family: \"MyNoto Color Emoji\";\n  src: url(\"https://storage.googleapis.com/skia-cdn/misc/NotoColorEmoji.ttf\");\n  font-style: normal;\n}\n`),\n);\ndocument.head.appendChild(newStyle);\n\nconst $div = document.createElement('div');\n$div.setAttribute('id', 'editor');\n$div.setAttribute('contenteditable', true);\n$div.innerHTML = 'Emoji 🍕🍔🍟🥝🍱🕶🎩👩‍👩‍👦👩‍👩‍👧‍👧👩‍👩‍👦👩‍👩‍👧‍👧👩‍👩‍👦👩‍👩‍👧‍👧👩‍👩‍👦👩‍👩‍👧‍👧👩‍👩‍👦👩‍👩‍👧‍👧👩‍👩‍👦👩‍👩‍👧‍👧👩‍👩‍👦👩‍👩‍👧‍👧';\n$div.style = `\n  font-family: \"MyRoboto\", \"MyNoto Color Emoji\";\n  line-height: 1;\n  font-size: 30px;\n  width: 200px;\n  color: black;\n  margin-left: 100px;\n`;\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($div);\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvaskit\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvaskit\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvaskit);\n    global.canvaskitEmoji = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvaskit) {\n  \"use strict\";\n\n  /**\n   * Draw emoji with Noto Emoji\n   * ported from @see https://codesandbox.io/s/dsiuc?file=/src/index.js\n   * @see https://github.com/googlefonts/noto-emoji\n   */\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf'\n    }, {\n      name: 'Noto Color Emoji',\n      url: '/NotoColorEmoji.ttf'\n    }]\n  });\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvaskitRenderer\n  });\n\n  (async function () {\n    await canvas.ready;\n    var emoji = new _g.Text({\n      style: {\n        fontFamily: 'Roboto, Noto Color Emoji',\n        fontSize: 30,\n        fill: 'black',\n        text: 'Emoji 🍕🍔🍟🥝🍱🕶🎩👩‍👩‍👦👩‍👩‍👧‍👧👩‍👩‍👦👩‍👩‍👧‍👧👩‍👩‍👦👩‍👩‍👧‍👧👩‍👩‍👦👩‍👩‍👧‍👧👩‍👩‍👦👩‍👩‍👧‍👧👩‍👩‍👦👩‍👩‍👧‍👧👩‍👩‍👦👩‍👩‍👧‍👧',\n        wordWrap: true,\n        wordWrapWidth: 200,\n        strutStyle: {\n          strutEnabled: true,\n          fontFamilies: ['Roboto', 'Noto Color Emoji'],\n          fontSize: 30,\n          // mapping css line-height to this is does not seem 1:1\n          heightMultiplier: 1,\n          forceStrutHeight: true\n        }\n      }\n    });\n    emoji.translate(100, 300);\n    canvas.appendChild(emoji);\n  })(); // compared with native browser\n\n\n  var newStyle = document.createElement('style');\n  newStyle.appendChild(document.createTextNode(\"\\n@font-face {\\n  src: url(\\\"https://storage.googleapis.com/skia-cdn/google-web-fonts/Roboto-Regular.ttf\\\");\\n  font-family: \\\"MyRoboto\\\";\\n  font-style: normal;\\n}\\n\\n@font-face {\\n  font-family: \\\"MyNoto Color Emoji\\\";\\n  src: url(\\\"https://storage.googleapis.com/skia-cdn/misc/NotoColorEmoji.ttf\\\");\\n  font-style: normal;\\n}\\n\"));\n  document.head.appendChild(newStyle);\n  var $div = document.createElement('div');\n  $div.setAttribute('id', 'editor');\n  $div.setAttribute('contenteditable', true);\n  $div.innerHTML = 'Emoji 🍕🍔🍟🥝🍱🕶🎩👩‍👩‍👦👩‍👩‍👧‍👧👩‍👩‍👦👩‍👩‍👧‍👧👩‍👩‍👦👩‍👩‍👧‍👧👩‍👩‍👦👩‍👩‍👧‍👧👩‍👩‍👦👩‍👩‍👧‍👧👩‍👩‍👦👩‍👩‍👧‍👧👩‍👩‍👦👩‍👩‍👧‍👧';\n  $div.style = \"\\n  font-family: \\\"MyRoboto\\\", \\\"MyNoto Color Emoji\\\";\\n  line-height: 1;\\n  font-size: 30px;\\n  width: 200px;\\n  color: black;\\n  margin-left: 100px;\\n\";\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($div);\n});"},{"relativePath":"plugins/demo/a11y-text-extractor.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/plugins/demo/a11y-text-extractor.js","order":20,"filename":"a11y-text-extractor.js","title":{"zh":"使用浏览器搜索（command + F）文本内容","en":"Search text content in browser"},"source":"import { Canvas, CanvasEvent } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Plugin } from '@antv/g-plugin-a11y';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as d3 from 'd3';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n/**\n * inspired by sprite.js\n * @see http://spritejs.com/#/en/guide/d3\n *\n * ported from fullstack-d3\n * @see https://codesandbox.io/s/vllpx?file=/chart.js\n */\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst svgRenderer = new SVGRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst webgpuRenderer = new WebGPURenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf',\n    },\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\n\nconst plugin = new Plugin({\n  enableExtractingText: true,\n});\ncanvasRenderer.registerPlugin(plugin);\nsvgRenderer.registerPlugin(plugin);\nwebglRenderer.registerPlugin(plugin);\nwebgpuRenderer.registerPlugin(plugin);\ncanvaskitRenderer.registerPlugin(plugin);\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\nconst drawBars = async () => {\n  // 1. Access data\n  const dataset = await d3.json(\n    'https://gw.alipayobjects.com/os/bmw-prod/8e7cfeb6-28e5-4e78-8d16-c08468360f5f.json',\n  );\n  const metricAccessor = (d) => d.humidity;\n  const yAccessor = (d) => d.length;\n\n  // 2. Create chart dimensions\n  const width = 600;\n  let dimensions = {\n    width: width,\n    height: width * 0.6,\n    margin: {\n      top: 30,\n      right: 10,\n      bottom: 50,\n      left: 50,\n    },\n  };\n  dimensions.boundedWidth = dimensions.width - dimensions.margin.left - dimensions.margin.right;\n  dimensions.boundedHeight = dimensions.height - dimensions.margin.top - dimensions.margin.bottom;\n\n  // 3. Draw canvas\n  const wrapper = d3.select(\n    canvas.document.documentElement, // use GCanvas' document element instead of a real DOM\n  );\n\n  const bounds = wrapper\n    .append('g')\n    .style('transform', `translate(${dimensions.margin.left}px, ${dimensions.margin.top}px)`);\n\n  // 4. Create scales\n\n  const xScale = d3\n    .scaleLinear()\n    .domain(d3.extent(dataset, metricAccessor))\n    .range([0, dimensions.boundedWidth])\n    .nice();\n\n  const binsGenerator = d3.bin().domain(xScale.domain()).value(metricAccessor).thresholds(12);\n\n  const bins = binsGenerator(dataset);\n\n  const yScale = d3\n    .scaleLinear()\n    .domain([0, d3.max(bins, yAccessor)])\n    .range([dimensions.boundedHeight, 0])\n    .nice();\n\n  // 5. Draw data\n  const binsGroup = bounds.append('g');\n  const binGroups = binsGroup.selectAll('g').data(bins).join('g').attr('class', 'bin');\n\n  const barPadding = 1;\n  const barRects = binGroups\n    .append('rect')\n    .attr('x', (d) => xScale(d.x0) + barPadding / 2)\n    .attr('y', (d) => yScale(yAccessor(d)))\n    .attr('width', (d) => d3.max([0, xScale(d.x1) - xScale(d.x0) - barPadding]))\n    .attr('height', (d) => dimensions.boundedHeight - yScale(yAccessor(d)))\n    .attr('fill', 'cornflowerblue')\n    .on('mouseenter', function (e) {\n      d3.select(e.target).attr('fill', 'red');\n    })\n    .on('mouseleave', function (e) {\n      d3.select(e.target).attr('fill', 'cornflowerblue');\n    });\n\n  const barText = binGroups\n    .filter(yAccessor)\n    .append('text')\n    .attr('x', (d) => xScale(d.x0) + (xScale(d.x1) - xScale(d.x0)) / 2)\n    .attr('y', (d) => yScale(yAccessor(d)) - 5)\n    .text(yAccessor)\n    .attr('fill', 'darkgrey')\n    .style('text-anchor', 'middle')\n    .style('font-size', '12px')\n    .style('font-family', 'sans-serif');\n\n  const mean = d3.mean(dataset, metricAccessor);\n  const meanLine = bounds\n    .append('line')\n    .attr('x1', xScale(mean))\n    .attr('x2', xScale(mean))\n    .attr('y1', -15)\n    .attr('y2', dimensions.boundedHeight)\n    .attr('stroke-width', 1)\n    .attr('stroke', 'maroon')\n    .attr('stroke-dasharray', '2px 4px');\n\n  const meanLabel = bounds\n    .append('text')\n    .attr('x', xScale(mean))\n    .attr('y', -20)\n    .text('mean')\n    .attr('fill', 'maroon')\n    .style('font-size', '12px')\n    .style('text-anchor', 'middle');\n\n  // 6. Draw peripherals\n  const xAxisGenerator = d3.axisBottom().scale(xScale);\n\n  const xAxis = bounds\n    .append('g')\n    .call(xAxisGenerator)\n    .attr('transform', `translateY(${dimensions.boundedHeight}px)`)\n    .attr('fill', 'black');\n\n  const xAxisLabel = xAxis\n    .append('text')\n    .attr('x', dimensions.boundedWidth / 2)\n    .attr('y', dimensions.margin.bottom - 10)\n    .attr('fill', 'black')\n    .style('font-size', '10px')\n    .text('Humidity')\n    .style('text-transform', 'capitalize');\n};\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  drawBars();\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-plugin-a11y\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"d3\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-plugin-a11y\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"d3\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gPluginA11y, global.gSvg, global.gWebgl, global.gWebgpu, global.d3, global.lilGui, global.stats);\n    global.a11yTextExtractor = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gPluginA11y, _gSvg, _gWebgl, _gWebgpu, d3, lil, _stats) {\n  \"use strict\";\n\n  d3 = _interopRequireWildcard(d3);\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * inspired by sprite.js\n   * @see http://spritejs.com/#/en/guide/d3\n   *\n   * ported from fullstack-d3\n   * @see https://codesandbox.io/s/vllpx?file=/chart.js\n   */\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var webgpuRenderer = new _gWebgpu.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf'\n    }, {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var plugin = new _gPluginA11y.Plugin({\n    enableExtractingText: true\n  });\n  canvasRenderer.registerPlugin(plugin);\n  svgRenderer.registerPlugin(plugin);\n  webglRenderer.registerPlugin(plugin);\n  webgpuRenderer.registerPlugin(plugin);\n  canvaskitRenderer.registerPlugin(plugin); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n\n  var drawBars = async function drawBars() {\n    // 1. Access data\n    var dataset = await d3.json('https://gw.alipayobjects.com/os/bmw-prod/8e7cfeb6-28e5-4e78-8d16-c08468360f5f.json');\n\n    var metricAccessor = function metricAccessor(d) {\n      return d.humidity;\n    };\n\n    var yAccessor = function yAccessor(d) {\n      return d.length;\n    }; // 2. Create chart dimensions\n\n\n    var width = 600;\n    var dimensions = {\n      width: width,\n      height: width * 0.6,\n      margin: {\n        top: 30,\n        right: 10,\n        bottom: 50,\n        left: 50\n      }\n    };\n    dimensions.boundedWidth = dimensions.width - dimensions.margin.left - dimensions.margin.right;\n    dimensions.boundedHeight = dimensions.height - dimensions.margin.top - dimensions.margin.bottom; // 3. Draw canvas\n\n    var wrapper = d3.select(canvas.document.documentElement // use GCanvas' document element instead of a real DOM\n    );\n    var bounds = wrapper.append('g').style('transform', \"translate(\".concat(dimensions.margin.left, \"px, \").concat(dimensions.margin.top, \"px)\")); // 4. Create scales\n\n    var xScale = d3.scaleLinear().domain(d3.extent(dataset, metricAccessor)).range([0, dimensions.boundedWidth]).nice();\n    var binsGenerator = d3.bin().domain(xScale.domain()).value(metricAccessor).thresholds(12);\n    var bins = binsGenerator(dataset);\n    var yScale = d3.scaleLinear().domain([0, d3.max(bins, yAccessor)]).range([dimensions.boundedHeight, 0]).nice(); // 5. Draw data\n\n    var binsGroup = bounds.append('g');\n    var binGroups = binsGroup.selectAll('g').data(bins).join('g').attr('class', 'bin');\n    var barPadding = 1;\n    var barRects = binGroups.append('rect').attr('x', function (d) {\n      return xScale(d.x0) + barPadding / 2;\n    }).attr('y', function (d) {\n      return yScale(yAccessor(d));\n    }).attr('width', function (d) {\n      return d3.max([0, xScale(d.x1) - xScale(d.x0) - barPadding]);\n    }).attr('height', function (d) {\n      return dimensions.boundedHeight - yScale(yAccessor(d));\n    }).attr('fill', 'cornflowerblue').on('mouseenter', function (e) {\n      d3.select(e.target).attr('fill', 'red');\n    }).on('mouseleave', function (e) {\n      d3.select(e.target).attr('fill', 'cornflowerblue');\n    });\n    var barText = binGroups.filter(yAccessor).append('text').attr('x', function (d) {\n      return xScale(d.x0) + (xScale(d.x1) - xScale(d.x0)) / 2;\n    }).attr('y', function (d) {\n      return yScale(yAccessor(d)) - 5;\n    }).text(yAccessor).attr('fill', 'darkgrey').style('text-anchor', 'middle').style('font-size', '12px').style('font-family', 'sans-serif');\n    var mean = d3.mean(dataset, metricAccessor);\n    var meanLine = bounds.append('line').attr('x1', xScale(mean)).attr('x2', xScale(mean)).attr('y1', -15).attr('y2', dimensions.boundedHeight).attr('stroke-width', 1).attr('stroke', 'maroon').attr('stroke-dasharray', '2px 4px');\n    var meanLabel = bounds.append('text').attr('x', xScale(mean)).attr('y', -20).text('mean').attr('fill', 'maroon').style('font-size', '12px').style('text-anchor', 'middle'); // 6. Draw peripherals\n\n    var xAxisGenerator = d3.axisBottom().scale(xScale);\n    var xAxis = bounds.append('g').call(xAxisGenerator).attr('transform', \"translateY(\".concat(dimensions.boundedHeight, \"px)\")).attr('fill', 'black');\n    var xAxisLabel = xAxis.append('text').attr('x', dimensions.boundedWidth / 2).attr('y', dimensions.margin.bottom - 10).attr('fill', 'black').style('font-size', '10px').text('Humidity').style('text-transform', 'capitalize');\n  };\n\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    drawBars();\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n});"},{"relativePath":"plugins/demo/canvaskit-paragraph.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/plugins/demo/canvaskit-paragraph.js","order":4,"filename":"canvaskit-paragraph.js","title":{"zh":"使用 CanvasKit 绘制文本段落","en":"Draw paragraph with CanvasKit"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*DYqRQLtqtIUAAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent, Text } from '@antv/g';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n/**\n * Use paragraph shaping.\n * @see https://skia.org/docs/user/modules/quickstart/#text-shaping\n *\n * @see https://github.com/flutter/flutter/issues/76473\n * @see https://github.com/flutter/flutter/issues/90135#issuecomment-984916656\n *\n * TextStyle API:\n * @see https://api.flutter.dev/flutter/painting/TextStyle-class.html\n */\n\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf',\n    },\n    {\n      name: 'sans-serif',\n      url: '/NotoSansCJKsc-VF.ttf',\n    },\n  ],\n});\n\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvaskitRenderer,\n});\n\n(async () => {\n  await canvas.ready;\n\n  const ellipsisText = new Text({\n    style: {\n      fontFamily: 'Roboto',\n      fontSize: 22,\n      fill: '#1890FF',\n      text: 'abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz',\n      wordWrap: true,\n      wordWrapWidth: 100,\n      maxLines: 3,\n      ellipsis: '...',\n    },\n  });\n  ellipsisText.translate(100, 100);\n  canvas.appendChild(ellipsisText);\n\n  const decoratedText = new Text({\n    style: {\n      fontFamily: 'sans-serif',\n      fontSize: 22,\n      fill: '#1890FF',\n      text: 'abcdefghijklmnopqrstuvwxyz这是测试文本',\n      wordWrap: true,\n      wordWrapWidth: 100,\n      decorationLine: 'underline',\n      decorationThickness: 1.5,\n    },\n  });\n  decoratedText.translate(100, 300);\n  canvas.appendChild(decoratedText);\n\n  const shadowedText = new Text({\n    style: {\n      fontFamily: 'sans-serif',\n      fontSize: 22,\n      fill: '#1890FF',\n      text: 'abcdefghijklmnopqrstuvwxyz这是测试文本',\n      wordWrap: true,\n      wordWrapWidth: 100,\n      shadows: [\n        {\n          color: 'black',\n          blurRadius: 15,\n        },\n        {\n          color: 'red',\n          blurRadius: 5,\n          offset: [10, 10],\n        },\n      ],\n    },\n  });\n  shadowedText.translate(300, 300);\n  canvas.appendChild(shadowedText);\n\n  // fontFeatures\n  const fontFeaturesText = new Text({\n    style: {\n      fontFamily: 'Roboto',\n      fontSize: 22,\n      fill: '#1890FF',\n      text: 'Difficult waffles 0O 3.14',\n      fontFeatures: [\n        {\n          name: 'smcp',\n          value: 1,\n        },\n        {\n          name: 'zero',\n          value: 1,\n        },\n      ],\n    },\n  });\n  fontFeaturesText.translate(300, 100);\n  canvas.appendChild(fontFeaturesText);\n\n  // stats\n  const stats = new Stats();\n  stats.showPanel(0);\n  const $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  const $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n    if (stats) {\n      stats.update();\n    }\n  });\n\n  // GUI\n  const gui = new lil.GUI({ autoPlace: false });\n  $wrapper.appendChild(gui.domElement);\n  const folder = gui.addFolder('Paragraph');\n  const config = {\n    wordWrap: true,\n    wordWrapWidth: 100,\n    decorationLine: 'underline',\n    decorationThickness: 1.5,\n    decorationColor: '#1890FF',\n    decorationStyle: 'solid',\n    direction: 'ltr',\n    fill: '#1890FF',\n    backgroundColor: 'white',\n    foregroundColor: '#1890FF',\n    shadows: [],\n    halfLeading: false,\n    heightMultiplier: 1,\n    letterSpacing: 0,\n    wordSpacing: 0,\n    disableHinting: false,\n  };\n  folder.addColor(config, 'fill').onChange((fill) => {\n    decoratedText.style.fill = fill;\n  });\n  folder.addColor(config, 'backgroundColor').onChange((backgroundColor) => {\n    decoratedText.style.backgroundColor = backgroundColor;\n  });\n  folder.addColor(config, 'foregroundColor').onChange((foregroundColor) => {\n    decoratedText.style.foregroundColor = foregroundColor;\n  });\n  folder.add(config, 'wordWrap').onChange((wordWrap) => {\n    decoratedText.style.wordWrap = wordWrap;\n  });\n  folder.add(config, 'wordWrapWidth', 50, 200).onChange((wordWrapWidth) => {\n    decoratedText.style.wordWrapWidth = wordWrapWidth;\n  });\n  folder.add(config, 'heightMultiplier', 0, 5).onChange((heightMultiplier) => {\n    decoratedText.style.heightMultiplier = heightMultiplier;\n  });\n  folder.add(config, 'letterSpacing', 0, 10).onChange((letterSpacing) => {\n    decoratedText.style.letterSpacing = letterSpacing;\n  });\n  folder.add(config, 'wordSpacing', 0, 10).onChange((wordSpacing) => {\n    decoratedText.style.wordSpacing = wordSpacing;\n  });\n  folder.add(config, 'disableHinting').onChange((disableHinting) => {\n    decoratedText.style.disableHinting = disableHinting;\n  });\n  folder.add(config, 'halfLeading').onChange((halfLeading) => {\n    decoratedText.style.halfLeading = halfLeading;\n  });\n  folder\n    .add(config, 'decorationLine', ['none', 'underline', 'overline', 'line-through'])\n    .onChange((decorationLine) => {\n      decoratedText.style.decorationLine = decorationLine;\n    });\n  folder.add(config, 'decorationThickness', 0, 5).onChange((decorationThickness) => {\n    decoratedText.style.decorationThickness = decorationThickness;\n  });\n  folder.addColor(config, 'decorationColor').onChange((decorationColor) => {\n    decoratedText.style.decorationColor = decorationColor;\n  });\n  folder\n    .add(config, 'decorationStyle', ['solid', 'double', 'dotted', 'dashed', 'wavy'])\n    .onChange((decorationStyle) => {\n      decoratedText.style.decorationStyle = decorationStyle;\n    });\n  folder.add(config, 'direction', ['ltr', 'rtl']).onChange((direction) => {\n    decoratedText.style.direction = direction;\n  });\n\n  const strutFolder = gui.addFolder('StrutStyle');\n  const strutConfig = {\n    fontFamilies: ['sans-serif'],\n    strutEnabled: false,\n    fontSize: 22,\n    heightMultiplier: 1,\n    leading: 0,\n    halfLeading: false,\n    forceStrutHeight: false,\n  };\n  strutFolder.add(strutConfig, 'strutEnabled').onChange((strutEnabled) => {\n    decoratedText.style.strutStyle = strutConfig;\n  });\n  strutFolder.add(strutConfig, 'fontSize', 10, 40).onChange((fontSize) => {\n    decoratedText.style.strutStyle = strutConfig;\n  });\n  strutFolder.add(strutConfig, 'heightMultiplier', 0, 5).onChange((heightMultiplier) => {\n    decoratedText.style.strutStyle = strutConfig;\n  });\n  strutFolder.add(strutConfig, 'leading', 0, 10).onChange((heightMultiplier) => {\n    decoratedText.style.strutStyle = strutConfig;\n  });\n  strutFolder.add(strutConfig, 'halfLeading').onChange((halfLeading) => {\n    decoratedText.style.strutStyle = strutConfig;\n  });\n  strutFolder.add(strutConfig, 'forceStrutHeight').onChange((halfLeading) => {\n    decoratedText.style.strutStyle = strutConfig;\n  });\n})();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvaskit\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvaskit\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvaskit, global.lilGui, global.stats);\n    global.canvaskitParagraph = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvaskit, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * Use paragraph shaping.\n   * @see https://skia.org/docs/user/modules/quickstart/#text-shaping\n   *\n   * @see https://github.com/flutter/flutter/issues/76473\n   * @see https://github.com/flutter/flutter/issues/90135#issuecomment-984916656\n   *\n   * TextStyle API:\n   * @see https://api.flutter.dev/flutter/painting/TextStyle-class.html\n   */\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf'\n    }, {\n      name: 'sans-serif',\n      url: '/NotoSansCJKsc-VF.ttf'\n    }]\n  });\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvaskitRenderer\n  });\n\n  (async function () {\n    await canvas.ready;\n    var ellipsisText = new _g.Text({\n      style: {\n        fontFamily: 'Roboto',\n        fontSize: 22,\n        fill: '#1890FF',\n        text: 'abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz',\n        wordWrap: true,\n        wordWrapWidth: 100,\n        maxLines: 3,\n        ellipsis: '...'\n      }\n    });\n    ellipsisText.translate(100, 100);\n    canvas.appendChild(ellipsisText);\n    var decoratedText = new _g.Text({\n      style: {\n        fontFamily: 'sans-serif',\n        fontSize: 22,\n        fill: '#1890FF',\n        text: 'abcdefghijklmnopqrstuvwxyz这是测试文本',\n        wordWrap: true,\n        wordWrapWidth: 100,\n        decorationLine: 'underline',\n        decorationThickness: 1.5\n      }\n    });\n    decoratedText.translate(100, 300);\n    canvas.appendChild(decoratedText);\n    var shadowedText = new _g.Text({\n      style: {\n        fontFamily: 'sans-serif',\n        fontSize: 22,\n        fill: '#1890FF',\n        text: 'abcdefghijklmnopqrstuvwxyz这是测试文本',\n        wordWrap: true,\n        wordWrapWidth: 100,\n        shadows: [{\n          color: 'black',\n          blurRadius: 15\n        }, {\n          color: 'red',\n          blurRadius: 5,\n          offset: [10, 10]\n        }]\n      }\n    });\n    shadowedText.translate(300, 300);\n    canvas.appendChild(shadowedText); // fontFeatures\n\n    var fontFeaturesText = new _g.Text({\n      style: {\n        fontFamily: 'Roboto',\n        fontSize: 22,\n        fill: '#1890FF',\n        text: 'Difficult waffles 0O 3.14',\n        fontFeatures: [{\n          name: 'smcp',\n          value: 1\n        }, {\n          name: 'zero',\n          value: 1\n        }]\n      }\n    });\n    fontFeaturesText.translate(300, 100);\n    canvas.appendChild(fontFeaturesText); // stats\n\n    var stats = new _stats.default();\n    stats.showPanel(0);\n    var $stats = stats.dom;\n    $stats.style.position = 'absolute';\n    $stats.style.left = '0px';\n    $stats.style.top = '0px';\n    var $wrapper = document.getElementById('container');\n    $wrapper.appendChild($stats);\n    canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n      if (stats) {\n        stats.update();\n      }\n    }); // GUI\n\n    var gui = new lil.GUI({\n      autoPlace: false\n    });\n    $wrapper.appendChild(gui.domElement);\n    var folder = gui.addFolder('Paragraph');\n    var config = {\n      wordWrap: true,\n      wordWrapWidth: 100,\n      decorationLine: 'underline',\n      decorationThickness: 1.5,\n      decorationColor: '#1890FF',\n      decorationStyle: 'solid',\n      direction: 'ltr',\n      fill: '#1890FF',\n      backgroundColor: 'white',\n      foregroundColor: '#1890FF',\n      shadows: [],\n      halfLeading: false,\n      heightMultiplier: 1,\n      letterSpacing: 0,\n      wordSpacing: 0,\n      disableHinting: false\n    };\n    folder.addColor(config, 'fill').onChange(function (fill) {\n      decoratedText.style.fill = fill;\n    });\n    folder.addColor(config, 'backgroundColor').onChange(function (backgroundColor) {\n      decoratedText.style.backgroundColor = backgroundColor;\n    });\n    folder.addColor(config, 'foregroundColor').onChange(function (foregroundColor) {\n      decoratedText.style.foregroundColor = foregroundColor;\n    });\n    folder.add(config, 'wordWrap').onChange(function (wordWrap) {\n      decoratedText.style.wordWrap = wordWrap;\n    });\n    folder.add(config, 'wordWrapWidth', 50, 200).onChange(function (wordWrapWidth) {\n      decoratedText.style.wordWrapWidth = wordWrapWidth;\n    });\n    folder.add(config, 'heightMultiplier', 0, 5).onChange(function (heightMultiplier) {\n      decoratedText.style.heightMultiplier = heightMultiplier;\n    });\n    folder.add(config, 'letterSpacing', 0, 10).onChange(function (letterSpacing) {\n      decoratedText.style.letterSpacing = letterSpacing;\n    });\n    folder.add(config, 'wordSpacing', 0, 10).onChange(function (wordSpacing) {\n      decoratedText.style.wordSpacing = wordSpacing;\n    });\n    folder.add(config, 'disableHinting').onChange(function (disableHinting) {\n      decoratedText.style.disableHinting = disableHinting;\n    });\n    folder.add(config, 'halfLeading').onChange(function (halfLeading) {\n      decoratedText.style.halfLeading = halfLeading;\n    });\n    folder.add(config, 'decorationLine', ['none', 'underline', 'overline', 'line-through']).onChange(function (decorationLine) {\n      decoratedText.style.decorationLine = decorationLine;\n    });\n    folder.add(config, 'decorationThickness', 0, 5).onChange(function (decorationThickness) {\n      decoratedText.style.decorationThickness = decorationThickness;\n    });\n    folder.addColor(config, 'decorationColor').onChange(function (decorationColor) {\n      decoratedText.style.decorationColor = decorationColor;\n    });\n    folder.add(config, 'decorationStyle', ['solid', 'double', 'dotted', 'dashed', 'wavy']).onChange(function (decorationStyle) {\n      decoratedText.style.decorationStyle = decorationStyle;\n    });\n    folder.add(config, 'direction', ['ltr', 'rtl']).onChange(function (direction) {\n      decoratedText.style.direction = direction;\n    });\n    var strutFolder = gui.addFolder('StrutStyle');\n    var strutConfig = {\n      fontFamilies: ['sans-serif'],\n      strutEnabled: false,\n      fontSize: 22,\n      heightMultiplier: 1,\n      leading: 0,\n      halfLeading: false,\n      forceStrutHeight: false\n    };\n    strutFolder.add(strutConfig, 'strutEnabled').onChange(function (strutEnabled) {\n      decoratedText.style.strutStyle = strutConfig;\n    });\n    strutFolder.add(strutConfig, 'fontSize', 10, 40).onChange(function (fontSize) {\n      decoratedText.style.strutStyle = strutConfig;\n    });\n    strutFolder.add(strutConfig, 'heightMultiplier', 0, 5).onChange(function (heightMultiplier) {\n      decoratedText.style.strutStyle = strutConfig;\n    });\n    strutFolder.add(strutConfig, 'leading', 0, 10).onChange(function (heightMultiplier) {\n      decoratedText.style.strutStyle = strutConfig;\n    });\n    strutFolder.add(strutConfig, 'halfLeading').onChange(function (halfLeading) {\n      decoratedText.style.strutStyle = strutConfig;\n    });\n    strutFolder.add(strutConfig, 'forceStrutHeight').onChange(function (halfLeading) {\n      decoratedText.style.strutStyle = strutConfig;\n    });\n  })();\n});"},{"relativePath":"plugins/demo/box2d.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/plugins/demo/box2d.js","order":12,"filename":"box2d.js","title":{"zh":"在 2D 场景中使用 Box2D 物理引擎","en":"Use Box2D in 2D scene"},"source":"import { Canvas, CanvasEvent, Circle, Image, Line, Polygon, Rect, Text } from '@antv/g';\nimport { Renderer } from '@antv/g-canvas';\nimport { Plugin as PluginBox2D } from '@antv/g-plugin-box2d';\nimport Stats from 'stats.js';\n\nconst renderer = new Renderer();\nconst plugin = new PluginBox2D();\nrenderer.registerPlugin(plugin);\n\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer,\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  const ground1 = new Line({\n    style: {\n      x1: 0,\n      y1: 200,\n      x2: 50,\n      y2: 400,\n      stroke: '#1890FF',\n      lineWidth: 2,\n      width: 1000,\n      height: 10,\n      rigid: 'static', // static ground\n    },\n  });\n  canvas.appendChild(ground1);\n  const ground2 = new Line({\n    style: {\n      x1: 50,\n      y1: 400,\n      x2: 400,\n      y2: 400,\n      stroke: '#1890FF',\n      lineWidth: 2,\n      width: 1000,\n      height: 10,\n      rigid: 'static', // static ground\n    },\n  });\n  canvas.appendChild(ground2);\n  const ground3 = new Line({\n    style: {\n      x1: 400,\n      y1: 400,\n      x2: 400,\n      y2: 200,\n      stroke: '#1890FF',\n      lineWidth: 2,\n      width: 1000,\n      height: 10,\n      rigid: 'static', // static ground\n    },\n  });\n  canvas.appendChild(ground3);\n\n  for (let i = 0; i < 10; i++) {\n    const rect = new Rect({\n      style: {\n        fill: '#C6E5FF',\n        stroke: '#1890FF',\n        lineWidth: 2,\n        width: 50,\n        height: 50,\n        rigid: 'dynamic',\n        density: 10,\n        x: Math.random() * 100,\n        y: Math.random() * 100,\n      },\n    });\n\n    rect.setRotation(0, 0, 0.3, 0.7);\n    canvas.appendChild(rect);\n  }\n\n  const circle = new Circle({\n    style: {\n      fill: '#1890FF',\n      r: 50,\n      rigid: 'dynamic',\n      density: 10,\n      restitution: 0.5,\n      cx: 300,\n      cy: 0,\n    },\n  });\n  canvas.appendChild(circle);\n  const text = new Text({\n    id: 'text',\n    style: {\n      fontFamily: 'PingFang SC',\n      text: 'Circle',\n      fontSize: 16,\n      fill: '#fFF',\n      textAlign: 'center',\n      textBaseline: 'middle',\n    },\n  });\n  circle.appendChild(text);\n\n  const polygon = new Polygon({\n    style: {\n      points: [\n        [20, 10],\n        [40, 10],\n        [40 + 20 * Math.sin(Math.PI / 6), 10 + 20 * Math.cos(Math.PI / 6)],\n        [40, 10 + 20 * Math.cos(Math.PI / 6) * 2],\n        [20, 10 + 20 * Math.cos(Math.PI / 6) * 2],\n        [20 - 20 * Math.sin(Math.PI / 6), 10 + 20 * Math.cos(Math.PI / 6)],\n      ],\n      fill: '#C6E5FF',\n      stroke: '#1890FF',\n      lineWidth: 2,\n      rigid: 'dynamic',\n      density: 10,\n    },\n  });\n  polygon.setPosition(100, 100);\n  canvas.appendChild(polygon);\n\n  const image = new Image({\n    style: {\n      x: 200,\n      y: 100,\n      width: 80,\n      height: 80,\n      img: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ',\n      rigid: 'dynamic',\n      density: 10,\n    },\n  });\n  canvas.appendChild(image);\n\n  // const slope = new Polyline({\n  //   style: {\n  //     points: [\n  //       [0, 200],\n  //       [50, 400],\n  //       [400, 400],\n  //       [400, 200],\n  //     ],\n  //     stroke: '#1890FF',\n  //     lineWidth: 2,\n  //     rigid: 'static', // static ground\n  //   },\n  // });\n  // canvas.appendChild(slope);\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\n// const gui = new lil.GUI({ autoPlace: false });\n// $wrapper.appendChild(gui.domElement);\n// const forceFolder = gui.addFolder('force');\n// const forceConfig = {\n//   applyForce: () => {\n//     plugin.applyForce(circle, [0, -100], [0, 0]);\n//   },\n// };\n// forceFolder.add(forceConfig, 'applyForce').name('applyForce');\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-plugin-box2d\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-plugin-box2d\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gPluginBox2d, global.stats);\n    global.box2d = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gPluginBox2d, _stats) {\n  \"use strict\";\n\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  var renderer = new _gCanvas.Renderer();\n  var plugin = new _gPluginBox2d.Plugin();\n  renderer.registerPlugin(plugin);\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: renderer\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    var ground1 = new _g.Line({\n      style: {\n        x1: 0,\n        y1: 200,\n        x2: 50,\n        y2: 400,\n        stroke: '#1890FF',\n        lineWidth: 2,\n        width: 1000,\n        height: 10,\n        rigid: 'static' // static ground\n\n      }\n    });\n    canvas.appendChild(ground1);\n    var ground2 = new _g.Line({\n      style: {\n        x1: 50,\n        y1: 400,\n        x2: 400,\n        y2: 400,\n        stroke: '#1890FF',\n        lineWidth: 2,\n        width: 1000,\n        height: 10,\n        rigid: 'static' // static ground\n\n      }\n    });\n    canvas.appendChild(ground2);\n    var ground3 = new _g.Line({\n      style: {\n        x1: 400,\n        y1: 400,\n        x2: 400,\n        y2: 200,\n        stroke: '#1890FF',\n        lineWidth: 2,\n        width: 1000,\n        height: 10,\n        rigid: 'static' // static ground\n\n      }\n    });\n    canvas.appendChild(ground3);\n\n    for (var i = 0; i < 10; i++) {\n      var rect = new _g.Rect({\n        style: {\n          fill: '#C6E5FF',\n          stroke: '#1890FF',\n          lineWidth: 2,\n          width: 50,\n          height: 50,\n          rigid: 'dynamic',\n          density: 10,\n          x: Math.random() * 100,\n          y: Math.random() * 100\n        }\n      });\n      rect.setRotation(0, 0, 0.3, 0.7);\n      canvas.appendChild(rect);\n    }\n\n    var circle = new _g.Circle({\n      style: {\n        fill: '#1890FF',\n        r: 50,\n        rigid: 'dynamic',\n        density: 10,\n        restitution: 0.5,\n        cx: 300,\n        cy: 0\n      }\n    });\n    canvas.appendChild(circle);\n    var text = new _g.Text({\n      id: 'text',\n      style: {\n        fontFamily: 'PingFang SC',\n        text: 'Circle',\n        fontSize: 16,\n        fill: '#fFF',\n        textAlign: 'center',\n        textBaseline: 'middle'\n      }\n    });\n    circle.appendChild(text);\n    var polygon = new _g.Polygon({\n      style: {\n        points: [[20, 10], [40, 10], [40 + 20 * Math.sin(Math.PI / 6), 10 + 20 * Math.cos(Math.PI / 6)], [40, 10 + 20 * Math.cos(Math.PI / 6) * 2], [20, 10 + 20 * Math.cos(Math.PI / 6) * 2], [20 - 20 * Math.sin(Math.PI / 6), 10 + 20 * Math.cos(Math.PI / 6)]],\n        fill: '#C6E5FF',\n        stroke: '#1890FF',\n        lineWidth: 2,\n        rigid: 'dynamic',\n        density: 10\n      }\n    });\n    polygon.setPosition(100, 100);\n    canvas.appendChild(polygon);\n    var image = new _g.Image({\n      style: {\n        x: 200,\n        y: 100,\n        width: 80,\n        height: 80,\n        img: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ',\n        rigid: 'dynamic',\n        density: 10\n      }\n    });\n    canvas.appendChild(image); // const slope = new Polyline({\n    //   style: {\n    //     points: [\n    //       [0, 200],\n    //       [50, 400],\n    //       [400, 400],\n    //       [400, 200],\n    //     ],\n    //     stroke: '#1890FF',\n    //     lineWidth: 2,\n    //     rigid: 'static', // static ground\n    //   },\n    // });\n    // canvas.appendChild(slope);\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n  // const gui = new lil.GUI({ autoPlace: false });\n  // $wrapper.appendChild(gui.domElement);\n  // const forceFolder = gui.addFolder('force');\n  // const forceConfig = {\n  //   applyForce: () => {\n  //     plugin.applyForce(circle, [0, -100], [0, 0]);\n  //   },\n  // };\n  // forceFolder.add(forceConfig, 'applyForce').name('applyForce');\n});"},{"relativePath":"plugins/demo/canvaskit-text-along-path.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/plugins/demo/canvaskit-text-along-path.js","order":3,"filename":"canvaskit-text-along-path.js","title":{"zh":"沿路径绘制文本","en":"Draw text along path"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*7voUQqLoKrEAAAAAAAAAAAAAARQnAQ","source":"import { Canvas, Path, Text } from '@antv/g';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\n\n/**\n * Draw text along a path.\n * @see https://fiddle.skia.org/c/@Canvas_drawTextRSXform\n *\n * TextStyle API:\n * @see https://api.flutter.dev/flutter/painting/TextStyle-class.html\n */\n\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSansCJKsc-VF.ttf',\n    },\n  ],\n});\n\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvaskitRenderer,\n});\n\n(async () => {\n  await canvas.ready;\n\n  const alongPath = new Path({\n    style: {\n      d: 'M 0,40 C 5.5555555555555545,40,22.222222222222218,44.44444444444445,33.33333333333333,40 C 44.444444444444436,35.55555555555556,55.55555555555554,14.66666666666667,66.66666666666666,13.333333333333336 C 77.77777777777777,12.000000000000002,88.88888888888887,32,100,32 C 111.11111111111113,32,122.22222222222221,14.66666666666667,133.33333333333331,13.333333333333336 C 144.44444444444443,12.000000000000002,155.55555555555557,24,166.66666666666669,24 C 177.7777777777778,24,188.8888888888889,11.111111111111114,200,13.333333333333336 C 211.1111111111111,15.555555555555557,222.22222222222226,35.111111111111114,233.33333333333334,37.333333333333336 C 244.44444444444443,39.55555555555555,255.55555555555551,31.22222222222223,266.66666666666663,26.66666666666667 C 277.77777777777777,22.111111111111114,294.4444444444444,12.777777777777779,300,10',\n    },\n  });\n\n  const text = new Text({\n    style: {\n      fontFamily: 'sans-serif',\n      fontSize: 22,\n      fill: '#1890FF',\n      text: 'abcdefghijklmn这是测试文字',\n      alongPath,\n    },\n  });\n  text.translate(100, 100);\n  canvas.appendChild(text);\n})();\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvaskit\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvaskit\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvaskit);\n    global.canvaskitTextAlongPath = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvaskit) {\n  \"use strict\";\n\n  /**\n   * Draw text along a path.\n   * @see https://fiddle.skia.org/c/@Canvas_drawTextRSXform\n   *\n   * TextStyle API:\n   * @see https://api.flutter.dev/flutter/painting/TextStyle-class.html\n   */\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSansCJKsc-VF.ttf'\n    }]\n  });\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvaskitRenderer\n  });\n\n  (async function () {\n    await canvas.ready;\n    var alongPath = new _g.Path({\n      style: {\n        d: 'M 0,40 C 5.5555555555555545,40,22.222222222222218,44.44444444444445,33.33333333333333,40 C 44.444444444444436,35.55555555555556,55.55555555555554,14.66666666666667,66.66666666666666,13.333333333333336 C 77.77777777777777,12.000000000000002,88.88888888888887,32,100,32 C 111.11111111111113,32,122.22222222222221,14.66666666666667,133.33333333333331,13.333333333333336 C 144.44444444444443,12.000000000000002,155.55555555555557,24,166.66666666666669,24 C 177.7777777777778,24,188.8888888888889,11.111111111111114,200,13.333333333333336 C 211.1111111111111,15.555555555555557,222.22222222222226,35.111111111111114,233.33333333333334,37.333333333333336 C 244.44444444444443,39.55555555555555,255.55555555555551,31.22222222222223,266.66666666666663,26.66666666666667 C 277.77777777777777,22.111111111111114,294.4444444444444,12.777777777777779,300,10'\n      }\n    });\n    var text = new _g.Text({\n      style: {\n        fontFamily: 'sans-serif',\n        fontSize: 22,\n        fill: '#1890FF',\n        text: 'abcdefghijklmn这是测试文字',\n        alongPath: alongPath\n      }\n    });\n    text.translate(100, 100);\n    canvas.appendChild(text);\n  })();\n});"},{"relativePath":"plugins/demo/css-select.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/plugins/demo/css-select.js","order":10,"filename":"css-select.js","title":{"zh":"CSS 选择器插件","en":"CSS Selector Plugin"},"source":"import { Canvas, CanvasEvent, Circle, Group } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Plugin } from '@antv/g-plugin-css-select';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n/**\nsolarSystem\n   |    |\n   |   sun\n   |\n earthOrbit\n   |    |\n   |  earth\n   |\n  moonOrbit\n      |\n     moon\n */\n\n// create a canvas renderer\nconst canvasRenderer = new CanvasRenderer();\n// register CSS select plugin\ncanvasRenderer.registerPlugin(new Plugin());\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\nconst solarSystem = new Group({\n  id: 'solarSystem',\n});\nconst earthOrbit = new Group({\n  id: 'earthOrbit',\n});\nconst moonOrbit = new Group({\n  id: 'moonOrbit',\n});\n\nconst sun = new Circle({\n  id: 'sun',\n  className: 'classname-sun',\n  style: {\n    r: 100,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 4,\n  },\n});\nconst earth = new Circle({\n  id: 'earth',\n  className: 'classname-earth',\n  style: {\n    r: 50,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 4,\n  },\n});\nconst moon = new Circle({\n  id: 'moon',\n  className: 'classname-moon',\n  style: {\n    r: 25,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 4,\n  },\n});\n\nsolarSystem.appendChild(sun);\nsolarSystem.appendChild(earthOrbit);\nearthOrbit.appendChild(earth);\nearthOrbit.appendChild(moonOrbit);\nmoonOrbit.appendChild(moon);\n\nsolarSystem.setPosition(300, 250);\nearthOrbit.translate(100, 0);\nmoonOrbit.translate(100, 0);\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  canvas.appendChild(solarSystem);\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false, width: 400 });\n$wrapper.appendChild(gui.domElement);\nconst selectorFolder = gui.addFolder('CSS Selector');\nconst selectorConfig = {\n  getElementById: 'sun',\n  getElementsByClassName: 'classname-sun',\n  getElementsByTagName: 'circle',\n  querySelector: '[r=100]',\n  querySelectorAll: '[r=100]',\n};\nconst clear = () => {\n  solarSystem.forEach((child) => {\n    child.setAttribute('fill', '#1890FF');\n  });\n};\nselectorFolder.add(selectorConfig, 'getElementById', ['sun', 'earth', 'moon']).onChange((id) => {\n  clear();\n  const target = solarSystem.getElementById(id);\n  target.setAttribute('fill', '#F04864');\n});\nselectorFolder\n  .add(selectorConfig, 'getElementsByClassName', [\n    'classname-sun',\n    'classname-earth',\n    'classname-moon',\n  ])\n  .onChange((className) => {\n    clear();\n    const targets = solarSystem.getElementsByClassName(className);\n    targets.forEach((target) => {\n      target.setAttribute('fill', '#F04864');\n    });\n  });\nselectorFolder\n  .add(selectorConfig, 'getElementsByTagName', ['circle', 'rect'])\n  .onChange((className) => {\n    clear();\n    const targets = solarSystem.getElementsByTagName(className);\n    targets.forEach((target) => {\n      target.setAttribute('fill', '#F04864');\n    });\n  });\nselectorFolder\n  .add(selectorConfig, 'querySelector', ['[r=100]', '[r=50]', '[r=25]'])\n  .onChange((selector) => {\n    clear();\n    const target = solarSystem.querySelector(selector);\n    target.setAttribute('fill', '#F04864');\n  });\nselectorFolder\n  .add(selectorConfig, 'querySelectorAll', ['[r=100]', '[r=50]', '[r=25]'])\n  .onChange((selector) => {\n    clear();\n    const targets = solarSystem.querySelectorAll(selector);\n    targets.forEach((target) => {\n      target.setAttribute('fill', '#F04864');\n    });\n  });\nselectorFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-plugin-css-select\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-plugin-css-select\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gPluginCssSelect, global.lilGui, global.stats);\n    global.cssSelect = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gPluginCssSelect, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n  solarSystem\n     |    |\n     |   sun\n     |\n   earthOrbit\n     |    |\n     |  earth\n     |\n    moonOrbit\n        |\n       moon\n   */\n  // create a canvas renderer\n  var canvasRenderer = new _gCanvas.Renderer(); // register CSS select plugin\n\n  canvasRenderer.registerPlugin(new _gPluginCssSelect.Plugin()); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  var solarSystem = new _g.Group({\n    id: 'solarSystem'\n  });\n  var earthOrbit = new _g.Group({\n    id: 'earthOrbit'\n  });\n  var moonOrbit = new _g.Group({\n    id: 'moonOrbit'\n  });\n  var sun = new _g.Circle({\n    id: 'sun',\n    className: 'classname-sun',\n    style: {\n      r: 100,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4\n    }\n  });\n  var earth = new _g.Circle({\n    id: 'earth',\n    className: 'classname-earth',\n    style: {\n      r: 50,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4\n    }\n  });\n  var moon = new _g.Circle({\n    id: 'moon',\n    className: 'classname-moon',\n    style: {\n      r: 25,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4\n    }\n  });\n  solarSystem.appendChild(sun);\n  solarSystem.appendChild(earthOrbit);\n  earthOrbit.appendChild(earth);\n  earthOrbit.appendChild(moonOrbit);\n  moonOrbit.appendChild(moon);\n  solarSystem.setPosition(300, 250);\n  earthOrbit.translate(100, 0);\n  moonOrbit.translate(100, 0);\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    canvas.appendChild(solarSystem);\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false,\n    width: 400\n  });\n  $wrapper.appendChild(gui.domElement);\n  var selectorFolder = gui.addFolder('CSS Selector');\n  var selectorConfig = {\n    getElementById: 'sun',\n    getElementsByClassName: 'classname-sun',\n    getElementsByTagName: 'circle',\n    querySelector: '[r=100]',\n    querySelectorAll: '[r=100]'\n  };\n\n  var clear = function clear() {\n    solarSystem.forEach(function (child) {\n      child.setAttribute('fill', '#1890FF');\n    });\n  };\n\n  selectorFolder.add(selectorConfig, 'getElementById', ['sun', 'earth', 'moon']).onChange(function (id) {\n    clear();\n    var target = solarSystem.getElementById(id);\n    target.setAttribute('fill', '#F04864');\n  });\n  selectorFolder.add(selectorConfig, 'getElementsByClassName', ['classname-sun', 'classname-earth', 'classname-moon']).onChange(function (className) {\n    clear();\n    var targets = solarSystem.getElementsByClassName(className);\n    targets.forEach(function (target) {\n      target.setAttribute('fill', '#F04864');\n    });\n  });\n  selectorFolder.add(selectorConfig, 'getElementsByTagName', ['circle', 'rect']).onChange(function (className) {\n    clear();\n    var targets = solarSystem.getElementsByTagName(className);\n    targets.forEach(function (target) {\n      target.setAttribute('fill', '#F04864');\n    });\n  });\n  selectorFolder.add(selectorConfig, 'querySelector', ['[r=100]', '[r=50]', '[r=25]']).onChange(function (selector) {\n    clear();\n    var target = solarSystem.querySelector(selector);\n    target.setAttribute('fill', '#F04864');\n  });\n  selectorFolder.add(selectorConfig, 'querySelectorAll', ['[r=100]', '[r=50]', '[r=25]']).onChange(function (selector) {\n    clear();\n    var targets = solarSystem.querySelectorAll(selector);\n    targets.forEach(function (target) {\n      target.setAttribute('fill', '#F04864');\n    });\n  });\n  selectorFolder.open();\n});"},{"relativePath":"plugins/demo/dragndrop-perf.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/plugins/demo/dragndrop-perf.js","order":9,"filename":"dragndrop-perf.js","title":{"zh":"拖放性能测试","en":"Drag'n'Drop Perf"},"source":"import { Canvas, CanvasEvent, Circle } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Plugin } from '@antv/g-plugin-dragndrop';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n/**\n * Drag and Drop Stress Test with 10,000 Shapes\n * @see https://konvajs.org/docs/sandbox/Drag_and_Drop_Stress_Test.html\n */\n\nconst plugin = new Plugin();\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\ncanvasRenderer.registerPlugin(plugin);\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf',\n    },\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\ncanvaskitRenderer.registerPlugin(plugin);\nconst webglRenderer = new WebGLRenderer();\nwebglRenderer.registerPlugin(plugin);\nconst svgRenderer = new SVGRenderer();\nsvgRenderer.registerPlugin(plugin);\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  const colors = ['red', 'orange', 'yellow', 'green', 'blue', 'cyan', 'purple'];\n  for (let i = 0; i < 10000; i++) {\n    const circle = new Circle({\n      style: {\n        cx: Math.random() * 600,\n        cy: Math.random() * 500,\n        r: 6,\n        fill: colors[i % colors.length],\n        draggable: true,\n      },\n    });\n    canvas.appendChild(circle);\n  }\n});\n\nlet shiftX = 0;\nlet shiftY = 0;\nfunction moveAt(target, canvasX, canvasY) {\n  target.setPosition(canvasX - shiftX, canvasY - shiftY);\n}\n\ncanvas.addEventListener('dragstart', function (e) {\n  const [x, y] = e.target.getPosition();\n  shiftX = e.canvasX - x;\n  shiftY = e.canvasY - y;\n\n  moveAt(e.target, e.canvasX, e.canvasY);\n});\ncanvas.addEventListener('drag', function (e) {\n  moveAt(e.target, e.canvasX, e.canvasY);\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-plugin-dragndrop\", \"@antv/g-svg\", \"@antv/g-webgl\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-plugin-dragndrop\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gPluginDragndrop, global.gSvg, global.gWebgl, global.lilGui, global.stats);\n    global.dragndropPerf = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gPluginDragndrop, _gSvg, _gWebgl, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  /**\n   * Drag and Drop Stress Test with 10,000 Shapes\n   * @see https://konvajs.org/docs/sandbox/Drag_and_Drop_Stress_Test.html\n   */\n  var plugin = new _gPluginDragndrop.Plugin(); // create a renderer\n\n  var canvasRenderer = new _gCanvas.Renderer();\n  canvasRenderer.registerPlugin(plugin);\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf'\n    }, {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  canvaskitRenderer.registerPlugin(plugin);\n  var webglRenderer = new _gWebgl.Renderer();\n  webglRenderer.registerPlugin(plugin);\n  var svgRenderer = new _gSvg.Renderer();\n  svgRenderer.registerPlugin(plugin); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    var colors = ['red', 'orange', 'yellow', 'green', 'blue', 'cyan', 'purple'];\n\n    for (var i = 0; i < 10000; i++) {\n      var circle = new _g.Circle({\n        style: {\n          cx: Math.random() * 600,\n          cy: Math.random() * 500,\n          r: 6,\n          fill: colors[i % colors.length],\n          draggable: true\n        }\n      });\n      canvas.appendChild(circle);\n    }\n  });\n  var shiftX = 0;\n  var shiftY = 0;\n\n  function moveAt(target, canvasX, canvasY) {\n    target.setPosition(canvasX - shiftX, canvasY - shiftY);\n  }\n\n  canvas.addEventListener('dragstart', function (e) {\n    var _e$target$getPosition = e.target.getPosition(),\n        _e$target$getPosition2 = _slicedToArray(_e$target$getPosition, 2),\n        x = _e$target$getPosition2[0],\n        y = _e$target$getPosition2[1];\n\n    shiftX = e.canvasX - x;\n    shiftY = e.canvasY - y;\n    moveAt(e.target, e.canvasX, e.canvasY);\n  });\n  canvas.addEventListener('drag', function (e) {\n    moveAt(e.target, e.canvasX, e.canvasY);\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n});"},{"relativePath":"plugins/demo/canvaskit-particles.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/plugins/demo/canvaskit-particles.js","order":1,"filename":"canvaskit-particles.js","title":{"zh":"使用 CanvasKit 绘制粒子","en":"Use CanvasKit drawing particles"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*919sR5Oxx_kAAAAAAAAAAAAAARQnAQ","source":"import { Canvas } from '@antv/g';\nimport { Renderer } from '@antv/g-canvaskit';\n\n/**\n * Skia’s particle module provides a way to quickly generate large numbers of drawing primitives with dynamic, animated behavior.\n * Particles can be used to create effects like fireworks, spark trails, ambient “weather”, and much more.\n * Nearly all properties and behavior are controlled by scripts written in Skia’s custom language, SkSL\n * @see https://skia.org/docs/user/modules/particles/\n * @see https://particles.skia.org/?nameOrHash=@text\n */\n\nconst canvaskitRenderer = new Renderer({\n  wasmDir: '/',\n});\nconst plugin = canvaskitRenderer.getPlugin('canvaskit-renderer');\n\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvaskitRenderer,\n});\n\nconst text = {\n  MaxCount: 2000,\n  Drawable: {\n    Type: 'SkCircleDrawable',\n    Radius: 1,\n  },\n  Code: [\n    'void effectSpawn(inout Effect effect) {',\n    '  effect.rate = 1000;',\n    '}',\n    '',\n    'void spawn(inout Particle p) {',\n    '  p.lifetime = mix(1, 3, rand(p.seed));',\n    '  float a = radians(mix(250, 290, rand(p.seed)));',\n    '  float s = mix(10, 30, rand(p.seed));',\n    '  p.vel.x = cos(a) * s;',\n    '  p.vel.y = sin(a) * s;',\n    '  p.pos += text(rand(p.seed)).xy;',\n    '}',\n    '',\n    'void update(inout Particle p) {',\n    '  float4 startColor = float4(1, 0.196, 0.078, 1);',\n    '  float4 endColor   = float4(1, 0.784, 0.078, 1);',\n    '  p.color = mix(startColor, endColor, p.age);',\n    '}',\n    '',\n  ],\n  Bindings: [\n    {\n      Type: 'SkTextBinding',\n      Name: 'text',\n      Text: 'AntV',\n      FontSize: 96,\n    },\n  ],\n};\n\nconst curves = {\n  MaxCount: 1000,\n  Drawable: {\n    Type: 'SkCircleDrawable',\n    Radius: 2,\n  },\n  Code: [\n    `\n    void effectSpawn(inout Effect effect) {\n      effect.rate = 200;\n      effect.color = float4(1, 0, 0, 1);\n    }\n    void spawn(inout Particle p) {\n      p.lifetime = 3 + rand(p.seed);\n      p.vel.y = -50;\n    }\n\n    void update(inout Particle p) {\n      float w = mix(15, 3, p.age);\n      p.pos.x = sin(radians(p.age * 320)) * mix(25, 10, p.age) + mix(-w, w, rand(p.seed));\n      if (rand(p.seed) < 0.5) { p.pos.x = -p.pos.x; }\n\n      p.color.g = (mix(75, 220, p.age) + mix(-30, 30, rand(p.seed))) / 255;\n    }\n    `,\n  ],\n  Bindings: [],\n};\n\nconst fireworks = {\n  MaxCount: 300,\n  Drawable: {\n    Type: 'SkCircleDrawable',\n    Radius: 3,\n  },\n  Code: [\n    'void effectSpawn(inout Effect effect) {',\n    '  // Phase one: Launch',\n    '  effect.lifetime = 4;',\n    '  effect.rate = 120;',\n    '  float a = radians(mix(-20, 20, rand(effect.seed)) - 90);',\n    '  float s = mix(200, 220, rand(effect.seed));',\n    '  effect.vel.x = cos(a) * s;',\n    '  effect.vel.y = sin(a) * s;',\n    '  effect.color.rgb = float3(rand(effect.seed), rand(effect.seed), rand(effect.seed));',\n    '  effect.pos.x = 0;',\n    '  effect.pos.y = 0;',\n    '  effect.scale = 0.25;  // Also used as particle behavior flag',\n    '}',\n    '',\n    'void effectUpdate(inout Effect effect) {',\n    '  if (effect.age > 0.5 && effect.rate > 0) {',\n    '    // Phase two: Explode',\n    '    effect.rate = 0;',\n    '    effect.burst = 50;',\n    '    effect.scale = 1;',\n    '  } else {',\n    '    effect.vel.y += dt * 90;',\n    '  }',\n    '}',\n    '',\n    'void spawn(inout Particle p) {',\n    '  bool explode = p.scale == 1;',\n    '',\n    '  p.lifetime = explode ? (2 + rand(p.seed) * 0.5) : 0.5;',\n    '  float a = radians(rand(p.seed) * 360);',\n    '  float s = explode ? mix(90, 100, rand(p.seed)) : mix(5, 10, rand(p.seed));',\n    '  p.vel.x = cos(a) * s;',\n    '  p.vel.y = sin(a) * s;',\n    '}',\n    '',\n    'void update(inout Particle p) {',\n    '  p.color.a = 1 - p.age;',\n    '  if (p.scale == 1) {',\n    '    p.vel.y += dt * 50;',\n    '  }',\n    '}',\n    '',\n  ],\n  Bindings: [],\n};\n\nconst spiral = {\n  MaxCount: 800,\n  Drawable: {\n    Type: 'SkCircleDrawable',\n    Radius: 2,\n  },\n  Code: [\n    'void effectSpawn(inout Effect effect) {',\n    '  effect.lifetime = 4;',\n    '  effect.rate = 120;',\n    '  effect.spin = 6;',\n    '}',\n    '',\n    'void spawn(inout Particle p) {',\n    '  p.lifetime = 2 + rand(p.seed);',\n    '  p.vel = p.dir * mix(50, 60, rand(p.seed));',\n    '}',\n    '',\n    'void update(inout Particle p) {',\n    '  p.scale = 0.5 + 1.5 * p.age;',\n    '  float3 a0 = float3(0.098, 0.141, 0.784);',\n    '  float3 a1 = float3(0.525, 0.886, 0.980);',\n    '  float3 b0 = float3(0.376, 0.121, 0.705);',\n    '  float3 b1 = float3(0.933, 0.227, 0.953);',\n    '  p.color.rgb = mix(mix(a0, a1, p.age), mix(b0, b1, p.age), rand(p.seed));',\n    '}',\n    '',\n  ],\n  Bindings: [],\n};\n\nconst wave = {\n  MaxCount: 6000,\n  Drawable: {\n    Type: 'SkCircleDrawable',\n    Radius: 2,\n  },\n  Code: [\n    'void effectSpawn(inout Effect effect) {',\n    '  effect.rate = 2000;',\n    '}',\n    '',\n    'void effectUpdate(inout Effect effect) {',\n    '}',\n    '',\n    'void spawn(inout Particle p) {',\n    '  p.pos.y += sin(effect.age * 6.28) * 40;',\n    '  p.lifetime = 2 + (rand(p.seed) * 2);',\n    '  p.vel.x = (30 * rand(p.seed)) + 50;',\n    '  p.vel.y = (20 * rand(p.seed)) - 10;',\n    '}',\n    '',\n    'void update(inout Particle p) {',\n    '  p.color.r = p.age;',\n    '  p.color.g = 1 - p.age;',\n    '  float s1 = 0.5 + (1.5 * p.age);',\n    '  float s2 = 1.0 + (-0.75 * p.age);',\n    '  p.scale = s1 + (s2 - s1) * rand(p.seed);',\n    '  p.vel.y += 20.0 * dt;',\n    '}',\n    '',\n  ],\n  Bindings: [],\n};\n\n(async () => {\n  await canvas.ready;\n\n  // curve\n  const curveParticles = plugin.createParticles(JSON.stringify(curves), (canvas) => {\n    canvas.translate(100, 250);\n  });\n  curveParticles.start(Date.now() / 1000.0, true);\n\n  // text\n  const textParticles = plugin.createParticles(JSON.stringify(text), (canvas) => {\n    canvas.translate(250, 250);\n  });\n  textParticles.start(Date.now() / 1000.0, true);\n\n  // fireworks\n  const fireworksParticles = plugin.createParticles(JSON.stringify(fireworks), (canvas) => {\n    canvas.translate(100, 350);\n  });\n  fireworksParticles.start(Date.now() / 1000.0, true);\n\n  // spiral\n  const spiralParticles = plugin.createParticles(JSON.stringify(spiral), (canvas) => {\n    canvas.translate(350, 350);\n    canvas.scale(0.5, 0.5);\n  });\n  spiralParticles.start(Date.now() / 1000.0, true);\n\n  // wave\n  const waveParticles = plugin.createParticles(JSON.stringify(wave), (canvas) => {\n    canvas.translate(50, 350);\n    canvas.scale(0.5, 0.5);\n  });\n  waveParticles.start(Date.now() / 1000.0, true);\n})();\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvaskit\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvaskit\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvaskit);\n    global.canvaskitParticles = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvaskit) {\n  \"use strict\";\n\n  /**\n   * Skia’s particle module provides a way to quickly generate large numbers of drawing primitives with dynamic, animated behavior.\n   * Particles can be used to create effects like fireworks, spark trails, ambient “weather”, and much more.\n   * Nearly all properties and behavior are controlled by scripts written in Skia’s custom language, SkSL\n   * @see https://skia.org/docs/user/modules/particles/\n   * @see https://particles.skia.org/?nameOrHash=@text\n   */\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/'\n  });\n  var plugin = canvaskitRenderer.getPlugin('canvaskit-renderer');\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvaskitRenderer\n  });\n  var text = {\n    MaxCount: 2000,\n    Drawable: {\n      Type: 'SkCircleDrawable',\n      Radius: 1\n    },\n    Code: ['void effectSpawn(inout Effect effect) {', '  effect.rate = 1000;', '}', '', 'void spawn(inout Particle p) {', '  p.lifetime = mix(1, 3, rand(p.seed));', '  float a = radians(mix(250, 290, rand(p.seed)));', '  float s = mix(10, 30, rand(p.seed));', '  p.vel.x = cos(a) * s;', '  p.vel.y = sin(a) * s;', '  p.pos += text(rand(p.seed)).xy;', '}', '', 'void update(inout Particle p) {', '  float4 startColor = float4(1, 0.196, 0.078, 1);', '  float4 endColor   = float4(1, 0.784, 0.078, 1);', '  p.color = mix(startColor, endColor, p.age);', '}', ''],\n    Bindings: [{\n      Type: 'SkTextBinding',\n      Name: 'text',\n      Text: 'AntV',\n      FontSize: 96\n    }]\n  };\n  var curves = {\n    MaxCount: 1000,\n    Drawable: {\n      Type: 'SkCircleDrawable',\n      Radius: 2\n    },\n    Code: [\"\\n    void effectSpawn(inout Effect effect) {\\n      effect.rate = 200;\\n      effect.color = float4(1, 0, 0, 1);\\n    }\\n    void spawn(inout Particle p) {\\n      p.lifetime = 3 + rand(p.seed);\\n      p.vel.y = -50;\\n    }\\n\\n    void update(inout Particle p) {\\n      float w = mix(15, 3, p.age);\\n      p.pos.x = sin(radians(p.age * 320)) * mix(25, 10, p.age) + mix(-w, w, rand(p.seed));\\n      if (rand(p.seed) < 0.5) { p.pos.x = -p.pos.x; }\\n\\n      p.color.g = (mix(75, 220, p.age) + mix(-30, 30, rand(p.seed))) / 255;\\n    }\\n    \"],\n    Bindings: []\n  };\n  var fireworks = {\n    MaxCount: 300,\n    Drawable: {\n      Type: 'SkCircleDrawable',\n      Radius: 3\n    },\n    Code: ['void effectSpawn(inout Effect effect) {', '  // Phase one: Launch', '  effect.lifetime = 4;', '  effect.rate = 120;', '  float a = radians(mix(-20, 20, rand(effect.seed)) - 90);', '  float s = mix(200, 220, rand(effect.seed));', '  effect.vel.x = cos(a) * s;', '  effect.vel.y = sin(a) * s;', '  effect.color.rgb = float3(rand(effect.seed), rand(effect.seed), rand(effect.seed));', '  effect.pos.x = 0;', '  effect.pos.y = 0;', '  effect.scale = 0.25;  // Also used as particle behavior flag', '}', '', 'void effectUpdate(inout Effect effect) {', '  if (effect.age > 0.5 && effect.rate > 0) {', '    // Phase two: Explode', '    effect.rate = 0;', '    effect.burst = 50;', '    effect.scale = 1;', '  } else {', '    effect.vel.y += dt * 90;', '  }', '}', '', 'void spawn(inout Particle p) {', '  bool explode = p.scale == 1;', '', '  p.lifetime = explode ? (2 + rand(p.seed) * 0.5) : 0.5;', '  float a = radians(rand(p.seed) * 360);', '  float s = explode ? mix(90, 100, rand(p.seed)) : mix(5, 10, rand(p.seed));', '  p.vel.x = cos(a) * s;', '  p.vel.y = sin(a) * s;', '}', '', 'void update(inout Particle p) {', '  p.color.a = 1 - p.age;', '  if (p.scale == 1) {', '    p.vel.y += dt * 50;', '  }', '}', ''],\n    Bindings: []\n  };\n  var spiral = {\n    MaxCount: 800,\n    Drawable: {\n      Type: 'SkCircleDrawable',\n      Radius: 2\n    },\n    Code: ['void effectSpawn(inout Effect effect) {', '  effect.lifetime = 4;', '  effect.rate = 120;', '  effect.spin = 6;', '}', '', 'void spawn(inout Particle p) {', '  p.lifetime = 2 + rand(p.seed);', '  p.vel = p.dir * mix(50, 60, rand(p.seed));', '}', '', 'void update(inout Particle p) {', '  p.scale = 0.5 + 1.5 * p.age;', '  float3 a0 = float3(0.098, 0.141, 0.784);', '  float3 a1 = float3(0.525, 0.886, 0.980);', '  float3 b0 = float3(0.376, 0.121, 0.705);', '  float3 b1 = float3(0.933, 0.227, 0.953);', '  p.color.rgb = mix(mix(a0, a1, p.age), mix(b0, b1, p.age), rand(p.seed));', '}', ''],\n    Bindings: []\n  };\n  var wave = {\n    MaxCount: 6000,\n    Drawable: {\n      Type: 'SkCircleDrawable',\n      Radius: 2\n    },\n    Code: ['void effectSpawn(inout Effect effect) {', '  effect.rate = 2000;', '}', '', 'void effectUpdate(inout Effect effect) {', '}', '', 'void spawn(inout Particle p) {', '  p.pos.y += sin(effect.age * 6.28) * 40;', '  p.lifetime = 2 + (rand(p.seed) * 2);', '  p.vel.x = (30 * rand(p.seed)) + 50;', '  p.vel.y = (20 * rand(p.seed)) - 10;', '}', '', 'void update(inout Particle p) {', '  p.color.r = p.age;', '  p.color.g = 1 - p.age;', '  float s1 = 0.5 + (1.5 * p.age);', '  float s2 = 1.0 + (-0.75 * p.age);', '  p.scale = s1 + (s2 - s1) * rand(p.seed);', '  p.vel.y += 20.0 * dt;', '}', ''],\n    Bindings: []\n  };\n\n  (async function () {\n    await canvas.ready; // curve\n\n    var curveParticles = plugin.createParticles(JSON.stringify(curves), function (canvas) {\n      canvas.translate(100, 250);\n    });\n    curveParticles.start(Date.now() / 1000.0, true); // text\n\n    var textParticles = plugin.createParticles(JSON.stringify(text), function (canvas) {\n      canvas.translate(250, 250);\n    });\n    textParticles.start(Date.now() / 1000.0, true); // fireworks\n\n    var fireworksParticles = plugin.createParticles(JSON.stringify(fireworks), function (canvas) {\n      canvas.translate(100, 350);\n    });\n    fireworksParticles.start(Date.now() / 1000.0, true); // spiral\n\n    var spiralParticles = plugin.createParticles(JSON.stringify(spiral), function (canvas) {\n      canvas.translate(350, 350);\n      canvas.scale(0.5, 0.5);\n    });\n    spiralParticles.start(Date.now() / 1000.0, true); // wave\n\n    var waveParticles = plugin.createParticles(JSON.stringify(wave), function (canvas) {\n      canvas.translate(50, 350);\n      canvas.scale(0.5, 0.5);\n    });\n    waveParticles.start(Date.now() / 1000.0, true);\n  })();\n});"},{"relativePath":"plugins/demo/annotation.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/plugins/demo/annotation.js","order":21,"filename":"annotation.js","title":{"zh":"使用标注","en":"Use annotation"},"source":"import { Canvas, CanvasEvent, Circle, Ellipse, Image, Line, Polyline, Rect } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Plugin as AnnotationPlugin } from '@antv/g-plugin-annotation';\nimport { Plugin as DragndropPlugin } from '@antv/g-plugin-dragndrop';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst svgRenderer = new SVGRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst webgpuRenderer = new WebGPURenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\n\nconst annotationPlugin = new AnnotationPlugin({\n  selectableStyle: {\n    selectionFill: 'rgba(24,144,255,0.15)',\n    selectionStroke: '#1890FF',\n    selectionStrokeWidth: 2.5,\n    anchorFill: '#1890FF',\n    anchorStroke: '#1890FF',\n  },\n});\ncanvasRenderer.registerPlugin(annotationPlugin);\nsvgRenderer.registerPlugin(annotationPlugin);\nwebglRenderer.registerPlugin(annotationPlugin);\nwebgpuRenderer.registerPlugin(annotationPlugin);\ncanvaskitRenderer.registerPlugin(annotationPlugin);\n\nconst dragndropPlugin = new DragndropPlugin({\n  dragstartDistanceThreshold: 10,\n  dragstartTimeThreshold: 100,\n});\ncanvasRenderer.registerPlugin(dragndropPlugin);\nsvgRenderer.registerPlugin(dragndropPlugin);\nwebglRenderer.registerPlugin(dragndropPlugin);\nwebgpuRenderer.registerPlugin(dragndropPlugin);\ncanvaskitRenderer.registerPlugin(dragndropPlugin);\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\nconst circle = new Circle({\n  style: {\n    cx: 200,\n    cy: 200,\n    r: 100,\n    stroke: '#F04864',\n    lineWidth: 10,\n    selectable: true,\n  },\n});\n\nconst ellipse = new Ellipse({\n  style: {\n    cx: 440,\n    cy: 200,\n    rx: 100,\n    ry: 50,\n    stroke: '#F04864',\n    lineWidth: 10,\n    selectable: true,\n  },\n});\n\nconst image = new Image({\n  style: {\n    x: 300,\n    y: 280,\n    width: 200,\n    height: 200,\n    src: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ',\n    // transform: 'scale(0.5) rotate(30deg)',\n    selectable: true,\n  },\n});\nimage.addEventListener('selected', () => {\n  console.log('image selected');\n});\nimage.addEventListener('deselected', () => {\n  console.log('image deselected');\n});\n\nconst rect = new Rect({\n  style: {\n    x: 100,\n    y: 280,\n    width: 100,\n    height: 200,\n    fill: 'blue',\n    stroke: 'red',\n    selectable: true,\n  },\n});\n\nconst line = new Line({\n  style: {\n    x1: 100,\n    y1: 100,\n    x2: 100,\n    y2: 300,\n    lineWidth: 10,\n    stroke: 'red',\n    selectable: true,\n  },\n});\n\nconst polyline = new Polyline({\n  style: {\n    points: [\n      [200, 100],\n      [300, 100],\n      [300, 200],\n      [300, 300],\n    ],\n    lineWidth: 10,\n    stroke: 'red',\n    selectable: true,\n  },\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  canvas.appendChild(circle);\n  canvas.appendChild(ellipse);\n  canvas.appendChild(image);\n  canvas.appendChild(rect);\n  canvas.appendChild(line);\n  canvas.appendChild(polyline);\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n\nconst selectableFolder = gui.addFolder('selectable');\nconst selectableConfig = {\n  selectionFill: 'rgba(24,144,255,0.15)',\n  selectionFillOpacity: 1,\n  selectionStroke: '#1890FF',\n  selectionStrokeOpacity: 1,\n  selectionStrokeWidth: 2.5,\n  selectionLineDash: 0,\n  anchorFill: '#1890FF',\n  anchorFillOpacity: 1,\n  anchorStroke: '#1890FF',\n  anchorStrokeOpacity: 1,\n  anchorStrokeWidth: 1,\n  anchorSize: 6,\n};\nselectableFolder.addColor(selectableConfig, 'selectionFill').onChange((selectionFill) => {\n  annotationPlugin.updateSelectableStyle({\n    selectionFill,\n  });\n});\nselectableFolder\n  .add(selectableConfig, 'selectionFillOpacity', 0, 1)\n  .onChange((selectionFillOpacity) => {\n    annotationPlugin.updateSelectableStyle({\n      selectionFillOpacity,\n    });\n  });\nselectableFolder.addColor(selectableConfig, 'selectionStroke').onChange((selectionStroke) => {\n  annotationPlugin.updateSelectableStyle({\n    selectionStroke,\n  });\n});\nselectableFolder\n  .add(selectableConfig, 'selectionStrokeOpacity', 0, 1)\n  .onChange((selectionStrokeOpacity) => {\n    annotationPlugin.updateSelectableStyle({\n      selectionStrokeOpacity,\n    });\n  });\nselectableFolder\n  .add(selectableConfig, 'selectionStrokeWidth', 1, 20)\n  .onChange((selectionStrokeWidth) => {\n    annotationPlugin.updateSelectableStyle({\n      selectionStrokeWidth,\n    });\n  });\nselectableFolder.add(selectableConfig, 'selectionLineDash', 0, 20).onChange((selectionLineDash) => {\n  annotationPlugin.updateSelectableStyle({\n    selectionLineDash,\n  });\n});\nselectableFolder.addColor(selectableConfig, 'anchorFill').onChange((anchorFill) => {\n  annotationPlugin.updateSelectableStyle({\n    anchorFill,\n  });\n});\nselectableFolder.addColor(selectableConfig, 'anchorStroke').onChange((anchorStroke) => {\n  annotationPlugin.updateSelectableStyle({\n    anchorStroke,\n  });\n});\nselectableFolder.add(selectableConfig, 'anchorSize', 5, 20).onChange((anchorSize) => {\n  annotationPlugin.updateSelectableStyle({\n    anchorSize,\n  });\n});\nselectableFolder.add(selectableConfig, 'anchorStrokeWidth', 1, 20).onChange((anchorStrokeWidth) => {\n  annotationPlugin.updateSelectableStyle({\n    anchorStrokeWidth,\n  });\n});\nselectableFolder.add(selectableConfig, 'anchorFillOpacity', 0, 1).onChange((anchorFillOpacity) => {\n  annotationPlugin.updateSelectableStyle({\n    anchorFillOpacity,\n  });\n});\nselectableFolder\n  .add(selectableConfig, 'anchorStrokeOpacity', 0, 1)\n  .onChange((anchorStrokeOpacity) => {\n    annotationPlugin.updateSelectableStyle({\n      anchorStrokeOpacity,\n    });\n  });\nselectableFolder.open();\n\nconst apiFolder = gui.addFolder('API');\nconst apiConfig = {\n  selectDisplayObject: 'none',\n  deselectDisplayObject: 'none',\n  getSelectedDisplayObjects: () => {\n    console.log(annotationPlugin.getSelectedDisplayObjects());\n  },\n  removeImage: () => {\n    image.remove();\n  },\n};\napiFolder\n  .add(apiConfig, 'selectDisplayObject', [\n    'rect',\n    'image',\n    'circle',\n    'ellipse',\n    'line',\n    'polyline',\n    'none',\n  ])\n  .onChange((shape) => {\n    let target;\n    if (shape === 'rect') {\n      target = rect;\n    } else if (shape === 'image') {\n      target = image;\n    } else if (shape === 'circle') {\n      target = circle;\n    } else if (shape === 'ellipse') {\n      target = ellipse;\n    } else if (shape === 'line') {\n      target = line;\n    } else if (shape === 'polyline') {\n      target = polyline;\n    }\n    annotationPlugin.selectDisplayObject(target);\n  });\n\napiFolder\n  .add(apiConfig, 'deselectDisplayObject', [\n    'rect',\n    'image',\n    'circle',\n    'ellipse',\n    'line',\n    'polyline',\n    'none',\n  ])\n  .onChange((shape) => {\n    let target;\n    if (shape === 'rect') {\n      target = rect;\n    } else if (shape === 'image') {\n      target = image;\n    } else if (shape === 'circle') {\n      target = circle;\n    } else if (shape === 'ellipse') {\n      target = ellipse;\n    } else if (shape === 'line') {\n      target = line;\n    } else if (shape === 'polyline') {\n      target = polyline;\n    }\n    annotationPlugin.deselectDisplayObject(target);\n  });\n\napiFolder.add(apiConfig, 'getSelectedDisplayObjects');\napiFolder.add(apiConfig, 'removeImage');\napiFolder.open();\n\nconst camera = canvas.getCamera();\nconst cameraFolder = gui.addFolder('camera actions');\nconst cameraConfig = {\n  panX: 0,\n  panY: 0,\n  zoom: 1,\n  roll: 0,\n};\ncameraFolder.add(cameraConfig, 'zoom', 0.1, 10).onChange((zoom) => {\n  camera.setZoom(zoom);\n});\ncameraFolder.add(cameraConfig, 'roll', -90, 90).onChange((roll) => {\n  camera.rotate(0, 0, roll);\n});\ncameraFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-plugin-annotation\", \"@antv/g-plugin-dragndrop\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-plugin-annotation\"), require(\"@antv/g-plugin-dragndrop\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gPluginAnnotation, global.gPluginDragndrop, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.annotation = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gPluginAnnotation, _gPluginDragndrop, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var webgpuRenderer = new _gWebgpu.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var annotationPlugin = new _gPluginAnnotation.Plugin({\n    selectableStyle: {\n      selectionFill: 'rgba(24,144,255,0.15)',\n      selectionStroke: '#1890FF',\n      selectionStrokeWidth: 2.5,\n      anchorFill: '#1890FF',\n      anchorStroke: '#1890FF'\n    }\n  });\n  canvasRenderer.registerPlugin(annotationPlugin);\n  svgRenderer.registerPlugin(annotationPlugin);\n  webglRenderer.registerPlugin(annotationPlugin);\n  webgpuRenderer.registerPlugin(annotationPlugin);\n  canvaskitRenderer.registerPlugin(annotationPlugin);\n  var dragndropPlugin = new _gPluginDragndrop.Plugin({\n    dragstartDistanceThreshold: 10,\n    dragstartTimeThreshold: 100\n  });\n  canvasRenderer.registerPlugin(dragndropPlugin);\n  svgRenderer.registerPlugin(dragndropPlugin);\n  webglRenderer.registerPlugin(dragndropPlugin);\n  webgpuRenderer.registerPlugin(dragndropPlugin);\n  canvaskitRenderer.registerPlugin(dragndropPlugin); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  var circle = new _g.Circle({\n    style: {\n      cx: 200,\n      cy: 200,\n      r: 100,\n      stroke: '#F04864',\n      lineWidth: 10,\n      selectable: true\n    }\n  });\n  var ellipse = new _g.Ellipse({\n    style: {\n      cx: 440,\n      cy: 200,\n      rx: 100,\n      ry: 50,\n      stroke: '#F04864',\n      lineWidth: 10,\n      selectable: true\n    }\n  });\n  var image = new _g.Image({\n    style: {\n      x: 300,\n      y: 280,\n      width: 200,\n      height: 200,\n      src: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ',\n      // transform: 'scale(0.5) rotate(30deg)',\n      selectable: true\n    }\n  });\n  image.addEventListener('selected', function () {\n    console.log('image selected');\n  });\n  image.addEventListener('deselected', function () {\n    console.log('image deselected');\n  });\n  var rect = new _g.Rect({\n    style: {\n      x: 100,\n      y: 280,\n      width: 100,\n      height: 200,\n      fill: 'blue',\n      stroke: 'red',\n      selectable: true\n    }\n  });\n  var line = new _g.Line({\n    style: {\n      x1: 100,\n      y1: 100,\n      x2: 100,\n      y2: 300,\n      lineWidth: 10,\n      stroke: 'red',\n      selectable: true\n    }\n  });\n  var polyline = new _g.Polyline({\n    style: {\n      points: [[200, 100], [300, 100], [300, 200], [300, 300]],\n      lineWidth: 10,\n      stroke: 'red',\n      selectable: true\n    }\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    canvas.appendChild(circle);\n    canvas.appendChild(ellipse);\n    canvas.appendChild(image);\n    canvas.appendChild(rect);\n    canvas.appendChild(line);\n    canvas.appendChild(polyline);\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n  var selectableFolder = gui.addFolder('selectable');\n  var selectableConfig = {\n    selectionFill: 'rgba(24,144,255,0.15)',\n    selectionFillOpacity: 1,\n    selectionStroke: '#1890FF',\n    selectionStrokeOpacity: 1,\n    selectionStrokeWidth: 2.5,\n    selectionLineDash: 0,\n    anchorFill: '#1890FF',\n    anchorFillOpacity: 1,\n    anchorStroke: '#1890FF',\n    anchorStrokeOpacity: 1,\n    anchorStrokeWidth: 1,\n    anchorSize: 6\n  };\n  selectableFolder.addColor(selectableConfig, 'selectionFill').onChange(function (selectionFill) {\n    annotationPlugin.updateSelectableStyle({\n      selectionFill: selectionFill\n    });\n  });\n  selectableFolder.add(selectableConfig, 'selectionFillOpacity', 0, 1).onChange(function (selectionFillOpacity) {\n    annotationPlugin.updateSelectableStyle({\n      selectionFillOpacity: selectionFillOpacity\n    });\n  });\n  selectableFolder.addColor(selectableConfig, 'selectionStroke').onChange(function (selectionStroke) {\n    annotationPlugin.updateSelectableStyle({\n      selectionStroke: selectionStroke\n    });\n  });\n  selectableFolder.add(selectableConfig, 'selectionStrokeOpacity', 0, 1).onChange(function (selectionStrokeOpacity) {\n    annotationPlugin.updateSelectableStyle({\n      selectionStrokeOpacity: selectionStrokeOpacity\n    });\n  });\n  selectableFolder.add(selectableConfig, 'selectionStrokeWidth', 1, 20).onChange(function (selectionStrokeWidth) {\n    annotationPlugin.updateSelectableStyle({\n      selectionStrokeWidth: selectionStrokeWidth\n    });\n  });\n  selectableFolder.add(selectableConfig, 'selectionLineDash', 0, 20).onChange(function (selectionLineDash) {\n    annotationPlugin.updateSelectableStyle({\n      selectionLineDash: selectionLineDash\n    });\n  });\n  selectableFolder.addColor(selectableConfig, 'anchorFill').onChange(function (anchorFill) {\n    annotationPlugin.updateSelectableStyle({\n      anchorFill: anchorFill\n    });\n  });\n  selectableFolder.addColor(selectableConfig, 'anchorStroke').onChange(function (anchorStroke) {\n    annotationPlugin.updateSelectableStyle({\n      anchorStroke: anchorStroke\n    });\n  });\n  selectableFolder.add(selectableConfig, 'anchorSize', 5, 20).onChange(function (anchorSize) {\n    annotationPlugin.updateSelectableStyle({\n      anchorSize: anchorSize\n    });\n  });\n  selectableFolder.add(selectableConfig, 'anchorStrokeWidth', 1, 20).onChange(function (anchorStrokeWidth) {\n    annotationPlugin.updateSelectableStyle({\n      anchorStrokeWidth: anchorStrokeWidth\n    });\n  });\n  selectableFolder.add(selectableConfig, 'anchorFillOpacity', 0, 1).onChange(function (anchorFillOpacity) {\n    annotationPlugin.updateSelectableStyle({\n      anchorFillOpacity: anchorFillOpacity\n    });\n  });\n  selectableFolder.add(selectableConfig, 'anchorStrokeOpacity', 0, 1).onChange(function (anchorStrokeOpacity) {\n    annotationPlugin.updateSelectableStyle({\n      anchorStrokeOpacity: anchorStrokeOpacity\n    });\n  });\n  selectableFolder.open();\n  var apiFolder = gui.addFolder('API');\n  var apiConfig = {\n    selectDisplayObject: 'none',\n    deselectDisplayObject: 'none',\n    getSelectedDisplayObjects: function getSelectedDisplayObjects() {\n      console.log(annotationPlugin.getSelectedDisplayObjects());\n    },\n    removeImage: function removeImage() {\n      image.remove();\n    }\n  };\n  apiFolder.add(apiConfig, 'selectDisplayObject', ['rect', 'image', 'circle', 'ellipse', 'line', 'polyline', 'none']).onChange(function (shape) {\n    var target;\n\n    if (shape === 'rect') {\n      target = rect;\n    } else if (shape === 'image') {\n      target = image;\n    } else if (shape === 'circle') {\n      target = circle;\n    } else if (shape === 'ellipse') {\n      target = ellipse;\n    } else if (shape === 'line') {\n      target = line;\n    } else if (shape === 'polyline') {\n      target = polyline;\n    }\n\n    annotationPlugin.selectDisplayObject(target);\n  });\n  apiFolder.add(apiConfig, 'deselectDisplayObject', ['rect', 'image', 'circle', 'ellipse', 'line', 'polyline', 'none']).onChange(function (shape) {\n    var target;\n\n    if (shape === 'rect') {\n      target = rect;\n    } else if (shape === 'image') {\n      target = image;\n    } else if (shape === 'circle') {\n      target = circle;\n    } else if (shape === 'ellipse') {\n      target = ellipse;\n    } else if (shape === 'line') {\n      target = line;\n    } else if (shape === 'polyline') {\n      target = polyline;\n    }\n\n    annotationPlugin.deselectDisplayObject(target);\n  });\n  apiFolder.add(apiConfig, 'getSelectedDisplayObjects');\n  apiFolder.add(apiConfig, 'removeImage');\n  apiFolder.open();\n  var camera = canvas.getCamera();\n  var cameraFolder = gui.addFolder('camera actions');\n  var cameraConfig = {\n    panX: 0,\n    panY: 0,\n    zoom: 1,\n    roll: 0\n  };\n  cameraFolder.add(cameraConfig, 'zoom', 0.1, 10).onChange(function (zoom) {\n    camera.setZoom(zoom);\n  });\n  cameraFolder.add(cameraConfig, 'roll', -90, 90).onChange(function (roll) {\n    camera.rotate(0, 0, roll);\n  });\n  cameraFolder.open();\n});"},{"relativePath":"plugins/demo/physx.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/plugins/demo/physx.js","order":14,"filename":"physx.js","title":{"zh":"在 3D 场景中使用 PhysX 物理引擎","en":"Use PhysX in 3D scene"},"source":"import { Canvas, CanvasEvent } from '@antv/g';\nimport { Renderer } from '@antv/g-webgl';\nimport { MeshBasicMaterial, CubeGeometry, Mesh, Plugin as Plugin3D } from '@antv/g-plugin-3d';\nimport { Plugin as PluginControl } from '@antv/g-plugin-control';\nimport { Plugin as PluginPhysX } from '@antv/g-plugin-physx';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst renderer = new Renderer();\nrenderer.registerPlugin(new Plugin3D());\nrenderer.registerPlugin(new PluginControl());\nrenderer.registerPlugin(new PluginPhysX());\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer,\n});\n\n(async () => {\n  await canvas.ready;\n  const plugin = renderer.getPlugin('device-renderer');\n  const device = plugin.getDevice();\n  const map = plugin.loadTexture(\n    'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*8TlCRIsKeUkAAAAAAAAAAAAAARQnAQ',\n  );\n\n  const planeGeometry = new CubeGeometry(device, {\n    width: 200,\n    height: 200,\n    depth: 200,\n  });\n  const planeMaterial = new MeshBasicMaterial(device);\n  const plane = new Mesh({\n    style: {\n      fill: '#1890FF',\n      geometry: planeGeometry,\n      material: planeMaterial,\n      rigid: 'static',\n    },\n  });\n  canvas.appendChild(plane);\n  plane.setPosition(300, 250, 0);\n\n  const cubeGeometry = new CubeGeometry(device, {\n    width: 200,\n    height: 200,\n    depth: 200,\n  });\n  const basicMaterial = new MeshBasicMaterial(device, {\n    // wireframe: true,\n    map,\n  });\n\n  const cube = new Mesh({\n    style: {\n      fill: '#1890FF',\n      geometry: cubeGeometry,\n      material: basicMaterial,\n      rigid: 'dynamic',\n    },\n  });\n\n  cube.setPosition(300, 250, 0);\n\n  canvas.appendChild(cube);\n\n  // stats\n  const stats = new Stats();\n  stats.showPanel(0);\n  const $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  const $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n    if (stats) {\n      stats.update();\n    }\n  });\n\n  // GUI\n  const gui = new lil.GUI({ autoPlace: false });\n  $wrapper.appendChild(gui.domElement);\n})();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-webgl\", \"@antv/g-plugin-3d\", \"@antv/g-plugin-control\", \"@antv/g-plugin-physx\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-webgl\"), require(\"@antv/g-plugin-3d\"), require(\"@antv/g-plugin-control\"), require(\"@antv/g-plugin-physx\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gWebgl, global.gPlugin3d, global.gPluginControl, global.gPluginPhysx, global.lilGui, global.stats);\n    global.physx = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gWebgl, _gPlugin3d, _gPluginControl, _gPluginPhysx, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // create a renderer\n  var renderer = new _gWebgl.Renderer();\n  renderer.registerPlugin(new _gPlugin3d.Plugin());\n  renderer.registerPlugin(new _gPluginControl.Plugin());\n  renderer.registerPlugin(new _gPluginPhysx.Plugin()); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: renderer\n  });\n\n  (async function () {\n    await canvas.ready;\n    var plugin = renderer.getPlugin('device-renderer');\n    var device = plugin.getDevice();\n    var map = plugin.loadTexture('https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*8TlCRIsKeUkAAAAAAAAAAAAAARQnAQ');\n    var planeGeometry = new _gPlugin3d.CubeGeometry(device, {\n      width: 200,\n      height: 200,\n      depth: 200\n    });\n    var planeMaterial = new _gPlugin3d.MeshBasicMaterial(device);\n    var plane = new _gPlugin3d.Mesh({\n      style: {\n        fill: '#1890FF',\n        geometry: planeGeometry,\n        material: planeMaterial,\n        rigid: 'static'\n      }\n    });\n    canvas.appendChild(plane);\n    plane.setPosition(300, 250, 0);\n    var cubeGeometry = new _gPlugin3d.CubeGeometry(device, {\n      width: 200,\n      height: 200,\n      depth: 200\n    });\n    var basicMaterial = new _gPlugin3d.MeshBasicMaterial(device, {\n      // wireframe: true,\n      map: map\n    });\n    var cube = new _gPlugin3d.Mesh({\n      style: {\n        fill: '#1890FF',\n        geometry: cubeGeometry,\n        material: basicMaterial,\n        rigid: 'dynamic'\n      }\n    });\n    cube.setPosition(300, 250, 0);\n    canvas.appendChild(cube); // stats\n\n    var stats = new _stats.default();\n    stats.showPanel(0);\n    var $stats = stats.dom;\n    $stats.style.position = 'absolute';\n    $stats.style.left = '0px';\n    $stats.style.top = '0px';\n    var $wrapper = document.getElementById('container');\n    $wrapper.appendChild($stats);\n    canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n      if (stats) {\n        stats.update();\n      }\n    }); // GUI\n\n    var gui = new lil.GUI({\n      autoPlace: false\n    });\n    $wrapper.appendChild(gui.domElement);\n  })();\n});"},{"relativePath":"plugins/demo/matterjs.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/plugins/demo/matterjs.js","order":13,"filename":"matterjs.js","title":{"zh":"在 2D 场景中使用 MatterJS 物理引擎","en":"Use MatterJS in 2D scene"},"source":"import { Canvas, CanvasEvent, Circle, Image, Line, Polygon, Rect } from '@antv/g';\nimport { Renderer } from '@antv/g-canvas';\nimport { Plugin as PluginMatterjs } from '@antv/g-plugin-matterjs';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\nconst renderer = new Renderer();\nconst plugin = new PluginMatterjs({\n  debug: true, // 开启 debug 模式，将物理引擎世界也渲染出来\n  debugContainer: document.getElementById('container'),\n  debugCanvasWidth: 600,\n  debugCanvasHeight: 500,\n});\nrenderer.registerPlugin(plugin);\n\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer,\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  // const ground = new Rect({\n  //   style: {\n  //     fill: '#C6E5FF',\n  //     width: 550,\n  //     height: 10,\n  //     rigid: 'static',\n  //     x: 0,\n  //     y: 400,\n  //   },\n  // });\n  // canvas.appendChild(ground);\n\n  const ground1 = new Line({\n    style: {\n      x1: 0,\n      y1: 200,\n      x2: 50,\n      y2: 400,\n      stroke: '#1890FF',\n      lineWidth: 2,\n      width: 1000,\n      height: 10,\n      rigid: 'static', // static ground\n    },\n  });\n  canvas.appendChild(ground1);\n  const ground2 = new Line({\n    style: {\n      x1: 50,\n      y1: 400,\n      x2: 400,\n      y2: 400,\n      stroke: '#1890FF',\n      lineWidth: 2,\n      width: 1000,\n      height: 10,\n      rigid: 'static', // static ground\n    },\n  });\n  canvas.appendChild(ground2);\n  const ground3 = new Line({\n    style: {\n      x1: 400,\n      y1: 400,\n      x2: 400,\n      y2: 200,\n      stroke: '#1890FF',\n      lineWidth: 2,\n      width: 1000,\n      height: 10,\n      rigid: 'static', // static ground\n    },\n  });\n  canvas.appendChild(ground3);\n\n  for (let i = 0; i < 10; i++) {\n    const rect = new Rect({\n      style: {\n        fill: '#C6E5FF',\n        stroke: '#1890FF',\n        lineWidth: 2,\n        width: 50,\n        height: 50,\n        rigid: 'dynamic',\n        density: 0.1,\n        x: Math.random() * 100 + 100,\n        y: Math.random() * 100,\n      },\n    });\n    canvas.appendChild(rect);\n  }\n\n  const circle = new Circle({\n    style: {\n      fill: '#1890FF',\n      r: 50,\n      rigid: 'dynamic',\n      density: 0.1,\n      restitution: 0.5,\n      cx: 300,\n      cy: 0,\n    },\n  });\n  canvas.appendChild(circle);\n  // const text = new Text({\n  //   id: 'text',\n  //   style: {\n  //     fontFamily: 'PingFang SC',\n  //     text: 'Circle',\n  //     fontSize: 16,\n  //     fill: '#fFF',\n  //     textAlign: 'center',\n  //     textBaseline: 'middle',\n  //   },\n  // });\n  // circle.appendChild(text);\n\n  const polygon = new Polygon({\n    style: {\n      points: [\n        [20, 10],\n        [40, 10],\n        [40 + 20 * Math.sin(Math.PI / 6), 10 + 20 * Math.cos(Math.PI / 6)],\n        [40, 10 + 20 * Math.cos(Math.PI / 6) * 2],\n        [20, 10 + 20 * Math.cos(Math.PI / 6) * 2],\n        [20 - 20 * Math.sin(Math.PI / 6), 10 + 20 * Math.cos(Math.PI / 6)],\n        // [10, 10],\n        // [30, 10],\n        // [30, 30],\n        // [10, 30],\n      ],\n      fill: '#C6E5FF',\n      stroke: '#1890FF',\n      lineWidth: 2,\n      rigid: 'dynamic',\n      density: 10,\n    },\n  });\n  polygon.setPosition(100, 100);\n  canvas.appendChild(polygon);\n\n  const image = new Image({\n    style: {\n      x: 200,\n      y: 100,\n      width: 80,\n      height: 80,\n      img: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ',\n      rigid: 'dynamic',\n      density: 10,\n    },\n  });\n  canvas.appendChild(image);\n\n  // const slope = new Polyline({\n  //   style: {\n  //     points: [\n  //       [0, 200],\n  //       [50, 400],\n  //       [400, 400],\n  //       [400, 200],\n  //     ],\n  //     stroke: '#1890FF',\n  //     lineWidth: 2,\n  //     rigid: 'static', // static ground\n  //   },\n  // });\n  // canvas.appendChild(slope);\n\n  // stats\n  const stats = new Stats();\n  stats.showPanel(0);\n  const $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  const $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n    if (stats) {\n      stats.update();\n    }\n  });\n\n  // GUI\n  const gui = new lil.GUI({ autoPlace: false });\n  $wrapper.appendChild(gui.domElement);\n  const forceFolder = gui.addFolder('force');\n  const forceConfig = {\n    applyForce: () => {\n      plugin.applyForce(circle, [0, -10], [0, 0]);\n    },\n  };\n  forceFolder.add(forceConfig, 'applyForce').name('applyForce to circle');\n});\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-plugin-matterjs\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-plugin-matterjs\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gPluginMatterjs, global.lilGui, global.stats);\n    global.matterjs = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gPluginMatterjs, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  var renderer = new _gCanvas.Renderer();\n  var plugin = new _gPluginMatterjs.Plugin({\n    debug: true,\n    // 开启 debug 模式，将物理引擎世界也渲染出来\n    debugContainer: document.getElementById('container'),\n    debugCanvasWidth: 600,\n    debugCanvasHeight: 500\n  });\n  renderer.registerPlugin(plugin);\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: renderer\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    // const ground = new Rect({\n    //   style: {\n    //     fill: '#C6E5FF',\n    //     width: 550,\n    //     height: 10,\n    //     rigid: 'static',\n    //     x: 0,\n    //     y: 400,\n    //   },\n    // });\n    // canvas.appendChild(ground);\n    var ground1 = new _g.Line({\n      style: {\n        x1: 0,\n        y1: 200,\n        x2: 50,\n        y2: 400,\n        stroke: '#1890FF',\n        lineWidth: 2,\n        width: 1000,\n        height: 10,\n        rigid: 'static' // static ground\n\n      }\n    });\n    canvas.appendChild(ground1);\n    var ground2 = new _g.Line({\n      style: {\n        x1: 50,\n        y1: 400,\n        x2: 400,\n        y2: 400,\n        stroke: '#1890FF',\n        lineWidth: 2,\n        width: 1000,\n        height: 10,\n        rigid: 'static' // static ground\n\n      }\n    });\n    canvas.appendChild(ground2);\n    var ground3 = new _g.Line({\n      style: {\n        x1: 400,\n        y1: 400,\n        x2: 400,\n        y2: 200,\n        stroke: '#1890FF',\n        lineWidth: 2,\n        width: 1000,\n        height: 10,\n        rigid: 'static' // static ground\n\n      }\n    });\n    canvas.appendChild(ground3);\n\n    for (var i = 0; i < 10; i++) {\n      var rect = new _g.Rect({\n        style: {\n          fill: '#C6E5FF',\n          stroke: '#1890FF',\n          lineWidth: 2,\n          width: 50,\n          height: 50,\n          rigid: 'dynamic',\n          density: 0.1,\n          x: Math.random() * 100 + 100,\n          y: Math.random() * 100\n        }\n      });\n      canvas.appendChild(rect);\n    }\n\n    var circle = new _g.Circle({\n      style: {\n        fill: '#1890FF',\n        r: 50,\n        rigid: 'dynamic',\n        density: 0.1,\n        restitution: 0.5,\n        cx: 300,\n        cy: 0\n      }\n    });\n    canvas.appendChild(circle); // const text = new Text({\n    //   id: 'text',\n    //   style: {\n    //     fontFamily: 'PingFang SC',\n    //     text: 'Circle',\n    //     fontSize: 16,\n    //     fill: '#fFF',\n    //     textAlign: 'center',\n    //     textBaseline: 'middle',\n    //   },\n    // });\n    // circle.appendChild(text);\n\n    var polygon = new _g.Polygon({\n      style: {\n        points: [[20, 10], [40, 10], [40 + 20 * Math.sin(Math.PI / 6), 10 + 20 * Math.cos(Math.PI / 6)], [40, 10 + 20 * Math.cos(Math.PI / 6) * 2], [20, 10 + 20 * Math.cos(Math.PI / 6) * 2], [20 - 20 * Math.sin(Math.PI / 6), 10 + 20 * Math.cos(Math.PI / 6)] // [10, 10],\n        // [30, 10],\n        // [30, 30],\n        // [10, 30],\n        ],\n        fill: '#C6E5FF',\n        stroke: '#1890FF',\n        lineWidth: 2,\n        rigid: 'dynamic',\n        density: 10\n      }\n    });\n    polygon.setPosition(100, 100);\n    canvas.appendChild(polygon);\n    var image = new _g.Image({\n      style: {\n        x: 200,\n        y: 100,\n        width: 80,\n        height: 80,\n        img: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ',\n        rigid: 'dynamic',\n        density: 10\n      }\n    });\n    canvas.appendChild(image); // const slope = new Polyline({\n    //   style: {\n    //     points: [\n    //       [0, 200],\n    //       [50, 400],\n    //       [400, 400],\n    //       [400, 200],\n    //     ],\n    //     stroke: '#1890FF',\n    //     lineWidth: 2,\n    //     rigid: 'static', // static ground\n    //   },\n    // });\n    // canvas.appendChild(slope);\n    // stats\n\n    var stats = new _stats.default();\n    stats.showPanel(0);\n    var $stats = stats.dom;\n    $stats.style.position = 'absolute';\n    $stats.style.left = '0px';\n    $stats.style.top = '0px';\n    var $wrapper = document.getElementById('container');\n    $wrapper.appendChild($stats);\n    canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n      if (stats) {\n        stats.update();\n      }\n    }); // GUI\n\n    var gui = new lil.GUI({\n      autoPlace: false\n    });\n    $wrapper.appendChild(gui.domElement);\n    var forceFolder = gui.addFolder('force');\n    var forceConfig = {\n      applyForce: function applyForce() {\n        plugin.applyForce(circle, [0, -10], [0, 0]);\n      }\n    };\n    forceFolder.add(forceConfig, 'applyForce').name('applyForce to circle');\n  });\n});"},{"relativePath":"plugins/demo/dragndrop-group.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/plugins/demo/dragndrop-group.js","order":8,"filename":"dragndrop-group.js","title":{"zh":"在 Group 上使用拖放","en":"Use Drag'n'Drop on Group"},"source":"import { Canvas, CanvasEvent, Circle, Group, Text } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Plugin } from '@antv/g-plugin-dragndrop';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n/**\n * Drag'n'Drop with PointerEvents\n * @see https://javascript.info/mouse-drag-and-drop\n */\n\nconst plugin = new Plugin({\n  // we can drag the whole document from empty space now!\n  isDocumentDraggable: true,\n  isDocumentDroppable: true,\n  dragstartDistanceThreshold: 10,\n  dragstartTimeThreshold: 100,\n});\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\ncanvasRenderer.registerPlugin(plugin);\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf',\n    },\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\ncanvaskitRenderer.registerPlugin(plugin);\nconst webglRenderer = new WebGLRenderer();\nwebglRenderer.registerPlugin(plugin);\nconst svgRenderer = new SVGRenderer();\nsvgRenderer.registerPlugin(plugin);\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  const draggableGroup1 = new Group({\n    style: {\n      draggable: true,\n    },\n  });\n  const node1 = new Circle({\n    style: {\n      r: 50,\n      cx: -50,\n      cy: -50,\n      fill: 'blue',\n      cursor: 'move',\n    },\n  });\n  const text1 = new Text({\n    style: {\n      fill: 'white',\n      text: 'node1',\n      textAlign: 'center',\n      textBaseline: 'middle',\n      pointerEvents: 'none',\n    },\n  });\n  draggableGroup1.appendChild(node1);\n  node1.appendChild(text1);\n\n  const draggableGroup2 = draggableGroup1.cloneNode(true);\n  const node2 = draggableGroup2.childNodes[0];\n  node2.style.cx = 50;\n  node2.style.cy = 50;\n  node2.children[0].style.text = 'node2';\n\n  const droppableGroup1 = new Group({\n    style: {\n      droppable: true,\n    },\n  });\n  const group1 = new Circle({\n    style: {\n      r: 120,\n      cx: 150,\n      cy: 200,\n      fill: 'white',\n      stroke: 'black',\n    },\n  });\n  droppableGroup1.appendChild(group1);\n  const droppableGroup2 = droppableGroup1.cloneNode(true);\n  droppableGroup2.childNodes[0].style.cx = 400;\n  droppableGroup2.style.zIndex = -1;\n\n  group1.appendChild(draggableGroup1);\n  group1.appendChild(draggableGroup2);\n\n  canvas.appendChild(droppableGroup1);\n  canvas.appendChild(droppableGroup2);\n\n  // move camera\n  const camera = canvas.getCamera();\n\n  let shiftX = 0;\n  let shiftY = 0;\n  function moveAt(target, canvasX, canvasY) {\n    target.setPosition(canvasX - shiftX, canvasY - shiftY);\n  }\n  canvas.addEventListener('dragstart', function (e) {\n    const { target, canvasX, canvasY } = e;\n\n    switch (target) {\n      case draggableGroup1:\n      case draggableGroup2:\n        const [x, y] = target.getPosition();\n        shiftX = canvasX - x;\n        shiftY = canvasY - y;\n\n        moveAt(target, canvasX, canvasY);\n        target.childNodes[0].style.opacity = 0.5;\n    }\n  });\n  canvas.addEventListener('drag', function (e) {\n    const { target, canvasX, canvasY, dx, dy } = e;\n\n    switch (target) {\n      case canvas.document:\n        camera.pan(-dx, -dy);\n        break;\n      case draggableGroup1:\n      case draggableGroup2:\n        moveAt(target, canvasX, canvasY);\n        target.childNodes[0].style.opacity = 0.5;\n        break;\n    }\n  });\n  canvas.addEventListener('dragend', function (e) {\n    const { target } = e;\n\n    switch (target) {\n      case draggableGroup1:\n      case draggableGroup2:\n        target.childNodes[0].style.opacity = 1;\n    }\n  });\n\n  canvas.addEventListener('dragenter', function (e) {\n    const { target } = e;\n\n    switch (target) {\n      case droppableGroup1:\n      case droppableGroup2:\n        target.childNodes[0].style.fill = 'rgba(0,0,0,0.5)';\n    }\n  });\n  canvas.addEventListener('dragleave', function (e) {\n    const { target } = e;\n\n    switch (target) {\n      case droppableGroup1:\n      case droppableGroup2:\n        target.childNodes[0].style.fill = 'white';\n    }\n  });\n  // canvas.addEventListener('dragover', function (e) {\n  //   e.target.style.opacity = 0.6;\n  //   gateText.style.text = 'gate dragover';\n  // });\n  canvas.addEventListener('drop', function (e) {\n    const { target } = e;\n\n    switch (target) {\n      case canvas.document:\n        break;\n      case droppableGroup1:\n      case droppableGroup2:\n        target.childNodes[0].style.fill = 'white';\n        break;\n    }\n  });\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-plugin-dragndrop\", \"@antv/g-svg\", \"@antv/g-webgl\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-plugin-dragndrop\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gPluginDragndrop, global.gSvg, global.gWebgl, global.lilGui, global.stats);\n    global.dragndropGroup = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gPluginDragndrop, _gSvg, _gWebgl, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  /**\n   * Drag'n'Drop with PointerEvents\n   * @see https://javascript.info/mouse-drag-and-drop\n   */\n  var plugin = new _gPluginDragndrop.Plugin({\n    // we can drag the whole document from empty space now!\n    isDocumentDraggable: true,\n    isDocumentDroppable: true,\n    dragstartDistanceThreshold: 10,\n    dragstartTimeThreshold: 100\n  }); // create a renderer\n\n  var canvasRenderer = new _gCanvas.Renderer();\n  canvasRenderer.registerPlugin(plugin);\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf'\n    }, {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  canvaskitRenderer.registerPlugin(plugin);\n  var webglRenderer = new _gWebgl.Renderer();\n  webglRenderer.registerPlugin(plugin);\n  var svgRenderer = new _gSvg.Renderer();\n  svgRenderer.registerPlugin(plugin); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    var draggableGroup1 = new _g.Group({\n      style: {\n        draggable: true\n      }\n    });\n    var node1 = new _g.Circle({\n      style: {\n        r: 50,\n        cx: -50,\n        cy: -50,\n        fill: 'blue',\n        cursor: 'move'\n      }\n    });\n    var text1 = new _g.Text({\n      style: {\n        fill: 'white',\n        text: 'node1',\n        textAlign: 'center',\n        textBaseline: 'middle',\n        pointerEvents: 'none'\n      }\n    });\n    draggableGroup1.appendChild(node1);\n    node1.appendChild(text1);\n    var draggableGroup2 = draggableGroup1.cloneNode(true);\n    var node2 = draggableGroup2.childNodes[0];\n    node2.style.cx = 50;\n    node2.style.cy = 50;\n    node2.children[0].style.text = 'node2';\n    var droppableGroup1 = new _g.Group({\n      style: {\n        droppable: true\n      }\n    });\n    var group1 = new _g.Circle({\n      style: {\n        r: 120,\n        cx: 150,\n        cy: 200,\n        fill: 'white',\n        stroke: 'black'\n      }\n    });\n    droppableGroup1.appendChild(group1);\n    var droppableGroup2 = droppableGroup1.cloneNode(true);\n    droppableGroup2.childNodes[0].style.cx = 400;\n    droppableGroup2.style.zIndex = -1;\n    group1.appendChild(draggableGroup1);\n    group1.appendChild(draggableGroup2);\n    canvas.appendChild(droppableGroup1);\n    canvas.appendChild(droppableGroup2); // move camera\n\n    var camera = canvas.getCamera();\n    var shiftX = 0;\n    var shiftY = 0;\n\n    function moveAt(target, canvasX, canvasY) {\n      target.setPosition(canvasX - shiftX, canvasY - shiftY);\n    }\n\n    canvas.addEventListener('dragstart', function (e) {\n      var target = e.target,\n          canvasX = e.canvasX,\n          canvasY = e.canvasY;\n\n      switch (target) {\n        case draggableGroup1:\n        case draggableGroup2:\n          var _target$getPosition = target.getPosition(),\n              _target$getPosition2 = _slicedToArray(_target$getPosition, 2),\n              x = _target$getPosition2[0],\n              y = _target$getPosition2[1];\n\n          shiftX = canvasX - x;\n          shiftY = canvasY - y;\n          moveAt(target, canvasX, canvasY);\n          target.childNodes[0].style.opacity = 0.5;\n      }\n    });\n    canvas.addEventListener('drag', function (e) {\n      var target = e.target,\n          canvasX = e.canvasX,\n          canvasY = e.canvasY,\n          dx = e.dx,\n          dy = e.dy;\n\n      switch (target) {\n        case canvas.document:\n          camera.pan(-dx, -dy);\n          break;\n\n        case draggableGroup1:\n        case draggableGroup2:\n          moveAt(target, canvasX, canvasY);\n          target.childNodes[0].style.opacity = 0.5;\n          break;\n      }\n    });\n    canvas.addEventListener('dragend', function (e) {\n      var target = e.target;\n\n      switch (target) {\n        case draggableGroup1:\n        case draggableGroup2:\n          target.childNodes[0].style.opacity = 1;\n      }\n    });\n    canvas.addEventListener('dragenter', function (e) {\n      var target = e.target;\n\n      switch (target) {\n        case droppableGroup1:\n        case droppableGroup2:\n          target.childNodes[0].style.fill = 'rgba(0,0,0,0.5)';\n      }\n    });\n    canvas.addEventListener('dragleave', function (e) {\n      var target = e.target;\n\n      switch (target) {\n        case droppableGroup1:\n        case droppableGroup2:\n          target.childNodes[0].style.fill = 'white';\n      }\n    }); // canvas.addEventListener('dragover', function (e) {\n    //   e.target.style.opacity = 0.6;\n    //   gateText.style.text = 'gate dragover';\n    // });\n\n    canvas.addEventListener('drop', function (e) {\n      var target = e.target;\n\n      switch (target) {\n        case canvas.document:\n          break;\n\n        case droppableGroup1:\n        case droppableGroup2:\n          target.childNodes[0].style.fill = 'white';\n          break;\n      }\n    });\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n});"},{"relativePath":"plugins/demo/yoga-animation.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/plugins/demo/yoga-animation.js","order":19,"filename":"yoga-animation.js","title":{"zh":"使用 Yoga 排版引擎 - 对属性应用动画","en":"Use Yoga layout engine - use animation"},"source":"import { Canvas, CanvasEvent, Rect, Text } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Plugin as PluginYoga } from '@antv/g-plugin-yoga';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\nconst canvasRenderer = new CanvasRenderer();\nconst plugin = new PluginYoga();\ncanvasRenderer.registerPlugin(plugin);\n\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  const root = new Rect({\n    id: 'root',\n    style: {\n      fill: '#C6E5FF',\n      width: 500,\n      height: 300,\n      display: 'flex',\n      x: 50,\n      y: 50,\n    },\n  });\n  canvas.appendChild(root);\n\n  const node1 = new Rect({\n    id: 'node1',\n    style: {\n      fill: 'white',\n      stroke: 'grey',\n      lineWidth: 1,\n      opacity: 0.8,\n      width: 100,\n      height: 100,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n  });\n  node1.appendChild(\n    new Text({\n      id: 'node1-text',\n      style: {\n        fontFamily: 'PingFang SC',\n        fontSize: 32,\n        fill: '#1890FF',\n        text: '1',\n      },\n    }),\n  );\n  const node2 = new Rect({\n    id: 'node2',\n    style: {\n      fill: 'white',\n      stroke: 'grey',\n      lineWidth: 1,\n      opacity: 0.8,\n      width: 100,\n      height: 100,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexGrow: 1,\n    },\n  });\n  node2.appendChild(\n    new Text({\n      id: 'node2-text',\n      style: {\n        fontFamily: 'PingFang SC',\n        fontSize: 32,\n        fill: '#1890FF',\n        text: '2',\n      },\n    }),\n  );\n\n  root.appendChild(node1);\n  root.appendChild(node2);\n\n  node1.animate(\n    [\n      { top: 0, left: 0, width: 100, marginAll: 0, paddingLeft: 0 },\n      { top: 100, left: 100, width: 200, marginAll: 20, paddingLeft: 50 },\n    ],\n    {\n      duration: 1000,\n      easing: 'cubic-bezier(0.250, 0.460, 0.450, 0.940)',\n      fill: 'both',\n      iterations: Infinity,\n      direction: 'alternate-reverse',\n    },\n  );\n\n  node2.animate([{ flexGrow: 1 }, { flexGrow: 0.5 }], {\n    duration: 1000,\n    easing: 'cubic-bezier(0.250, 0.460, 0.450, 0.940)',\n    fill: 'both',\n    iterations: Infinity,\n    direction: 'alternate-reverse',\n  });\n\n  // stats\n  const stats = new Stats();\n  stats.showPanel(0);\n  const $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  const $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n    if (stats) {\n      stats.update();\n    }\n  });\n\n  // GUI\n  const gui = new lil.GUI({ autoPlace: false });\n  $wrapper.appendChild(gui.domElement);\n\n  const layoutConfig = {\n    width: 500,\n    height: 300,\n  };\n  const layoutFolder = gui.addFolder(\"Container's Layout\");\n  layoutFolder.add(layoutConfig, 'width', 100, 600).onChange((width) => {\n    root.style.width = width;\n  });\n  layoutFolder.add(layoutConfig, 'height', 200, 500).onChange((height) => {\n    root.style.height = height;\n  });\n});\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-plugin-yoga\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-plugin-yoga\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gPluginYoga, global.lilGui, global.stats);\n    global.yogaAnimation = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gPluginYoga, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  var canvasRenderer = new _gCanvas.Renderer();\n  var plugin = new _gPluginYoga.Plugin();\n  canvasRenderer.registerPlugin(plugin);\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    var root = new _g.Rect({\n      id: 'root',\n      style: {\n        fill: '#C6E5FF',\n        width: 500,\n        height: 300,\n        display: 'flex',\n        x: 50,\n        y: 50\n      }\n    });\n    canvas.appendChild(root);\n    var node1 = new _g.Rect({\n      id: 'node1',\n      style: {\n        fill: 'white',\n        stroke: 'grey',\n        lineWidth: 1,\n        opacity: 0.8,\n        width: 100,\n        height: 100,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      }\n    });\n    node1.appendChild(new _g.Text({\n      id: 'node1-text',\n      style: {\n        fontFamily: 'PingFang SC',\n        fontSize: 32,\n        fill: '#1890FF',\n        text: '1'\n      }\n    }));\n    var node2 = new _g.Rect({\n      id: 'node2',\n      style: {\n        fill: 'white',\n        stroke: 'grey',\n        lineWidth: 1,\n        opacity: 0.8,\n        width: 100,\n        height: 100,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexGrow: 1\n      }\n    });\n    node2.appendChild(new _g.Text({\n      id: 'node2-text',\n      style: {\n        fontFamily: 'PingFang SC',\n        fontSize: 32,\n        fill: '#1890FF',\n        text: '2'\n      }\n    }));\n    root.appendChild(node1);\n    root.appendChild(node2);\n    node1.animate([{\n      top: 0,\n      left: 0,\n      width: 100,\n      marginAll: 0,\n      paddingLeft: 0\n    }, {\n      top: 100,\n      left: 100,\n      width: 200,\n      marginAll: 20,\n      paddingLeft: 50\n    }], {\n      duration: 1000,\n      easing: 'cubic-bezier(0.250, 0.460, 0.450, 0.940)',\n      fill: 'both',\n      iterations: Infinity,\n      direction: 'alternate-reverse'\n    });\n    node2.animate([{\n      flexGrow: 1\n    }, {\n      flexGrow: 0.5\n    }], {\n      duration: 1000,\n      easing: 'cubic-bezier(0.250, 0.460, 0.450, 0.940)',\n      fill: 'both',\n      iterations: Infinity,\n      direction: 'alternate-reverse'\n    }); // stats\n\n    var stats = new _stats.default();\n    stats.showPanel(0);\n    var $stats = stats.dom;\n    $stats.style.position = 'absolute';\n    $stats.style.left = '0px';\n    $stats.style.top = '0px';\n    var $wrapper = document.getElementById('container');\n    $wrapper.appendChild($stats);\n    canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n      if (stats) {\n        stats.update();\n      }\n    }); // GUI\n\n    var gui = new lil.GUI({\n      autoPlace: false\n    });\n    $wrapper.appendChild(gui.domElement);\n    var layoutConfig = {\n      width: 500,\n      height: 300\n    };\n    var layoutFolder = gui.addFolder(\"Container's Layout\");\n    layoutFolder.add(layoutConfig, 'width', 100, 600).onChange(function (width) {\n      root.style.width = width;\n    });\n    layoutFolder.add(layoutConfig, 'height', 200, 500).onChange(function (height) {\n      root.style.height = height;\n    });\n  });\n});"},{"relativePath":"plugins/demo/dragndrop.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/plugins/demo/dragndrop.js","order":7,"filename":"dragndrop.js","title":{"zh":"使用拖放","en":"Use Drag'n'Drop"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*A14uTY9_5UEAAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent, Image, Text } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Plugin } from '@antv/g-plugin-dragndrop';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n/**\n * Drag'n'Drop with PointerEvents\n * @see https://javascript.info/mouse-drag-and-drop\n */\n\nconst plugin = new Plugin({\n  // we can drag the whole document from empty space now!\n  isDocumentDraggable: true,\n  isDocumentDroppable: true,\n  dragstartDistanceThreshold: 10,\n  dragstartTimeThreshold: 100,\n});\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\ncanvasRenderer.registerPlugin(plugin);\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf',\n    },\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\ncanvaskitRenderer.registerPlugin(plugin);\nconst webglRenderer = new WebGLRenderer();\nwebglRenderer.registerPlugin(plugin);\nconst svgRenderer = new SVGRenderer();\nsvgRenderer.registerPlugin(plugin);\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  const gate = new Image({\n    style: {\n      droppable: true,\n      x: 50,\n      y: 100,\n      width: 200,\n      height: 100,\n      src: 'https://en.js.cx/clipart/soccer-gate.svg',\n    },\n  });\n\n  const ball = new Image({\n    style: {\n      draggable: true,\n      x: 300,\n      y: 200,\n      width: 100,\n      height: 100,\n      src: 'https://en.js.cx/clipart/ball.svg',\n      cursor: 'pointer',\n    },\n  });\n\n  canvas.appendChild(gate);\n  canvas.appendChild(ball);\n\n  const gateText = new Text({\n    style: {\n      x: 50,\n      y: 350,\n      fill: 'black',\n      text: '',\n      pointerEvents: 'none',\n    },\n  });\n  const ballText = new Text({\n    style: {\n      x: 50,\n      y: 400,\n      fill: 'black',\n      text: '',\n      pointerEvents: 'none',\n    },\n  });\n  canvas.appendChild(gateText);\n  canvas.appendChild(ballText);\n\n  let shiftX = 0;\n  let shiftY = 0;\n  function moveAt(target, canvasX, canvasY) {\n    target.setPosition(canvasX - shiftX, canvasY - shiftY);\n  }\n\n  ball.addEventListener('dragstart', function (e) {\n    e.target.style.opacity = 0.5;\n    ballText.style.text = 'ball dragstart';\n\n    const [x, y] = e.target.getPosition();\n    shiftX = e.canvasX - x;\n    shiftY = e.canvasY - y;\n\n    moveAt(e.target, e.canvasX, e.canvasY);\n  });\n  ball.addEventListener('drag', function (e) {\n    moveAt(e.target, e.canvasX, e.canvasY);\n    ballText.style.text = `ball drag movement: ${e.dx}, ${e.dy}`;\n  });\n  ball.addEventListener('dragend', function (e) {\n    e.target.style.opacity = 1;\n    ballText.style.text = 'ball dragend';\n  });\n\n  gate.addEventListener('dragenter', function (e) {\n    e.target.style.opacity = 0.6;\n    gateText.style.text = 'gate dragenter';\n  });\n  gate.addEventListener('dragleave', function (e) {\n    e.target.style.opacity = 1;\n    gateText.style.text = 'gate dragleave';\n  });\n  gate.addEventListener('dragover', function (e) {\n    e.target.style.opacity = 0.6;\n    gateText.style.text = 'gate dragover';\n  });\n  gate.addEventListener('drop', function (e) {\n    e.target.style.opacity = 1;\n    gateText.style.text = 'gate drop';\n  });\n\n  // move camera\n  const camera = canvas.getCamera();\n  canvas.addEventListener('drag', function (e) {\n    if (e.target === canvas.document) {\n      camera.pan(-e.dx, -e.dy);\n    }\n  });\n  canvas.addEventListener('drop', function (e) {\n    if (e.target === canvas.document) {\n      console.log('drop on document');\n    }\n  });\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-plugin-dragndrop\", \"@antv/g-svg\", \"@antv/g-webgl\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-plugin-dragndrop\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gPluginDragndrop, global.gSvg, global.gWebgl, global.lilGui, global.stats);\n    global.dragndrop = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gPluginDragndrop, _gSvg, _gWebgl, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  /**\n   * Drag'n'Drop with PointerEvents\n   * @see https://javascript.info/mouse-drag-and-drop\n   */\n  var plugin = new _gPluginDragndrop.Plugin({\n    // we can drag the whole document from empty space now!\n    isDocumentDraggable: true,\n    isDocumentDroppable: true,\n    dragstartDistanceThreshold: 10,\n    dragstartTimeThreshold: 100\n  }); // create a renderer\n\n  var canvasRenderer = new _gCanvas.Renderer();\n  canvasRenderer.registerPlugin(plugin);\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf'\n    }, {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  canvaskitRenderer.registerPlugin(plugin);\n  var webglRenderer = new _gWebgl.Renderer();\n  webglRenderer.registerPlugin(plugin);\n  var svgRenderer = new _gSvg.Renderer();\n  svgRenderer.registerPlugin(plugin); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    var gate = new _g.Image({\n      style: {\n        droppable: true,\n        x: 50,\n        y: 100,\n        width: 200,\n        height: 100,\n        src: 'https://en.js.cx/clipart/soccer-gate.svg'\n      }\n    });\n    var ball = new _g.Image({\n      style: {\n        draggable: true,\n        x: 300,\n        y: 200,\n        width: 100,\n        height: 100,\n        src: 'https://en.js.cx/clipart/ball.svg',\n        cursor: 'pointer'\n      }\n    });\n    canvas.appendChild(gate);\n    canvas.appendChild(ball);\n    var gateText = new _g.Text({\n      style: {\n        x: 50,\n        y: 350,\n        fill: 'black',\n        text: '',\n        pointerEvents: 'none'\n      }\n    });\n    var ballText = new _g.Text({\n      style: {\n        x: 50,\n        y: 400,\n        fill: 'black',\n        text: '',\n        pointerEvents: 'none'\n      }\n    });\n    canvas.appendChild(gateText);\n    canvas.appendChild(ballText);\n    var shiftX = 0;\n    var shiftY = 0;\n\n    function moveAt(target, canvasX, canvasY) {\n      target.setPosition(canvasX - shiftX, canvasY - shiftY);\n    }\n\n    ball.addEventListener('dragstart', function (e) {\n      e.target.style.opacity = 0.5;\n      ballText.style.text = 'ball dragstart';\n\n      var _e$target$getPosition = e.target.getPosition(),\n          _e$target$getPosition2 = _slicedToArray(_e$target$getPosition, 2),\n          x = _e$target$getPosition2[0],\n          y = _e$target$getPosition2[1];\n\n      shiftX = e.canvasX - x;\n      shiftY = e.canvasY - y;\n      moveAt(e.target, e.canvasX, e.canvasY);\n    });\n    ball.addEventListener('drag', function (e) {\n      moveAt(e.target, e.canvasX, e.canvasY);\n      ballText.style.text = \"ball drag movement: \".concat(e.dx, \", \").concat(e.dy);\n    });\n    ball.addEventListener('dragend', function (e) {\n      e.target.style.opacity = 1;\n      ballText.style.text = 'ball dragend';\n    });\n    gate.addEventListener('dragenter', function (e) {\n      e.target.style.opacity = 0.6;\n      gateText.style.text = 'gate dragenter';\n    });\n    gate.addEventListener('dragleave', function (e) {\n      e.target.style.opacity = 1;\n      gateText.style.text = 'gate dragleave';\n    });\n    gate.addEventListener('dragover', function (e) {\n      e.target.style.opacity = 0.6;\n      gateText.style.text = 'gate dragover';\n    });\n    gate.addEventListener('drop', function (e) {\n      e.target.style.opacity = 1;\n      gateText.style.text = 'gate drop';\n    }); // move camera\n\n    var camera = canvas.getCamera();\n    canvas.addEventListener('drag', function (e) {\n      if (e.target === canvas.document) {\n        camera.pan(-e.dx, -e.dy);\n      }\n    });\n    canvas.addEventListener('drop', function (e) {\n      if (e.target === canvas.document) {\n        console.log('drop on document');\n      }\n    });\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n});"},{"relativePath":"plugins/demo/orbit-control.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/plugins/demo/orbit-control.js","order":11,"filename":"orbit-control.js","title":{"zh":"使用 Orbit Control","en":"Use orbit control"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*1u8eRKMbVX8AAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent, CameraType } from '@antv/g';\nimport { Renderer } from '@antv/g-webgl';\nimport { MeshBasicMaterial, CubeGeometry, Mesh, Plugin as Plugin3D } from '@antv/g-plugin-3d';\nimport { Plugin as PluginControl } from '@antv/g-plugin-control';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst renderer = new Renderer();\nrenderer.registerPlugin(new Plugin3D());\nrenderer.registerPlugin(new PluginControl());\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer,\n});\n\n(async () => {\n  await canvas.ready;\n  const plugin = renderer.getPlugin('device-renderer');\n  const device = plugin.getDevice();\n  const map = plugin.loadTexture(\n    'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*8TlCRIsKeUkAAAAAAAAAAAAAARQnAQ',\n  );\n\n  const cubeGeometry = new CubeGeometry(device, {\n    width: 200,\n    height: 200,\n    depth: 200,\n  });\n  const basicMaterial = new MeshBasicMaterial(device, {\n    // wireframe: true,\n    map,\n  });\n\n  const cube = new Mesh({\n    style: {\n      fill: '#1890FF',\n      opacity: 1,\n      geometry: cubeGeometry,\n      material: basicMaterial,\n    },\n  });\n\n  cube.setPosition(300, 250, 0);\n\n  canvas.appendChild(cube);\n\n  const camera = canvas.getCamera();\n\n  // stats\n  const stats = new Stats();\n  stats.showPanel(0);\n  const $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  const $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n    if (stats) {\n      stats.update();\n    }\n    cube.rotate(0, 1, 0);\n  });\n\n  // GUI\n  const gui = new lil.GUI({ autoPlace: false });\n  $wrapper.appendChild(gui.domElement);\n\n  const cameraFolder = gui.addFolder('camera');\n  const cameraConfig = {\n    type: 'Exploring',\n  };\n\n  const types = ['Orbiting', 'Exploring', 'Tracking'];\n  const enums = [CameraType.ORBITING, CameraType.EXPLORING, CameraType.TRACKING];\n  cameraFolder.add(cameraConfig, 'type', types).onChange((type) => {\n    const index = types.indexOf(type);\n    camera.setType(enums[index]);\n  });\n})();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-webgl\", \"@antv/g-plugin-3d\", \"@antv/g-plugin-control\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-webgl\"), require(\"@antv/g-plugin-3d\"), require(\"@antv/g-plugin-control\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gWebgl, global.gPlugin3d, global.gPluginControl, global.lilGui, global.stats);\n    global.orbitControl = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gWebgl, _gPlugin3d, _gPluginControl, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // create a renderer\n  var renderer = new _gWebgl.Renderer();\n  renderer.registerPlugin(new _gPlugin3d.Plugin());\n  renderer.registerPlugin(new _gPluginControl.Plugin()); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: renderer\n  });\n\n  (async function () {\n    await canvas.ready;\n    var plugin = renderer.getPlugin('device-renderer');\n    var device = plugin.getDevice();\n    var map = plugin.loadTexture('https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*8TlCRIsKeUkAAAAAAAAAAAAAARQnAQ');\n    var cubeGeometry = new _gPlugin3d.CubeGeometry(device, {\n      width: 200,\n      height: 200,\n      depth: 200\n    });\n    var basicMaterial = new _gPlugin3d.MeshBasicMaterial(device, {\n      // wireframe: true,\n      map: map\n    });\n    var cube = new _gPlugin3d.Mesh({\n      style: {\n        fill: '#1890FF',\n        opacity: 1,\n        geometry: cubeGeometry,\n        material: basicMaterial\n      }\n    });\n    cube.setPosition(300, 250, 0);\n    canvas.appendChild(cube);\n    var camera = canvas.getCamera(); // stats\n\n    var stats = new _stats.default();\n    stats.showPanel(0);\n    var $stats = stats.dom;\n    $stats.style.position = 'absolute';\n    $stats.style.left = '0px';\n    $stats.style.top = '0px';\n    var $wrapper = document.getElementById('container');\n    $wrapper.appendChild($stats);\n    canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n      if (stats) {\n        stats.update();\n      }\n\n      cube.rotate(0, 1, 0);\n    }); // GUI\n\n    var gui = new lil.GUI({\n      autoPlace: false\n    });\n    $wrapper.appendChild(gui.domElement);\n    var cameraFolder = gui.addFolder('camera');\n    var cameraConfig = {\n      type: 'Exploring'\n    };\n    var types = ['Orbiting', 'Exploring', 'Tracking'];\n    var enums = [_g.CameraType.ORBITING, _g.CameraType.EXPLORING, _g.CameraType.TRACKING];\n    cameraFolder.add(cameraConfig, 'type', types).onChange(function (type) {\n      var index = types.indexOf(type);\n      camera.setType(enums[index]);\n    });\n  })();\n});"},{"relativePath":"plugins/demo/rough-d3-barchart.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/plugins/demo/rough-d3-barchart.js","order":6,"filename":"rough-d3-barchart.js","title":{"zh":"手绘风格的 D3 条形图","en":"Use rough.js and D3 barchart"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*j_F5Saag18oAAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Plugin as PluginRoughCanvasRenderer } from '@antv/g-plugin-rough-canvas-renderer';\nimport { Plugin as PluginRoughSVGRenderer } from '@antv/g-plugin-rough-svg-renderer';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport * as d3 from 'd3';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\nimport WebFont from 'webfontloader';\n\n/**\n * Ported from fullstack-d3, use stylized rendering with rough.js.\n * @see https://codesandbox.io/s/vllpx?file=/chart.js\n */\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\ncanvasRenderer.registerPlugin(new PluginRoughCanvasRenderer());\nconst svgRenderer = new SVGRenderer();\nsvgRenderer.registerPlugin(new PluginRoughSVGRenderer());\nconst webglRenderer = new WebGLRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf',\n    },\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  WebFont.load({\n    google: {\n      families: ['Gaegu'],\n    },\n    active: () => {\n      drawBars();\n    },\n  });\n\n  const drawBars = async () => {\n    // 1. Access data\n    const dataset = await d3.json(\n      'https://gw.alipayobjects.com/os/bmw-prod/8e7cfeb6-28e5-4e78-8d16-c08468360f5f.json',\n    );\n    const metricAccessor = (d) => d.humidity;\n    const yAccessor = (d) => d.length;\n\n    // 2. Create chart dimensions\n    const width = 600;\n    let dimensions = {\n      width: width,\n      height: width * 0.6,\n      margin: {\n        top: 30,\n        right: 10,\n        bottom: 50,\n        left: 50,\n      },\n    };\n    dimensions.boundedWidth = dimensions.width - dimensions.margin.left - dimensions.margin.right;\n    dimensions.boundedHeight = dimensions.height - dimensions.margin.top - dimensions.margin.bottom;\n\n    // 3. Draw canvas\n    const wrapper = d3.select(\n      canvas.document.documentElement, // use GCanvas' document element instead of a real DOM\n    );\n\n    const bounds = wrapper\n      .append('g')\n      .style('transform', `translate(${dimensions.margin.left}px, ${dimensions.margin.top}px)`);\n\n    // 4. Create scales\n\n    const xScale = d3\n      .scaleLinear()\n      .domain(d3.extent(dataset, metricAccessor))\n      .range([0, dimensions.boundedWidth])\n      .nice();\n\n    const binsGenerator = d3.bin().domain(xScale.domain()).value(metricAccessor).thresholds(12);\n\n    const bins = binsGenerator(dataset);\n\n    const yScale = d3\n      .scaleLinear()\n      .domain([0, d3.max(bins, yAccessor)])\n      .range([dimensions.boundedHeight, 0])\n      .nice();\n\n    // 5. Draw data\n    const binsGroup = bounds.append('g');\n    const binGroups = binsGroup.selectAll('g').data(bins).join('g').attr('class', 'bin');\n\n    const barPadding = 1;\n    const barRects = binGroups\n      .append('rect')\n      .attr('x', (d) => xScale(d.x0) + barPadding / 2)\n      .attr('y', (d) => yScale(yAccessor(d)))\n      .attr('width', (d) => d3.max([0, xScale(d.x1) - xScale(d.x0) - barPadding]))\n      .attr('height', (d) => dimensions.boundedHeight - yScale(yAccessor(d)))\n      .attr('fill', 'cornflowerblue')\n      .on('mouseenter', function (e) {\n        d3.select(e.target).attr('fill', 'red');\n      })\n      .on('mouseleave', function (e) {\n        d3.select(e.target).attr('fill', 'cornflowerblue');\n      });\n\n    const barText = binGroups\n      .filter(yAccessor)\n      .append('text')\n      .attr('x', (d) => xScale(d.x0) + (xScale(d.x1) - xScale(d.x0)) / 2)\n      .attr('y', (d) => yScale(yAccessor(d)) - 5)\n      .text(yAccessor)\n      .attr('fill', 'darkgrey')\n      .style('text-anchor', 'middle')\n      .style('font-family', 'Gaegu')\n      .style('font-size', '12px');\n\n    const mean = d3.mean(dataset, metricAccessor);\n    const meanLine = bounds\n      .append('line')\n      .attr('x1', xScale(mean))\n      .attr('x2', xScale(mean))\n      .attr('y1', -15)\n      .attr('y2', dimensions.boundedHeight)\n      .attr('stroke-width', 1)\n      .attr('stroke', 'maroon')\n      .attr('stroke-dasharray', '2px 4px');\n\n    const meanLabel = bounds\n      .append('text')\n      .attr('x', xScale(mean))\n      .attr('y', -20)\n      .text('mean')\n      .attr('fill', 'maroon')\n      .style('font-family', 'Gaegu')\n      .style('font-size', '12px')\n      .style('text-anchor', 'middle');\n\n    // 6. Draw peripherals\n    const xAxisGenerator = d3.axisBottom().scale(xScale);\n\n    const xAxis = bounds\n      .append('g')\n      .call(xAxisGenerator)\n      .attr('transform', `translateY(${dimensions.boundedHeight}px)`)\n      .style('font-family', 'Gaegu')\n      .attr('fill', 'black');\n\n    const xAxisLabel = xAxis\n      .append('text')\n      .attr('x', dimensions.boundedWidth / 2)\n      .attr('y', dimensions.margin.bottom - 10)\n      .attr('fill', 'black')\n      .style('font-family', 'Gaegu')\n      .style('font-size', '10px')\n      .text('Humidity')\n      .style('text-transform', 'capitalize');\n  };\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-plugin-rough-canvas-renderer\", \"@antv/g-plugin-rough-svg-renderer\", \"@antv/g-svg\", \"@antv/g-webgl\", \"d3\", \"lil-gui\", \"stats.js\", \"webfontloader\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-plugin-rough-canvas-renderer\"), require(\"@antv/g-plugin-rough-svg-renderer\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"d3\"), require(\"lil-gui\"), require(\"stats.js\"), require(\"webfontloader\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gPluginRoughCanvasRenderer, global.gPluginRoughSvgRenderer, global.gSvg, global.gWebgl, global.d3, global.lilGui, global.stats, global.webfontloader);\n    global.roughD3Barchart = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gPluginRoughCanvasRenderer, _gPluginRoughSvgRenderer, _gSvg, _gWebgl, d3, lil, _stats, _webfontloader) {\n  \"use strict\";\n\n  d3 = _interopRequireWildcard(d3);\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n  _webfontloader = _interopRequireDefault(_webfontloader);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * Ported from fullstack-d3, use stylized rendering with rough.js.\n   * @see https://codesandbox.io/s/vllpx?file=/chart.js\n   */\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  canvasRenderer.registerPlugin(new _gPluginRoughCanvasRenderer.Plugin());\n  var svgRenderer = new _gSvg.Renderer();\n  svgRenderer.registerPlugin(new _gPluginRoughSvgRenderer.Plugin());\n  var webglRenderer = new _gWebgl.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf'\n    }, {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  }); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    _webfontloader.default.load({\n      google: {\n        families: ['Gaegu']\n      },\n      active: function active() {\n        drawBars();\n      }\n    });\n\n    var drawBars = async function drawBars() {\n      // 1. Access data\n      var dataset = await d3.json('https://gw.alipayobjects.com/os/bmw-prod/8e7cfeb6-28e5-4e78-8d16-c08468360f5f.json');\n\n      var metricAccessor = function metricAccessor(d) {\n        return d.humidity;\n      };\n\n      var yAccessor = function yAccessor(d) {\n        return d.length;\n      }; // 2. Create chart dimensions\n\n\n      var width = 600;\n      var dimensions = {\n        width: width,\n        height: width * 0.6,\n        margin: {\n          top: 30,\n          right: 10,\n          bottom: 50,\n          left: 50\n        }\n      };\n      dimensions.boundedWidth = dimensions.width - dimensions.margin.left - dimensions.margin.right;\n      dimensions.boundedHeight = dimensions.height - dimensions.margin.top - dimensions.margin.bottom; // 3. Draw canvas\n\n      var wrapper = d3.select(canvas.document.documentElement // use GCanvas' document element instead of a real DOM\n      );\n      var bounds = wrapper.append('g').style('transform', \"translate(\".concat(dimensions.margin.left, \"px, \").concat(dimensions.margin.top, \"px)\")); // 4. Create scales\n\n      var xScale = d3.scaleLinear().domain(d3.extent(dataset, metricAccessor)).range([0, dimensions.boundedWidth]).nice();\n      var binsGenerator = d3.bin().domain(xScale.domain()).value(metricAccessor).thresholds(12);\n      var bins = binsGenerator(dataset);\n      var yScale = d3.scaleLinear().domain([0, d3.max(bins, yAccessor)]).range([dimensions.boundedHeight, 0]).nice(); // 5. Draw data\n\n      var binsGroup = bounds.append('g');\n      var binGroups = binsGroup.selectAll('g').data(bins).join('g').attr('class', 'bin');\n      var barPadding = 1;\n      var barRects = binGroups.append('rect').attr('x', function (d) {\n        return xScale(d.x0) + barPadding / 2;\n      }).attr('y', function (d) {\n        return yScale(yAccessor(d));\n      }).attr('width', function (d) {\n        return d3.max([0, xScale(d.x1) - xScale(d.x0) - barPadding]);\n      }).attr('height', function (d) {\n        return dimensions.boundedHeight - yScale(yAccessor(d));\n      }).attr('fill', 'cornflowerblue').on('mouseenter', function (e) {\n        d3.select(e.target).attr('fill', 'red');\n      }).on('mouseleave', function (e) {\n        d3.select(e.target).attr('fill', 'cornflowerblue');\n      });\n      var barText = binGroups.filter(yAccessor).append('text').attr('x', function (d) {\n        return xScale(d.x0) + (xScale(d.x1) - xScale(d.x0)) / 2;\n      }).attr('y', function (d) {\n        return yScale(yAccessor(d)) - 5;\n      }).text(yAccessor).attr('fill', 'darkgrey').style('text-anchor', 'middle').style('font-family', 'Gaegu').style('font-size', '12px');\n      var mean = d3.mean(dataset, metricAccessor);\n      var meanLine = bounds.append('line').attr('x1', xScale(mean)).attr('x2', xScale(mean)).attr('y1', -15).attr('y2', dimensions.boundedHeight).attr('stroke-width', 1).attr('stroke', 'maroon').attr('stroke-dasharray', '2px 4px');\n      var meanLabel = bounds.append('text').attr('x', xScale(mean)).attr('y', -20).text('mean').attr('fill', 'maroon').style('font-family', 'Gaegu').style('font-size', '12px').style('text-anchor', 'middle'); // 6. Draw peripherals\n\n      var xAxisGenerator = d3.axisBottom().scale(xScale);\n      var xAxis = bounds.append('g').call(xAxisGenerator).attr('transform', \"translateY(\".concat(dimensions.boundedHeight, \"px)\")).style('font-family', 'Gaegu').attr('fill', 'black');\n      var xAxisLabel = xAxis.append('text').attr('x', dimensions.boundedWidth / 2).attr('y', dimensions.margin.bottom - 10).attr('fill', 'black').style('font-family', 'Gaegu').style('font-size', '10px').text('Humidity').style('text-transform', 'capitalize');\n    };\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n});"},{"relativePath":"plugins/demo/skottie.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/plugins/demo/skottie.js","order":0,"filename":"skottie.js","title":{"zh":"使用 Skottie 播放 Lottie 动画","en":"Use Skottie playing Lottie animations"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*_usaTqSm6vYAAAAAAAAAAAAAARQnAQ","source":"import { Canvas } from '@antv/g';\nimport { Renderer } from '@antv/g-canvaskit';\n\n/**\n * Skottie is a performant, secure native player for JSON animations derived from the Bodymovin plugin for After Effects.\n * @see https://skia.org/docs/user/modules/skottie/\n */\n\nconst canvaskitRenderer = new Renderer({\n  wasmDir: '/',\n});\nconst plugin = canvaskitRenderer.getPlugin('canvaskit-renderer');\n\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvaskitRenderer,\n});\n\n(async () => {\n  const cdn = 'https://storage.googleapis.com/skia-cdn/misc/';\n\n  const [\n    _,\n    legoJSON,\n    confettiJSON,\n    drinkJSON,\n    multiframeJSON,\n    flightGif,\n    onboardingJSON,\n    twitterJSON,\n  ] = await Promise.all([\n    canvas.ready,\n    fetch(cdn + 'lego_loader.json').then((response) => response.text()),\n    fetch(cdn + 'confetti.json').then((response) => response.text()),\n    fetch(cdn + 'drinks.json').then((response) => response.text()),\n    fetch(cdn + 'skottie_sample_multiframe.json').then((response) => response.text()),\n    fetch(cdn + 'flightAnim.gif').then((response) => response.arrayBuffer()),\n    fetch(cdn + 'onboarding.json').then((response) => response.text()),\n    fetch('/twitter-favorite-heart.json').then((response) => response.text()),\n  ]);\n\n  plugin.playAnimation('sk_legos', legoJSON, [-100, -100, 300, 300]);\n  plugin.playAnimation('sk_party', confettiJSON, [200, -100, 400, 400]);\n  plugin.playAnimation('sk_drink', drinkJSON, [0, 200, 200, 400]);\n  plugin.playAnimation('sk_animated_gif', multiframeJSON, [200, 200, 400, 400], {\n    'image_0.png': flightGif,\n  });\n  plugin.playAnimation('sk_onboarding', onboardingJSON, [350, 0, 550, 200]);\n  plugin.playAnimation('sk_twitter', twitterJSON, [400, 200, 600, 400]);\n})();\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvaskit\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvaskit\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvaskit);\n    global.skottie = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvaskit) {\n  \"use strict\";\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  /**\n   * Skottie is a performant, secure native player for JSON animations derived from the Bodymovin plugin for After Effects.\n   * @see https://skia.org/docs/user/modules/skottie/\n   */\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/'\n  });\n  var plugin = canvaskitRenderer.getPlugin('canvaskit-renderer');\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvaskitRenderer\n  });\n\n  (async function () {\n    var cdn = 'https://storage.googleapis.com/skia-cdn/misc/';\n\n    var _await$Promise$all = await Promise.all([canvas.ready, fetch(cdn + 'lego_loader.json').then(function (response) {\n      return response.text();\n    }), fetch(cdn + 'confetti.json').then(function (response) {\n      return response.text();\n    }), fetch(cdn + 'drinks.json').then(function (response) {\n      return response.text();\n    }), fetch(cdn + 'skottie_sample_multiframe.json').then(function (response) {\n      return response.text();\n    }), fetch(cdn + 'flightAnim.gif').then(function (response) {\n      return response.arrayBuffer();\n    }), fetch(cdn + 'onboarding.json').then(function (response) {\n      return response.text();\n    }), fetch('/twitter-favorite-heart.json').then(function (response) {\n      return response.text();\n    })]),\n        _await$Promise$all2 = _slicedToArray(_await$Promise$all, 8),\n        _ = _await$Promise$all2[0],\n        legoJSON = _await$Promise$all2[1],\n        confettiJSON = _await$Promise$all2[2],\n        drinkJSON = _await$Promise$all2[3],\n        multiframeJSON = _await$Promise$all2[4],\n        flightGif = _await$Promise$all2[5],\n        onboardingJSON = _await$Promise$all2[6],\n        twitterJSON = _await$Promise$all2[7];\n\n    plugin.playAnimation('sk_legos', legoJSON, [-100, -100, 300, 300]);\n    plugin.playAnimation('sk_party', confettiJSON, [200, -100, 400, 400]);\n    plugin.playAnimation('sk_drink', drinkJSON, [0, 200, 200, 400]);\n    plugin.playAnimation('sk_animated_gif', multiframeJSON, [200, 200, 400, 400], {\n      'image_0.png': flightGif\n    });\n    plugin.playAnimation('sk_onboarding', onboardingJSON, [350, 0, 550, 200]);\n    plugin.playAnimation('sk_twitter', twitterJSON, [400, 200, 600, 400]);\n  })();\n});"},{"relativePath":"plugins/demo/rough.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/plugins/demo/rough.js","order":5,"filename":"rough.js","title":{"zh":"使用 rough.js 手绘风格渲染","en":"Use rough.js"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*d4iiS5_3YVIAAAAAAAAAAAAAARQnAQ","source":"import {\n  Canvas,\n  CanvasEvent,\n  Circle,\n  convertToPath,\n  Ellipse,\n  Group,\n  Image,\n  Line,\n  Path,\n  Polygon,\n  Polyline,\n  Rect,\n  Text,\n} from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Plugin as PluginRoughCanvasRenderer } from '@antv/g-plugin-rough-canvas-renderer';\nimport { Plugin as PluginRoughSVGRenderer } from '@antv/g-plugin-rough-svg-renderer';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\nimport WebFont from 'webfontloader';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\ncanvasRenderer.registerPlugin(new PluginRoughCanvasRenderer());\nconst svgRenderer = new SVGRenderer();\nsvgRenderer.registerPlugin(new PluginRoughSVGRenderer());\n\n// create a canvas & use `g-canvas`\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  /**\n  solarSystem\n    |    |\n    |   sun\n    |\n  earthOrbit\n    |    |\n    |  earth\n    |\n    moonOrbit\n        |\n      moon\n  */\n  const solarSystem = new Group({\n    id: 'solarSystem',\n  });\n  const earthOrbit = new Group({\n    id: 'earthOrbit',\n  });\n  const moonOrbit = new Group({\n    id: 'moonOrbit',\n  });\n\n  const sun = new Circle({\n    id: 'sun',\n    style: {\n      r: 100,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n    },\n  });\n  const earth = new Circle({\n    id: 'earth',\n    style: {\n      r: 50,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n    },\n  });\n  const moon = new Circle({\n    id: 'moon',\n    style: {\n      r: 25,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n    },\n  });\n\n  solarSystem.appendChild(sun);\n  solarSystem.appendChild(earthOrbit);\n  earthOrbit.appendChild(earth);\n  earthOrbit.appendChild(moonOrbit);\n  moonOrbit.appendChild(moon);\n\n  solarSystem.setPosition(300, 250);\n  earthOrbit.translate(100, 0);\n  moonOrbit.translate(100, 0);\n\n  canvas.appendChild(solarSystem);\n\n  /**\n   * Ellipse\n   */\n  const ellipse = new Ellipse({\n    style: {\n      cx: 150,\n      cy: 100,\n      rx: 25,\n      ry: 15,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n      cursor: 'pointer',\n    },\n  });\n  canvas.appendChild(ellipse);\n\n  /**\n   * Rect\n   */\n  const rect = new Rect({\n    style: {\n      x: 50,\n      y: 50,\n      width: 50,\n      height: 50,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n      bowing: 4,\n      cursor: 'pointer',\n    },\n  });\n  canvas.appendChild(rect);\n  rect.addEventListener('pointerenter', function () {\n    rect.style.fill = 'yellow';\n  });\n  rect.addEventListener('pointerleave', function () {\n    rect.style.fill = '#1890FF';\n  });\n\n  /**\n   * Line\n   */\n  const line = new Line({\n    style: {\n      x1: 50,\n      y1: 120,\n      x2: 50,\n      y2: 200,\n      stroke: '#F04864',\n      lineWidth: 4,\n      cursor: 'pointer',\n    },\n  });\n  canvas.appendChild(line);\n\n  /**\n   * Polyline\n   */\n  const polyline = new Polyline({\n    style: {\n      points: [\n        [50, 250],\n        [50, 300],\n        [100, 300],\n        [100, 350],\n      ],\n      stroke: '#F04864',\n      lineWidth: 4,\n      cursor: 'pointer',\n    },\n  });\n  canvas.appendChild(polyline);\n\n  /**\n   * Polygon\n   */\n  const polygon = new Polygon({\n    style: {\n      points: [\n        [50, 400],\n        [100, 400],\n        [100, 450],\n      ],\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n      cursor: 'pointer',\n    },\n  });\n  canvas.appendChild(polygon);\n\n  /**\n   * Path\n   */\n  const rectPath = convertToPath(\n    new Rect({\n      style: {\n        x: 100,\n        y: 0,\n        width: 200,\n        height: 100,\n        transformOrigin: 'center',\n      },\n    }),\n  );\n  const starPath = new Path({\n    style: {\n      path: 'M301.113,12.011l99.25,179.996l201.864,38.778L461.706,380.808l25.508,203.958l-186.101-87.287L115.01,584.766l25.507-203.958L0,230.785l201.86-38.778L301.113,12.011',\n    },\n  });\n  starPath.translate(200, 0);\n  starPath.scale(0.2);\n  const pathG = new Path({\n    style: {\n      path: rectPath,\n      lineWidth: 2,\n      cursor: 'pointer',\n    },\n  });\n  canvas.appendChild(pathG);\n  pathG.animate(\n    [\n      { path: rectPath, stroke: '#F04864', fill: 'blue' },\n      { path: convertToPath(starPath), stroke: 'blue', fill: '#F04864' },\n    ],\n    {\n      duration: 2500,\n      easing: 'ease',\n      iterations: Infinity,\n      direction: 'alternate',\n    },\n  );\n  pathG.translate(300, 0);\n\n  /**\n   * Text\n   */\n  WebFont.load({\n    google: {\n      families: ['Gaegu'],\n    },\n    active: () => {\n      const text = new Text({\n        style: {\n          x: 100,\n          y: 450,\n          fontFamily: 'Gaegu',\n          text: 'Almost before we knew it, we had left the ground.',\n          fontSize: 30,\n          fill: '#1890FF',\n          stroke: '#F04864',\n          lineWidth: 5,\n          cursor: 'pointer',\n        },\n      });\n      canvas.appendChild(text);\n    },\n  });\n\n  const image = new Image({\n    style: {\n      x: 90,\n      y: 130,\n      width: 100,\n      height: 100,\n      img: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ',\n    },\n  });\n  canvas.appendChild(image);\n\n  // stats\n  const stats = new Stats();\n  stats.showPanel(0);\n  const $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  const $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n    if (stats) {\n      stats.update();\n    }\n\n    solarSystem.rotateLocal(1);\n    earthOrbit.rotateLocal(2);\n  });\n\n  // GUI\n  const gui = new lil.GUI({ autoPlace: false });\n  $wrapper.appendChild(gui.domElement);\n\n  const rendererFolder = gui.addFolder('renderer');\n  const rendererConfig = {\n    renderer: 'canvas',\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg']).onChange((renderer) => {\n    canvas.setRenderer(renderer === 'canvas' ? canvasRenderer : svgRenderer);\n  });\n  rendererFolder.open();\n\n  const sunFolder = gui.addFolder('sun');\n  const sunConfig = {\n    r: 100,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 4,\n    visibility: true,\n    'z-index': 0,\n    opacity: 1,\n    shadowColor: '#fff',\n    shadowBlur: 0,\n    shadowOffsetX: 0,\n    shadowOffsetY: 0,\n    fillStyle: 'hachure',\n    fillWeight: 4 / 2,\n    hachureAngle: -41,\n    hachureGap: 4 * 4,\n  };\n  sunFolder.add(sunConfig, 'r', 50, 200).onChange((r) => {\n    sun.style.r = r;\n  });\n  sunFolder.add(sunConfig, 'opacity', 0, 1).onChange((opacity) => {\n    sun.style.opacity = opacity;\n  });\n  sunFolder.addColor(sunConfig, 'fill').onChange((color) => {\n    sun.style.fill = color;\n  });\n  sunFolder.addColor(sunConfig, 'stroke').onChange((color) => {\n    sun.style.stroke = color;\n  });\n  sunFolder.addColor(sunConfig, 'shadowColor').onChange((color) => {\n    sun.style.shadowColor = color;\n  });\n  sunFolder.add(sunConfig, 'shadowBlur', 0, 100).onChange((shadowBlur) => {\n    sun.style.shadowBlur = shadowBlur;\n  });\n  sunFolder.add(sunConfig, 'shadowOffsetX', -50, 50).onChange((shadowOffsetX) => {\n    sun.style.shadowOffsetX = shadowOffsetX;\n  });\n  sunFolder.add(sunConfig, 'shadowOffsetY', -50, 50).onChange((shadowOffsetY) => {\n    sun.style.shadowOffsetY = shadowOffsetY;\n  });\n  sunFolder.add(sunConfig, 'lineWidth', 1, 20).onChange((lineWidth) => {\n    sun.style.lineWidth = lineWidth;\n  });\n  sunFolder.add(sunConfig, 'visibility').onChange((visible) => {\n    if (visible) {\n      sun.show();\n    } else {\n      sun.hide();\n    }\n  });\n  sunFolder.add(sunConfig, 'z-index', 0, 100).onChange((zIndex) => {\n    sun.setZIndex(zIndex);\n  });\n  sunFolder\n    .add(sunConfig, 'fillStyle', [\n      'hachure',\n      'solid',\n      'zigzag',\n      'cross-hatch',\n      'dots',\n      'dashed',\n      'zigzag-line',\n    ])\n    .onChange((fillStyle) => {\n      sun.style.fillStyle = fillStyle;\n    });\n  sunFolder.add(sunConfig, 'fillWeight', 0, 20).onChange((fillWeight) => {\n    sun.style.fillWeight = fillWeight;\n  });\n  sunFolder.add(sunConfig, 'hachureAngle', -50, 50).onChange((hachureAngle) => {\n    sun.style.hachureAngle = hachureAngle;\n  });\n  sunFolder.add(sunConfig, 'hachureGap', 0, 20).onChange((hachureGap) => {\n    sun.style.hachureAngle = hachureGap;\n  });\n  sunFolder.open();\n});\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-plugin-rough-canvas-renderer\", \"@antv/g-plugin-rough-svg-renderer\", \"@antv/g-svg\", \"lil-gui\", \"stats.js\", \"webfontloader\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-plugin-rough-canvas-renderer\"), require(\"@antv/g-plugin-rough-svg-renderer\"), require(\"@antv/g-svg\"), require(\"lil-gui\"), require(\"stats.js\"), require(\"webfontloader\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gPluginRoughCanvasRenderer, global.gPluginRoughSvgRenderer, global.gSvg, global.lilGui, global.stats, global.webfontloader);\n    global.rough = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gPluginRoughCanvasRenderer, _gPluginRoughSvgRenderer, _gSvg, lil, _stats, _webfontloader) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n  _webfontloader = _interopRequireDefault(_webfontloader);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  canvasRenderer.registerPlugin(new _gPluginRoughCanvasRenderer.Plugin());\n  var svgRenderer = new _gSvg.Renderer();\n  svgRenderer.registerPlugin(new _gPluginRoughSvgRenderer.Plugin()); // create a canvas & use `g-canvas`\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    /**\n    solarSystem\n      |    |\n      |   sun\n      |\n    earthOrbit\n      |    |\n      |  earth\n      |\n      moonOrbit\n          |\n        moon\n    */\n    var solarSystem = new _g.Group({\n      id: 'solarSystem'\n    });\n    var earthOrbit = new _g.Group({\n      id: 'earthOrbit'\n    });\n    var moonOrbit = new _g.Group({\n      id: 'moonOrbit'\n    });\n    var sun = new _g.Circle({\n      id: 'sun',\n      style: {\n        r: 100,\n        fill: '#1890FF',\n        stroke: '#F04864',\n        lineWidth: 4\n      }\n    });\n    var earth = new _g.Circle({\n      id: 'earth',\n      style: {\n        r: 50,\n        fill: '#1890FF',\n        stroke: '#F04864',\n        lineWidth: 4\n      }\n    });\n    var moon = new _g.Circle({\n      id: 'moon',\n      style: {\n        r: 25,\n        fill: '#1890FF',\n        stroke: '#F04864',\n        lineWidth: 4\n      }\n    });\n    solarSystem.appendChild(sun);\n    solarSystem.appendChild(earthOrbit);\n    earthOrbit.appendChild(earth);\n    earthOrbit.appendChild(moonOrbit);\n    moonOrbit.appendChild(moon);\n    solarSystem.setPosition(300, 250);\n    earthOrbit.translate(100, 0);\n    moonOrbit.translate(100, 0);\n    canvas.appendChild(solarSystem);\n    /**\n     * Ellipse\n     */\n\n    var ellipse = new _g.Ellipse({\n      style: {\n        cx: 150,\n        cy: 100,\n        rx: 25,\n        ry: 15,\n        fill: '#1890FF',\n        stroke: '#F04864',\n        lineWidth: 4,\n        cursor: 'pointer'\n      }\n    });\n    canvas.appendChild(ellipse);\n    /**\n     * Rect\n     */\n\n    var rect = new _g.Rect({\n      style: {\n        x: 50,\n        y: 50,\n        width: 50,\n        height: 50,\n        fill: '#1890FF',\n        stroke: '#F04864',\n        lineWidth: 4,\n        bowing: 4,\n        cursor: 'pointer'\n      }\n    });\n    canvas.appendChild(rect);\n    rect.addEventListener('pointerenter', function () {\n      rect.style.fill = 'yellow';\n    });\n    rect.addEventListener('pointerleave', function () {\n      rect.style.fill = '#1890FF';\n    });\n    /**\n     * Line\n     */\n\n    var line = new _g.Line({\n      style: {\n        x1: 50,\n        y1: 120,\n        x2: 50,\n        y2: 200,\n        stroke: '#F04864',\n        lineWidth: 4,\n        cursor: 'pointer'\n      }\n    });\n    canvas.appendChild(line);\n    /**\n     * Polyline\n     */\n\n    var polyline = new _g.Polyline({\n      style: {\n        points: [[50, 250], [50, 300], [100, 300], [100, 350]],\n        stroke: '#F04864',\n        lineWidth: 4,\n        cursor: 'pointer'\n      }\n    });\n    canvas.appendChild(polyline);\n    /**\n     * Polygon\n     */\n\n    var polygon = new _g.Polygon({\n      style: {\n        points: [[50, 400], [100, 400], [100, 450]],\n        fill: '#1890FF',\n        stroke: '#F04864',\n        lineWidth: 4,\n        cursor: 'pointer'\n      }\n    });\n    canvas.appendChild(polygon);\n    /**\n     * Path\n     */\n\n    var rectPath = (0, _g.convertToPath)(new _g.Rect({\n      style: {\n        x: 100,\n        y: 0,\n        width: 200,\n        height: 100,\n        transformOrigin: 'center'\n      }\n    }));\n    var starPath = new _g.Path({\n      style: {\n        path: 'M301.113,12.011l99.25,179.996l201.864,38.778L461.706,380.808l25.508,203.958l-186.101-87.287L115.01,584.766l25.507-203.958L0,230.785l201.86-38.778L301.113,12.011'\n      }\n    });\n    starPath.translate(200, 0);\n    starPath.scale(0.2);\n    var pathG = new _g.Path({\n      style: {\n        path: rectPath,\n        lineWidth: 2,\n        cursor: 'pointer'\n      }\n    });\n    canvas.appendChild(pathG);\n    pathG.animate([{\n      path: rectPath,\n      stroke: '#F04864',\n      fill: 'blue'\n    }, {\n      path: (0, _g.convertToPath)(starPath),\n      stroke: 'blue',\n      fill: '#F04864'\n    }], {\n      duration: 2500,\n      easing: 'ease',\n      iterations: Infinity,\n      direction: 'alternate'\n    });\n    pathG.translate(300, 0);\n    /**\n     * Text\n     */\n\n    _webfontloader.default.load({\n      google: {\n        families: ['Gaegu']\n      },\n      active: function active() {\n        var text = new _g.Text({\n          style: {\n            x: 100,\n            y: 450,\n            fontFamily: 'Gaegu',\n            text: 'Almost before we knew it, we had left the ground.',\n            fontSize: 30,\n            fill: '#1890FF',\n            stroke: '#F04864',\n            lineWidth: 5,\n            cursor: 'pointer'\n          }\n        });\n        canvas.appendChild(text);\n      }\n    });\n\n    var image = new _g.Image({\n      style: {\n        x: 90,\n        y: 130,\n        width: 100,\n        height: 100,\n        img: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ'\n      }\n    });\n    canvas.appendChild(image); // stats\n\n    var stats = new _stats.default();\n    stats.showPanel(0);\n    var $stats = stats.dom;\n    $stats.style.position = 'absolute';\n    $stats.style.left = '0px';\n    $stats.style.top = '0px';\n    var $wrapper = document.getElementById('container');\n    $wrapper.appendChild($stats);\n    canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n      if (stats) {\n        stats.update();\n      }\n\n      solarSystem.rotateLocal(1);\n      earthOrbit.rotateLocal(2);\n    }); // GUI\n\n    var gui = new lil.GUI({\n      autoPlace: false\n    });\n    $wrapper.appendChild(gui.domElement);\n    var rendererFolder = gui.addFolder('renderer');\n    var rendererConfig = {\n      renderer: 'canvas'\n    };\n    rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg']).onChange(function (renderer) {\n      canvas.setRenderer(renderer === 'canvas' ? canvasRenderer : svgRenderer);\n    });\n    rendererFolder.open();\n    var sunFolder = gui.addFolder('sun');\n    var sunConfig = {\n      r: 100,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n      visibility: true,\n      'z-index': 0,\n      opacity: 1,\n      shadowColor: '#fff',\n      shadowBlur: 0,\n      shadowOffsetX: 0,\n      shadowOffsetY: 0,\n      fillStyle: 'hachure',\n      fillWeight: 4 / 2,\n      hachureAngle: -41,\n      hachureGap: 4 * 4\n    };\n    sunFolder.add(sunConfig, 'r', 50, 200).onChange(function (r) {\n      sun.style.r = r;\n    });\n    sunFolder.add(sunConfig, 'opacity', 0, 1).onChange(function (opacity) {\n      sun.style.opacity = opacity;\n    });\n    sunFolder.addColor(sunConfig, 'fill').onChange(function (color) {\n      sun.style.fill = color;\n    });\n    sunFolder.addColor(sunConfig, 'stroke').onChange(function (color) {\n      sun.style.stroke = color;\n    });\n    sunFolder.addColor(sunConfig, 'shadowColor').onChange(function (color) {\n      sun.style.shadowColor = color;\n    });\n    sunFolder.add(sunConfig, 'shadowBlur', 0, 100).onChange(function (shadowBlur) {\n      sun.style.shadowBlur = shadowBlur;\n    });\n    sunFolder.add(sunConfig, 'shadowOffsetX', -50, 50).onChange(function (shadowOffsetX) {\n      sun.style.shadowOffsetX = shadowOffsetX;\n    });\n    sunFolder.add(sunConfig, 'shadowOffsetY', -50, 50).onChange(function (shadowOffsetY) {\n      sun.style.shadowOffsetY = shadowOffsetY;\n    });\n    sunFolder.add(sunConfig, 'lineWidth', 1, 20).onChange(function (lineWidth) {\n      sun.style.lineWidth = lineWidth;\n    });\n    sunFolder.add(sunConfig, 'visibility').onChange(function (visible) {\n      if (visible) {\n        sun.show();\n      } else {\n        sun.hide();\n      }\n    });\n    sunFolder.add(sunConfig, 'z-index', 0, 100).onChange(function (zIndex) {\n      sun.setZIndex(zIndex);\n    });\n    sunFolder.add(sunConfig, 'fillStyle', ['hachure', 'solid', 'zigzag', 'cross-hatch', 'dots', 'dashed', 'zigzag-line']).onChange(function (fillStyle) {\n      sun.style.fillStyle = fillStyle;\n    });\n    sunFolder.add(sunConfig, 'fillWeight', 0, 20).onChange(function (fillWeight) {\n      sun.style.fillWeight = fillWeight;\n    });\n    sunFolder.add(sunConfig, 'hachureAngle', -50, 50).onChange(function (hachureAngle) {\n      sun.style.hachureAngle = hachureAngle;\n    });\n    sunFolder.add(sunConfig, 'hachureGap', 0, 20).onChange(function (hachureGap) {\n      sun.style.hachureAngle = hachureGap;\n    });\n    sunFolder.open();\n  });\n});"},{"relativePath":"plugins/demo/yoga-child.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/plugins/demo/yoga-child.js","order":16,"filename":"yoga-child.js","title":{"zh":"使用 Yoga 排版引擎 - 子元素配置","en":"Use Yoga layout engine - child element"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*2zZaS6PlrOcAAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent, Circle, Image, Polygon, Rect, Text } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Plugin as PluginYoga } from '@antv/g-plugin-yoga';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\nconst canvasRenderer = new CanvasRenderer();\nconst plugin = new PluginYoga();\ncanvasRenderer.registerPlugin(plugin);\n\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  const root = new Rect({\n    id: 'root',\n    style: {\n      fill: '#C6E5FF',\n      width: 500,\n      height: 300,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      x: 50,\n      y: 50,\n    },\n  });\n  canvas.appendChild(root);\n\n  const node1 = new Rect({\n    id: 'node1',\n    style: {\n      fill: 'white',\n      stroke: 'grey',\n      lineWidth: 1,\n      opacity: 0.8,\n      width: 100,\n      height: 100,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n  });\n  node1.appendChild(\n    new Text({\n      id: 'node1-text',\n      style: {\n        fontFamily: 'PingFang SC',\n        fontSize: 32,\n        fill: '#1890FF',\n        text: '1',\n      },\n    }),\n  );\n  const node2 = new Rect({\n    id: 'node2',\n    style: {\n      fill: 'white',\n      stroke: 'grey',\n      lineWidth: 1,\n      opacity: 0.8,\n      width: 100,\n      height: 100,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n  });\n  node2.appendChild(\n    new Text({\n      id: 'node2-text',\n      style: {\n        fontFamily: 'PingFang SC',\n        fontSize: 32,\n        fill: '#1890FF',\n        text: '2',\n      },\n    }),\n  );\n  const image = new Image({\n    style: {\n      width: 100,\n      height: 100,\n      img: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ',\n    },\n  });\n  const polygon = new Polygon({\n    style: {\n      points: [\n        [20, 10],\n        [40, 10],\n        [40 + 20 * Math.sin(Math.PI / 6), 10 + 20 * Math.cos(Math.PI / 6)],\n        [40, 10 + 20 * Math.cos(Math.PI / 6) * 2],\n        [20, 10 + 20 * Math.cos(Math.PI / 6) * 2],\n        [20 - 20 * Math.sin(Math.PI / 6), 10 + 20 * Math.cos(Math.PI / 6)],\n      ],\n      fill: '#C6E5FF',\n      stroke: '#1890FF',\n      lineWidth: 2,\n    },\n  });\n  const circle = new Circle({\n    style: {\n      r: 20,\n      fill: '#1890FF',\n    },\n  });\n\n  root.appendChild(node1);\n  root.appendChild(node2);\n  root.appendChild(image);\n  root.appendChild(polygon);\n  root.appendChild(circle);\n\n  // stats\n  const stats = new Stats();\n  stats.showPanel(0);\n  const $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  const $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n    if (stats) {\n      stats.update();\n    }\n  });\n\n  // GUI\n  const gui = new lil.GUI({ autoPlace: false });\n  $wrapper.appendChild(gui.domElement);\n\n  const layoutFolder = gui.addFolder(\"Node1's Layout\");\n  // const flexFolder = gui.addFolder('Flex');\n  const config = {\n    // flexDirection: 'row',\n    // flexWrap: 'no-wrap',\n    position: 'relative',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    'top(percent)': 0,\n    'right(percent)': 0,\n    'bottom(percent)': 0,\n    'left(percent)': 0,\n    width: 100,\n    height: 100,\n    'width(percent)': 0,\n    'height(percent)': 0,\n    marginTop: 0,\n    marginRight: 0,\n    marginBottom: 0,\n    marginLeft: 0,\n    'marginTop(percent)': 0,\n    'marginRight(percent)': 0,\n    'marginBottom(percent)': 0,\n    'marginLeft(percent)': 0,\n    paddingTop: 0,\n    paddingRight: 0,\n    paddingBottom: 0,\n    paddingLeft: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n  };\n  layoutFolder.add(config, 'position', ['relative', 'absolute']).onChange((position) => {\n    node1.style.position = position;\n  });\n  layoutFolder.add(config, 'top', -50, 50).onChange((top) => {\n    node1.style.top = top;\n  });\n  layoutFolder.add(config, 'right', -50, 50).onChange((right) => {\n    node1.style.right = right;\n  });\n  layoutFolder.add(config, 'bottom', -50, 50).onChange((bottom) => {\n    node1.style.bottom = bottom;\n  });\n  layoutFolder.add(config, 'left', -50, 50).onChange((left) => {\n    node1.style.left = left;\n  });\n  layoutFolder.add(config, 'top(percent)', -100, 100).onChange((topPercent) => {\n    node1.style.top = `${topPercent}%`;\n  });\n  layoutFolder.add(config, 'right(percent)', -100, 100).onChange((rightPercent) => {\n    node1.style.right = `${rightPercent}%`;\n  });\n  layoutFolder.add(config, 'bottom(percent)', -100, 100).onChange((bottomPercent) => {\n    node1.style.bottom = `${bottomPercent}%`;\n  });\n  layoutFolder.add(config, 'left(percent)', -100, 100).onChange((leftPercent) => {\n    node1.style.left = `${leftPercent}%`;\n  });\n  layoutFolder\n    .add(config, 'justifyContent', [\n      'flex-start',\n      'flex-end',\n      'center',\n      'space-between',\n      'space-around',\n      'space-evenly',\n    ])\n    .onChange((justifyContent) => {\n      node1.style.justifyContent = justifyContent;\n    });\n  layoutFolder\n    .add(config, 'alignItems', [\n      'stretch',\n      'auto',\n      'baseline',\n      'center',\n      'flex-start',\n      'flex-end',\n      'space-between',\n      'space-around',\n    ])\n    .onChange((alignItems) => {\n      node1.style.alignItems = alignItems;\n    });\n  layoutFolder.add(config, 'width', 50, 200).onChange((width) => {\n    node1.style.width = width;\n  });\n  layoutFolder.add(config, 'height', 50, 200).onChange((height) => {\n    node1.style.height = height;\n  });\n  layoutFolder.add(config, 'width(percent)', 0, 100).onChange((widthPercent) => {\n    node1.style.width = `${widthPercent}%`;\n  });\n  layoutFolder.add(config, 'height(percent)', 0, 100).onChange((heightPercent) => {\n    node1.style.height = `${heightPercent}%`;\n  });\n  layoutFolder.add(config, 'marginTop', 0, 50).onChange((marginTop) => {\n    node1.style.marginTop = marginTop;\n  });\n  layoutFolder.add(config, 'marginRight', 0, 50).onChange((marginRight) => {\n    node1.style.marginRight = marginRight;\n  });\n  layoutFolder.add(config, 'marginBottom', 0, 50).onChange((marginBottom) => {\n    node1.style.marginBottom = marginBottom;\n  });\n  layoutFolder.add(config, 'marginLeft', 0, 50).onChange((marginLeft) => {\n    node1.style.marginLeft = marginLeft;\n  });\n  layoutFolder.add(config, 'marginTop(percent)', 0, 100).onChange((marginTop) => {\n    node1.style.marginTop = `${marginTop}%`;\n  });\n  layoutFolder.add(config, 'marginRight(percent)', 0, 100).onChange((marginRight) => {\n    node1.style.marginRight = `${marginRight}%`;\n  });\n  layoutFolder.add(config, 'marginBottom(percent)', 0, 100).onChange((marginBottom) => {\n    node1.style.marginBottom = `${marginBottom}%`;\n  });\n  layoutFolder.add(config, 'marginLeft(percent)', 0, 100).onChange((marginLeft) => {\n    node1.style.marginLeft = `${marginLeft}%`;\n  });\n  layoutFolder.add(config, 'paddingTop', 0, 50).onChange((paddingTop) => {\n    node1.style.paddingTop = paddingTop;\n  });\n  layoutFolder.add(config, 'paddingRight', 0, 50).onChange((paddingRight) => {\n    node1.style.paddingRight = paddingRight;\n  });\n  layoutFolder.add(config, 'paddingBottom', 0, 50).onChange((paddingBottom) => {\n    node1.style.paddingBottom = paddingBottom;\n  });\n  layoutFolder.add(config, 'paddingLeft', 0, 50).onChange((paddingLeft) => {\n    node1.style.paddingLeft = paddingLeft;\n  });\n});\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-plugin-yoga\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-plugin-yoga\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gPluginYoga, global.lilGui, global.stats);\n    global.yogaChild = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gPluginYoga, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  var canvasRenderer = new _gCanvas.Renderer();\n  var plugin = new _gPluginYoga.Plugin();\n  canvasRenderer.registerPlugin(plugin);\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    var root = new _g.Rect({\n      id: 'root',\n      style: {\n        fill: '#C6E5FF',\n        width: 500,\n        height: 300,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        x: 50,\n        y: 50\n      }\n    });\n    canvas.appendChild(root);\n    var node1 = new _g.Rect({\n      id: 'node1',\n      style: {\n        fill: 'white',\n        stroke: 'grey',\n        lineWidth: 1,\n        opacity: 0.8,\n        width: 100,\n        height: 100,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      }\n    });\n    node1.appendChild(new _g.Text({\n      id: 'node1-text',\n      style: {\n        fontFamily: 'PingFang SC',\n        fontSize: 32,\n        fill: '#1890FF',\n        text: '1'\n      }\n    }));\n    var node2 = new _g.Rect({\n      id: 'node2',\n      style: {\n        fill: 'white',\n        stroke: 'grey',\n        lineWidth: 1,\n        opacity: 0.8,\n        width: 100,\n        height: 100,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      }\n    });\n    node2.appendChild(new _g.Text({\n      id: 'node2-text',\n      style: {\n        fontFamily: 'PingFang SC',\n        fontSize: 32,\n        fill: '#1890FF',\n        text: '2'\n      }\n    }));\n    var image = new _g.Image({\n      style: {\n        width: 100,\n        height: 100,\n        img: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ'\n      }\n    });\n    var polygon = new _g.Polygon({\n      style: {\n        points: [[20, 10], [40, 10], [40 + 20 * Math.sin(Math.PI / 6), 10 + 20 * Math.cos(Math.PI / 6)], [40, 10 + 20 * Math.cos(Math.PI / 6) * 2], [20, 10 + 20 * Math.cos(Math.PI / 6) * 2], [20 - 20 * Math.sin(Math.PI / 6), 10 + 20 * Math.cos(Math.PI / 6)]],\n        fill: '#C6E5FF',\n        stroke: '#1890FF',\n        lineWidth: 2\n      }\n    });\n    var circle = new _g.Circle({\n      style: {\n        r: 20,\n        fill: '#1890FF'\n      }\n    });\n    root.appendChild(node1);\n    root.appendChild(node2);\n    root.appendChild(image);\n    root.appendChild(polygon);\n    root.appendChild(circle); // stats\n\n    var stats = new _stats.default();\n    stats.showPanel(0);\n    var $stats = stats.dom;\n    $stats.style.position = 'absolute';\n    $stats.style.left = '0px';\n    $stats.style.top = '0px';\n    var $wrapper = document.getElementById('container');\n    $wrapper.appendChild($stats);\n    canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n      if (stats) {\n        stats.update();\n      }\n    }); // GUI\n\n    var gui = new lil.GUI({\n      autoPlace: false\n    });\n    $wrapper.appendChild(gui.domElement);\n    var layoutFolder = gui.addFolder(\"Node1's Layout\"); // const flexFolder = gui.addFolder('Flex');\n\n    var config = {\n      // flexDirection: 'row',\n      // flexWrap: 'no-wrap',\n      position: 'relative',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      'top(percent)': 0,\n      'right(percent)': 0,\n      'bottom(percent)': 0,\n      'left(percent)': 0,\n      width: 100,\n      height: 100,\n      'width(percent)': 0,\n      'height(percent)': 0,\n      marginTop: 0,\n      marginRight: 0,\n      marginBottom: 0,\n      marginLeft: 0,\n      'marginTop(percent)': 0,\n      'marginRight(percent)': 0,\n      'marginBottom(percent)': 0,\n      'marginLeft(percent)': 0,\n      paddingTop: 0,\n      paddingRight: 0,\n      paddingBottom: 0,\n      paddingLeft: 0,\n      justifyContent: 'center',\n      alignItems: 'center'\n    };\n    layoutFolder.add(config, 'position', ['relative', 'absolute']).onChange(function (position) {\n      node1.style.position = position;\n    });\n    layoutFolder.add(config, 'top', -50, 50).onChange(function (top) {\n      node1.style.top = top;\n    });\n    layoutFolder.add(config, 'right', -50, 50).onChange(function (right) {\n      node1.style.right = right;\n    });\n    layoutFolder.add(config, 'bottom', -50, 50).onChange(function (bottom) {\n      node1.style.bottom = bottom;\n    });\n    layoutFolder.add(config, 'left', -50, 50).onChange(function (left) {\n      node1.style.left = left;\n    });\n    layoutFolder.add(config, 'top(percent)', -100, 100).onChange(function (topPercent) {\n      node1.style.top = \"\".concat(topPercent, \"%\");\n    });\n    layoutFolder.add(config, 'right(percent)', -100, 100).onChange(function (rightPercent) {\n      node1.style.right = \"\".concat(rightPercent, \"%\");\n    });\n    layoutFolder.add(config, 'bottom(percent)', -100, 100).onChange(function (bottomPercent) {\n      node1.style.bottom = \"\".concat(bottomPercent, \"%\");\n    });\n    layoutFolder.add(config, 'left(percent)', -100, 100).onChange(function (leftPercent) {\n      node1.style.left = \"\".concat(leftPercent, \"%\");\n    });\n    layoutFolder.add(config, 'justifyContent', ['flex-start', 'flex-end', 'center', 'space-between', 'space-around', 'space-evenly']).onChange(function (justifyContent) {\n      node1.style.justifyContent = justifyContent;\n    });\n    layoutFolder.add(config, 'alignItems', ['stretch', 'auto', 'baseline', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']).onChange(function (alignItems) {\n      node1.style.alignItems = alignItems;\n    });\n    layoutFolder.add(config, 'width', 50, 200).onChange(function (width) {\n      node1.style.width = width;\n    });\n    layoutFolder.add(config, 'height', 50, 200).onChange(function (height) {\n      node1.style.height = height;\n    });\n    layoutFolder.add(config, 'width(percent)', 0, 100).onChange(function (widthPercent) {\n      node1.style.width = \"\".concat(widthPercent, \"%\");\n    });\n    layoutFolder.add(config, 'height(percent)', 0, 100).onChange(function (heightPercent) {\n      node1.style.height = \"\".concat(heightPercent, \"%\");\n    });\n    layoutFolder.add(config, 'marginTop', 0, 50).onChange(function (marginTop) {\n      node1.style.marginTop = marginTop;\n    });\n    layoutFolder.add(config, 'marginRight', 0, 50).onChange(function (marginRight) {\n      node1.style.marginRight = marginRight;\n    });\n    layoutFolder.add(config, 'marginBottom', 0, 50).onChange(function (marginBottom) {\n      node1.style.marginBottom = marginBottom;\n    });\n    layoutFolder.add(config, 'marginLeft', 0, 50).onChange(function (marginLeft) {\n      node1.style.marginLeft = marginLeft;\n    });\n    layoutFolder.add(config, 'marginTop(percent)', 0, 100).onChange(function (marginTop) {\n      node1.style.marginTop = \"\".concat(marginTop, \"%\");\n    });\n    layoutFolder.add(config, 'marginRight(percent)', 0, 100).onChange(function (marginRight) {\n      node1.style.marginRight = \"\".concat(marginRight, \"%\");\n    });\n    layoutFolder.add(config, 'marginBottom(percent)', 0, 100).onChange(function (marginBottom) {\n      node1.style.marginBottom = \"\".concat(marginBottom, \"%\");\n    });\n    layoutFolder.add(config, 'marginLeft(percent)', 0, 100).onChange(function (marginLeft) {\n      node1.style.marginLeft = \"\".concat(marginLeft, \"%\");\n    });\n    layoutFolder.add(config, 'paddingTop', 0, 50).onChange(function (paddingTop) {\n      node1.style.paddingTop = paddingTop;\n    });\n    layoutFolder.add(config, 'paddingRight', 0, 50).onChange(function (paddingRight) {\n      node1.style.paddingRight = paddingRight;\n    });\n    layoutFolder.add(config, 'paddingBottom', 0, 50).onChange(function (paddingBottom) {\n      node1.style.paddingBottom = paddingBottom;\n    });\n    layoutFolder.add(config, 'paddingLeft', 0, 50).onChange(function (paddingLeft) {\n      node1.style.paddingLeft = paddingLeft;\n    });\n  });\n});"},{"relativePath":"plugins/demo/yoga-available-space.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/plugins/demo/yoga-available-space.js","order":17,"filename":"yoga-available-space.js","title":{"zh":"使用 Yoga 排版引擎 - 可用空间","en":"Use Yoga layout engine - available space"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*fbvlTpdHR0IAAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent, Rect, Text } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Plugin as PluginYoga } from '@antv/g-plugin-yoga';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\nconst canvasRenderer = new CanvasRenderer();\nconst plugin = new PluginYoga();\ncanvasRenderer.registerPlugin(plugin);\n\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  const root = new Rect({\n    id: 'root',\n    style: {\n      fill: '#C6E5FF',\n      width: 500,\n      height: 300,\n      display: 'flex',\n      x: 50,\n      y: 50,\n    },\n  });\n  canvas.appendChild(root);\n\n  const node1 = new Rect({\n    id: 'node1',\n    style: {\n      fill: 'white',\n      stroke: 'grey',\n      lineWidth: 1,\n      opacity: 0.8,\n      width: 100,\n      height: 100,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexGrow: 1,\n    },\n  });\n  node1.appendChild(\n    new Text({\n      id: 'node1-text',\n      style: {\n        fontFamily: 'PingFang SC',\n        fontSize: 32,\n        fill: '#1890FF',\n        text: '1',\n      },\n    }),\n  );\n  const node2 = new Rect({\n    id: 'node2',\n    style: {\n      fill: 'white',\n      stroke: 'grey',\n      lineWidth: 1,\n      opacity: 0.8,\n      width: 100,\n      height: 100,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexGrow: 1,\n    },\n  });\n  node2.appendChild(\n    new Text({\n      id: 'node2-text',\n      style: {\n        fontFamily: 'PingFang SC',\n        fontSize: 32,\n        fill: '#1890FF',\n        text: '2',\n      },\n    }),\n  );\n\n  root.appendChild(node1);\n  root.appendChild(node2);\n\n  // stats\n  const stats = new Stats();\n  stats.showPanel(0);\n  const $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  const $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n    if (stats) {\n      stats.update();\n    }\n  });\n\n  // GUI\n  const gui = new lil.GUI({ autoPlace: false });\n  $wrapper.appendChild(gui.domElement);\n\n  const flexFolder1 = gui.addFolder(\"Node1's Flex\");\n  const config1 = {\n    flexGrow: 1,\n    flexShrink: 1,\n    maxWidth: 0,\n    minWidth: 0,\n    setMaxWidthNaN: () => {\n      node1.style.maxWidth = NaN;\n    },\n    setMinWidthNaN: () => {\n      node1.style.minWidth = NaN;\n    },\n  };\n  flexFolder1.add(config1, 'flexGrow', 0, 1).onChange((flexGrow) => {\n    node1.style.flexGrow = flexGrow;\n  });\n  flexFolder1.add(config1, 'flexShrink', 0, 1).onChange((flexShrink) => {\n    node1.style.flexShrink = flexShrink;\n  });\n  flexFolder1.add(config1, 'maxWidth', 0, 300).onChange((maxWidth) => {\n    node1.style.maxWidth = maxWidth;\n  });\n  flexFolder1.add(config1, 'setMaxWidthNaN').name('set maxWidth to NaN');\n  flexFolder1.add(config1, 'minWidth', 0, 300).onChange((minWidth) => {\n    node1.style.minWidth = minWidth;\n  });\n  flexFolder1.add(config1, 'setMinWidthNaN').name('set minWidth to NaN');\n\n  const flexFolder2 = gui.addFolder(\"Node2's Flex\");\n  const config2 = {\n    flexGrow: 1,\n    flexShrink: 1,\n    maxWidth: 0,\n    minWidth: 0,\n    setMaxWidthNaN: () => {\n      node2.style.maxWidth = NaN;\n    },\n    setMinWidthNaN: () => {\n      node2.style.minWidth = NaN;\n    },\n  };\n  flexFolder2.add(config2, 'flexGrow', 0, 1).onChange((flexGrow) => {\n    node2.style.flexGrow = flexGrow;\n  });\n  flexFolder2.add(config2, 'flexShrink', 0, 1).onChange((flexShrink) => {\n    node2.style.flexShrink = flexShrink;\n  });\n  flexFolder2.add(config2, 'maxWidth', 0, 300).onChange((maxWidth) => {\n    node2.style.maxWidth = maxWidth;\n  });\n  flexFolder2.add(config2, 'setMaxWidthNaN').name('set maxWidth to NaN');\n  flexFolder2.add(config2, 'minWidth', 0, 300).onChange((minWidth) => {\n    node2.style.minWidth = minWidth;\n  });\n  flexFolder2.add(config2, 'setMinWidthNaN').name('set minWidth to NaN');\n\n  const layoutConfig = {\n    width: 500,\n    height: 300,\n  };\n  const layoutFolder = gui.addFolder(\"Container's Layout\");\n  layoutFolder.add(layoutConfig, 'width', 100, 600).onChange((width) => {\n    root.style.width = width;\n  });\n  layoutFolder.add(layoutConfig, 'height', 200, 500).onChange((height) => {\n    root.style.height = height;\n  });\n});\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-plugin-yoga\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-plugin-yoga\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gPluginYoga, global.lilGui, global.stats);\n    global.yogaAvailableSpace = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gPluginYoga, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  var canvasRenderer = new _gCanvas.Renderer();\n  var plugin = new _gPluginYoga.Plugin();\n  canvasRenderer.registerPlugin(plugin);\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    var root = new _g.Rect({\n      id: 'root',\n      style: {\n        fill: '#C6E5FF',\n        width: 500,\n        height: 300,\n        display: 'flex',\n        x: 50,\n        y: 50\n      }\n    });\n    canvas.appendChild(root);\n    var node1 = new _g.Rect({\n      id: 'node1',\n      style: {\n        fill: 'white',\n        stroke: 'grey',\n        lineWidth: 1,\n        opacity: 0.8,\n        width: 100,\n        height: 100,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexGrow: 1\n      }\n    });\n    node1.appendChild(new _g.Text({\n      id: 'node1-text',\n      style: {\n        fontFamily: 'PingFang SC',\n        fontSize: 32,\n        fill: '#1890FF',\n        text: '1'\n      }\n    }));\n    var node2 = new _g.Rect({\n      id: 'node2',\n      style: {\n        fill: 'white',\n        stroke: 'grey',\n        lineWidth: 1,\n        opacity: 0.8,\n        width: 100,\n        height: 100,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexGrow: 1\n      }\n    });\n    node2.appendChild(new _g.Text({\n      id: 'node2-text',\n      style: {\n        fontFamily: 'PingFang SC',\n        fontSize: 32,\n        fill: '#1890FF',\n        text: '2'\n      }\n    }));\n    root.appendChild(node1);\n    root.appendChild(node2); // stats\n\n    var stats = new _stats.default();\n    stats.showPanel(0);\n    var $stats = stats.dom;\n    $stats.style.position = 'absolute';\n    $stats.style.left = '0px';\n    $stats.style.top = '0px';\n    var $wrapper = document.getElementById('container');\n    $wrapper.appendChild($stats);\n    canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n      if (stats) {\n        stats.update();\n      }\n    }); // GUI\n\n    var gui = new lil.GUI({\n      autoPlace: false\n    });\n    $wrapper.appendChild(gui.domElement);\n    var flexFolder1 = gui.addFolder(\"Node1's Flex\");\n    var config1 = {\n      flexGrow: 1,\n      flexShrink: 1,\n      maxWidth: 0,\n      minWidth: 0,\n      setMaxWidthNaN: function setMaxWidthNaN() {\n        node1.style.maxWidth = NaN;\n      },\n      setMinWidthNaN: function setMinWidthNaN() {\n        node1.style.minWidth = NaN;\n      }\n    };\n    flexFolder1.add(config1, 'flexGrow', 0, 1).onChange(function (flexGrow) {\n      node1.style.flexGrow = flexGrow;\n    });\n    flexFolder1.add(config1, 'flexShrink', 0, 1).onChange(function (flexShrink) {\n      node1.style.flexShrink = flexShrink;\n    });\n    flexFolder1.add(config1, 'maxWidth', 0, 300).onChange(function (maxWidth) {\n      node1.style.maxWidth = maxWidth;\n    });\n    flexFolder1.add(config1, 'setMaxWidthNaN').name('set maxWidth to NaN');\n    flexFolder1.add(config1, 'minWidth', 0, 300).onChange(function (minWidth) {\n      node1.style.minWidth = minWidth;\n    });\n    flexFolder1.add(config1, 'setMinWidthNaN').name('set minWidth to NaN');\n    var flexFolder2 = gui.addFolder(\"Node2's Flex\");\n    var config2 = {\n      flexGrow: 1,\n      flexShrink: 1,\n      maxWidth: 0,\n      minWidth: 0,\n      setMaxWidthNaN: function setMaxWidthNaN() {\n        node2.style.maxWidth = NaN;\n      },\n      setMinWidthNaN: function setMinWidthNaN() {\n        node2.style.minWidth = NaN;\n      }\n    };\n    flexFolder2.add(config2, 'flexGrow', 0, 1).onChange(function (flexGrow) {\n      node2.style.flexGrow = flexGrow;\n    });\n    flexFolder2.add(config2, 'flexShrink', 0, 1).onChange(function (flexShrink) {\n      node2.style.flexShrink = flexShrink;\n    });\n    flexFolder2.add(config2, 'maxWidth', 0, 300).onChange(function (maxWidth) {\n      node2.style.maxWidth = maxWidth;\n    });\n    flexFolder2.add(config2, 'setMaxWidthNaN').name('set maxWidth to NaN');\n    flexFolder2.add(config2, 'minWidth', 0, 300).onChange(function (minWidth) {\n      node2.style.minWidth = minWidth;\n    });\n    flexFolder2.add(config2, 'setMinWidthNaN').name('set minWidth to NaN');\n    var layoutConfig = {\n      width: 500,\n      height: 300\n    };\n    var layoutFolder = gui.addFolder(\"Container's Layout\");\n    layoutFolder.add(layoutConfig, 'width', 100, 600).onChange(function (width) {\n      root.style.width = width;\n    });\n    layoutFolder.add(layoutConfig, 'height', 200, 500).onChange(function (height) {\n      root.style.height = height;\n    });\n  });\n});"},{"relativePath":"plugins/demo/yoga-container.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/plugins/demo/yoga-container.js","order":15,"filename":"yoga-container.js","title":{"zh":"使用 Yoga 排版引擎 - 容器配置","en":"Use Yoga layout engine - container"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*B_DmQ6lzHcIAAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent, Rect, Text } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Plugin as PluginYoga } from '@antv/g-plugin-yoga';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\nconst plugin = new PluginYoga();\n\ncanvasRenderer.registerPlugin(plugin);\nwebglRenderer.registerPlugin(plugin);\nsvgRenderer.registerPlugin(plugin);\n\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  // you can use Group if you want this container invisible\n  const root = new Rect({\n    id: 'root',\n    style: {\n      fill: '#C6E5FF',\n      width: 500,\n      height: 300,\n      display: 'flex',\n      justifyContent: 'center',\n      x: 50,\n      y: 50,\n    },\n  });\n  canvas.appendChild(root);\n\n  const node1 = new Rect({\n    id: 'node1',\n    style: {\n      fill: 'white',\n      stroke: 'grey',\n      lineWidth: 1,\n      opacity: 0.8,\n      width: 100,\n      height: 100,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      // alignSelf: 'center'\n    },\n  });\n  node1.appendChild(\n    new Text({\n      id: 'node1-text',\n      style: {\n        fontFamily: 'PingFang SC',\n        fontSize: 32,\n        fill: '#1890FF',\n        text: '1',\n      },\n    }),\n  );\n  const node2 = new Rect({\n    id: 'node2',\n    style: {\n      fill: 'white',\n      stroke: 'grey',\n      lineWidth: 1,\n      opacity: 0.8,\n      width: 100,\n      height: 100,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n  });\n  node2.appendChild(\n    new Text({\n      id: 'node2-text',\n      style: {\n        fontFamily: 'PingFang SC',\n        fontSize: 32,\n        fill: '#1890FF',\n        text: '2',\n      },\n    }),\n  );\n  root.appendChild(node1);\n  root.appendChild(node2);\n\n  // stats\n  const stats = new Stats();\n  stats.showPanel(0);\n  const $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  const $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n    if (stats) {\n      stats.update();\n    }\n  });\n\n  // GUI\n  const gui = new lil.GUI({ autoPlace: false });\n  $wrapper.appendChild(gui.domElement);\n  const rendererFolder = gui.addFolder('renderer');\n  const rendererConfig = {\n    renderer: 'canvas',\n  };\n  rendererFolder\n    .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n    .onChange((rendererName) => {\n      let renderer;\n      if (rendererName === 'canvas') {\n        renderer = canvasRenderer;\n      } else if (rendererName === 'svg') {\n        renderer = svgRenderer;\n      } else if (rendererName === 'webgl') {\n        renderer = webglRenderer;\n      } else if (rendererName === 'canvaskit') {\n        renderer = canvaskitRenderer;\n      }\n      canvas.setRenderer(renderer);\n    });\n  rendererFolder.open();\n\n  const layoutFolder = gui.addFolder('Layout');\n  const flexFolder = gui.addFolder('Flex');\n  const config = {\n    flexDirection: 'row',\n    flexWrap: 'no-wrap',\n    justifyContent: 'center',\n    alignItems: 'stretch',\n    alignContent: 'flex-start',\n    width: 500,\n    height: 300,\n    paddingTop: 0,\n    paddingRight: 0,\n    paddingBottom: 0,\n    paddingLeft: 0,\n    'paddingTop(percent)': 0,\n    'paddingRight(percent)': 0,\n    'paddingBottom(percent)': 0,\n    'paddingLeft(percent)': 0,\n    appendChild: () => {\n      const num = root.children.length;\n      const id = num + 1;\n      const rect = new Rect({\n        id: `node${id}`,\n        style: {\n          fill: 'white',\n          stroke: 'grey',\n          lineWidth: 1,\n          opacity: 0.8,\n          width: 100,\n          height: 100,\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        },\n      });\n      const text = new Text({\n        id: `node${id}-text`,\n        style: {\n          fontFamily: 'PingFang SC',\n          fontSize: 32,\n          fill: '#1890FF',\n          text: `${id}`,\n        },\n      });\n      rect.appendChild(text);\n      root.appendChild(rect);\n    },\n    removeChild: () => {\n      const num = root.children.length;\n      if (num) {\n        root.removeChild(root.children[num - 1]);\n      }\n    },\n  };\n  flexFolder\n    .add(config, 'flexDirection', ['row', 'column', 'row-reverse', 'column-reverse'])\n    .onChange((flexDirection) => {\n      root.style.flexDirection = flexDirection;\n    });\n  flexFolder.add(config, 'flexWrap', ['wrap', 'no-wrap', 'wrap-reverse']).onChange((flexWrap) => {\n    root.style.flexWrap = flexWrap;\n  });\n  layoutFolder\n    .add(config, 'justifyContent', [\n      'flex-start',\n      'flex-end',\n      'center',\n      'space-between',\n      'space-around',\n      'space-evenly',\n    ])\n    .onChange((justifyContent) => {\n      root.style.justifyContent = justifyContent;\n    });\n  layoutFolder\n    .add(config, 'alignItems', [\n      'stretch',\n      'auto',\n      'baseline',\n      'center',\n      'flex-start',\n      'flex-end',\n      'space-between',\n      'space-around',\n    ])\n    .onChange((alignItems) => {\n      root.style.alignItems = alignItems;\n    });\n  layoutFolder\n    .add(config, 'alignContent', [\n      'stretch',\n      'center',\n      'flex-start',\n      'flex-end',\n      'space-between',\n      'space-around',\n    ])\n    .onChange((alignContent) => {\n      root.style.alignContent = alignContent;\n    });\n  layoutFolder.add(config, 'width', 200, 600).onChange((width) => {\n    root.style.width = width;\n  });\n  layoutFolder.add(config, 'height', 200, 500).onChange((height) => {\n    root.style.height = height;\n  });\n  layoutFolder.add(config, 'paddingTop', 0, 50).onChange((paddingTop) => {\n    root.style.paddingTop = paddingTop;\n  });\n  layoutFolder.add(config, 'paddingRight', 0, 50).onChange((paddingRight) => {\n    root.style.paddingRight = paddingRight;\n  });\n  layoutFolder.add(config, 'paddingBottom', 0, 50).onChange((paddingBottom) => {\n    root.style.paddingBottom = paddingBottom;\n  });\n  layoutFolder.add(config, 'paddingLeft', 0, 50).onChange((paddingLeft) => {\n    root.style.paddingLeft = paddingLeft;\n  });\n  layoutFolder.add(config, 'paddingTop(percent)', 0, 100).onChange((paddingTop) => {\n    root.style.paddingTop = `${paddingTop}%`;\n  });\n  layoutFolder.add(config, 'paddingRight(percent)', 0, 100).onChange((paddingRight) => {\n    root.style.paddingRight = `${paddingRight}%`;\n  });\n  layoutFolder.add(config, 'paddingBottom(percent)', 0, 100).onChange((paddingBottom) => {\n    root.style.paddingBottom = `${paddingBottom}%`;\n  });\n  layoutFolder.add(config, 'paddingLeft(percent)', 0, 100).onChange((paddingLeft) => {\n    root.style.paddingLeft = `${paddingLeft}%`;\n  });\n  layoutFolder.add(config, 'appendChild').name('appendChild');\n  layoutFolder.add(config, 'removeChild').name('removeChild');\n});\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-plugin-yoga\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-plugin-yoga\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gPluginYoga, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.yogaContainer = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gPluginYoga, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer();\n  var plugin = new _gPluginYoga.Plugin();\n  canvasRenderer.registerPlugin(plugin);\n  webglRenderer.registerPlugin(plugin);\n  svgRenderer.registerPlugin(plugin);\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    // you can use Group if you want this container invisible\n    var root = new _g.Rect({\n      id: 'root',\n      style: {\n        fill: '#C6E5FF',\n        width: 500,\n        height: 300,\n        display: 'flex',\n        justifyContent: 'center',\n        x: 50,\n        y: 50\n      }\n    });\n    canvas.appendChild(root);\n    var node1 = new _g.Rect({\n      id: 'node1',\n      style: {\n        fill: 'white',\n        stroke: 'grey',\n        lineWidth: 1,\n        opacity: 0.8,\n        width: 100,\n        height: 100,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center' // alignSelf: 'center'\n\n      }\n    });\n    node1.appendChild(new _g.Text({\n      id: 'node1-text',\n      style: {\n        fontFamily: 'PingFang SC',\n        fontSize: 32,\n        fill: '#1890FF',\n        text: '1'\n      }\n    }));\n    var node2 = new _g.Rect({\n      id: 'node2',\n      style: {\n        fill: 'white',\n        stroke: 'grey',\n        lineWidth: 1,\n        opacity: 0.8,\n        width: 100,\n        height: 100,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      }\n    });\n    node2.appendChild(new _g.Text({\n      id: 'node2-text',\n      style: {\n        fontFamily: 'PingFang SC',\n        fontSize: 32,\n        fill: '#1890FF',\n        text: '2'\n      }\n    }));\n    root.appendChild(node1);\n    root.appendChild(node2); // stats\n\n    var stats = new _stats.default();\n    stats.showPanel(0);\n    var $stats = stats.dom;\n    $stats.style.position = 'absolute';\n    $stats.style.left = '0px';\n    $stats.style.top = '0px';\n    var $wrapper = document.getElementById('container');\n    $wrapper.appendChild($stats);\n    canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n      if (stats) {\n        stats.update();\n      }\n    }); // GUI\n\n    var gui = new lil.GUI({\n      autoPlace: false\n    });\n    $wrapper.appendChild(gui.domElement);\n    var rendererFolder = gui.addFolder('renderer');\n    var rendererConfig = {\n      renderer: 'canvas'\n    };\n    rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n      var renderer;\n\n      if (rendererName === 'canvas') {\n        renderer = canvasRenderer;\n      } else if (rendererName === 'svg') {\n        renderer = svgRenderer;\n      } else if (rendererName === 'webgl') {\n        renderer = webglRenderer;\n      } else if (rendererName === 'canvaskit') {\n        renderer = canvaskitRenderer;\n      }\n\n      canvas.setRenderer(renderer);\n    });\n    rendererFolder.open();\n    var layoutFolder = gui.addFolder('Layout');\n    var flexFolder = gui.addFolder('Flex');\n    var config = {\n      flexDirection: 'row',\n      flexWrap: 'no-wrap',\n      justifyContent: 'center',\n      alignItems: 'stretch',\n      alignContent: 'flex-start',\n      width: 500,\n      height: 300,\n      paddingTop: 0,\n      paddingRight: 0,\n      paddingBottom: 0,\n      paddingLeft: 0,\n      'paddingTop(percent)': 0,\n      'paddingRight(percent)': 0,\n      'paddingBottom(percent)': 0,\n      'paddingLeft(percent)': 0,\n      appendChild: function appendChild() {\n        var num = root.children.length;\n        var id = num + 1;\n        var rect = new _g.Rect({\n          id: \"node\".concat(id),\n          style: {\n            fill: 'white',\n            stroke: 'grey',\n            lineWidth: 1,\n            opacity: 0.8,\n            width: 100,\n            height: 100,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n          }\n        });\n        var text = new _g.Text({\n          id: \"node\".concat(id, \"-text\"),\n          style: {\n            fontFamily: 'PingFang SC',\n            fontSize: 32,\n            fill: '#1890FF',\n            text: \"\".concat(id)\n          }\n        });\n        rect.appendChild(text);\n        root.appendChild(rect);\n      },\n      removeChild: function removeChild() {\n        var num = root.children.length;\n\n        if (num) {\n          root.removeChild(root.children[num - 1]);\n        }\n      }\n    };\n    flexFolder.add(config, 'flexDirection', ['row', 'column', 'row-reverse', 'column-reverse']).onChange(function (flexDirection) {\n      root.style.flexDirection = flexDirection;\n    });\n    flexFolder.add(config, 'flexWrap', ['wrap', 'no-wrap', 'wrap-reverse']).onChange(function (flexWrap) {\n      root.style.flexWrap = flexWrap;\n    });\n    layoutFolder.add(config, 'justifyContent', ['flex-start', 'flex-end', 'center', 'space-between', 'space-around', 'space-evenly']).onChange(function (justifyContent) {\n      root.style.justifyContent = justifyContent;\n    });\n    layoutFolder.add(config, 'alignItems', ['stretch', 'auto', 'baseline', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']).onChange(function (alignItems) {\n      root.style.alignItems = alignItems;\n    });\n    layoutFolder.add(config, 'alignContent', ['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']).onChange(function (alignContent) {\n      root.style.alignContent = alignContent;\n    });\n    layoutFolder.add(config, 'width', 200, 600).onChange(function (width) {\n      root.style.width = width;\n    });\n    layoutFolder.add(config, 'height', 200, 500).onChange(function (height) {\n      root.style.height = height;\n    });\n    layoutFolder.add(config, 'paddingTop', 0, 50).onChange(function (paddingTop) {\n      root.style.paddingTop = paddingTop;\n    });\n    layoutFolder.add(config, 'paddingRight', 0, 50).onChange(function (paddingRight) {\n      root.style.paddingRight = paddingRight;\n    });\n    layoutFolder.add(config, 'paddingBottom', 0, 50).onChange(function (paddingBottom) {\n      root.style.paddingBottom = paddingBottom;\n    });\n    layoutFolder.add(config, 'paddingLeft', 0, 50).onChange(function (paddingLeft) {\n      root.style.paddingLeft = paddingLeft;\n    });\n    layoutFolder.add(config, 'paddingTop(percent)', 0, 100).onChange(function (paddingTop) {\n      root.style.paddingTop = \"\".concat(paddingTop, \"%\");\n    });\n    layoutFolder.add(config, 'paddingRight(percent)', 0, 100).onChange(function (paddingRight) {\n      root.style.paddingRight = \"\".concat(paddingRight, \"%\");\n    });\n    layoutFolder.add(config, 'paddingBottom(percent)', 0, 100).onChange(function (paddingBottom) {\n      root.style.paddingBottom = \"\".concat(paddingBottom, \"%\");\n    });\n    layoutFolder.add(config, 'paddingLeft(percent)', 0, 100).onChange(function (paddingLeft) {\n      root.style.paddingLeft = \"\".concat(paddingLeft, \"%\");\n    });\n    layoutFolder.add(config, 'appendChild').name('appendChild');\n    layoutFolder.add(config, 'removeChild').name('removeChild');\n  });\n});"},{"relativePath":"plugins/demo/yoga-text.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/plugins/demo/yoga-text.js","order":18,"filename":"yoga-text.js","title":{"zh":"使用 Yoga 排版引擎 - 文字排版","en":"Use Yoga layout engine - text"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*IH1fSJN9fsMAAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent, Circle, Group, Rect, Text } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Plugin as PluginYoga } from '@antv/g-plugin-yoga';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\nconst canvasRenderer = new CanvasRenderer();\nconst plugin = new PluginYoga();\ncanvasRenderer.registerPlugin(plugin);\n\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  const root = new Rect({\n    id: 'root',\n    style: {\n      fill: '#C6E5FF',\n      width: 500,\n      height: 300,\n      x: 50,\n      y: 50,\n      display: 'flex',\n      flexDirection: 'column',\n      padding: [10, 10, 10, 10],\n    },\n  });\n  canvas.appendChild(root);\n\n  const topPanel = new Rect({\n    style: {\n      fill: 'white',\n      stroke: 'grey',\n      lineWidth: 1,\n      opacity: 0.8,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: '100%',\n      height: 60,\n      padding: [10, 10, 10, 10],\n      marginBottom: 10,\n    },\n  });\n  topPanel.appendChild(\n    new Text({\n      style: {\n        fontFamily: 'PingFang SC',\n        fontSize: 24,\n        fill: '#1890FF',\n        text: '1',\n      },\n    }),\n  );\n  const bottomPanel = new Group({\n    style: {\n      display: 'flex',\n      width: '100%',\n      flexGrow: 1,\n    },\n  });\n  const leftPanel = new Rect({\n    style: {\n      fill: 'white',\n      stroke: 'grey',\n      lineWidth: 1,\n      opacity: 0.8,\n      display: 'flex',\n      height: '100%',\n      flexGrow: 1,\n      marginRight: 10,\n      padding: [10, 10, 10, 10],\n    },\n  });\n  const leftPanelText = new Text({\n    style: {\n      fontFamily: 'PingFang SC',\n      fontSize: 32,\n      fill: '#1890FF',\n      text: '这是测试文字，这是测试文字，这是测试文字，这是测试文字',\n      wordWrap: true,\n      width: '100%',\n    },\n  });\n  leftPanel.appendChild(leftPanelText);\n  const rightPanel = new Group({\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      width: 100,\n      height: '100%',\n    },\n  });\n  const node1 = new Rect({\n    style: {\n      fill: 'white',\n      stroke: 'grey',\n      lineWidth: 1,\n      opacity: 0.8,\n      height: 100,\n      width: '100%',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      marginBottom: 10,\n    },\n  });\n  node1.appendChild(\n    new Text({\n      style: {\n        fontFamily: 'PingFang SC',\n        fontSize: 32,\n        fill: '#1890FF',\n        text: '2',\n      },\n    }),\n  );\n  const node2 = new Rect({\n    style: {\n      fill: 'white',\n      stroke: 'grey',\n      lineWidth: 1,\n      opacity: 0.8,\n      width: '100%',\n      display: 'flex',\n      flexGrow: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n  });\n  node2.appendChild(\n    new Text({\n      style: {\n        fontFamily: 'PingFang SC',\n        fontSize: 32,\n        fill: '#1890FF',\n        text: '3',\n      },\n    }),\n  );\n  const circle = new Circle({\n    style: {\n      r: 20,\n      fill: '#1890FF',\n      marginTop: 10,\n    },\n  });\n\n  root.appendChild(topPanel);\n  root.appendChild(bottomPanel);\n  bottomPanel.appendChild(leftPanel);\n  bottomPanel.appendChild(rightPanel);\n  rightPanel.appendChild(node1);\n  rightPanel.appendChild(node2);\n  rightPanel.appendChild(circle);\n\n  // stats\n  const stats = new Stats();\n  stats.showPanel(0);\n  const $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  const $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n    if (stats) {\n      stats.update();\n    }\n  });\n\n  // GUI\n  const gui = new lil.GUI({ autoPlace: false });\n  $wrapper.appendChild(gui.domElement);\n\n  const layoutConfig = {\n    width: 500,\n    height: 300,\n  };\n  const layoutFolder = gui.addFolder(\"Container's Layout\");\n  layoutFolder.add(layoutConfig, 'width', 100, 600).onChange((width) => {\n    root.style.width = width;\n  });\n  layoutFolder.add(layoutConfig, 'height', 200, 500).onChange((height) => {\n    root.style.height = height;\n  });\n\n  const leftConfig = {\n    'width(percent)': 100,\n  };\n  const leftFolder = gui.addFolder(\"LeftPanel's Layout\");\n  leftFolder.add(leftConfig, 'width(percent)', 0, 100).onChange((width) => {\n    leftPanelText.style.width = `${width}%`;\n  });\n});\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-plugin-yoga\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-plugin-yoga\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gPluginYoga, global.lilGui, global.stats);\n    global.yogaText = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gPluginYoga, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  var canvasRenderer = new _gCanvas.Renderer();\n  var plugin = new _gPluginYoga.Plugin();\n  canvasRenderer.registerPlugin(plugin);\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    var root = new _g.Rect({\n      id: 'root',\n      style: {\n        fill: '#C6E5FF',\n        width: 500,\n        height: 300,\n        x: 50,\n        y: 50,\n        display: 'flex',\n        flexDirection: 'column',\n        padding: [10, 10, 10, 10]\n      }\n    });\n    canvas.appendChild(root);\n    var topPanel = new _g.Rect({\n      style: {\n        fill: 'white',\n        stroke: 'grey',\n        lineWidth: 1,\n        opacity: 0.8,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        height: 60,\n        padding: [10, 10, 10, 10],\n        marginBottom: 10\n      }\n    });\n    topPanel.appendChild(new _g.Text({\n      style: {\n        fontFamily: 'PingFang SC',\n        fontSize: 24,\n        fill: '#1890FF',\n        text: '1'\n      }\n    }));\n    var bottomPanel = new _g.Group({\n      style: {\n        display: 'flex',\n        width: '100%',\n        flexGrow: 1\n      }\n    });\n    var leftPanel = new _g.Rect({\n      style: {\n        fill: 'white',\n        stroke: 'grey',\n        lineWidth: 1,\n        opacity: 0.8,\n        display: 'flex',\n        height: '100%',\n        flexGrow: 1,\n        marginRight: 10,\n        padding: [10, 10, 10, 10]\n      }\n    });\n    var leftPanelText = new _g.Text({\n      style: {\n        fontFamily: 'PingFang SC',\n        fontSize: 32,\n        fill: '#1890FF',\n        text: '这是测试文字，这是测试文字，这是测试文字，这是测试文字',\n        wordWrap: true,\n        width: '100%'\n      }\n    });\n    leftPanel.appendChild(leftPanelText);\n    var rightPanel = new _g.Group({\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        width: 100,\n        height: '100%'\n      }\n    });\n    var node1 = new _g.Rect({\n      style: {\n        fill: 'white',\n        stroke: 'grey',\n        lineWidth: 1,\n        opacity: 0.8,\n        height: 100,\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginBottom: 10\n      }\n    });\n    node1.appendChild(new _g.Text({\n      style: {\n        fontFamily: 'PingFang SC',\n        fontSize: 32,\n        fill: '#1890FF',\n        text: '2'\n      }\n    }));\n    var node2 = new _g.Rect({\n      style: {\n        fill: 'white',\n        stroke: 'grey',\n        lineWidth: 1,\n        opacity: 0.8,\n        width: '100%',\n        display: 'flex',\n        flexGrow: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      }\n    });\n    node2.appendChild(new _g.Text({\n      style: {\n        fontFamily: 'PingFang SC',\n        fontSize: 32,\n        fill: '#1890FF',\n        text: '3'\n      }\n    }));\n    var circle = new _g.Circle({\n      style: {\n        r: 20,\n        fill: '#1890FF',\n        marginTop: 10\n      }\n    });\n    root.appendChild(topPanel);\n    root.appendChild(bottomPanel);\n    bottomPanel.appendChild(leftPanel);\n    bottomPanel.appendChild(rightPanel);\n    rightPanel.appendChild(node1);\n    rightPanel.appendChild(node2);\n    rightPanel.appendChild(circle); // stats\n\n    var stats = new _stats.default();\n    stats.showPanel(0);\n    var $stats = stats.dom;\n    $stats.style.position = 'absolute';\n    $stats.style.left = '0px';\n    $stats.style.top = '0px';\n    var $wrapper = document.getElementById('container');\n    $wrapper.appendChild($stats);\n    canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n      if (stats) {\n        stats.update();\n      }\n    }); // GUI\n\n    var gui = new lil.GUI({\n      autoPlace: false\n    });\n    $wrapper.appendChild(gui.domElement);\n    var layoutConfig = {\n      width: 500,\n      height: 300\n    };\n    var layoutFolder = gui.addFolder(\"Container's Layout\");\n    layoutFolder.add(layoutConfig, 'width', 100, 600).onChange(function (width) {\n      root.style.width = width;\n    });\n    layoutFolder.add(layoutConfig, 'height', 200, 500).onChange(function (height) {\n      root.style.height = height;\n    });\n    var leftConfig = {\n      'width(percent)': 100\n    };\n    var leftFolder = gui.addFolder(\"LeftPanel's Layout\");\n    leftFolder.add(leftConfig, 'width(percent)', 0, 100).onChange(function (width) {\n      leftPanelText.style.width = \"\".concat(width, \"%\");\n    });\n  });\n});"},{"relativePath":"perf/demo/canvas-circle-path.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/perf/demo/canvas-circle-path.js","order":0,"filename":"canvas-circle-path.js","title":{"zh":"g-canvas 渲染 Circle 和 Path","en":"Render Circle & Path with g-canvas"},"source":"import { Canvas, CanvasEvent, Circle, Path, Text } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport Stats from 'stats.js';\n\n/**\n * do `pan` action with camera\n *\n * compared with G 4.0 ～30FPS\n * @see https://codesandbox.io/s/g-4-0-data1-pan-g8t95d?file=/index.js\n */\n\nconst canvasRenderer = new CanvasRenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  let edgesNum = 2742;\n  for (let i = 0; i < edgesNum; i++) {\n    const x = Math.random() * 600;\n    const y = Math.random() * 500;\n    canvas.appendChild(\n      new Path({\n        attrs: {\n          path: [\n            ['M', x, y],\n            ['L', x + Math.random() * 100, y + Math.random() * 50],\n          ],\n          lineWidth: 1,\n          stroke: '#000',\n          lineWidth: 0.3,\n        },\n      }),\n    );\n  }\n  let nodesNum = 1589;\n  for (let i = 0; i < nodesNum; i++) {\n    const x = Math.random() * 600;\n    const y = Math.random() * 500;\n    canvas.appendChild(\n      new Circle({\n        attrs: {\n          fill: '#C6E5FF',\n          stroke: '#5B8FF9',\n          r: 2,\n          cx: x,\n          cy: y,\n          lineWidth: 0.3,\n        },\n      }),\n    );\n    canvas.appendChild(\n      new Text({\n        attrs: {\n          text: 'ccc',\n          x,\n          y,\n          fill: '#ccc',\n          fontSize: 12,\n        },\n      }),\n    );\n  }\n});\n\nconst camera = canvas.getCamera();\nlet count = 0;\nlet tag = 1;\nconst animate = () => {\n  if (stats) {\n    stats.update();\n  }\n  count++;\n  if (count % 80 === 0) {\n    count = 0;\n    tag *= -1;\n  }\n  camera.pan(tag, tag);\n  requestAnimationFrame(animate);\n};\n\nrequestAnimationFrame(animate);\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.stats);\n    global.canvasCirclePath = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _stats) {\n  \"use strict\";\n\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  /**\n   * do `pan` action with camera\n   *\n   * compared with G 4.0 ～30FPS\n   * @see https://codesandbox.io/s/g-4-0-data1-pan-g8t95d?file=/index.js\n   */\n  var canvasRenderer = new _gCanvas.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    var edgesNum = 2742;\n\n    for (var i = 0; i < edgesNum; i++) {\n      var x = Math.random() * 600;\n      var y = Math.random() * 500;\n      canvas.appendChild(new _g.Path({\n        attrs: _defineProperty({\n          path: [['M', x, y], ['L', x + Math.random() * 100, y + Math.random() * 50]],\n          lineWidth: 1,\n          stroke: '#000'\n        }, \"lineWidth\", 0.3)\n      }));\n    }\n\n    var nodesNum = 1589;\n\n    for (var _i = 0; _i < nodesNum; _i++) {\n      var _x = Math.random() * 600;\n\n      var _y = Math.random() * 500;\n\n      canvas.appendChild(new _g.Circle({\n        attrs: {\n          fill: '#C6E5FF',\n          stroke: '#5B8FF9',\n          r: 2,\n          cx: _x,\n          cy: _y,\n          lineWidth: 0.3\n        }\n      }));\n      canvas.appendChild(new _g.Text({\n        attrs: {\n          text: 'ccc',\n          x: _x,\n          y: _y,\n          fill: '#ccc',\n          fontSize: 12\n        }\n      }));\n    }\n  });\n  var camera = canvas.getCamera();\n  var count = 0;\n  var tag = 1;\n\n  var animate = function animate() {\n    if (stats) {\n      stats.update();\n    }\n\n    count++;\n\n    if (count % 80 === 0) {\n      count = 0;\n      tag *= -1;\n    }\n\n    camera.pan(tag, tag);\n    requestAnimationFrame(animate);\n  };\n\n  requestAnimationFrame(animate); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n});"},{"relativePath":"perf/demo/canvas-dirty-rectangle.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/perf/demo/canvas-dirty-rectangle.js","order":4,"filename":"canvas-dirty-rectangle.js","title":{"zh":"脏矩形渲染(Canvas)","en":"Rendering with dirty rectangle(Canvas)"},"source":"import { Canvas, CanvasEvent, Circle } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer({\n  enableDirtyRectangleRenderingDebug: true,\n});\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  for (let i = 0; i < 1000; i++) {\n    const circle = new Circle({\n      style: {\n        cx: Math.random() * 600,\n        cy: Math.random() * 500,\n        r: 20 + Math.random() * 10,\n        fill: '#1890FF',\n        stroke: '#F04864',\n        lineWidth: 4,\n      },\n    });\n\n    canvas.appendChild(circle);\n\n    circle.on('mouseenter', () => {\n      circle.attr('fill', '#2FC25B');\n    });\n\n    circle.on('mouseleave', () => {\n      circle.attr('fill', '#1890FF');\n    });\n  }\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nlet currentRenderer = canvasRenderer;\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder.add(rendererConfig, 'renderer', ['canvas', 'webgl', 'svg']).onChange((renderer) => {\n  currentRenderer =\n    renderer === 'canvas' ? canvasRenderer : renderer === 'webgl' ? webglRenderer : svgRenderer;\n  canvas.setRenderer(currentRenderer);\n});\nrendererFolder.open();\n\nconst folder0 = gui.addFolder('dirty rectangle');\nconst dirtyRectangleConfig = {\n  enable: true,\n};\nfolder0.add(dirtyRectangleConfig, 'enable').onChange((enable) => {\n  currentRenderer.setConfig({\n    enableDirtyRectangleRendering: enable,\n    enableDirtyRectangleRenderingDebug: enable,\n  });\n});\nfolder0.open();\n\n// display dirty rectangle\nconst $dirtyRectangle = document.createElement('div');\n$dirtyRectangle.style.cssText = `\nposition: absolute;\npointer-events: none;\nbackground: rgba(255, 0, 0, 0.5);\n`;\n$wrapper.appendChild($dirtyRectangle);\ncanvas.addEventListener(CanvasEvent.DIRTY_RECTANGLE, (e) => {\n  const { dirtyRect } = e.detail;\n  const { x, y, width, height } = dirtyRect;\n  const dpr = window.devicePixelRatio;\n\n  // convert from canvas coords to viewport\n  $dirtyRectangle.style.left = `${x / dpr}px`;\n  $dirtyRectangle.style.top = `${y / dpr}px`;\n  $dirtyRectangle.style.width = `${width / dpr}px`;\n  $dirtyRectangle.style.height = `${height / dpr}px`;\n});\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.canvasDirtyRectangle = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer({\n    enableDirtyRectangleRenderingDebug: true\n  });\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    var _loop = function _loop(i) {\n      var circle = new _g.Circle({\n        style: {\n          cx: Math.random() * 600,\n          cy: Math.random() * 500,\n          r: 20 + Math.random() * 10,\n          fill: '#1890FF',\n          stroke: '#F04864',\n          lineWidth: 4\n        }\n      });\n      canvas.appendChild(circle);\n      circle.on('mouseenter', function () {\n        circle.attr('fill', '#2FC25B');\n      });\n      circle.on('mouseleave', function () {\n        circle.attr('fill', '#1890FF');\n      });\n    };\n\n    for (var i = 0; i < 1000; i++) {\n      _loop(i);\n    }\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var currentRenderer = canvasRenderer;\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'webgl', 'svg']).onChange(function (renderer) {\n    currentRenderer = renderer === 'canvas' ? canvasRenderer : renderer === 'webgl' ? webglRenderer : svgRenderer;\n    canvas.setRenderer(currentRenderer);\n  });\n  rendererFolder.open();\n  var folder0 = gui.addFolder('dirty rectangle');\n  var dirtyRectangleConfig = {\n    enable: true\n  };\n  folder0.add(dirtyRectangleConfig, 'enable').onChange(function (enable) {\n    currentRenderer.setConfig({\n      enableDirtyRectangleRendering: enable,\n      enableDirtyRectangleRenderingDebug: enable\n    });\n  });\n  folder0.open(); // display dirty rectangle\n\n  var $dirtyRectangle = document.createElement('div');\n  $dirtyRectangle.style.cssText = \"\\nposition: absolute;\\npointer-events: none;\\nbackground: rgba(255, 0, 0, 0.5);\\n\";\n  $wrapper.appendChild($dirtyRectangle);\n  canvas.addEventListener(_g.CanvasEvent.DIRTY_RECTANGLE, function (e) {\n    var dirtyRect = e.detail.dirtyRect;\n    var x = dirtyRect.x,\n        y = dirtyRect.y,\n        width = dirtyRect.width,\n        height = dirtyRect.height;\n    var dpr = window.devicePixelRatio; // convert from canvas coords to viewport\n\n    $dirtyRectangle.style.left = \"\".concat(x / dpr, \"px\");\n    $dirtyRectangle.style.top = \"\".concat(y / dpr, \"px\");\n    $dirtyRectangle.style.width = \"\".concat(width / dpr, \"px\");\n    $dirtyRectangle.style.height = \"\".concat(height / dpr, \"px\");\n  });\n});"},{"relativePath":"perf/demo/culling.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/perf/demo/culling.js","order":3,"filename":"culling.js","title":{"zh":"视口剔除","en":"Viewport culling"},"source":"import { Canvas, CanvasEvent, Rect } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 500,\n  height: 500,\n  renderer: canvasRenderer,\n});\nconst camera = canvas.getCamera();\ncamera.setZoom(0.1);\n\nconst rect = new Rect({\n  style: {\n    x: 250,\n    y: 250,\n    width: 2000,\n    height: 2000,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 4,\n  },\n});\n\nconst culledRect = new Rect({\n  style: {\n    x: 250 - 2500,\n    y: 250 - 2500,\n    width: 2000,\n    height: 2000,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 4,\n  },\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  canvas.appendChild(rect);\n  canvas.appendChild(culledRect);\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n\nconst cameraFolder = gui.addFolder('camera actions');\nconst cameraConfig = {\n  panX: 0,\n  panY: 0,\n  zoom: 0.1,\n  roll: 0,\n};\nconst printVisibility = () => {\n  console.log(\"rect1's visibility:\", rect.isVisible() ? 'visible' : 'hidden');\n  console.log(\"rect2's visibility:\", culledRect.isVisible() ? 'visible' : 'hidden');\n};\n\nconst origin = camera.getPosition();\ncameraFolder.add(cameraConfig, 'panX', -3000, 3000).onChange((panX) => {\n  const current = camera.getPosition();\n  camera.pan(origin[0] + panX - current[0], 0);\n  printVisibility();\n});\ncameraFolder.add(cameraConfig, 'panY', -3000, 3000).onChange((panY) => {\n  const current = camera.getPosition();\n  camera.pan(0, origin[1] + panY - current[1]);\n  printVisibility();\n});\ncameraFolder.add(cameraConfig, 'roll', -90, 90).onChange((roll) => {\n  camera.rotate(0, 0, roll);\n  printVisibility();\n});\ncameraFolder.add(cameraConfig, 'zoom', 0, 1).onChange((zoom) => {\n  camera.setZoom(zoom);\n  printVisibility();\n});\ncameraFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.culling = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 500,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  var camera = canvas.getCamera();\n  camera.setZoom(0.1);\n  var rect = new _g.Rect({\n    style: {\n      x: 250,\n      y: 250,\n      width: 2000,\n      height: 2000,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4\n    }\n  });\n  var culledRect = new _g.Rect({\n    style: {\n      x: 250 - 2500,\n      y: 250 - 2500,\n      width: 2000,\n      height: 2000,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4\n    }\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    canvas.appendChild(rect);\n    canvas.appendChild(culledRect);\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n  var cameraFolder = gui.addFolder('camera actions');\n  var cameraConfig = {\n    panX: 0,\n    panY: 0,\n    zoom: 0.1,\n    roll: 0\n  };\n\n  var printVisibility = function printVisibility() {\n    console.log(\"rect1's visibility:\", rect.isVisible() ? 'visible' : 'hidden');\n    console.log(\"rect2's visibility:\", culledRect.isVisible() ? 'visible' : 'hidden');\n  };\n\n  var origin = camera.getPosition();\n  cameraFolder.add(cameraConfig, 'panX', -3000, 3000).onChange(function (panX) {\n    var current = camera.getPosition();\n    camera.pan(origin[0] + panX - current[0], 0);\n    printVisibility();\n  });\n  cameraFolder.add(cameraConfig, 'panY', -3000, 3000).onChange(function (panY) {\n    var current = camera.getPosition();\n    camera.pan(0, origin[1] + panY - current[1]);\n    printVisibility();\n  });\n  cameraFolder.add(cameraConfig, 'roll', -90, 90).onChange(function (roll) {\n    camera.rotate(0, 0, roll);\n    printVisibility();\n  });\n  cameraFolder.add(cameraConfig, 'zoom', 0, 1).onChange(function (zoom) {\n    camera.setZoom(zoom);\n    printVisibility();\n  });\n  cameraFolder.open();\n});"},{"relativePath":"perf/demo/fcp.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/perf/demo/fcp.js","order":-1,"filename":"fcp.js","source":"import { Canvas, CanvasEvent, Path } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport Stats from 'stats.js';\n\nconst canvasRenderer = new CanvasRenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\nfunction draw(nodesNum) {\n  function inner() {\n    for (let i = 0; i < nodesNum; i++) {\n      const x = Math.random() * 600;\n      const y = Math.random() * 500;\n      const path = canvas.appendChild(\n        new Path({\n          attrs: {\n            fill: '#C6E5FF',\n            stroke: '#5B8FF9',\n            // path: [\n            //   ['M', 54.4462133232839 + x, -6.41757177038063 + y],\n            //   ['L', 61.3765714868427 + x, 6.41757177038063 + y],\n            //   ['M', 61.3765714868427 + x, 6.41757177038063 + y],\n            //   ['L', 61.54285370420826 + x, 0.5852759906612777 + y],\n            //   ['M', 61.3765714868427 + x, 6.41757177038063 + y],\n            //   ['L', 56.4087962879037 + x, 3.3574192560847824 + y],\n            // ],\n            path: `M${54.4462133232839 + x},${-6.41757177038063 + y} L${61.3765714868427 + x},${\n              6.41757177038063 + y\n            } M${61.3765714868427 + x},${6.41757177038063 + y} L${61.54285370420826 + x},${\n              0.5852759906612777 + y\n            }M${61.3765714868427 + x},${6.41757177038063 + y}L${56.4087962879037 + x},${\n              3.3574192560847824 + y\n            }`,\n          },\n        }),\n      );\n      // path.animate([{ fillOpacity: 0 }, { fillOpacity: 1 }]);\n    }\n  }\n\n  inner();\n  inner();\n  inner();\n  inner();\n  inner();\n}\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  let nodesNum = 10000;\n  draw(nodesNum);\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.stats);\n    global.fcp = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _stats) {\n  \"use strict\";\n\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  var canvasRenderer = new _gCanvas.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n\n  function draw(nodesNum) {\n    function inner() {\n      for (var i = 0; i < nodesNum; i++) {\n        var x = Math.random() * 600;\n        var y = Math.random() * 500;\n        var path = canvas.appendChild(new _g.Path({\n          attrs: {\n            fill: '#C6E5FF',\n            stroke: '#5B8FF9',\n            // path: [\n            //   ['M', 54.4462133232839 + x, -6.41757177038063 + y],\n            //   ['L', 61.3765714868427 + x, 6.41757177038063 + y],\n            //   ['M', 61.3765714868427 + x, 6.41757177038063 + y],\n            //   ['L', 61.54285370420826 + x, 0.5852759906612777 + y],\n            //   ['M', 61.3765714868427 + x, 6.41757177038063 + y],\n            //   ['L', 56.4087962879037 + x, 3.3574192560847824 + y],\n            // ],\n            path: \"M\".concat(54.4462133232839 + x, \",\").concat(-6.41757177038063 + y, \" L\").concat(61.3765714868427 + x, \",\").concat(6.41757177038063 + y, \" M\").concat(61.3765714868427 + x, \",\").concat(6.41757177038063 + y, \" L\").concat(61.54285370420826 + x, \",\").concat(0.5852759906612777 + y, \"M\").concat(61.3765714868427 + x, \",\").concat(6.41757177038063 + y, \"L\").concat(56.4087962879037 + x, \",\").concat(3.3574192560847824 + y)\n          }\n        })); // path.animate([{ fillOpacity: 0 }, { fillOpacity: 1 }]);\n      }\n    }\n\n    inner();\n    inner();\n    inner();\n    inner();\n    inner();\n  }\n\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    var nodesNum = 10000;\n    draw(nodesNum);\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  });\n});"},{"relativePath":"perf/demo/images.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/perf/demo/images.js","order":9,"filename":"images.js","title":{"zh":"大量图片","en":"Instanced Image"},"source":"import { Canvas, CanvasEvent, Image } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: webglRenderer,\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  for (let i = 0; i < 1000; i++) {\n    const image = new Image({\n      style: {\n        x: Math.random() * 600,\n        y: Math.random() * 500,\n        width: 100 + Math.random() * 100,\n        height: 100 + Math.random() * 100,\n        img: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*8eoKRbfOwgAAAAAAAAAAAABkARQnAQ',\n      },\n    });\n    canvas.appendChild(image);\n  }\n  for (let i = 0; i < 1000; i++) {\n    const image = new Image({\n      style: {\n        x: Math.random() * 600,\n        y: Math.random() * 500,\n        width: 100 + Math.random() * 100,\n        height: 100 + Math.random() * 100,\n        img: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ',\n      },\n    });\n    canvas.appendChild(image);\n  }\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\n\nconst camera = canvas.getCamera();\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n\n  // manipulate camera instead of the root of canvas\n  camera.rotate(0, 0, 1);\n});\n\n// update Camera's zoom\n// @see https://github.com/mrdoob/three.js/blob/master/examples/jsm/controls/OrbitControls.js\nconst minZoom = 0;\nconst maxZoom = Infinity;\ncanvas\n  .getContextService()\n  .getDomElement() // g-canvas/webgl 为 <canvas>，g-svg 为 <svg>\n  .addEventListener(\n    'wheel',\n    (e) => {\n      e.preventDefault();\n      let zoom;\n      if (e.deltaY < 0) {\n        zoom = Math.max(minZoom, Math.min(maxZoom, camera.getZoom() / 0.95));\n      } else {\n        zoom = Math.max(minZoom, Math.min(maxZoom, camera.getZoom() * 0.95));\n      }\n      camera.setZoom(zoom);\n    },\n    { passive: false },\n  );\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'webgl',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.images = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: webglRenderer\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    for (var i = 0; i < 1000; i++) {\n      var image = new _g.Image({\n        style: {\n          x: Math.random() * 600,\n          y: Math.random() * 500,\n          width: 100 + Math.random() * 100,\n          height: 100 + Math.random() * 100,\n          img: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*8eoKRbfOwgAAAAAAAAAAAABkARQnAQ'\n        }\n      });\n      canvas.appendChild(image);\n    }\n\n    for (var _i = 0; _i < 1000; _i++) {\n      var _image = new _g.Image({\n        style: {\n          x: Math.random() * 600,\n          y: Math.random() * 500,\n          width: 100 + Math.random() * 100,\n          height: 100 + Math.random() * 100,\n          img: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ'\n        }\n      });\n\n      canvas.appendChild(_image);\n    }\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  var camera = canvas.getCamera();\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    } // manipulate camera instead of the root of canvas\n\n\n    camera.rotate(0, 0, 1);\n  }); // update Camera's zoom\n  // @see https://github.com/mrdoob/three.js/blob/master/examples/jsm/controls/OrbitControls.js\n\n  var minZoom = 0;\n  var maxZoom = Infinity;\n  canvas.getContextService().getDomElement() // g-canvas/webgl 为 <canvas>，g-svg 为 <svg>\n  .addEventListener('wheel', function (e) {\n    e.preventDefault();\n    var zoom;\n\n    if (e.deltaY < 0) {\n      zoom = Math.max(minZoom, Math.min(maxZoom, camera.getZoom() / 0.95));\n    } else {\n      zoom = Math.max(minZoom, Math.min(maxZoom, camera.getZoom() * 0.95));\n    }\n\n    camera.setZoom(zoom);\n  }, {\n    passive: false\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'webgl'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n});"},{"relativePath":"perf/demo/nodes-5w.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/perf/demo/nodes-5w.js","order":8,"filename":"nodes-5w.js","title":{"zh":"5.5w 节点","en":"5.5w nodes"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*dwS2Rb3mq5IAAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent, Circle, Line } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport Hammer from 'hammerjs';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// ported from G6 @see https://g6.antv.vision/zh/examples/performance/perf#moreData\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: webglRenderer,\n});\n\nconst mapNodeSize = (nodes, propertyName, visualRange) => {\n  let minp = 9999999999;\n  let maxp = -9999999999;\n  nodes.forEach((node) => {\n    node[propertyName] = Math.pow(node[propertyName], 1 / 3);\n    minp = node[propertyName] < minp ? node[propertyName] : minp;\n    maxp = node[propertyName] > maxp ? node[propertyName] : maxp;\n  });\n  const rangepLength = maxp - minp;\n  const rangevLength = visualRange[1] - visualRange[0];\n  nodes.forEach((node) => {\n    node.size = ((node[propertyName] - minp) / rangepLength) * rangevLength + visualRange[0];\n  });\n};\n\n(async () => {\n  const [_, data] = await Promise.all([\n    canvas.ready,\n    fetch(\n      'https://gw.alipayobjects.com/os/bmw-prod/f1565312-d537-4231-adf5-81cb1cd3a0e8.json',\n    ).then((res) => res.json()),\n  ]);\n\n  data.nodes.forEach((node) => {\n    node.degree = 0;\n    data.edges.forEach((edge) => {\n      if (edge.source === node.id || edge.target === node.id) {\n        node.degree++;\n      }\n    });\n  });\n  mapNodeSize(data.nodes, 'degree', [1, 15]);\n\n  data.edges.forEach(({ source, target }) => {\n    const startPoint = data.nodes.find((node) => node.id === source);\n    const endPoint = data.nodes.find((node) => node.id === target);\n\n    if (startPoint && endPoint) {\n      const line = new Line({\n        style: {\n          x1: startPoint.x,\n          y1: startPoint.y,\n          x2: endPoint.x,\n          y2: endPoint.y,\n          stroke: '#1890FF',\n          lineWidth: 0.3,\n        },\n      });\n      canvas.appendChild(line);\n    }\n  });\n\n  data.nodes.forEach(({ size, x, y }) => {\n    const circle = new Circle({\n      style: {\n        cx: x,\n        cy: y,\n        fill: '#C6E5FF',\n        stroke: '#5B8FF9',\n        r: size,\n        lineWidth: 1,\n      },\n    });\n    canvas.appendChild(circle);\n  });\n})();\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\n\nconst camera = canvas.getCamera();\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n\n  // manipulate camera instead of the root of canvas\n  camera.rotate(0, 0, 1);\n});\n\n// handle mouse wheel event\nconst bindWheelHandler = () => {\n  // update Camera's zoom\n  // @see https://github.com/mrdoob/three.js/blob/master/examples/jsm/controls/OrbitControls.js\n  const minZoom = 0;\n  const maxZoom = Infinity;\n  canvas\n    .getContextService()\n    .getDomElement() // g-canvas/webgl 为 <canvas>，g-svg 为 <svg>\n    .addEventListener(\n      'wheel',\n      (e) => {\n        e.preventDefault();\n        let zoom;\n        if (e.deltaY < 0) {\n          zoom = Math.max(minZoom, Math.min(maxZoom, camera.getZoom() / 0.95));\n        } else {\n          zoom = Math.max(minZoom, Math.min(maxZoom, camera.getZoom() * 0.95));\n        }\n        camera.setZoom(zoom);\n      },\n      { passive: false },\n    );\n};\n\n// use hammer.js\nconst hammer = new Hammer(canvas.document);\nhammer.on('pan', (ev) => {\n  camera.pan(\n    -ev.deltaX / Math.pow(2, camera.getZoom()),\n    -ev.deltaY / Math.pow(2, camera.getZoom()),\n  );\n});\n\nbindWheelHandler();\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'webgl',\n};\nrendererFolder.add(rendererConfig, 'renderer', ['canvas', 'webgl', 'svg']).onChange((renderer) => {\n  canvas.setRenderer(\n    renderer === 'canvas' ? canvasRenderer : renderer === 'webgl' ? webglRenderer : svgRenderer,\n  );\n  bindWheelHandler();\n});\nrendererFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"hammerjs\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"hammerjs\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.hammerjs, global.lilGui, global.stats);\n    global.nodes5w = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, _hammerjs, lil, _stats) {\n  \"use strict\";\n\n  _hammerjs = _interopRequireDefault(_hammerjs);\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  // ported from G6 @see https://g6.antv.vision/zh/examples/performance/perf#moreData\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: webglRenderer\n  });\n\n  var mapNodeSize = function mapNodeSize(nodes, propertyName, visualRange) {\n    var minp = 9999999999;\n    var maxp = -9999999999;\n    nodes.forEach(function (node) {\n      node[propertyName] = Math.pow(node[propertyName], 1 / 3);\n      minp = node[propertyName] < minp ? node[propertyName] : minp;\n      maxp = node[propertyName] > maxp ? node[propertyName] : maxp;\n    });\n    var rangepLength = maxp - minp;\n    var rangevLength = visualRange[1] - visualRange[0];\n    nodes.forEach(function (node) {\n      node.size = (node[propertyName] - minp) / rangepLength * rangevLength + visualRange[0];\n    });\n  };\n\n  (async function () {\n    var _await$Promise$all = await Promise.all([canvas.ready, fetch('https://gw.alipayobjects.com/os/bmw-prod/f1565312-d537-4231-adf5-81cb1cd3a0e8.json').then(function (res) {\n      return res.json();\n    })]),\n        _await$Promise$all2 = _slicedToArray(_await$Promise$all, 2),\n        _ = _await$Promise$all2[0],\n        data = _await$Promise$all2[1];\n\n    data.nodes.forEach(function (node) {\n      node.degree = 0;\n      data.edges.forEach(function (edge) {\n        if (edge.source === node.id || edge.target === node.id) {\n          node.degree++;\n        }\n      });\n    });\n    mapNodeSize(data.nodes, 'degree', [1, 15]);\n    data.edges.forEach(function (_ref) {\n      var source = _ref.source,\n          target = _ref.target;\n      var startPoint = data.nodes.find(function (node) {\n        return node.id === source;\n      });\n      var endPoint = data.nodes.find(function (node) {\n        return node.id === target;\n      });\n\n      if (startPoint && endPoint) {\n        var line = new _g.Line({\n          style: {\n            x1: startPoint.x,\n            y1: startPoint.y,\n            x2: endPoint.x,\n            y2: endPoint.y,\n            stroke: '#1890FF',\n            lineWidth: 0.3\n          }\n        });\n        canvas.appendChild(line);\n      }\n    });\n    data.nodes.forEach(function (_ref2) {\n      var size = _ref2.size,\n          x = _ref2.x,\n          y = _ref2.y;\n      var circle = new _g.Circle({\n        style: {\n          cx: x,\n          cy: y,\n          fill: '#C6E5FF',\n          stroke: '#5B8FF9',\n          r: size,\n          lineWidth: 1\n        }\n      });\n      canvas.appendChild(circle);\n    });\n  })(); // stats\n\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  var camera = canvas.getCamera();\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    } // manipulate camera instead of the root of canvas\n\n\n    camera.rotate(0, 0, 1);\n  }); // handle mouse wheel event\n\n  var bindWheelHandler = function bindWheelHandler() {\n    // update Camera's zoom\n    // @see https://github.com/mrdoob/three.js/blob/master/examples/jsm/controls/OrbitControls.js\n    var minZoom = 0;\n    var maxZoom = Infinity;\n    canvas.getContextService().getDomElement() // g-canvas/webgl 为 <canvas>，g-svg 为 <svg>\n    .addEventListener('wheel', function (e) {\n      e.preventDefault();\n      var zoom;\n\n      if (e.deltaY < 0) {\n        zoom = Math.max(minZoom, Math.min(maxZoom, camera.getZoom() / 0.95));\n      } else {\n        zoom = Math.max(minZoom, Math.min(maxZoom, camera.getZoom() * 0.95));\n      }\n\n      camera.setZoom(zoom);\n    }, {\n      passive: false\n    });\n  }; // use hammer.js\n\n\n  var hammer = new _hammerjs.default(canvas.document);\n  hammer.on('pan', function (ev) {\n    camera.pan(-ev.deltaX / Math.pow(2, camera.getZoom()), -ev.deltaY / Math.pow(2, camera.getZoom()));\n  });\n  bindWheelHandler(); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'webgl'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'webgl', 'svg']).onChange(function (renderer) {\n    canvas.setRenderer(renderer === 'canvas' ? canvasRenderer : renderer === 'webgl' ? webglRenderer : svgRenderer);\n    bindWheelHandler();\n  });\n  rendererFolder.open();\n});"},{"relativePath":"perf/demo/nodes-8k.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/perf/demo/nodes-8k.js","order":7,"filename":"nodes-8k.js","title":{"zh":"8k 节点","en":"8k nodes"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*D-57RohPWVgAAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent, Circle, Line, Text } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport Hammer from 'hammerjs';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\n// enable culling for canvas & svg renderer\nconst canvasRenderer = new CanvasRenderer({\n  enableCulling: true,\n});\nconst svgRenderer = new SVGRenderer({\n  enableCulling: true,\n});\nconst webglRenderer = new WebGLRenderer();\nconst webgpuRenderer = new WebGPURenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: webglRenderer,\n});\n\n// ported from G6 @see https://g6.antv.vision/zh/examples/performance/perf#eva\n\nconst mapNodeSize = (nodes, propertyName, visualRange) => {\n  let minp = 9999999999;\n  let maxp = -9999999999;\n  nodes.forEach((node) => {\n    node[propertyName] = Math.pow(node[propertyName], 1 / 3);\n    minp = node[propertyName] < minp ? node[propertyName] : minp;\n    maxp = node[propertyName] > maxp ? node[propertyName] : maxp;\n  });\n  const rangepLength = maxp - minp;\n  const rangevLength = visualRange[1] - visualRange[0];\n  nodes.forEach((node) => {\n    node.size = ((node[propertyName] - minp) / rangepLength) * rangevLength + visualRange[0];\n  });\n};\n\n(async () => {\n  const [_, data] = await Promise.all([\n    canvas.ready,\n    fetch(\n      'https://gw.alipayobjects.com/os/basement_prod/0b9730ff-0850-46ff-84d0-1d4afecd43e6.json',\n    ).then((res) => res.json()),\n  ]);\n\n  data.nodes.forEach((node) => {\n    node.label = node.olabel;\n    node.degree = 0;\n    data.edges.forEach((edge) => {\n      if (edge.source === node.id || edge.target === node.id) {\n        node.degree++;\n      }\n    });\n  });\n  mapNodeSize(data.nodes, 'degree', [1, 15]);\n\n  /**\n   * Draw edges\n   */\n  data.edges.forEach(({ startPoint, endPoint }) => {\n    const line = new Line({\n      style: {\n        x1: startPoint.x * 10,\n        y1: startPoint.y * 10,\n        x2: endPoint.x * 10,\n        y2: endPoint.y * 10,\n        stroke: '#1890FF',\n        lineWidth: 3,\n      },\n    });\n\n    canvas.appendChild(line);\n  });\n\n  /**\n   * Draw nodes\n   */\n  data.nodes.forEach(({ size, x, y, label }) => {\n    const circle = new Circle({\n      style: {\n        cx: x * 10,\n        cy: y * 10,\n        fill: '#C6E5FF',\n        stroke: '#5B8FF9',\n        r: size * 10,\n        lineWidth: 1,\n      },\n    });\n    canvas.appendChild(circle);\n\n    const text = new Text({\n      style: {\n        text: label,\n        fontSize: 12,\n        fontFamily: 'sans-serif',\n        fill: '#1890FF',\n      },\n    });\n    circle.appendChild(text);\n\n    circle.addEventListener('mouseenter', (e) => {\n      circle.style.fill = '#2FC25B';\n    });\n\n    circle.addEventListener('mouseleave', (e) => {\n      circle.style.fill = '#C6E5FF';\n    });\n  });\n})();\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\n\nconst camera = canvas.getCamera();\ncamera.pan(1000, 800);\ncamera.setZoom(0.05);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n  console.log(canvas.getStats());\n\n  // manipulate camera instead of the root of canvas\n  camera.rotate(0, 0, 0.1);\n});\n\n// handle mouse wheel event\nconst bindWheelHandler = () => {\n  // update Camera's zoom\n  // @see https://github.com/mrdoob/three.js/blob/master/examples/jsm/controls/OrbitControls.js\n  const minZoom = 0;\n  const maxZoom = Infinity;\n  canvas\n    .getContextService()\n    .getDomElement() // g-canvas/webgl 为 <canvas>，g-svg 为 <svg>\n    .addEventListener(\n      'wheel',\n      (e) => {\n        e.preventDefault();\n        let zoom;\n        if (e.deltaY < 0) {\n          zoom = Math.max(minZoom, Math.min(maxZoom, camera.getZoom() / 0.95));\n        } else {\n          zoom = Math.max(minZoom, Math.min(maxZoom, camera.getZoom() * 0.95));\n        }\n        camera.setZoom(zoom);\n      },\n      { passive: false },\n    );\n};\n\n// use hammer.js\nconst hammer = new Hammer(canvas);\nhammer.on('pan', (ev) => {\n  camera.pan(\n    -ev.deltaX / Math.pow(2, camera.getZoom()),\n    -ev.deltaY / Math.pow(2, camera.getZoom()),\n  );\n});\n\nbindWheelHandler();\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'webgl',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n    bindWheelHandler();\n  });\nrendererFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"hammerjs\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"hammerjs\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.hammerjs, global.lilGui, global.stats);\n    global.nodes8k = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, _hammerjs, lil, _stats) {\n  \"use strict\";\n\n  _hammerjs = _interopRequireDefault(_hammerjs);\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  // create a renderer\n  // enable culling for canvas & svg renderer\n  var canvasRenderer = new _gCanvas.Renderer({\n    enableCulling: true\n  });\n  var svgRenderer = new _gSvg.Renderer({\n    enableCulling: true\n  });\n  var webglRenderer = new _gWebgl.Renderer();\n  var webgpuRenderer = new _gWebgpu.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  }); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: webglRenderer\n  }); // ported from G6 @see https://g6.antv.vision/zh/examples/performance/perf#eva\n\n  var mapNodeSize = function mapNodeSize(nodes, propertyName, visualRange) {\n    var minp = 9999999999;\n    var maxp = -9999999999;\n    nodes.forEach(function (node) {\n      node[propertyName] = Math.pow(node[propertyName], 1 / 3);\n      minp = node[propertyName] < minp ? node[propertyName] : minp;\n      maxp = node[propertyName] > maxp ? node[propertyName] : maxp;\n    });\n    var rangepLength = maxp - minp;\n    var rangevLength = visualRange[1] - visualRange[0];\n    nodes.forEach(function (node) {\n      node.size = (node[propertyName] - minp) / rangepLength * rangevLength + visualRange[0];\n    });\n  };\n\n  (async function () {\n    var _await$Promise$all = await Promise.all([canvas.ready, fetch('https://gw.alipayobjects.com/os/basement_prod/0b9730ff-0850-46ff-84d0-1d4afecd43e6.json').then(function (res) {\n      return res.json();\n    })]),\n        _await$Promise$all2 = _slicedToArray(_await$Promise$all, 2),\n        _ = _await$Promise$all2[0],\n        data = _await$Promise$all2[1];\n\n    data.nodes.forEach(function (node) {\n      node.label = node.olabel;\n      node.degree = 0;\n      data.edges.forEach(function (edge) {\n        if (edge.source === node.id || edge.target === node.id) {\n          node.degree++;\n        }\n      });\n    });\n    mapNodeSize(data.nodes, 'degree', [1, 15]);\n    /**\n     * Draw edges\n     */\n\n    data.edges.forEach(function (_ref) {\n      var startPoint = _ref.startPoint,\n          endPoint = _ref.endPoint;\n      var line = new _g.Line({\n        style: {\n          x1: startPoint.x * 10,\n          y1: startPoint.y * 10,\n          x2: endPoint.x * 10,\n          y2: endPoint.y * 10,\n          stroke: '#1890FF',\n          lineWidth: 3\n        }\n      });\n      canvas.appendChild(line);\n    });\n    /**\n     * Draw nodes\n     */\n\n    data.nodes.forEach(function (_ref2) {\n      var size = _ref2.size,\n          x = _ref2.x,\n          y = _ref2.y,\n          label = _ref2.label;\n      var circle = new _g.Circle({\n        style: {\n          cx: x * 10,\n          cy: y * 10,\n          fill: '#C6E5FF',\n          stroke: '#5B8FF9',\n          r: size * 10,\n          lineWidth: 1\n        }\n      });\n      canvas.appendChild(circle);\n      var text = new _g.Text({\n        style: {\n          text: label,\n          fontSize: 12,\n          fontFamily: 'sans-serif',\n          fill: '#1890FF'\n        }\n      });\n      circle.appendChild(text);\n      circle.addEventListener('mouseenter', function (e) {\n        circle.style.fill = '#2FC25B';\n      });\n      circle.addEventListener('mouseleave', function (e) {\n        circle.style.fill = '#C6E5FF';\n      });\n    });\n  })(); // stats\n\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  var camera = canvas.getCamera();\n  camera.pan(1000, 800);\n  camera.setZoom(0.05);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n\n    console.log(canvas.getStats()); // manipulate camera instead of the root of canvas\n\n    camera.rotate(0, 0, 0.1);\n  }); // handle mouse wheel event\n\n  var bindWheelHandler = function bindWheelHandler() {\n    // update Camera's zoom\n    // @see https://github.com/mrdoob/three.js/blob/master/examples/jsm/controls/OrbitControls.js\n    var minZoom = 0;\n    var maxZoom = Infinity;\n    canvas.getContextService().getDomElement() // g-canvas/webgl 为 <canvas>，g-svg 为 <svg>\n    .addEventListener('wheel', function (e) {\n      e.preventDefault();\n      var zoom;\n\n      if (e.deltaY < 0) {\n        zoom = Math.max(minZoom, Math.min(maxZoom, camera.getZoom() / 0.95));\n      } else {\n        zoom = Math.max(minZoom, Math.min(maxZoom, camera.getZoom() * 0.95));\n      }\n\n      camera.setZoom(zoom);\n    }, {\n      passive: false\n    });\n  }; // use hammer.js\n\n\n  var hammer = new _hammerjs.default(canvas);\n  hammer.on('pan', function (ev) {\n    camera.pan(-ev.deltaX / Math.pow(2, camera.getZoom()), -ev.deltaY / Math.pow(2, camera.getZoom()));\n  });\n  bindWheelHandler(); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'webgl'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n    bindWheelHandler();\n  });\n  rendererFolder.open();\n});"},{"relativePath":"perf/demo/group-move.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/perf/demo/group-move.js","order":6,"filename":"group-move.js","title":{"zh":"频繁移动 Group","en":"Move groups"},"source":"import { Canvas, Circle, Group, Path, Text } from '@antv/g';\nimport { Renderer } from '@antv/g-canvas';\nimport Stats from 'stats.js';\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\n\n// create a renderer\nconst canvasRenderer = new Renderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\nconst groups = Array(1000)\n  .fill(1)\n  .map(() => {\n    const text = new Text({\n      attrs: {\n        x: 100,\n        y: 100,\n        fontFamily: 'PingFang SC',\n        text: '这是测试文本This is text',\n        fontSize: 15,\n        fill: '#1890FF',\n        stroke: '#F04864',\n        lineWidth: 5,\n      },\n    });\n    const circle = new Circle({\n      attrs: {\n        r: 20,\n        fill: '#000',\n      },\n    });\n    const path = new Path({\n      attrs: {\n        path: [\n          ['M', 0, 0],\n          ['L', 100, 100],\n        ],\n        lineWidth: 2,\n        stroke: 'black',\n      },\n    });\n    const gg = new Group({\n      style: {\n        x: 100,\n        y: 100,\n      },\n    });\n    gg.appendChild(text);\n    gg.appendChild(circle);\n    gg.appendChild(path);\n    canvas.appendChild(gg);\n    return gg;\n  });\n\nconst loop = () => {\n  if (stats) {\n    stats.update();\n  }\n\n  groups.forEach((group) =>\n    // ~30FPS\n    // group.attr({\n    //   x: Math.random() * 600,\n    //   y: Math.random() * 500,\n    // }),\n    // ~60FPS\n    group.setLocalPosition(Math.random() * 600, Math.random() * 500),\n  );\n  setTimeout(loop);\n};\nloop();\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.stats);\n    global.groupMove = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _stats) {\n  \"use strict\";\n\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  // stats\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats); // create a renderer\n\n  var canvasRenderer = new _gCanvas.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  var groups = Array(1000).fill(1).map(function () {\n    var text = new _g.Text({\n      attrs: {\n        x: 100,\n        y: 100,\n        fontFamily: 'PingFang SC',\n        text: '这是测试文本This is text',\n        fontSize: 15,\n        fill: '#1890FF',\n        stroke: '#F04864',\n        lineWidth: 5\n      }\n    });\n    var circle = new _g.Circle({\n      attrs: {\n        r: 20,\n        fill: '#000'\n      }\n    });\n    var path = new _g.Path({\n      attrs: {\n        path: [['M', 0, 0], ['L', 100, 100]],\n        lineWidth: 2,\n        stroke: 'black'\n      }\n    });\n    var gg = new _g.Group({\n      style: {\n        x: 100,\n        y: 100\n      }\n    });\n    gg.appendChild(text);\n    gg.appendChild(circle);\n    gg.appendChild(path);\n    canvas.appendChild(gg);\n    return gg;\n  });\n\n  var loop = function loop() {\n    if (stats) {\n      stats.update();\n    }\n\n    groups.forEach(function (group) {\n      return (// ~30FPS\n        // group.attr({\n        //   x: Math.random() * 600,\n        //   y: Math.random() * 500,\n        // }),\n        // ~60FPS\n        group.setLocalPosition(Math.random() * 600, Math.random() * 500)\n      );\n    });\n    setTimeout(loop);\n  };\n\n  loop();\n});"},{"relativePath":"perf/demo/texts.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/perf/demo/texts.js","order":10,"filename":"texts.js","title":{"zh":"大量文本","en":"Instanced Text"},"source":"import { Canvas, CanvasEvent, Text } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSansCJKsc-VF.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: webglRenderer,\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  for (let i = 0; i < 100; i++) {\n    const text = new Text({\n      style: {\n        x: Math.random() * 600,\n        y: Math.random() * 500,\n        fontFamily: 'PingFang SC',\n        text: '测试文本' + i,\n        fontSize: 50 + Math.random() * 10,\n        fill: i % 2 === 0 ? '#1890FF' : 'red',\n      },\n    });\n    canvas.appendChild(text);\n  }\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\n\nconst camera = canvas.getCamera();\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n\n  // manipulate camera instead of the root of canvas\n  camera.rotate(0, 0, 1);\n});\n\n// update Camera's zoom\n// @see https://github.com/mrdoob/three.js/blob/master/examples/jsm/controls/OrbitControls.js\nconst minZoom = 0;\nconst maxZoom = Infinity;\ncanvas\n  .getContextService()\n  .getDomElement() // g-canvas/webgl 为 <canvas>，g-svg 为 <svg>\n  .addEventListener(\n    'wheel',\n    (e) => {\n      e.preventDefault();\n      let zoom;\n      if (e.deltaY < 0) {\n        zoom = Math.max(minZoom, Math.min(maxZoom, camera.getZoom() / 0.95));\n      } else {\n        zoom = Math.max(minZoom, Math.min(maxZoom, camera.getZoom() * 0.95));\n      }\n      camera.setZoom(zoom);\n    },\n    { passive: false },\n  );\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'webgl',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.texts = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSansCJKsc-VF.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: webglRenderer\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    for (var i = 0; i < 100; i++) {\n      var text = new _g.Text({\n        style: {\n          x: Math.random() * 600,\n          y: Math.random() * 500,\n          fontFamily: 'PingFang SC',\n          text: '测试文本' + i,\n          fontSize: 50 + Math.random() * 10,\n          fill: i % 2 === 0 ? '#1890FF' : 'red'\n        }\n      });\n      canvas.appendChild(text);\n    }\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  var camera = canvas.getCamera();\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    } // manipulate camera instead of the root of canvas\n\n\n    camera.rotate(0, 0, 1);\n  }); // update Camera's zoom\n  // @see https://github.com/mrdoob/three.js/blob/master/examples/jsm/controls/OrbitControls.js\n\n  var minZoom = 0;\n  var maxZoom = Infinity;\n  canvas.getContextService().getDomElement() // g-canvas/webgl 为 <canvas>，g-svg 为 <svg>\n  .addEventListener('wheel', function (e) {\n    e.preventDefault();\n    var zoom;\n\n    if (e.deltaY < 0) {\n      zoom = Math.max(minZoom, Math.min(maxZoom, camera.getZoom() / 0.95));\n    } else {\n      zoom = Math.max(minZoom, Math.min(maxZoom, camera.getZoom() * 0.95));\n    }\n\n    camera.setZoom(zoom);\n  }, {\n    passive: false\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'webgl'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n});"},{"relativePath":"perf/demo/vs-g4.0.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/perf/demo/vs-g4.0.js","order":2,"filename":"vs-g4.0.js","title":{"zh":"与 G 4.0 对比","en":"Compared with G 4.0"},"source":"import { Canvas, CanvasEvent, Circle } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n/**\n * compared with G 4.0 ～20FPS\n * @see https://codesandbox.io/s/g-canvas-particles-2w-jyiie?file=/src/index.tsx\n */\n\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  let nodesNum = 5000;\n  for (let i = 0; i < nodesNum; i++) {\n    canvas.appendChild(\n      new Circle({\n        attrs: {\n          fill: '#C6E5FF',\n          stroke: '#5B8FF9',\n          r: 2,\n          cx: Math.random() * 600,\n          cy: Math.random() * 500,\n          lineWidth: 0.3,\n        },\n      }),\n    );\n  }\n});\n\nconst camera = canvas.getCamera();\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.on(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n\n  camera.rotate(0, 0, 1);\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.vsG40 = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * compared with G 4.0 ～20FPS\n   * @see https://codesandbox.io/s/g-canvas-particles-2w-jyiie?file=/src/index.tsx\n   */\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    var nodesNum = 5000;\n\n    for (var i = 0; i < nodesNum; i++) {\n      canvas.appendChild(new _g.Circle({\n        attrs: {\n          fill: '#C6E5FF',\n          stroke: '#5B8FF9',\n          r: 2,\n          cx: Math.random() * 600,\n          cy: Math.random() * 500,\n          lineWidth: 0.3\n        }\n      }));\n    }\n  });\n  var camera = canvas.getCamera(); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.on(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n\n    camera.rotate(0, 0, 1);\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n});"},{"relativePath":"perf/demo/redraw.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/perf/demo/redraw.js","order":5,"filename":"redraw.js","title":{"zh":"移动大量节点","en":"Move nodes"},"source":"import { Canvas, CanvasEvent, Circle, Group } from '@antv/g';\nimport { Renderer } from '@antv/g-canvas';\nimport Stats from 'stats.js';\n\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: new Renderer(),\n});\n\nconst group = new Group();\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  canvas.appendChild(group);\n  for (let i = 0; i < 1000; i++) {\n    const circle = new Circle({\n      style: {\n        cx: Math.random() * 600,\n        cy: Math.random() * 500,\n        r: 20 + Math.random() * 10,\n        fill: '#1890FF',\n        stroke: '#F04864',\n        lineWidth: 4,\n        cursor: 'pointer',\n      },\n    });\n    group.appendChild(circle);\n\n    circle.on('mouseenter', () => {\n      circle.attr('fill', '#2FC25B');\n    });\n\n    circle.on('mouseleave', () => {\n      circle.attr('fill', '#1890FF');\n    });\n  }\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\n\nlet t = 0;\nconst spin = () => {\n  console.log(canvas.getStats());\n  if (stats) {\n    stats.update();\n  }\n  group.translate(t < 20 ? 5 : -5);\n  if (t > 40) {\n    t = 0;\n  }\n  t++;\n  window.requestAnimationFrame(spin);\n};\n\nspin();\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.stats);\n    global.redraw = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _stats) {\n  \"use strict\";\n\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: new _gCanvas.Renderer()\n  });\n  var group = new _g.Group();\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    canvas.appendChild(group);\n\n    var _loop = function _loop(i) {\n      var circle = new _g.Circle({\n        style: {\n          cx: Math.random() * 600,\n          cy: Math.random() * 500,\n          r: 20 + Math.random() * 10,\n          fill: '#1890FF',\n          stroke: '#F04864',\n          lineWidth: 4,\n          cursor: 'pointer'\n        }\n      });\n      group.appendChild(circle);\n      circle.on('mouseenter', function () {\n        circle.attr('fill', '#2FC25B');\n      });\n      circle.on('mouseleave', function () {\n        circle.attr('fill', '#1890FF');\n      });\n    };\n\n    for (var i = 0; i < 1000; i++) {\n      _loop(i);\n    }\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  var t = 0;\n\n  var spin = function spin() {\n    console.log(canvas.getStats());\n\n    if (stats) {\n      stats.update();\n    }\n\n    group.translate(t < 20 ? 5 : -5);\n\n    if (t > 40) {\n      t = 0;\n    }\n\n    t++;\n    window.requestAnimationFrame(spin);\n  };\n\n  spin();\n});"},{"relativePath":"perf/demo/webgl-circle-path.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/perf/demo/webgl-circle-path.js","order":1,"filename":"webgl-circle-path.js","title":{"zh":"g-webgl 渲染 Circle 和 Path","en":"Render Circle & Path with g-webgl"},"source":"import { Canvas, CanvasEvent, Circle, Path, Text } from '@antv/g';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport Stats from 'stats.js';\n\n/**\n * do `pan` action with camera\n *\n * compared with G 4.0 ～30FPS\n * @see https://codesandbox.io/s/g-4-0-data1-pan-g8t95d?file=/index.js\n */\n\nconst renderer = new WebGLRenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer,\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  let edgesNum = 2742;\n  for (let i = 0; i < edgesNum; i++) {\n    const x = Math.random() * 600;\n    const y = Math.random() * 500;\n    canvas.appendChild(\n      new Path({\n        attrs: {\n          d: `M ${x} ${y} L ${x + Math.random() * 100} ${y + Math.random() * 50}`,\n          lineWidth: 1,\n          stroke: '#000',\n          lineWidth: 0.3,\n        },\n      }),\n      // new Line({\n      //   attrs: {\n      //     x1: x,\n      //     y1: y,\n      //     x2: x + Math.random() * 100,\n      //     y2: y + Math.random() * 50,\n      //     lineWidth: 1,\n      //     stroke: '#000',\n      //     lineWidth: 0.3,\n      //   },\n      // }),\n    );\n  }\n  let nodesNum = 1589;\n  for (let i = 0; i < nodesNum; i++) {\n    const x = Math.random() * 600;\n    const y = Math.random() * 500;\n    canvas.appendChild(\n      new Circle({\n        attrs: {\n          fill: '#C6E5FF',\n          stroke: '#5B8FF9',\n          r: 2,\n          cx: x,\n          cy: y,\n          lineWidth: 0.3,\n        },\n      }),\n    );\n    canvas.appendChild(\n      new Text({\n        attrs: {\n          text: 'ccc',\n          x,\n          y,\n          fill: '#ccc',\n          fontSize: 12,\n        },\n      }),\n    );\n  }\n});\n\nconst camera = canvas.getCamera();\nlet count = 0;\nlet tag = 1;\nconst animate = () => {\n  if (stats) {\n    stats.update();\n  }\n  count++;\n  if (count % 80 === 0) {\n    count = 0;\n    tag *= -1;\n  }\n  camera.pan(tag, tag);\n  requestAnimationFrame(animate);\n};\n\nrequestAnimationFrame(animate);\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-webgl\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-webgl\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gWebgl, global.stats);\n    global.webglCirclePath = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gWebgl, _stats) {\n  \"use strict\";\n\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  /**\n   * do `pan` action with camera\n   *\n   * compared with G 4.0 ～30FPS\n   * @see https://codesandbox.io/s/g-4-0-data1-pan-g8t95d?file=/index.js\n   */\n  var renderer = new _gWebgl.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: renderer\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    var edgesNum = 2742;\n\n    for (var i = 0; i < edgesNum; i++) {\n      var x = Math.random() * 600;\n      var y = Math.random() * 500;\n      canvas.appendChild(new _g.Path({\n        attrs: _defineProperty({\n          d: \"M \".concat(x, \" \").concat(y, \" L \").concat(x + Math.random() * 100, \" \").concat(y + Math.random() * 50),\n          lineWidth: 1,\n          stroke: '#000'\n        }, \"lineWidth\", 0.3)\n      }) // new Line({\n      //   attrs: {\n      //     x1: x,\n      //     y1: y,\n      //     x2: x + Math.random() * 100,\n      //     y2: y + Math.random() * 50,\n      //     lineWidth: 1,\n      //     stroke: '#000',\n      //     lineWidth: 0.3,\n      //   },\n      // }),\n      );\n    }\n\n    var nodesNum = 1589;\n\n    for (var _i = 0; _i < nodesNum; _i++) {\n      var _x = Math.random() * 600;\n\n      var _y = Math.random() * 500;\n\n      canvas.appendChild(new _g.Circle({\n        attrs: {\n          fill: '#C6E5FF',\n          stroke: '#5B8FF9',\n          r: 2,\n          cx: _x,\n          cy: _y,\n          lineWidth: 0.3\n        }\n      }));\n      canvas.appendChild(new _g.Text({\n        attrs: {\n          text: 'ccc',\n          x: _x,\n          y: _y,\n          fill: '#ccc',\n          fontSize: 12\n        }\n      }));\n    }\n  });\n  var camera = canvas.getCamera();\n  var count = 0;\n  var tag = 1;\n\n  var animate = function animate() {\n    if (stats) {\n      stats.update();\n    }\n\n    count++;\n\n    if (count % 80 === 0) {\n      count = 0;\n      tag *= -1;\n    }\n\n    camera.pan(tag, tag);\n    requestAnimationFrame(animate);\n  };\n\n  requestAnimationFrame(animate); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n});"},{"relativePath":"perf/demo/circle-animation.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/perf/demo/circle-animation.js","order":-1,"filename":"circle-animation.js","source":"import { Canvas, CanvasEvent, Circle } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n/**\n * G4.0 @see https://rurm4c.csb.app/\n * @see https://codesandbox.io/s/g-canvas-4-0-animation-rurm4c?file=/src/index.tsx\n */\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n});\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  for (let i = 0; i < 5000; i++) {\n    const circle = new Circle({\n      style: {\n        cx: Math.random() * 600,\n        cy: Math.random() * 500,\n        r: 10 + Math.random() * 5,\n        fill: '#1890FF',\n        stroke: '#F04864',\n        lineWidth: 4,\n      },\n    });\n\n    canvas.appendChild(circle);\n\n    circle.animate([{ opacity: 1 }, { opacity: 0 }], {\n      duration: 1000,\n      delay: 1000,\n      fill: 'both',\n      iterations: Infinity,\n    });\n  }\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nlet currentRenderer = canvasRenderer;\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\n\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.lilGui, global.stats);\n    global.circleAnimation = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * G4.0 @see https://rurm4c.csb.app/\n   * @see https://codesandbox.io/s/g-canvas-4-0-animation-rurm4c?file=/src/index.tsx\n   */\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/'\n  }); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    for (var i = 0; i < 5000; i++) {\n      var circle = new _g.Circle({\n        style: {\n          cx: Math.random() * 600,\n          cy: Math.random() * 500,\n          r: 10 + Math.random() * 5,\n          fill: '#1890FF',\n          stroke: '#F04864',\n          lineWidth: 4\n        }\n      });\n      canvas.appendChild(circle);\n      circle.animate([{\n        opacity: 1\n      }, {\n        opacity: 0\n      }], {\n        duration: 1000,\n        delay: 1000,\n        fill: 'both',\n        iterations: Infinity\n      });\n    }\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var currentRenderer = canvasRenderer;\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n});"},{"relativePath":"perf/demo/path-animation.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/perf/demo/path-animation.js","order":-1,"filename":"path-animation.js","source":"import { Canvas, CanvasEvent, Path } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n/**\n * G4.0 @see https://tnwwc1.csb.app/\n * @see https://codesandbox.io/s/g-canvas-4-0-animation2-tnwwc1?file=/src/index.tsx\n */\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n});\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  for (let i = 0; i < 5000; i++) {\n    const x = Math.random() * 600;\n    const y = Math.random() * 500;\n    const path = canvas.appendChild(\n      new Path({\n        attrs: {\n          fill: '#C6E5FF',\n          stroke: '#5B8FF9',\n          path: `M${54.4462133232839 + x},${-6.41757177038063 + y} L${61.3765714868427 + x},${\n            6.41757177038063 + y\n          } M${61.3765714868427 + x},${6.41757177038063 + y} L${61.54285370420826 + x},${\n            0.5852759906612777 + y\n          }M${61.3765714868427 + x},${6.41757177038063 + y}L${56.4087962879037 + x},${\n            3.3574192560847824 + y\n          }`,\n        },\n      }),\n    );\n\n    path.animate([{ opacity: 0 }, { opacity: 1 }], {\n      duration: 1000,\n      delay: 1000,\n      fill: 'both',\n      iterations: 5,\n    });\n  }\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\n\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.lilGui, global.stats);\n    global.pathAnimation = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * G4.0 @see https://tnwwc1.csb.app/\n   * @see https://codesandbox.io/s/g-canvas-4-0-animation2-tnwwc1?file=/src/index.tsx\n   */\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/'\n  }); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    for (var i = 0; i < 5000; i++) {\n      var x = Math.random() * 600;\n      var y = Math.random() * 500;\n      var path = canvas.appendChild(new _g.Path({\n        attrs: {\n          fill: '#C6E5FF',\n          stroke: '#5B8FF9',\n          path: \"M\".concat(54.4462133232839 + x, \",\").concat(-6.41757177038063 + y, \" L\").concat(61.3765714868427 + x, \",\").concat(6.41757177038063 + y, \" M\").concat(61.3765714868427 + x, \",\").concat(6.41757177038063 + y, \" L\").concat(61.54285370420826 + x, \",\").concat(0.5852759906612777 + y, \"M\").concat(61.3765714868427 + x, \",\").concat(6.41757177038063 + y, \"L\").concat(56.4087962879037 + x, \",\").concat(3.3574192560847824 + y)\n        }\n      }));\n      path.animate([{\n        opacity: 0\n      }, {\n        opacity: 1\n      }], {\n        duration: 1000,\n        delay: 1000,\n        fill: 'both',\n        iterations: 5\n      });\n    }\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n});"},{"relativePath":"guide/demo/chapter2.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/guide/demo/chapter2.js","order":0,"filename":"chapter2.js","title":{"zh":"基础教程第二节：使用渲染器","en":"Guide chapter2: use renderer"},"source":"import { Canvas, CanvasEvent, Circle, Line, Text } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\nconst node1 = new Circle({\n  style: {\n    r: 40,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 4,\n  },\n});\nconst text1 = new Text({\n  style: {\n    text: 'Node1', // 文本内容\n    fontFamily: 'Avenir', // 字体\n    fontSize: 22, // 字号\n    fill: '#fff', // 文本颜色\n    textAlign: 'center', // 水平居中\n    textBaseline: 'middle', // 垂直居中\n  },\n});\nnode1.appendChild(text1);\nnode1.setPosition(200, 200);\n\nconst node2 = new Circle({\n  style: {\n    r: 40,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 4,\n  },\n});\nconst text2 = new Text({\n  style: {\n    text: 'Node2', // 文本内容\n    fontFamily: 'Avenir', // 字体\n    fontSize: 22, // 字号\n    fill: '#fff', // 文本颜色\n    textAlign: 'center', // 水平居中\n    textBaseline: 'middle', // 垂直居中\n  },\n});\nnode2.appendChild(text2);\nnode2.setPosition(400, 200);\n\nconst edge = new Line({\n  style: {\n    x1: 200,\n    y1: 200,\n    x2: 400,\n    y2: 200,\n    stroke: '#1890FF',\n    lineWidth: 2,\n  },\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  canvas.appendChild(edge);\n  canvas.appendChild(node1);\n  canvas.appendChild(node2);\n});\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas);\n    global.chapter2 = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas) {\n  \"use strict\";\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  var node1 = new _g.Circle({\n    style: {\n      r: 40,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4\n    }\n  });\n  var text1 = new _g.Text({\n    style: {\n      text: 'Node1',\n      // 文本内容\n      fontFamily: 'Avenir',\n      // 字体\n      fontSize: 22,\n      // 字号\n      fill: '#fff',\n      // 文本颜色\n      textAlign: 'center',\n      // 水平居中\n      textBaseline: 'middle' // 垂直居中\n\n    }\n  });\n  node1.appendChild(text1);\n  node1.setPosition(200, 200);\n  var node2 = new _g.Circle({\n    style: {\n      r: 40,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4\n    }\n  });\n  var text2 = new _g.Text({\n    style: {\n      text: 'Node2',\n      // 文本内容\n      fontFamily: 'Avenir',\n      // 字体\n      fontSize: 22,\n      // 字号\n      fill: '#fff',\n      // 文本颜色\n      textAlign: 'center',\n      // 水平居中\n      textBaseline: 'middle' // 垂直居中\n\n    }\n  });\n  node2.appendChild(text2);\n  node2.setPosition(400, 200);\n  var edge = new _g.Line({\n    style: {\n      x1: 200,\n      y1: 200,\n      x2: 400,\n      y2: 200,\n      stroke: '#1890FF',\n      lineWidth: 2\n    }\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    canvas.appendChild(edge);\n    canvas.appendChild(node1);\n    canvas.appendChild(node2);\n  });\n});"},{"relativePath":"guide/demo/chapter3.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/guide/demo/chapter3.js","order":1,"filename":"chapter3.js","title":{"zh":"基础教程第三节：添加交互","en":"Guide chapter3: interaction"},"source":"import { Canvas, CanvasEvent, Circle, Line, Text } from '@antv/g';\nimport { Renderer } from '@antv/g-canvas';\nimport interact from 'interactjs';\n\n// 创建 Canvas2D 渲染器\nconst canvasRenderer = new Renderer();\n\n// 创建画布\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\n// 创建节点1\nconst node1 = new Circle({\n  style: {\n    r: 40,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 4,\n    cursor: 'pointer',\n  },\n});\nconst text1 = new Text({\n  style: {\n    text: 'Node1', // 文本内容\n    fontFamily: 'Avenir', // 字体\n    fontSize: 22, // 字号\n    fill: '#fff', // 文本颜色\n    textAlign: 'center', // 水平居中\n    textBaseline: 'middle', // 垂直居中\n  },\n});\nnode1.appendChild(text1);\nnode1.setPosition(200, 200);\n\n// 创建节点2\nconst node2 = new Circle({\n  style: {\n    r: 40,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 4,\n  },\n});\nconst text2 = new Text({\n  style: {\n    text: 'Node2', // 文本内容\n    fontFamily: 'Avenir', // 字体\n    fontSize: 22, // 字号\n    fill: '#fff', // 文本颜色\n    textAlign: 'center', // 水平居中\n    textBaseline: 'middle', // 垂直居中\n  },\n});\nnode2.appendChild(text2);\nnode2.setPosition(400, 200);\n\n// 创建边\nconst edge = new Line({\n  style: {\n    x1: 200,\n    y1: 200,\n    x2: 400,\n    y2: 200,\n    stroke: '#1890FF',\n    lineWidth: 2,\n  },\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  // 向画布中添加图形\n  canvas.appendChild(edge);\n  canvas.appendChild(node1);\n  canvas.appendChild(node2);\n\n  // 为节点1添加交互，鼠标悬停改变颜色\n  node1.addEventListener('mouseenter', () => {\n    node1.style.fill = 'red';\n  });\n  node1.addEventListener('mouseleave', () => {\n    node1.style.fill = '#1890FF';\n  });\n\n  // 使用 interact.js 实现拖拽\n  interact(node1, {\n    // 直接传入节点1\n    context: canvas.document, // 传入上下文\n  }).draggable({\n    onmove: function (event) {\n      // interact.js 告诉我们的偏移量\n      const { dx, dy } = event;\n      // 改变节点1位置\n      node1.translateLocal(dx, dy);\n      // 获取节点1位置\n      const [nx, ny] = node1.getLocalPosition();\n      // 改变边的端点位置\n      edge.style.x1 = nx;\n      edge.style.y1 = ny;\n    },\n  });\n});\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"interactjs\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"interactjs\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.interactjs);\n    global.chapter3 = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _interactjs) {\n  \"use strict\";\n\n  _interactjs = _interopRequireDefault(_interactjs);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  // 创建 Canvas2D 渲染器\n  var canvasRenderer = new _gCanvas.Renderer(); // 创建画布\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  }); // 创建节点1\n\n  var node1 = new _g.Circle({\n    style: {\n      r: 40,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n      cursor: 'pointer'\n    }\n  });\n  var text1 = new _g.Text({\n    style: {\n      text: 'Node1',\n      // 文本内容\n      fontFamily: 'Avenir',\n      // 字体\n      fontSize: 22,\n      // 字号\n      fill: '#fff',\n      // 文本颜色\n      textAlign: 'center',\n      // 水平居中\n      textBaseline: 'middle' // 垂直居中\n\n    }\n  });\n  node1.appendChild(text1);\n  node1.setPosition(200, 200); // 创建节点2\n\n  var node2 = new _g.Circle({\n    style: {\n      r: 40,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4\n    }\n  });\n  var text2 = new _g.Text({\n    style: {\n      text: 'Node2',\n      // 文本内容\n      fontFamily: 'Avenir',\n      // 字体\n      fontSize: 22,\n      // 字号\n      fill: '#fff',\n      // 文本颜色\n      textAlign: 'center',\n      // 水平居中\n      textBaseline: 'middle' // 垂直居中\n\n    }\n  });\n  node2.appendChild(text2);\n  node2.setPosition(400, 200); // 创建边\n\n  var edge = new _g.Line({\n    style: {\n      x1: 200,\n      y1: 200,\n      x2: 400,\n      y2: 200,\n      stroke: '#1890FF',\n      lineWidth: 2\n    }\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    // 向画布中添加图形\n    canvas.appendChild(edge);\n    canvas.appendChild(node1);\n    canvas.appendChild(node2); // 为节点1添加交互，鼠标悬停改变颜色\n\n    node1.addEventListener('mouseenter', function () {\n      node1.style.fill = 'red';\n    });\n    node1.addEventListener('mouseleave', function () {\n      node1.style.fill = '#1890FF';\n    }); // 使用 interact.js 实现拖拽\n\n    (0, _interactjs.default)(node1, {\n      // 直接传入节点1\n      context: canvas.document // 传入上下文\n\n    }).draggable({\n      onmove: function onmove(event) {\n        // interact.js 告诉我们的偏移量\n        var dx = event.dx,\n            dy = event.dy; // 改变节点1位置\n\n        node1.translateLocal(dx, dy); // 获取节点1位置\n\n        var _node1$getLocalPositi = node1.getLocalPosition(),\n            _node1$getLocalPositi2 = _slicedToArray(_node1$getLocalPositi, 2),\n            nx = _node1$getLocalPositi2[0],\n            ny = _node1$getLocalPositi2[1]; // 改变边的端点位置\n\n\n        edge.style.x1 = nx;\n        edge.style.y1 = ny;\n      }\n    });\n  });\n});"},{"relativePath":"gpgpu/demo/bellman-ford-big-dataset.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/gpgpu/demo/bellman-ford-big-dataset.js","order":5,"filename":"bellman-ford-big-dataset.js","title":{"zh":"Bellman-Ford 最短路径算法（1k 节点 5k 边）","en":"Bellman-Ford SSSP(1k vertices & 5k edges)"},"source":"import { Canvas } from '@antv/g';\nimport { Kernel, Plugin } from '@antv/g-plugin-gpgpu';\nimport { DeviceRenderer, Renderer } from '@antv/g-webgpu';\nimport { Algorithm } from '@antv/g6';\n\nconst { BufferUsage } = DeviceRenderer;\n\n/**\n * SSSP(Bellman-Ford) ported from CUDA,\n * find all shortest paths started from Node 0\n * @see https://www.lewuathe.com/illustration-of-distributed-bellman-ford-algorithm.html\n * @see https://github.com/sengorajkumar/gpu_graph_algorithms\n *\n * compared with G6:\n * @see https://g6.antv.vision/zh/docs/api/Algorithm#findshortestpathgraphdata-start-end-directed-weightpropertyname\n *\n * dataset: 1k vertices & 5k edges\n * @see https://github.com/sengorajkumar/gpu_graph_algorithms/tree/master/input\n */\n\nconst $wrapper = document.getElementById('container');\n(async () => {\n  // load & parse CSV datasets, which use Compressed Sparse Row (CSR) for adjacency list\n  const [V, E, From, To, I, W] = await Promise.all(\n    [\n      'https://gw.alipayobjects.com/os/bmw-prod/0272cae4-5ae0-4fbd-93f9-2b6a8e640a24.csv',\n      'https://gw.alipayobjects.com/os/bmw-prod/e8b24b84-3cc4-4a73-b213-7edf4467e03a.csv',\n      'https://gw.alipayobjects.com/os/bmw-prod/cba4ec3d-4eca-4f85-ae54-faeee0fa708a.csv',\n      'https://gw.alipayobjects.com/os/bmw-prod/8582d1ca-9fe6-4afb-8364-df6ccc619594.csv',\n      'https://gw.alipayobjects.com/os/bmw-prod/d84981b4-edcf-4df5-b672-45b0000fc5da.csv',\n      'https://gw.alipayobjects.com/os/bmw-prod/eb455fa7-73ac-43fe-bc5e-d5e6c3a1fb77.csv',\n    ].map(async (url, i) => {\n      const res = await fetch(url);\n      // adjust index for V, E, From and To\n      return (await res.text()).split(',').map((v) => Number(v.trim()) - (i <= 3 ? 1 : 0));\n    }),\n  );\n\n  // use G6's `findShortestPath` method\n  let startTime = window.performance.now();\n  let paths = calculateInCPU(V, From, To, W);\n  showResult('CPU', startTime, window.performance.now(), paths);\n\n  // use Compute Shader with WebGPU\n  startTime = window.performance.now();\n  paths = await calculateInGPU(V, E, I, W);\n  showResult('GPU', startTime, window.performance.now(), paths);\n})();\n\n// calculate with G6's SSSP in CPU\nconst calculateInCPU = (V, From, To, W) => {\n  const { findShortestPath } = Algorithm;\n  const data = {\n    nodes: V.map((v) => ({\n      id: `${v}`,\n      label: `${v}`,\n    })),\n    edges: From.map((from, i) => ({\n      source: `${from}`,\n      target: `${To[i]}`,\n      weight: W[i],\n    })),\n  };\n\n  const paths = [];\n  for (let i = 0; i < data.nodes.length; i++) {\n    // use SSSP for Node 0\n    const { length, path } = findShortestPath(data, '0', data.nodes[i].id, true, 'weight');\n    paths.push({\n      to: data.nodes[i].id,\n      length,\n      path,\n    });\n  }\n  return paths;\n};\n\n// we use 3 kernels\nconst calculateInGPU = async (V, E, I, W) => {\n  // The total number of workgroup invocations (4096) exceeds the maximum allowed (256).\n  const BLOCK_SIZE = 1;\n  const BLOCKS = 256;\n  const CANVAS_SIZE = 1;\n  const MAX_DISTANCE = 1000000;\n\n  // use WebGPU\n  const renderer = new Renderer();\n  renderer.registerPlugin(new Plugin());\n\n  // create a canvas\n  const canvas = new Canvas({\n    container: $wrapper,\n    width: CANVAS_SIZE,\n    height: CANVAS_SIZE,\n    renderer,\n  });\n\n  // wait for canvas' services ready\n  await canvas.ready;\n  const plugin = renderer.getPlugin('device-renderer');\n  const device = plugin.getDevice();\n\n  const relaxKernel = new Kernel(device, {\n    computeShader: `\nstruct Buffer {\n  data: array<i32>,\n};\nstruct AtomicBuffer {\n  data: array<atomic<i32>>,\n};\n\n@group(0) @binding(0) var<storage, read> d_in_E : Buffer;\n@group(0) @binding(1) var<storage, read> d_in_I : Buffer;\n@group(0) @binding(2) var<storage, read> d_in_W : Buffer;\n@group(0) @binding(3) var<storage, read> d_out_D : Buffer;\n@group(0) @binding(4) var<storage, read_write> d_out_Di : AtomicBuffer;\n\n@stage(compute) @workgroup_size(${BLOCKS}, ${BLOCK_SIZE})\nfn main(\n  @builtin(global_invocation_id) global_id : vec3<u32>\n) {\n  var index = global_id.x;\n  if (index < ${V.length}u) {\n    for (var j = d_in_I.data[index]; j < d_in_I.data[index + 1u]; j = j + 1) {\n      var w = d_in_W.data[j];\n      var du = d_out_D.data[index];\n      var dv = d_out_D.data[d_in_E.data[j]];\n      var newDist = du + w;\n      if (du == ${MAX_DISTANCE}) {\n        newDist = ${MAX_DISTANCE};\n      }\n\n      if (newDist < dv) {\n        atomicMin(&d_out_Di.data[d_in_E.data[j]], newDist);\n      }\n    }\n  }\n}`,\n  });\n\n  const updateDistanceKernel = new Kernel(device, {\n    computeShader: `\nstruct Buffer {\n  data: array<i32>,\n};\n\n@group(0) @binding(0) var<storage, read_write> d_out_D : Buffer;\n@group(0) @binding(1) var<storage, read_write> d_out_Di : Buffer;\n\n@stage(compute) @workgroup_size(${BLOCKS}, ${BLOCK_SIZE})\nfn main(\n  @builtin(global_invocation_id) global_id : vec3<u32>\n) {\n  var index = global_id.x;\n  if (index < ${V.length}u) {\n    if (d_out_D.data[index] > d_out_Di.data[index]) {\n      d_out_D.data[index] = d_out_Di.data[index];\n    }\n    d_out_Di.data[index] = d_out_D.data[index];\n  }\n}\n    `,\n  });\n\n  const updatePredKernel = new Kernel(device, {\n    computeShader: `\nstruct Buffer {\n  data: array<i32>,\n};\nstruct AtomicBuffer {\n  data: array<atomic<i32>>,\n};\n\n@group(0) @binding(0) var<storage, read> d_in_V : Buffer;\n@group(0) @binding(1) var<storage, read> d_in_E : Buffer;\n@group(0) @binding(2) var<storage, read> d_in_I : Buffer;\n@group(0) @binding(3) var<storage, read> d_in_W : Buffer;\n@group(0) @binding(4) var<storage, read> d_out_D : Buffer;\n@group(0) @binding(5) var<storage, read_write> d_out_P : AtomicBuffer;\n\n@stage(compute) @workgroup_size(${BLOCKS}, ${BLOCK_SIZE})\nfn main(\n  @builtin(global_invocation_id) global_id : vec3<u32>\n) {\n  var index = global_id.x;\n  if (index < ${V.length}u) {\n    for (var j = d_in_I.data[index]; j < d_in_I.data[index + 1u]; j = j + 1) {\n      var u = d_in_V.data[index];\n      var w = d_in_W.data[j];\n\n      var dis_u = d_out_D.data[index];\n      var dis_v = d_out_D.data[d_in_E.data[j]];\n      if (dis_v == dis_u + w) {\n        atomicMin(&d_out_P.data[d_in_E.data[j]], u);\n      }\n    }\n  }\n}    \n    `,\n  });\n\n  const VBuffer = device.createBuffer({\n    usage: BufferUsage.STORAGE,\n    viewOrSize: new Int32Array(V),\n  });\n  const EBuffer = device.createBuffer({\n    usage: BufferUsage.STORAGE,\n    viewOrSize: new Int32Array(E),\n  });\n  const IBuffer = device.createBuffer({\n    usage: BufferUsage.STORAGE,\n    viewOrSize: new Int32Array(I),\n  });\n  const WBuffer = device.createBuffer({\n    usage: BufferUsage.STORAGE,\n    viewOrSize: new Int32Array(W),\n  });\n  const DOutBuffer = device.createBuffer({\n    usage: BufferUsage.STORAGE | BufferUsage.COPY_SRC,\n    // since we want to find all paths for Node 0, set the first element to 0\n    viewOrSize: new Int32Array([0, ...new Array(V.length - 1).fill(MAX_DISTANCE)]),\n  });\n  const DiOutBuffer = device.createBuffer({\n    usage: BufferUsage.STORAGE | BufferUsage.COPY_SRC,\n    viewOrSize: new Int32Array([0, ...new Array(V.length - 1).fill(MAX_DISTANCE)]),\n  });\n\n  // store predecessors\n  const POutBuffer = device.createBuffer({\n    usage: BufferUsage.STORAGE | BufferUsage.COPY_SRC,\n    viewOrSize: new Int32Array([0, ...new Array(V.length - 1).fill(MAX_DISTANCE)]),\n  });\n  const readback = device.createReadback();\n\n  relaxKernel.setBinding(0, EBuffer);\n  relaxKernel.setBinding(1, IBuffer);\n  relaxKernel.setBinding(2, WBuffer);\n  relaxKernel.setBinding(3, DOutBuffer);\n  relaxKernel.setBinding(4, DiOutBuffer);\n\n  updateDistanceKernel.setBinding(0, DOutBuffer);\n  updateDistanceKernel.setBinding(1, DiOutBuffer);\n\n  updatePredKernel.setBinding(0, VBuffer);\n  updatePredKernel.setBinding(1, EBuffer);\n  updatePredKernel.setBinding(2, IBuffer);\n  updatePredKernel.setBinding(3, WBuffer);\n  updatePredKernel.setBinding(4, DOutBuffer);\n  updatePredKernel.setBinding(5, POutBuffer);\n\n  const grids = Math.ceil(V.length / (BLOCKS * BLOCK_SIZE));\n  for (let i = 1; i < V.length; i++) {\n    relaxKernel.dispatch(grids, 1);\n    updateDistanceKernel.dispatch(grids, 1);\n  }\n  updatePredKernel.dispatch(grids, 1);\n\n  const out = await readback.readBuffer(DiOutBuffer);\n  const predecessor = await readback.readBuffer(POutBuffer);\n\n  return Array.from(out).map((length, i) => ({\n    to: V[i],\n    length,\n    predecessor: V[predecessor[i]],\n  }));\n};\n\nconst $text = document.createElement('div');\n$text.textContent = 'Please open the devtools, the shortest paths will be printed in console.';\n$wrapper.appendChild($text);\n\nconst showResult = (label, startTime, endTime, paths) => {\n  const $cpu = document.createElement('div');\n  $cpu.textContent = `${label} Time Elapsed: ${Number.parseFloat(endTime - startTime).toFixed(\n    2,\n  )}ms`;\n  $wrapper.appendChild($cpu);\n  // print top nodes\n  console.log(paths);\n};\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-plugin-gpgpu\", \"@antv/g-webgpu\", \"@antv/g6\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-plugin-gpgpu\"), require(\"@antv/g-webgpu\"), require(\"@antv/g6\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gPluginGpgpu, global.gWebgpu, global.g6);\n    global.bellmanFordBigDataset = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gPluginGpgpu, _gWebgpu, _g2) {\n  \"use strict\";\n\n  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\n  function _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\n  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  var BufferUsage = _gWebgpu.DeviceRenderer.BufferUsage;\n  /**\n   * SSSP(Bellman-Ford) ported from CUDA,\n   * find all shortest paths started from Node 0\n   * @see https://www.lewuathe.com/illustration-of-distributed-bellman-ford-algorithm.html\n   * @see https://github.com/sengorajkumar/gpu_graph_algorithms\n   *\n   * compared with G6:\n   * @see https://g6.antv.vision/zh/docs/api/Algorithm#findshortestpathgraphdata-start-end-directed-weightpropertyname\n   *\n   * dataset: 1k vertices & 5k edges\n   * @see https://github.com/sengorajkumar/gpu_graph_algorithms/tree/master/input\n   */\n\n  var $wrapper = document.getElementById('container');\n\n  (async function () {\n    // load & parse CSV datasets, which use Compressed Sparse Row (CSR) for adjacency list\n    var _await$Promise$all = await Promise.all(['https://gw.alipayobjects.com/os/bmw-prod/0272cae4-5ae0-4fbd-93f9-2b6a8e640a24.csv', 'https://gw.alipayobjects.com/os/bmw-prod/e8b24b84-3cc4-4a73-b213-7edf4467e03a.csv', 'https://gw.alipayobjects.com/os/bmw-prod/cba4ec3d-4eca-4f85-ae54-faeee0fa708a.csv', 'https://gw.alipayobjects.com/os/bmw-prod/8582d1ca-9fe6-4afb-8364-df6ccc619594.csv', 'https://gw.alipayobjects.com/os/bmw-prod/d84981b4-edcf-4df5-b672-45b0000fc5da.csv', 'https://gw.alipayobjects.com/os/bmw-prod/eb455fa7-73ac-43fe-bc5e-d5e6c3a1fb77.csv'].map(async function (url, i) {\n      var res = await fetch(url); // adjust index for V, E, From and To\n\n      return (await res.text()).split(',').map(function (v) {\n        return Number(v.trim()) - (i <= 3 ? 1 : 0);\n      });\n    })),\n        _await$Promise$all2 = _slicedToArray(_await$Promise$all, 6),\n        V = _await$Promise$all2[0],\n        E = _await$Promise$all2[1],\n        From = _await$Promise$all2[2],\n        To = _await$Promise$all2[3],\n        I = _await$Promise$all2[4],\n        W = _await$Promise$all2[5]; // use G6's `findShortestPath` method\n\n\n    var startTime = window.performance.now();\n    var paths = calculateInCPU(V, From, To, W);\n    showResult('CPU', startTime, window.performance.now(), paths); // use Compute Shader with WebGPU\n\n    startTime = window.performance.now();\n    paths = await calculateInGPU(V, E, I, W);\n    showResult('GPU', startTime, window.performance.now(), paths);\n  })(); // calculate with G6's SSSP in CPU\n\n\n  var calculateInCPU = function calculateInCPU(V, From, To, W) {\n    var findShortestPath = _g2.Algorithm.findShortestPath;\n    var data = {\n      nodes: V.map(function (v) {\n        return {\n          id: \"\".concat(v),\n          label: \"\".concat(v)\n        };\n      }),\n      edges: From.map(function (from, i) {\n        return {\n          source: \"\".concat(from),\n          target: \"\".concat(To[i]),\n          weight: W[i]\n        };\n      })\n    };\n    var paths = [];\n\n    for (var i = 0; i < data.nodes.length; i++) {\n      // use SSSP for Node 0\n      var _findShortestPath = findShortestPath(data, '0', data.nodes[i].id, true, 'weight'),\n          length = _findShortestPath.length,\n          path = _findShortestPath.path;\n\n      paths.push({\n        to: data.nodes[i].id,\n        length: length,\n        path: path\n      });\n    }\n\n    return paths;\n  }; // we use 3 kernels\n\n\n  var calculateInGPU = async function calculateInGPU(V, E, I, W) {\n    // The total number of workgroup invocations (4096) exceeds the maximum allowed (256).\n    var BLOCK_SIZE = 1;\n    var BLOCKS = 256;\n    var CANVAS_SIZE = 1;\n    var MAX_DISTANCE = 1000000; // use WebGPU\n\n    var renderer = new _gWebgpu.Renderer();\n    renderer.registerPlugin(new _gPluginGpgpu.Plugin()); // create a canvas\n\n    var canvas = new _g.Canvas({\n      container: $wrapper,\n      width: CANVAS_SIZE,\n      height: CANVAS_SIZE,\n      renderer: renderer\n    }); // wait for canvas' services ready\n\n    await canvas.ready;\n    var plugin = renderer.getPlugin('device-renderer');\n    var device = plugin.getDevice();\n    var relaxKernel = new _gPluginGpgpu.Kernel(device, {\n      computeShader: \"\\nstruct Buffer {\\n  data: array<i32>,\\n};\\nstruct AtomicBuffer {\\n  data: array<atomic<i32>>,\\n};\\n\\n@group(0) @binding(0) var<storage, read> d_in_E : Buffer;\\n@group(0) @binding(1) var<storage, read> d_in_I : Buffer;\\n@group(0) @binding(2) var<storage, read> d_in_W : Buffer;\\n@group(0) @binding(3) var<storage, read> d_out_D : Buffer;\\n@group(0) @binding(4) var<storage, read_write> d_out_Di : AtomicBuffer;\\n\\n@stage(compute) @workgroup_size(\".concat(BLOCKS, \", \").concat(BLOCK_SIZE, \")\\nfn main(\\n  @builtin(global_invocation_id) global_id : vec3<u32>\\n) {\\n  var index = global_id.x;\\n  if (index < \").concat(V.length, \"u) {\\n    for (var j = d_in_I.data[index]; j < d_in_I.data[index + 1u]; j = j + 1) {\\n      var w = d_in_W.data[j];\\n      var du = d_out_D.data[index];\\n      var dv = d_out_D.data[d_in_E.data[j]];\\n      var newDist = du + w;\\n      if (du == \").concat(MAX_DISTANCE, \") {\\n        newDist = \").concat(MAX_DISTANCE, \";\\n      }\\n\\n      if (newDist < dv) {\\n        atomicMin(&d_out_Di.data[d_in_E.data[j]], newDist);\\n      }\\n    }\\n  }\\n}\")\n    });\n    var updateDistanceKernel = new _gPluginGpgpu.Kernel(device, {\n      computeShader: \"\\nstruct Buffer {\\n  data: array<i32>,\\n};\\n\\n@group(0) @binding(0) var<storage, read_write> d_out_D : Buffer;\\n@group(0) @binding(1) var<storage, read_write> d_out_Di : Buffer;\\n\\n@stage(compute) @workgroup_size(\".concat(BLOCKS, \", \").concat(BLOCK_SIZE, \")\\nfn main(\\n  @builtin(global_invocation_id) global_id : vec3<u32>\\n) {\\n  var index = global_id.x;\\n  if (index < \").concat(V.length, \"u) {\\n    if (d_out_D.data[index] > d_out_Di.data[index]) {\\n      d_out_D.data[index] = d_out_Di.data[index];\\n    }\\n    d_out_Di.data[index] = d_out_D.data[index];\\n  }\\n}\\n    \")\n    });\n    var updatePredKernel = new _gPluginGpgpu.Kernel(device, {\n      computeShader: \"\\nstruct Buffer {\\n  data: array<i32>,\\n};\\nstruct AtomicBuffer {\\n  data: array<atomic<i32>>,\\n};\\n\\n@group(0) @binding(0) var<storage, read> d_in_V : Buffer;\\n@group(0) @binding(1) var<storage, read> d_in_E : Buffer;\\n@group(0) @binding(2) var<storage, read> d_in_I : Buffer;\\n@group(0) @binding(3) var<storage, read> d_in_W : Buffer;\\n@group(0) @binding(4) var<storage, read> d_out_D : Buffer;\\n@group(0) @binding(5) var<storage, read_write> d_out_P : AtomicBuffer;\\n\\n@stage(compute) @workgroup_size(\".concat(BLOCKS, \", \").concat(BLOCK_SIZE, \")\\nfn main(\\n  @builtin(global_invocation_id) global_id : vec3<u32>\\n) {\\n  var index = global_id.x;\\n  if (index < \").concat(V.length, \"u) {\\n    for (var j = d_in_I.data[index]; j < d_in_I.data[index + 1u]; j = j + 1) {\\n      var u = d_in_V.data[index];\\n      var w = d_in_W.data[j];\\n\\n      var dis_u = d_out_D.data[index];\\n      var dis_v = d_out_D.data[d_in_E.data[j]];\\n      if (dis_v == dis_u + w) {\\n        atomicMin(&d_out_P.data[d_in_E.data[j]], u);\\n      }\\n    }\\n  }\\n}    \\n    \")\n    });\n    var VBuffer = device.createBuffer({\n      usage: BufferUsage.STORAGE,\n      viewOrSize: new Int32Array(V)\n    });\n    var EBuffer = device.createBuffer({\n      usage: BufferUsage.STORAGE,\n      viewOrSize: new Int32Array(E)\n    });\n    var IBuffer = device.createBuffer({\n      usage: BufferUsage.STORAGE,\n      viewOrSize: new Int32Array(I)\n    });\n    var WBuffer = device.createBuffer({\n      usage: BufferUsage.STORAGE,\n      viewOrSize: new Int32Array(W)\n    });\n    var DOutBuffer = device.createBuffer({\n      usage: BufferUsage.STORAGE | BufferUsage.COPY_SRC,\n      // since we want to find all paths for Node 0, set the first element to 0\n      viewOrSize: new Int32Array([0].concat(_toConsumableArray(new Array(V.length - 1).fill(MAX_DISTANCE))))\n    });\n    var DiOutBuffer = device.createBuffer({\n      usage: BufferUsage.STORAGE | BufferUsage.COPY_SRC,\n      viewOrSize: new Int32Array([0].concat(_toConsumableArray(new Array(V.length - 1).fill(MAX_DISTANCE))))\n    }); // store predecessors\n\n    var POutBuffer = device.createBuffer({\n      usage: BufferUsage.STORAGE | BufferUsage.COPY_SRC,\n      viewOrSize: new Int32Array([0].concat(_toConsumableArray(new Array(V.length - 1).fill(MAX_DISTANCE))))\n    });\n    var readback = device.createReadback();\n    relaxKernel.setBinding(0, EBuffer);\n    relaxKernel.setBinding(1, IBuffer);\n    relaxKernel.setBinding(2, WBuffer);\n    relaxKernel.setBinding(3, DOutBuffer);\n    relaxKernel.setBinding(4, DiOutBuffer);\n    updateDistanceKernel.setBinding(0, DOutBuffer);\n    updateDistanceKernel.setBinding(1, DiOutBuffer);\n    updatePredKernel.setBinding(0, VBuffer);\n    updatePredKernel.setBinding(1, EBuffer);\n    updatePredKernel.setBinding(2, IBuffer);\n    updatePredKernel.setBinding(3, WBuffer);\n    updatePredKernel.setBinding(4, DOutBuffer);\n    updatePredKernel.setBinding(5, POutBuffer);\n    var grids = Math.ceil(V.length / (BLOCKS * BLOCK_SIZE));\n\n    for (var i = 1; i < V.length; i++) {\n      relaxKernel.dispatch(grids, 1);\n      updateDistanceKernel.dispatch(grids, 1);\n    }\n\n    updatePredKernel.dispatch(grids, 1);\n    var out = await readback.readBuffer(DiOutBuffer);\n    var predecessor = await readback.readBuffer(POutBuffer);\n    return Array.from(out).map(function (length, i) {\n      return {\n        to: V[i],\n        length: length,\n        predecessor: V[predecessor[i]]\n      };\n    });\n  };\n\n  var $text = document.createElement('div');\n  $text.textContent = 'Please open the devtools, the shortest paths will be printed in console.';\n  $wrapper.appendChild($text);\n\n  var showResult = function showResult(label, startTime, endTime, paths) {\n    var $cpu = document.createElement('div');\n    $cpu.textContent = \"\".concat(label, \" Time Elapsed: \").concat(Number.parseFloat(endTime - startTime).toFixed(2), \"ms\");\n    $wrapper.appendChild($cpu); // print top nodes\n\n    console.log(paths);\n  };\n});"},{"relativePath":"gpgpu/demo/bfs.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/gpgpu/demo/bfs.js","order":2,"filename":"bfs.js","title":{"zh":"Breadth First Search","en":"Breadth First Search"},"source":"// import { Canvas, CanvasEvent } from '@antv/g';\n// import { Kernel, Plugin } from '@antv/g-plugin-gpgpu';\n// import { DeviceRenderer, Renderer } from '@antv/g-webgpu';\nimport { Algorithm } from '@antv/g6';\n\n// const { BufferUsage } = DeviceRenderer;\n\n/**\n * Implementing Breadth First Search in CUDA\n * @see https://siddharths2710.wordpress.com/2017/05/16/implementing-breadth-first-search-in-cuda/\n *\n * compared with G6:\n * @see https://g6.antv.vision/zh/docs/api/Algorithm#breadthfirstsearch\n */\n\n// /**\n//  * use Compressed Sparse Row (CSR) for adjacency list\n//  */\n// // datasource: https://github.com/sengorajkumar/gpu_graph_algorithms/blob/master/input/simple.gr_E.csv\n// const V = [0, 1, 2, 3, 4];\n// const E = [1, 2, 2, 3, 4, 3, 4, 1, 3];\n// const I = [0, 2, 5, 7, 8, 10];\n// const W = [9, 4, 10, 2, 3, 2, 11, 2, 2];\n// const From = [0, 0, 1, 1, 1, 2, 2, 3, 4];\n// const To = [1, 2, 2, 3, 4, 3, 4, 1, 3];\n// const BLOCK_SIZE = 1;\n// const BLOCKS = 5;\n\n// const CANVAS_SIZE = 1;\n\n// const $wrapper = document.getElementById('container');\n// const $text = document.createElement('div');\n// $text.textContent = 'Please open the devtools, the top nodes will be printed in console.';\n// $wrapper.appendChild($text);\n\n// // use WebGPU\n// const renderer = new Renderer();\n// renderer.registerPlugin(new Plugin());\n\n// // create a canvas\n// const canvas = new Canvas({\n//   container: $wrapper,\n//   width: CANVAS_SIZE,\n//   height: CANVAS_SIZE,\n//   renderer,\n// });\n\n// canvas.addEventListener(CanvasEvent.READY, () => {\n//   const plugin = renderer.getPlugin('device-renderer');\n//   const device = plugin.getDevice();\n//   const storeKernel = new Kernel(device, {\n//     computeShader: `\n// struct Buffer {\n//   data: array<f32>,\n// };\n\n// @group(0) @binding(0) var<storage, read> r : Buffer;\n// @group(0) @binding(1) var<storage, write> r_last : Buffer;\n\n// @stage(compute) @workgroup_size(${BLOCKS}, ${BLOCK_SIZE})\n// fn main(\n//   @builtin(global_invocation_id) global_id : vec3<u32>\n// ) {\n//   var index = global_id.x;\n//   if (index < ${V.length}u) {\n//     r_last.data[index] = r.data[index];\n//   }\n// }`,\n//   });\n\n//   const matmulKernel = new Kernel(device, {\n//     computeShader: `\n// struct Buffer {\n//   data: array<f32>,\n// };\n\n// @group(0) @binding(0) var<storage, read> graph : Buffer;\n// @group(0) @binding(1) var<storage, read_write> r : Buffer;\n// @group(0) @binding(2) var<storage, read> r_last : Buffer;\n\n// @stage(compute) @workgroup_size(${BLOCKS}, ${BLOCK_SIZE})\n// fn main(\n//   @builtin(global_invocation_id) global_id : vec3<u32>\n// ) {\n//   var index = global_id.x;\n//   if (index < ${V.length}u) {\n//     var sum = 0.0;\n//     for (var i = 0u; i < ${V.length}u; i = i + 1u) {\n//       sum = sum + r_last.data[i] * graph.data[index * ${V.length}u + i];\n//     }\n//     r.data[index] = sum;\n//   }\n// }\n//     `,\n//   });\n\n//   const rankDiffKernel = new Kernel(device, {\n//     computeShader: `\n// struct Buffer {\n//   data: array<f32>,\n// };\n\n// @group(0) @binding(0) var<storage, read> r : Buffer;\n// @group(0) @binding(1) var<storage, read_write> r_last : Buffer;\n\n// @stage(compute) @workgroup_size(${BLOCKS}, ${BLOCK_SIZE})\n// fn main(\n//   @builtin(global_invocation_id) global_id : vec3<u32>\n// ) {\n//   var index = global_id.x;\n//   if (index < ${V.length}u) {\n//     r_last.data[index] = abs(r_last.data[index] - r.data[index]);\n//   }\n// }\n//     `,\n//   });\n\n//   pageRankGPU(device, storeKernel, matmulKernel, rankDiffKernel);\n// });\n\n// const pageRankGPU = async (device, storeKernel, matmulKernel, rankDiffKernel) => {\n//   const d = 0.85;\n//   const eps = 0.000001;\n//   let maxIteration = 1000;\n//   const n = V.length;\n//   const graph = new Float32Array(new Array(n * n).fill((1 - d) / n));\n//   const r = new Float32Array(new Array(n).fill(1 / n));\n\n//   From.forEach((from, i) => {\n//     graph[To[i] * n + from] += d * 1.0;\n//   });\n\n//   for (let j = 0; j < n; j++) {\n//     let sum = 0.0;\n\n//     for (let i = 0; i < n; ++i) {\n//       sum += graph[i * n + j];\n//     }\n\n//     for (let i = 0; i < n; ++i) {\n//       if (sum != 0.0) {\n//         graph[i * n + j] /= sum;\n//       } else {\n//         graph[i * n + j] = 1 / n;\n//       }\n//     }\n//   }\n\n//   const rBuffer = device.createBuffer({\n//     usage: BufferUsage.STORAGE | BufferUsage.COPY_SRC,\n//     viewOrSize: new Float32Array(r),\n//   });\n//   const rLastBuffer = device.createBuffer({\n//     usage: BufferUsage.STORAGE | BufferUsage.COPY_SRC,\n//     viewOrSize: new Float32Array(n),\n//   });\n//   const graphBuffer = device.createBuffer({\n//     usage: BufferUsage.STORAGE,\n//     viewOrSize: new Float32Array(graph),\n//   });\n\n//   const readback = device.createReadback();\n\n//   storeKernel.setBinding(0, rBuffer);\n//   storeKernel.setBinding(1, rLastBuffer);\n\n//   matmulKernel.setBinding(0, graphBuffer);\n//   matmulKernel.setBinding(1, rBuffer);\n//   matmulKernel.setBinding(2, rLastBuffer);\n\n//   rankDiffKernel.setBinding(0, rBuffer);\n//   rankDiffKernel.setBinding(1, rLastBuffer);\n\n//   const startTime = window.performance.now();\n//   while (maxIteration--) {\n//     storeKernel.dispatch(1, 1);\n\n//     matmulKernel.dispatch(1, 1);\n\n//     rankDiffKernel.dispatch(1, 1);\n\n//     const last = await readback.readBuffer(rLastBuffer);\n//     const result = last.reduce((prev, cur) => prev + cur, 0);\n//     if (result < eps) {\n//       const out = await readback.readBuffer(rBuffer);\n//       console.log(out);\n//       break;\n//     }\n//   }\n\n//   console.log(`GPU Time Elapsed: ${window.performance.now() - startTime}ms`);\n// };\n\nconst { breadthFirstSearch } = Algorithm;\nconst data = {\n  nodes: [\n    {\n      id: 'A',\n    },\n    {\n      id: 'B',\n    },\n    {\n      id: 'C',\n    },\n    {\n      id: 'D',\n    },\n    {\n      id: 'E',\n    },\n    {\n      id: 'F',\n    },\n    {\n      id: 'G',\n    },\n  ],\n  edges: [\n    {\n      source: 'A',\n      target: 'B',\n    },\n    {\n      source: 'B',\n      target: 'C',\n    },\n    {\n      source: 'C',\n      target: 'G',\n    },\n    {\n      source: 'A',\n      target: 'D',\n    },\n    {\n      source: 'A',\n      target: 'E',\n    },\n    {\n      source: 'E',\n      target: 'F',\n    },\n    {\n      source: 'F',\n      target: 'D',\n    },\n    {\n      source: 'D',\n      target: 'G',\n    },\n  ],\n};\n\n(async () => {\n  // load & parse CSV datasets, which use Compressed Sparse Row (CSR) for adjacency list\n  // const [V, E, From, To, I, W] = await Promise.all(\n  //   [\n  //     'https://gw.alipayobjects.com/os/bmw-prod/0272cae4-5ae0-4fbd-93f9-2b6a8e640a24.csv',\n  //     'https://gw.alipayobjects.com/os/bmw-prod/e8b24b84-3cc4-4a73-b213-7edf4467e03a.csv',\n  //     'https://gw.alipayobjects.com/os/bmw-prod/cba4ec3d-4eca-4f85-ae54-faeee0fa708a.csv',\n  //     'https://gw.alipayobjects.com/os/bmw-prod/8582d1ca-9fe6-4afb-8364-df6ccc619594.csv',\n  //     'https://gw.alipayobjects.com/os/bmw-prod/d84981b4-edcf-4df5-b672-45b0000fc5da.csv',\n  //     'https://gw.alipayobjects.com/os/bmw-prod/eb455fa7-73ac-43fe-bc5e-d5e6c3a1fb77.csv',\n  //   ].map(async (url, i) => {\n  //     const res = await fetch(url);\n  //     // adjust index for V, E, From and To\n  //     return (await res.text()).split(',').map((v) => Number(v.trim()) - (i <= 3 ? 1 : 0));\n  //   }),\n  // );\n\n  // const bigDataSet = {\n  //   nodes: V.map((v) => ({\n  //     id: `${v}`,\n  //     label: `${v}`,\n  //   })),\n  //   edges: From.map((from, i) => ({\n  //     source: `${from}`,\n  //     target: `${To[i]}`,\n  //   })),\n  // };\n\n  const startTime = window.performance.now();\n  breadthFirstSearch(data, 'A', {\n    enter: ({ current, previous }) => {\n      console.log(current);\n      // 开始遍历点的回调\n    },\n    leave: ({ current, previous }) => {\n      // 遍历完节点的回调\n    },\n  });\n  console.log(`CPU Time Elapsed: ${window.performance.now() - startTime}ms`);\n})();\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g6\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g6\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g6);\n    global.bfs = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g) {\n  \"use strict\";\n\n  // import { Canvas, CanvasEvent } from '@antv/g';\n  // import { Kernel, Plugin } from '@antv/g-plugin-gpgpu';\n  // import { DeviceRenderer, Renderer } from '@antv/g-webgpu';\n  // const { BufferUsage } = DeviceRenderer;\n\n  /**\n   * Implementing Breadth First Search in CUDA\n   * @see https://siddharths2710.wordpress.com/2017/05/16/implementing-breadth-first-search-in-cuda/\n   *\n   * compared with G6:\n   * @see https://g6.antv.vision/zh/docs/api/Algorithm#breadthfirstsearch\n   */\n  // /**\n  //  * use Compressed Sparse Row (CSR) for adjacency list\n  //  */\n  // // datasource: https://github.com/sengorajkumar/gpu_graph_algorithms/blob/master/input/simple.gr_E.csv\n  // const V = [0, 1, 2, 3, 4];\n  // const E = [1, 2, 2, 3, 4, 3, 4, 1, 3];\n  // const I = [0, 2, 5, 7, 8, 10];\n  // const W = [9, 4, 10, 2, 3, 2, 11, 2, 2];\n  // const From = [0, 0, 1, 1, 1, 2, 2, 3, 4];\n  // const To = [1, 2, 2, 3, 4, 3, 4, 1, 3];\n  // const BLOCK_SIZE = 1;\n  // const BLOCKS = 5;\n  // const CANVAS_SIZE = 1;\n  // const $wrapper = document.getElementById('container');\n  // const $text = document.createElement('div');\n  // $text.textContent = 'Please open the devtools, the top nodes will be printed in console.';\n  // $wrapper.appendChild($text);\n  // // use WebGPU\n  // const renderer = new Renderer();\n  // renderer.registerPlugin(new Plugin());\n  // // create a canvas\n  // const canvas = new Canvas({\n  //   container: $wrapper,\n  //   width: CANVAS_SIZE,\n  //   height: CANVAS_SIZE,\n  //   renderer,\n  // });\n  // canvas.addEventListener(CanvasEvent.READY, () => {\n  //   const plugin = renderer.getPlugin('device-renderer');\n  //   const device = plugin.getDevice();\n  //   const storeKernel = new Kernel(device, {\n  //     computeShader: `\n  // struct Buffer {\n  //   data: array<f32>,\n  // };\n  // @group(0) @binding(0) var<storage, read> r : Buffer;\n  // @group(0) @binding(1) var<storage, write> r_last : Buffer;\n  // @stage(compute) @workgroup_size(${BLOCKS}, ${BLOCK_SIZE})\n  // fn main(\n  //   @builtin(global_invocation_id) global_id : vec3<u32>\n  // ) {\n  //   var index = global_id.x;\n  //   if (index < ${V.length}u) {\n  //     r_last.data[index] = r.data[index];\n  //   }\n  // }`,\n  //   });\n  //   const matmulKernel = new Kernel(device, {\n  //     computeShader: `\n  // struct Buffer {\n  //   data: array<f32>,\n  // };\n  // @group(0) @binding(0) var<storage, read> graph : Buffer;\n  // @group(0) @binding(1) var<storage, read_write> r : Buffer;\n  // @group(0) @binding(2) var<storage, read> r_last : Buffer;\n  // @stage(compute) @workgroup_size(${BLOCKS}, ${BLOCK_SIZE})\n  // fn main(\n  //   @builtin(global_invocation_id) global_id : vec3<u32>\n  // ) {\n  //   var index = global_id.x;\n  //   if (index < ${V.length}u) {\n  //     var sum = 0.0;\n  //     for (var i = 0u; i < ${V.length}u; i = i + 1u) {\n  //       sum = sum + r_last.data[i] * graph.data[index * ${V.length}u + i];\n  //     }\n  //     r.data[index] = sum;\n  //   }\n  // }\n  //     `,\n  //   });\n  //   const rankDiffKernel = new Kernel(device, {\n  //     computeShader: `\n  // struct Buffer {\n  //   data: array<f32>,\n  // };\n  // @group(0) @binding(0) var<storage, read> r : Buffer;\n  // @group(0) @binding(1) var<storage, read_write> r_last : Buffer;\n  // @stage(compute) @workgroup_size(${BLOCKS}, ${BLOCK_SIZE})\n  // fn main(\n  //   @builtin(global_invocation_id) global_id : vec3<u32>\n  // ) {\n  //   var index = global_id.x;\n  //   if (index < ${V.length}u) {\n  //     r_last.data[index] = abs(r_last.data[index] - r.data[index]);\n  //   }\n  // }\n  //     `,\n  //   });\n  //   pageRankGPU(device, storeKernel, matmulKernel, rankDiffKernel);\n  // });\n  // const pageRankGPU = async (device, storeKernel, matmulKernel, rankDiffKernel) => {\n  //   const d = 0.85;\n  //   const eps = 0.000001;\n  //   let maxIteration = 1000;\n  //   const n = V.length;\n  //   const graph = new Float32Array(new Array(n * n).fill((1 - d) / n));\n  //   const r = new Float32Array(new Array(n).fill(1 / n));\n  //   From.forEach((from, i) => {\n  //     graph[To[i] * n + from] += d * 1.0;\n  //   });\n  //   for (let j = 0; j < n; j++) {\n  //     let sum = 0.0;\n  //     for (let i = 0; i < n; ++i) {\n  //       sum += graph[i * n + j];\n  //     }\n  //     for (let i = 0; i < n; ++i) {\n  //       if (sum != 0.0) {\n  //         graph[i * n + j] /= sum;\n  //       } else {\n  //         graph[i * n + j] = 1 / n;\n  //       }\n  //     }\n  //   }\n  //   const rBuffer = device.createBuffer({\n  //     usage: BufferUsage.STORAGE | BufferUsage.COPY_SRC,\n  //     viewOrSize: new Float32Array(r),\n  //   });\n  //   const rLastBuffer = device.createBuffer({\n  //     usage: BufferUsage.STORAGE | BufferUsage.COPY_SRC,\n  //     viewOrSize: new Float32Array(n),\n  //   });\n  //   const graphBuffer = device.createBuffer({\n  //     usage: BufferUsage.STORAGE,\n  //     viewOrSize: new Float32Array(graph),\n  //   });\n  //   const readback = device.createReadback();\n  //   storeKernel.setBinding(0, rBuffer);\n  //   storeKernel.setBinding(1, rLastBuffer);\n  //   matmulKernel.setBinding(0, graphBuffer);\n  //   matmulKernel.setBinding(1, rBuffer);\n  //   matmulKernel.setBinding(2, rLastBuffer);\n  //   rankDiffKernel.setBinding(0, rBuffer);\n  //   rankDiffKernel.setBinding(1, rLastBuffer);\n  //   const startTime = window.performance.now();\n  //   while (maxIteration--) {\n  //     storeKernel.dispatch(1, 1);\n  //     matmulKernel.dispatch(1, 1);\n  //     rankDiffKernel.dispatch(1, 1);\n  //     const last = await readback.readBuffer(rLastBuffer);\n  //     const result = last.reduce((prev, cur) => prev + cur, 0);\n  //     if (result < eps) {\n  //       const out = await readback.readBuffer(rBuffer);\n  //       console.log(out);\n  //       break;\n  //     }\n  //   }\n  //   console.log(`GPU Time Elapsed: ${window.performance.now() - startTime}ms`);\n  // };\n  var breadthFirstSearch = _g.Algorithm.breadthFirstSearch;\n  var data = {\n    nodes: [{\n      id: 'A'\n    }, {\n      id: 'B'\n    }, {\n      id: 'C'\n    }, {\n      id: 'D'\n    }, {\n      id: 'E'\n    }, {\n      id: 'F'\n    }, {\n      id: 'G'\n    }],\n    edges: [{\n      source: 'A',\n      target: 'B'\n    }, {\n      source: 'B',\n      target: 'C'\n    }, {\n      source: 'C',\n      target: 'G'\n    }, {\n      source: 'A',\n      target: 'D'\n    }, {\n      source: 'A',\n      target: 'E'\n    }, {\n      source: 'E',\n      target: 'F'\n    }, {\n      source: 'F',\n      target: 'D'\n    }, {\n      source: 'D',\n      target: 'G'\n    }]\n  };\n\n  (async function () {\n    // load & parse CSV datasets, which use Compressed Sparse Row (CSR) for adjacency list\n    // const [V, E, From, To, I, W] = await Promise.all(\n    //   [\n    //     'https://gw.alipayobjects.com/os/bmw-prod/0272cae4-5ae0-4fbd-93f9-2b6a8e640a24.csv',\n    //     'https://gw.alipayobjects.com/os/bmw-prod/e8b24b84-3cc4-4a73-b213-7edf4467e03a.csv',\n    //     'https://gw.alipayobjects.com/os/bmw-prod/cba4ec3d-4eca-4f85-ae54-faeee0fa708a.csv',\n    //     'https://gw.alipayobjects.com/os/bmw-prod/8582d1ca-9fe6-4afb-8364-df6ccc619594.csv',\n    //     'https://gw.alipayobjects.com/os/bmw-prod/d84981b4-edcf-4df5-b672-45b0000fc5da.csv',\n    //     'https://gw.alipayobjects.com/os/bmw-prod/eb455fa7-73ac-43fe-bc5e-d5e6c3a1fb77.csv',\n    //   ].map(async (url, i) => {\n    //     const res = await fetch(url);\n    //     // adjust index for V, E, From and To\n    //     return (await res.text()).split(',').map((v) => Number(v.trim()) - (i <= 3 ? 1 : 0));\n    //   }),\n    // );\n    // const bigDataSet = {\n    //   nodes: V.map((v) => ({\n    //     id: `${v}`,\n    //     label: `${v}`,\n    //   })),\n    //   edges: From.map((from, i) => ({\n    //     source: `${from}`,\n    //     target: `${To[i]}`,\n    //   })),\n    // };\n    var startTime = window.performance.now();\n    breadthFirstSearch(data, 'A', {\n      enter: function enter(_ref) {\n        var current = _ref.current,\n            previous = _ref.previous;\n        console.log(current); // 开始遍历点的回调\n      },\n      leave: function leave(_ref2) {// 遍历完节点的回调\n\n        var current = _ref2.current,\n            previous = _ref2.previous;\n      }\n    });\n    console.log(\"CPU Time Elapsed: \".concat(window.performance.now() - startTime, \"ms\"));\n  })();\n});"},{"relativePath":"gpgpu/demo/compute-shader-test.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/gpgpu/demo/compute-shader-test.js","order":9,"filename":"compute-shader-test.js","title":{"zh":"Compute Shader 测试","en":"Compute Shader"},"source":"import { Canvas, CanvasEvent } from '@antv/g';\nimport { Kernel, Plugin } from '@antv/g-plugin-gpgpu';\nimport { DeviceRenderer, Renderer } from '@antv/g-webgpu';\n\nconst { BufferUsage } = DeviceRenderer;\n\n/**\n * ported from Tint\n * @see https://dawn.googlesource.com/tint/+/f9d19719fd500668e1f74d98e881073baeaf03ff/test/intrinsics/gen/atomicSub/051100.wgsl\n */\n\nconst CANVAS_SIZE = 1;\nconst $canvas = document.createElement('canvas');\n\n// use WebGPU\nconst renderer = new Renderer();\nrenderer.registerPlugin(new Plugin());\n\n// create a canvas\nconst canvas = new Canvas({\n  canvas: $canvas,\n  width: CANVAS_SIZE,\n  height: CANVAS_SIZE,\n  renderer,\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  const plugin = renderer.getPlugin('device-renderer');\n  const device = plugin.getDevice();\n\n  const kernel = new Kernel(device, {\n    computeShader: `\nstruct Buffer {\n  data: array<i32>,\n};\nstruct AtomicBuffer {\n  data: array<atomic<i32>>,\n};\nstruct Params {\n  k: i32,\n  center: vec2<i32>,\n};\n\n@binding(0) @group(0) var<storage, read_write> input : Buffer;\n@binding(1) @group(0) var<storage, read_write> output : AtomicBuffer;\n@binding(2) @group(0) var<uniform> params : Params;\n\n@stage(compute) @workgroup_size(8, 8)\nfn main(\n  @builtin(global_invocation_id) global_id : vec3<u32>\n) {\n  var index = global_id.x;\n  if (index >= u32(4)) {\n    return;\n  }\n\n  input.data[index] = input.data[index] + params.k;\n\n  atomicSub(&output.data[index], 1);\n}`,\n  });\n\n  const inputBuffer = device.createBuffer({\n    usage: BufferUsage.STORAGE | BufferUsage.COPY_SRC,\n    viewOrSize: new Int32Array([1, 2, 3, 4]),\n  });\n  const outputBuffer = device.createBuffer({\n    usage: BufferUsage.STORAGE | BufferUsage.COPY_SRC,\n    viewOrSize: new Int32Array([0, 0, 0, 0]),\n  });\n  const uniformBuffer = device.createBuffer({\n    usage: BufferUsage.UNIFORM | BufferUsage.COPY_DST,\n    viewOrSize: new Int32Array([1, 0, 0, 0]),\n  });\n  const readback = device.createReadback();\n\n  kernel.setBinding(0, inputBuffer);\n  kernel.setBinding(1, outputBuffer);\n  kernel.setBinding(2, uniformBuffer);\n\n  for (let i = 0; i < 100; i++) {\n    uniformBuffer.setSubData(0, new Int32Array([2, 0, 0, 0]));\n    kernel.dispatch(1, 1);\n\n    uniformBuffer.setSubData(0, new Int32Array([-2, 0, 0, 0]));\n    kernel.dispatch(1, 1);\n  }\n\n  (async () => {\n    const input = await readback.readBuffer(inputBuffer);\n    const output = await readback.readBuffer(outputBuffer);\n\n    console.log(input, output);\n  })();\n});\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-plugin-gpgpu\", \"@antv/g-webgpu\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-plugin-gpgpu\"), require(\"@antv/g-webgpu\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gPluginGpgpu, global.gWebgpu);\n    global.computeShaderTest = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gPluginGpgpu, _gWebgpu) {\n  \"use strict\";\n\n  var BufferUsage = _gWebgpu.DeviceRenderer.BufferUsage;\n  /**\n   * ported from Tint\n   * @see https://dawn.googlesource.com/tint/+/f9d19719fd500668e1f74d98e881073baeaf03ff/test/intrinsics/gen/atomicSub/051100.wgsl\n   */\n\n  var CANVAS_SIZE = 1;\n  var $canvas = document.createElement('canvas'); // use WebGPU\n\n  var renderer = new _gWebgpu.Renderer();\n  renderer.registerPlugin(new _gPluginGpgpu.Plugin()); // create a canvas\n\n  var canvas = new _g.Canvas({\n    canvas: $canvas,\n    width: CANVAS_SIZE,\n    height: CANVAS_SIZE,\n    renderer: renderer\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    var plugin = renderer.getPlugin('device-renderer');\n    var device = plugin.getDevice();\n    var kernel = new _gPluginGpgpu.Kernel(device, {\n      computeShader: \"\\nstruct Buffer {\\n  data: array<i32>,\\n};\\nstruct AtomicBuffer {\\n  data: array<atomic<i32>>,\\n};\\nstruct Params {\\n  k: i32,\\n  center: vec2<i32>,\\n};\\n\\n@binding(0) @group(0) var<storage, read_write> input : Buffer;\\n@binding(1) @group(0) var<storage, read_write> output : AtomicBuffer;\\n@binding(2) @group(0) var<uniform> params : Params;\\n\\n@stage(compute) @workgroup_size(8, 8)\\nfn main(\\n  @builtin(global_invocation_id) global_id : vec3<u32>\\n) {\\n  var index = global_id.x;\\n  if (index >= u32(4)) {\\n    return;\\n  }\\n\\n  input.data[index] = input.data[index] + params.k;\\n\\n  atomicSub(&output.data[index], 1);\\n}\"\n    });\n    var inputBuffer = device.createBuffer({\n      usage: BufferUsage.STORAGE | BufferUsage.COPY_SRC,\n      viewOrSize: new Int32Array([1, 2, 3, 4])\n    });\n    var outputBuffer = device.createBuffer({\n      usage: BufferUsage.STORAGE | BufferUsage.COPY_SRC,\n      viewOrSize: new Int32Array([0, 0, 0, 0])\n    });\n    var uniformBuffer = device.createBuffer({\n      usage: BufferUsage.UNIFORM | BufferUsage.COPY_DST,\n      viewOrSize: new Int32Array([1, 0, 0, 0])\n    });\n    var readback = device.createReadback();\n    kernel.setBinding(0, inputBuffer);\n    kernel.setBinding(1, outputBuffer);\n    kernel.setBinding(2, uniformBuffer);\n\n    for (var i = 0; i < 100; i++) {\n      uniformBuffer.setSubData(0, new Int32Array([2, 0, 0, 0]));\n      kernel.dispatch(1, 1);\n      uniformBuffer.setSubData(0, new Int32Array([-2, 0, 0, 0]));\n      kernel.dispatch(1, 1);\n    }\n\n    (async function () {\n      var input = await readback.readBuffer(inputBuffer);\n      var output = await readback.readBuffer(outputBuffer);\n      console.log(input, output);\n    })();\n  });\n});"},{"relativePath":"gpgpu/demo/bellman-ford.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/gpgpu/demo/bellman-ford.js","order":4,"filename":"bellman-ford.js","title":{"zh":"Bellman-Ford 最短路径算法","en":"Bellman-Ford SSSP"},"source":"import { Canvas, CanvasEvent } from '@antv/g';\nimport { Kernel, Plugin } from '@antv/g-plugin-gpgpu';\nimport { DeviceRenderer, Renderer } from '@antv/g-webgpu';\nimport { Algorithm } from '@antv/g6';\n\nconst { BufferUsage } = DeviceRenderer;\n\n/**\n * SSSP(Bellman-Ford) ported from CUDA\n * @see https://www.lewuathe.com/illustration-of-distributed-bellman-ford-algorithm.html\n * @see https://github.com/sengorajkumar/gpu_graph_algorithms\n *\n * compared with G6:\n * @see https://g6.antv.vision/zh/docs/api/Algorithm#findshortestpathgraphdata-start-end-directed-weightpropertyname\n */\n\n/**\n * use Compressed Sparse Row (CSR) for adjacency list\n */\n// datasource: https://github.com/sengorajkumar/gpu_graph_algorithms/blob/master/input/simple.gr_E.csv\nconst V = [0, 1, 2, 3, 4];\nconst E = [1, 2, 2, 3, 4, 3, 4, 1, 3];\nconst I = [0, 2, 5, 7, 8, 9];\nconst W = [9, 4, 10, 2, 3, 2, 11, 2, 2];\nconst BLOCK_SIZE = 1;\nconst BLOCKS = 5;\n\nconst CANVAS_SIZE = 1;\nconst MAX_DISTANCE = 10000;\n\nconst $wrapper = document.getElementById('container');\nconst $text = document.createElement('div');\n$text.textContent = 'Please open the devtools, the shortest paths will be printed in console.';\n$wrapper.appendChild($text);\n\n// use WebGPU\nconst renderer = new Renderer();\nrenderer.registerPlugin(new Plugin());\n\n// create a canvas\nconst canvas = new Canvas({\n  container: $wrapper,\n  width: CANVAS_SIZE,\n  height: CANVAS_SIZE,\n  renderer,\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  const plugin = renderer.getPlugin('device-renderer');\n  const device = plugin.getDevice();\n  const kernel = new Kernel(device, {\n    computeShader: `\nstruct Buffer {\n  data: array<i32>,\n};\nstruct AtomicBuffer {\n  data: array<atomic<i32>>,\n};\n\n@group(0) @binding(0) var<storage, read> d_in_E : Buffer;\n@group(0) @binding(1) var<storage, read> d_in_I : Buffer;\n@group(0) @binding(2) var<storage, read> d_in_W : Buffer;\n@group(0) @binding(3) var<storage, read> d_out_D : Buffer;\n@group(0) @binding(4) var<storage, read_write> d_out_Di : AtomicBuffer;\n\n@stage(compute) @workgroup_size(${BLOCKS}, ${BLOCK_SIZE})\nfn main(\n  @builtin(global_invocation_id) global_id : vec3<u32>\n) {\n  var index = global_id.x;\n  if (index < ${V.length}u) {\n    for (var j = d_in_I.data[index]; j < d_in_I.data[index + 1u]; j = j + 1) {\n      var w = d_in_W.data[j];\n      var du = d_out_D.data[index];\n      var dv = d_out_D.data[d_in_E.data[j]];\n      var newDist = du + w;\n      if (du == ${MAX_DISTANCE}) {\n        newDist = ${MAX_DISTANCE};\n      }\n\n      if (newDist < dv) {\n        atomicMin(&d_out_Di.data[d_in_E.data[j]], newDist);\n      }\n    }\n  }\n}`,\n  });\n\n  const updateDistanceKernel = new Kernel(device, {\n    computeShader: `\nstruct Buffer {\n  data: array<i32>,\n};\n\n@group(0) @binding(0) var<storage, read_write> d_out_D : Buffer;\n@group(0) @binding(1) var<storage, read_write> d_out_Di : Buffer;\n\n@stage(compute) @workgroup_size(${BLOCKS}, ${BLOCK_SIZE})\nfn main(\n  @builtin(global_invocation_id) global_id : vec3<u32>\n) {\n  var index = global_id.x;\n  if (index < ${V.length}u) {\n    if (d_out_D.data[index] > d_out_Di.data[index]) {\n      d_out_D.data[index] = d_out_Di.data[index];\n    }\n    d_out_Di.data[index] = d_out_D.data[index];\n  }\n}\n    `,\n  });\n\n  const updatePredKernel = new Kernel(device, {\n    computeShader: `\nstruct Buffer {\n  data: array<i32>,\n};\nstruct AtomicBuffer {\n  data: array<atomic<i32>>,\n};\n\n@group(0) @binding(0) var<storage, read> d_in_V : Buffer;\n@group(0) @binding(1) var<storage, read> d_in_E : Buffer;\n@group(0) @binding(2) var<storage, read> d_in_I : Buffer;\n@group(0) @binding(3) var<storage, read> d_in_W : Buffer;\n@group(0) @binding(4) var<storage, read> d_out_D : Buffer;\n@group(0) @binding(5) var<storage, read_write> d_out_P : AtomicBuffer;\n\n@stage(compute) @workgroup_size(${BLOCKS}, ${BLOCK_SIZE})\nfn main(\n  @builtin(global_invocation_id) global_id : vec3<u32>\n) {\n  var index = global_id.x;\n  if (index < ${V.length}u) {\n    for (var j = d_in_I.data[index]; j < d_in_I.data[index + 1u]; j = j + 1) {\n      var u = d_in_V.data[index];\n      var w = d_in_W.data[j];\n\n      var dis_u = d_out_D.data[index];\n      var dis_v = d_out_D.data[d_in_E.data[j]];\n      if (dis_v == dis_u + w) {\n        atomicMin(&d_out_P.data[d_in_E.data[j]], u);\n      }\n    }\n  }\n}    \n    `,\n  });\n\n  calcShortestPath(device, kernel, updateDistanceKernel, updatePredKernel);\n});\n\nconst calcShortestPath = async (device, relaxKernel, updateDistanceKernel, updatePredKernel) => {\n  const VBuffer = device.createBuffer({\n    usage: BufferUsage.STORAGE,\n    viewOrSize: new Int32Array(V),\n  });\n  const EBuffer = device.createBuffer({\n    usage: BufferUsage.STORAGE,\n    viewOrSize: new Int32Array(E),\n  });\n  const IBuffer = device.createBuffer({\n    usage: BufferUsage.STORAGE,\n    viewOrSize: new Int32Array(I),\n  });\n  const WBuffer = device.createBuffer({\n    usage: BufferUsage.STORAGE,\n    viewOrSize: new Int32Array(W),\n  });\n  const DOutBuffer = device.createBuffer({\n    usage: BufferUsage.STORAGE | BufferUsage.COPY_SRC,\n    viewOrSize: new Int32Array([0, ...new Array(V.length - 1).fill(MAX_DISTANCE)]),\n  });\n  const DiOutBuffer = device.createBuffer({\n    usage: BufferUsage.STORAGE | BufferUsage.COPY_SRC,\n    viewOrSize: new Int32Array([0, ...new Array(V.length - 1).fill(MAX_DISTANCE)]),\n  });\n  const POutBuffer = device.createBuffer({\n    usage: BufferUsage.STORAGE | BufferUsage.COPY_SRC,\n    viewOrSize: new Int32Array([0, ...new Array(V.length - 1).fill(MAX_DISTANCE)]),\n  });\n  const readback = device.createReadback();\n\n  relaxKernel.setBinding(0, EBuffer);\n  relaxKernel.setBinding(1, IBuffer);\n  relaxKernel.setBinding(2, WBuffer);\n  relaxKernel.setBinding(3, DOutBuffer);\n  relaxKernel.setBinding(4, DiOutBuffer);\n\n  updateDistanceKernel.setBinding(0, DOutBuffer);\n  updateDistanceKernel.setBinding(1, DiOutBuffer);\n\n  updatePredKernel.setBinding(0, VBuffer);\n  updatePredKernel.setBinding(1, EBuffer);\n  updatePredKernel.setBinding(2, IBuffer);\n  updatePredKernel.setBinding(3, WBuffer);\n  updatePredKernel.setBinding(4, DOutBuffer);\n  updatePredKernel.setBinding(5, POutBuffer);\n\n  const startTime = window.performance.now();\n\n  for (let i = 1; i < V.length; i++) {\n    relaxKernel.dispatch(1, 1);\n    updateDistanceKernel.dispatch(1, 1);\n  }\n  updatePredKernel.dispatch(1, 1);\n\n  // result\n  const out = await readback.readBuffer(DiOutBuffer);\n  const predecessor = await readback.readBuffer(POutBuffer);\n\n  const labels = ['A', 'B', 'C', 'D', 'E'];\n  for (let i = 0; i < V.length; i++) {\n    console.log(\n      `from ${labels[0]} to ${labels[i]} = ${out[i]}, predecessor = ${labels[predecessor[i]]}`,\n    );\n  }\n\n  console.log(`GPU Time Elapsed: ${window.performance.now() - startTime}ms`);\n};\n\nconst { findShortestPath } = Algorithm;\nconst data = {\n  nodes: [\n    {\n      id: 'A',\n      label: 'A',\n    },\n    {\n      id: 'B',\n      label: 'B',\n    },\n    {\n      id: 'C',\n      label: 'C',\n    },\n    {\n      id: 'D',\n      label: 'D',\n    },\n    {\n      id: 'E',\n      label: 'E',\n    },\n  ],\n  edges: [\n    {\n      source: 'A',\n      target: 'B',\n      weight: 9,\n    },\n    {\n      source: 'A',\n      target: 'C',\n      weight: 4,\n    },\n    {\n      source: 'B',\n      target: 'C',\n      weight: 10,\n    },\n    {\n      source: 'B',\n      target: 'D',\n      weight: 2,\n    },\n    {\n      source: 'B',\n      target: 'E',\n      weight: 3,\n    },\n    {\n      source: 'C',\n      target: 'D',\n      weight: 2,\n    },\n    {\n      source: 'C',\n      target: 'E',\n      weight: 11,\n    },\n    {\n      source: 'D',\n      target: 'B',\n      weight: 2,\n    },\n    {\n      source: 'E',\n      target: 'D',\n      weight: 2,\n    },\n  ],\n};\n\nconst startTime = window.performance.now();\nfor (let i = 0; i < data.nodes.length; i++) {\n  const { length, path, allPath } = findShortestPath(data, 'A', data.nodes[i].id, true, 'weight');\n  console.log(`from A to ${data.nodes[i].id} = ${length}: `, path);\n}\nconsole.log(`CPU Time Elapsed: ${window.performance.now() - startTime}ms`);\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-plugin-gpgpu\", \"@antv/g-webgpu\", \"@antv/g6\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-plugin-gpgpu\"), require(\"@antv/g-webgpu\"), require(\"@antv/g6\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gPluginGpgpu, global.gWebgpu, global.g6);\n    global.bellmanFord = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gPluginGpgpu, _gWebgpu, _g2) {\n  \"use strict\";\n\n  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\n  function _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\n  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  var BufferUsage = _gWebgpu.DeviceRenderer.BufferUsage;\n  /**\n   * SSSP(Bellman-Ford) ported from CUDA\n   * @see https://www.lewuathe.com/illustration-of-distributed-bellman-ford-algorithm.html\n   * @see https://github.com/sengorajkumar/gpu_graph_algorithms\n   *\n   * compared with G6:\n   * @see https://g6.antv.vision/zh/docs/api/Algorithm#findshortestpathgraphdata-start-end-directed-weightpropertyname\n   */\n\n  /**\n   * use Compressed Sparse Row (CSR) for adjacency list\n   */\n  // datasource: https://github.com/sengorajkumar/gpu_graph_algorithms/blob/master/input/simple.gr_E.csv\n\n  var V = [0, 1, 2, 3, 4];\n  var E = [1, 2, 2, 3, 4, 3, 4, 1, 3];\n  var I = [0, 2, 5, 7, 8, 9];\n  var W = [9, 4, 10, 2, 3, 2, 11, 2, 2];\n  var BLOCK_SIZE = 1;\n  var BLOCKS = 5;\n  var CANVAS_SIZE = 1;\n  var MAX_DISTANCE = 10000;\n  var $wrapper = document.getElementById('container');\n  var $text = document.createElement('div');\n  $text.textContent = 'Please open the devtools, the shortest paths will be printed in console.';\n  $wrapper.appendChild($text); // use WebGPU\n\n  var renderer = new _gWebgpu.Renderer();\n  renderer.registerPlugin(new _gPluginGpgpu.Plugin()); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: $wrapper,\n    width: CANVAS_SIZE,\n    height: CANVAS_SIZE,\n    renderer: renderer\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    var plugin = renderer.getPlugin('device-renderer');\n    var device = plugin.getDevice();\n    var kernel = new _gPluginGpgpu.Kernel(device, {\n      computeShader: \"\\nstruct Buffer {\\n  data: array<i32>,\\n};\\nstruct AtomicBuffer {\\n  data: array<atomic<i32>>,\\n};\\n\\n@group(0) @binding(0) var<storage, read> d_in_E : Buffer;\\n@group(0) @binding(1) var<storage, read> d_in_I : Buffer;\\n@group(0) @binding(2) var<storage, read> d_in_W : Buffer;\\n@group(0) @binding(3) var<storage, read> d_out_D : Buffer;\\n@group(0) @binding(4) var<storage, read_write> d_out_Di : AtomicBuffer;\\n\\n@stage(compute) @workgroup_size(\".concat(BLOCKS, \", \").concat(BLOCK_SIZE, \")\\nfn main(\\n  @builtin(global_invocation_id) global_id : vec3<u32>\\n) {\\n  var index = global_id.x;\\n  if (index < \").concat(V.length, \"u) {\\n    for (var j = d_in_I.data[index]; j < d_in_I.data[index + 1u]; j = j + 1) {\\n      var w = d_in_W.data[j];\\n      var du = d_out_D.data[index];\\n      var dv = d_out_D.data[d_in_E.data[j]];\\n      var newDist = du + w;\\n      if (du == \").concat(MAX_DISTANCE, \") {\\n        newDist = \").concat(MAX_DISTANCE, \";\\n      }\\n\\n      if (newDist < dv) {\\n        atomicMin(&d_out_Di.data[d_in_E.data[j]], newDist);\\n      }\\n    }\\n  }\\n}\")\n    });\n    var updateDistanceKernel = new _gPluginGpgpu.Kernel(device, {\n      computeShader: \"\\nstruct Buffer {\\n  data: array<i32>,\\n};\\n\\n@group(0) @binding(0) var<storage, read_write> d_out_D : Buffer;\\n@group(0) @binding(1) var<storage, read_write> d_out_Di : Buffer;\\n\\n@stage(compute) @workgroup_size(\".concat(BLOCKS, \", \").concat(BLOCK_SIZE, \")\\nfn main(\\n  @builtin(global_invocation_id) global_id : vec3<u32>\\n) {\\n  var index = global_id.x;\\n  if (index < \").concat(V.length, \"u) {\\n    if (d_out_D.data[index] > d_out_Di.data[index]) {\\n      d_out_D.data[index] = d_out_Di.data[index];\\n    }\\n    d_out_Di.data[index] = d_out_D.data[index];\\n  }\\n}\\n    \")\n    });\n    var updatePredKernel = new _gPluginGpgpu.Kernel(device, {\n      computeShader: \"\\nstruct Buffer {\\n  data: array<i32>,\\n};\\nstruct AtomicBuffer {\\n  data: array<atomic<i32>>,\\n};\\n\\n@group(0) @binding(0) var<storage, read> d_in_V : Buffer;\\n@group(0) @binding(1) var<storage, read> d_in_E : Buffer;\\n@group(0) @binding(2) var<storage, read> d_in_I : Buffer;\\n@group(0) @binding(3) var<storage, read> d_in_W : Buffer;\\n@group(0) @binding(4) var<storage, read> d_out_D : Buffer;\\n@group(0) @binding(5) var<storage, read_write> d_out_P : AtomicBuffer;\\n\\n@stage(compute) @workgroup_size(\".concat(BLOCKS, \", \").concat(BLOCK_SIZE, \")\\nfn main(\\n  @builtin(global_invocation_id) global_id : vec3<u32>\\n) {\\n  var index = global_id.x;\\n  if (index < \").concat(V.length, \"u) {\\n    for (var j = d_in_I.data[index]; j < d_in_I.data[index + 1u]; j = j + 1) {\\n      var u = d_in_V.data[index];\\n      var w = d_in_W.data[j];\\n\\n      var dis_u = d_out_D.data[index];\\n      var dis_v = d_out_D.data[d_in_E.data[j]];\\n      if (dis_v == dis_u + w) {\\n        atomicMin(&d_out_P.data[d_in_E.data[j]], u);\\n      }\\n    }\\n  }\\n}    \\n    \")\n    });\n    calcShortestPath(device, kernel, updateDistanceKernel, updatePredKernel);\n  });\n\n  var calcShortestPath = async function calcShortestPath(device, relaxKernel, updateDistanceKernel, updatePredKernel) {\n    var VBuffer = device.createBuffer({\n      usage: BufferUsage.STORAGE,\n      viewOrSize: new Int32Array(V)\n    });\n    var EBuffer = device.createBuffer({\n      usage: BufferUsage.STORAGE,\n      viewOrSize: new Int32Array(E)\n    });\n    var IBuffer = device.createBuffer({\n      usage: BufferUsage.STORAGE,\n      viewOrSize: new Int32Array(I)\n    });\n    var WBuffer = device.createBuffer({\n      usage: BufferUsage.STORAGE,\n      viewOrSize: new Int32Array(W)\n    });\n    var DOutBuffer = device.createBuffer({\n      usage: BufferUsage.STORAGE | BufferUsage.COPY_SRC,\n      viewOrSize: new Int32Array([0].concat(_toConsumableArray(new Array(V.length - 1).fill(MAX_DISTANCE))))\n    });\n    var DiOutBuffer = device.createBuffer({\n      usage: BufferUsage.STORAGE | BufferUsage.COPY_SRC,\n      viewOrSize: new Int32Array([0].concat(_toConsumableArray(new Array(V.length - 1).fill(MAX_DISTANCE))))\n    });\n    var POutBuffer = device.createBuffer({\n      usage: BufferUsage.STORAGE | BufferUsage.COPY_SRC,\n      viewOrSize: new Int32Array([0].concat(_toConsumableArray(new Array(V.length - 1).fill(MAX_DISTANCE))))\n    });\n    var readback = device.createReadback();\n    relaxKernel.setBinding(0, EBuffer);\n    relaxKernel.setBinding(1, IBuffer);\n    relaxKernel.setBinding(2, WBuffer);\n    relaxKernel.setBinding(3, DOutBuffer);\n    relaxKernel.setBinding(4, DiOutBuffer);\n    updateDistanceKernel.setBinding(0, DOutBuffer);\n    updateDistanceKernel.setBinding(1, DiOutBuffer);\n    updatePredKernel.setBinding(0, VBuffer);\n    updatePredKernel.setBinding(1, EBuffer);\n    updatePredKernel.setBinding(2, IBuffer);\n    updatePredKernel.setBinding(3, WBuffer);\n    updatePredKernel.setBinding(4, DOutBuffer);\n    updatePredKernel.setBinding(5, POutBuffer);\n    var startTime = window.performance.now();\n\n    for (var i = 1; i < V.length; i++) {\n      relaxKernel.dispatch(1, 1);\n      updateDistanceKernel.dispatch(1, 1);\n    }\n\n    updatePredKernel.dispatch(1, 1); // result\n\n    var out = await readback.readBuffer(DiOutBuffer);\n    var predecessor = await readback.readBuffer(POutBuffer);\n    var labels = ['A', 'B', 'C', 'D', 'E'];\n\n    for (var _i = 0; _i < V.length; _i++) {\n      console.log(\"from \".concat(labels[0], \" to \").concat(labels[_i], \" = \").concat(out[_i], \", predecessor = \").concat(labels[predecessor[_i]]));\n    }\n\n    console.log(\"GPU Time Elapsed: \".concat(window.performance.now() - startTime, \"ms\"));\n  };\n\n  var findShortestPath = _g2.Algorithm.findShortestPath;\n  var data = {\n    nodes: [{\n      id: 'A',\n      label: 'A'\n    }, {\n      id: 'B',\n      label: 'B'\n    }, {\n      id: 'C',\n      label: 'C'\n    }, {\n      id: 'D',\n      label: 'D'\n    }, {\n      id: 'E',\n      label: 'E'\n    }],\n    edges: [{\n      source: 'A',\n      target: 'B',\n      weight: 9\n    }, {\n      source: 'A',\n      target: 'C',\n      weight: 4\n    }, {\n      source: 'B',\n      target: 'C',\n      weight: 10\n    }, {\n      source: 'B',\n      target: 'D',\n      weight: 2\n    }, {\n      source: 'B',\n      target: 'E',\n      weight: 3\n    }, {\n      source: 'C',\n      target: 'D',\n      weight: 2\n    }, {\n      source: 'C',\n      target: 'E',\n      weight: 11\n    }, {\n      source: 'D',\n      target: 'B',\n      weight: 2\n    }, {\n      source: 'E',\n      target: 'D',\n      weight: 2\n    }]\n  };\n  var startTime = window.performance.now();\n\n  for (var i = 0; i < data.nodes.length; i++) {\n    var _findShortestPath = findShortestPath(data, 'A', data.nodes[i].id, true, 'weight'),\n        length = _findShortestPath.length,\n        path = _findShortestPath.path,\n        allPath = _findShortestPath.allPath;\n\n    console.log(\"from A to \".concat(data.nodes[i].id, \" = \").concat(length, \": \"), path);\n  }\n\n  console.log(\"CPU Time Elapsed: \".concat(window.performance.now() - startTime, \"ms\"));\n});"},{"relativePath":"gpgpu/demo/fruchterman.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/gpgpu/demo/fruchterman.js","order":8,"filename":"fruchterman.js","title":{"zh":"Fruchterman 布局算法","en":"Fruchterman Layout"},"source":"import { Canvas, CanvasEvent, Circle, Line } from '@antv/g';\nimport { Kernel, Plugin } from '@antv/g-plugin-gpgpu';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { DeviceRenderer, Renderer as WebGPURenderer } from '@antv/g-webgpu';\n\nconst { BufferUsage } = DeviceRenderer;\n\n/**\n * ported from https://nblintao.github.io/ParaGraphL/\n * speed up ~100x(100ms vs 30s) compared with G6 @see https://g6.antv.vision/zh/examples/net/furchtermanLayout#fruchtermanWebWorker\n *\n * rewrite with WGSL(WebGPU Shader Language),\n * use Compressed Sparse Row (CSR) for adjacency list\n */\n\nconst MAX_ITERATION = 1000;\nconst CANVAS_SIZE = 600;\n\n// use WebGPU\nconst renderer = new WebGPURenderer();\nrenderer.registerPlugin(new Plugin());\n\n// create a canvas\nconst $wrapper = document.getElementById('container');\nconst $text = document.createElement('div');\n$text.textContent = 'Please open the devtools, the shortest paths will be printed in console.';\n$wrapper.appendChild($text);\n\nconst canvas = new Canvas({\n  container: $wrapper,\n  width: 1,\n  height: 1,\n  renderer,\n});\n\n(async () => {\n  await canvas.ready;\n\n  // @see https://g6.antv.vision/en/examples/net/forceDirected/#basicForceDirected\n  const data = await (\n    await fetch(\n      'https://gw.alipayobjects.com/os/basement_prod/7bacd7d1-4119-4ac1-8be3-4c4b9bcbc25f.json',\n    )\n  ).json();\n\n  let startTime = window.performance.now();\n\n  const center = [CANVAS_SIZE / 2, CANVAS_SIZE / 2];\n  // generate position of each node\n  const nodes = data.nodes.map((n) => ({\n    x: Math.random() * CANVAS_SIZE,\n    y: Math.random() * CANVAS_SIZE,\n    id: n.id,\n  }));\n  const nodeNum = nodes.length;\n  const [edges, indices, positions] = generateCSR(nodes, data.edges);\n\n  const area = CANVAS_SIZE * CANVAS_SIZE;\n  let maxDisplace = Math.sqrt(area) / 10;\n  const k2 = area / (nodes.length + 1);\n  const k = Math.sqrt(k2);\n\n  const plugin = renderer.getPlugin('device-renderer');\n  const device = plugin.getDevice();\n  const kernel = new Kernel(device, {\n    computeShader: `\nstruct Buffer {\n  data: array<i32>,\n};\nstruct PositionBuffer {\n  data: array<vec2<f32>>,\n};\n@group(0) @binding(0) var<storage, read> edges : Buffer;\n@group(0) @binding(1) var<storage, read> indices : Buffer;\n@group(0) @binding(2) var<storage, read_write> positions : PositionBuffer;\n\nstruct Params {\n  vertexNum: f32,\n  k: f32,\n  k2: f32,\n  gravity: f32,\n  speed: f32,\n  maxDisplace: f32,\n  center: vec2<f32>,\n};\n@group(0) @binding(3) var<uniform> params : Params;\n\nfn calc_repulsive(i: u32, current_node: vec2<f32>) -> vec2<f32> {\n  var dx = 0.0;\n  var dy = 0.0;\n  for (var j = 0u; j < u32(params.vertexNum); j = j + 1u) {\n    if (i != j) {\n      var nextNode = positions.data[j];\n      var x_dist = current_node[0] - nextNode[0];\n      var y_dist = current_node[1] - nextNode[1];\n      var dist = sqrt(x_dist * x_dist + y_dist * y_dist) + 0.01;\n      if (dist > 0.0) {\n        var repulsiveF = params.k2 / dist;\n        dx = dx + x_dist / dist * repulsiveF;\n        dy = dy + y_dist / dist * repulsiveF;\n      }\n    }\n  }\n  return vec2<f32>(dx, dy);\n}\n\nfn calc_gravity(current_node: vec2<f32>) -> vec2<f32> {\n  var dx = 0.0;\n  var dy = 0.0;\n  var vx = current_node[0] - params.center[0];\n  var vy = current_node[1] - params.center[1];\n  var gf = 0.01 * params.k * params.gravity;\n  dx = gf * vx;\n  dy = gf * vy;\n\n  return vec2<f32>(dx, dy);\n}\n\nfn calc_attractive(i: u32, current_node: vec2<f32>) -> vec2<f32> {\n  var dx = 0.0;\n  var dy = 0.0;\n\n  for (var j = indices.data[i]; j < indices.data[i + 1u]; j = j + 1) {\n    var next_node = positions.data[edges.data[j]];\n    var x_dist = current_node[0] - next_node[0];\n    var y_dist = current_node[1] - next_node[1];\n    var dist = sqrt(x_dist * x_dist + y_dist * y_dist) + 0.01;\n    var attractiveF = dist * dist / params.k;\n    if (dist > 0.0) {\n      dx = dx - x_dist / dist * attractiveF;\n      dy = dy - y_dist / dist * attractiveF;\n    }\n  }\n\n  return vec2<f32>(dx, dy);\n}\n\n@stage(compute) @workgroup_size(1, 1)\nfn main(\n  @builtin(global_invocation_id) global_id : vec3<u32>,\n) {\n  var i = global_id.x;\n  if (i < u32(params.vertexNum)) {\n    var current_node = positions.data[i];\n    var dx = 0.0;\n    var dy = 0.0;\n\n    // repulsive\n    var repulsive = calc_repulsive(i, current_node);\n    dx = dx + repulsive[0];\n    dy = dy + repulsive[1];\n\n    // attractive\n    var attractive = calc_attractive(i, current_node);\n    dx = dx + attractive[0];\n    dy = dy + attractive[1];\n\n    // gravity\n    var gravity = calc_gravity(current_node);\n    dx = dx - gravity[0];\n    dy = dy - gravity[1];\n\n    // speed\n    dx = dx * params.speed;\n    dy = dy * params.speed;\n\n    // move\n    var dist_length = sqrt(dx * dx + dy * dy);\n    if (dist_length > 0.0) {\n      var limited_dist = min(params.maxDisplace * params.speed, dist_length);\n\n      positions.data[i] = vec2<f32>(\n        positions.data[i][0] + dx / dist_length * limited_dist,\n        positions.data[i][1] + dy / dist_length * limited_dist,\n      );\n    }\n  }\n}`,\n  });\n\n  const readback = device.createReadback();\n  const edgesBuffer = device.createBuffer({\n    usage: BufferUsage.STORAGE,\n    viewOrSize: new Int32Array(edges),\n  });\n  const indicesBuffer = device.createBuffer({\n    usage: BufferUsage.STORAGE,\n    viewOrSize: new Int32Array(indices),\n  });\n  const positionsBuffer = device.createBuffer({\n    usage: BufferUsage.STORAGE | BufferUsage.COPY_SRC,\n    viewOrSize: new Float32Array(positions),\n  });\n  const paramBuffer = device.createBuffer({\n    usage: BufferUsage.UNIFORM | BufferUsage.COPY_DST | BufferUsage.COPY_SRC,\n    viewOrSize: new Float32Array([nodeNum, k, k2, 10, 0.1, maxDisplace, center[0], center[1]]),\n  });\n\n  kernel.setBinding(0, edgesBuffer);\n  kernel.setBinding(1, indicesBuffer);\n  kernel.setBinding(2, positionsBuffer);\n  kernel.setBinding(3, paramBuffer);\n\n  for (let i = 0; i < MAX_ITERATION; i++) {\n    kernel.dispatch(nodeNum, 1);\n\n    // update uniform\n    maxDisplace *= 0.99;\n    paramBuffer.setSubData(5 * 4, new Float32Array([maxDisplace]));\n  }\n\n  const result = await readback.readBuffer(positionsBuffer);\n\n  console.log(\n    `GPU Time Elapsed: ${Number.parseFloat(window.performance.now() - startTime).toFixed(2)}ms`,\n  );\n\n  renderCircles(edges, indices, result);\n})();\n\nconst generateCSR = (nodes, edges) => {\n  const resultEdges = [];\n  const indices = [];\n  const positions = [];\n  const nodeDict = [];\n  const mapIdPos = {}; // { A: 0, B: 1, C: 2 }\n  let i = 0;\n  for (i = 0; i < nodes.length; i++) {\n    const { id, x, y } = nodes[i];\n    mapIdPos[id] = i;\n    nodeDict.push([]);\n    positions.push(x, y);\n  }\n  for (i = 0; i < edges.length; i++) {\n    const e = edges[i];\n    nodeDict[mapIdPos[e.source]].push(mapIdPos[e.target]);\n    nodeDict[mapIdPos[e.target]].push(mapIdPos[e.source]);\n  }\n\n  for (i = 0; i < nodes.length; i++) {\n    const offset = resultEdges.length;\n    const dests = nodeDict[i];\n    const len = dests.length;\n    indices[i] = offset;\n    for (let j = 0; j < len; ++j) {\n      const dest = dests[j];\n      resultEdges.push(dest);\n    }\n  }\n\n  indices.push(resultEdges.length);\n\n  return [resultEdges, indices, positions];\n};\n\nfunction renderCircles(edges, indices, positions) {\n  const $canvasContainer = document.createElement('div');\n  $wrapper.appendChild($canvasContainer);\n\n  const renderer = new WebGLRenderer({ targets: ['webgl2', 'webgl1'] });\n  const canvas = new Canvas({\n    container: $canvasContainer,\n    width: CANVAS_SIZE,\n    height: CANVAS_SIZE,\n    renderer,\n  });\n\n  canvas.addEventListener(CanvasEvent.READY, () => {\n    // draw edges\n    for (let i = 0; i < indices.length - 1; i++) {\n      const x1 = positions[i * 2];\n      const y1 = positions[i * 2 + 1];\n\n      for (let j = indices[i]; j < indices[i + 1]; j++) {\n        const x2 = positions[edges[j] * 2];\n        const y2 = positions[edges[j] * 2 + 1];\n        canvas.appendChild(\n          new Line({\n            style: {\n              x1,\n              y1,\n              x2,\n              y2,\n              stroke: '#1890FF',\n              lineWidth: 1,\n            },\n          }),\n        );\n      }\n    }\n\n    // draw nodes\n    for (let i = 0; i < positions.length; i += 2) {\n      const x = positions[i];\n      const y = positions[i + 1];\n\n      canvas.appendChild(\n        new Circle({\n          style: {\n            cx: x,\n            cy: y,\n            r: 5,\n            fill: 'red',\n            stroke: 'blue',\n            lineWidth: 2,\n          },\n        }),\n      );\n    }\n  });\n}\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-plugin-gpgpu\", \"@antv/g-webgl\", \"@antv/g-webgpu\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-plugin-gpgpu\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gPluginGpgpu, global.gWebgl, global.gWebgpu);\n    global.fruchterman = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gPluginGpgpu, _gWebgl, _gWebgpu) {\n  \"use strict\";\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  var BufferUsage = _gWebgpu.DeviceRenderer.BufferUsage;\n  /**\n   * ported from https://nblintao.github.io/ParaGraphL/\n   * speed up ~100x(100ms vs 30s) compared with G6 @see https://g6.antv.vision/zh/examples/net/furchtermanLayout#fruchtermanWebWorker\n   *\n   * rewrite with WGSL(WebGPU Shader Language),\n   * use Compressed Sparse Row (CSR) for adjacency list\n   */\n\n  var MAX_ITERATION = 1000;\n  var CANVAS_SIZE = 600; // use WebGPU\n\n  var renderer = new _gWebgpu.Renderer();\n  renderer.registerPlugin(new _gPluginGpgpu.Plugin()); // create a canvas\n\n  var $wrapper = document.getElementById('container');\n  var $text = document.createElement('div');\n  $text.textContent = 'Please open the devtools, the shortest paths will be printed in console.';\n  $wrapper.appendChild($text);\n  var canvas = new _g.Canvas({\n    container: $wrapper,\n    width: 1,\n    height: 1,\n    renderer: renderer\n  });\n\n  (async function () {\n    await canvas.ready; // @see https://g6.antv.vision/en/examples/net/forceDirected/#basicForceDirected\n\n    var data = await (await fetch('https://gw.alipayobjects.com/os/basement_prod/7bacd7d1-4119-4ac1-8be3-4c4b9bcbc25f.json')).json();\n    var startTime = window.performance.now();\n    var center = [CANVAS_SIZE / 2, CANVAS_SIZE / 2]; // generate position of each node\n\n    var nodes = data.nodes.map(function (n) {\n      return {\n        x: Math.random() * CANVAS_SIZE,\n        y: Math.random() * CANVAS_SIZE,\n        id: n.id\n      };\n    });\n    var nodeNum = nodes.length;\n\n    var _generateCSR = generateCSR(nodes, data.edges),\n        _generateCSR2 = _slicedToArray(_generateCSR, 3),\n        edges = _generateCSR2[0],\n        indices = _generateCSR2[1],\n        positions = _generateCSR2[2];\n\n    var area = CANVAS_SIZE * CANVAS_SIZE;\n    var maxDisplace = Math.sqrt(area) / 10;\n    var k2 = area / (nodes.length + 1);\n    var k = Math.sqrt(k2);\n    var plugin = renderer.getPlugin('device-renderer');\n    var device = plugin.getDevice();\n    var kernel = new _gPluginGpgpu.Kernel(device, {\n      computeShader: \"\\nstruct Buffer {\\n  data: array<i32>,\\n};\\nstruct PositionBuffer {\\n  data: array<vec2<f32>>,\\n};\\n@group(0) @binding(0) var<storage, read> edges : Buffer;\\n@group(0) @binding(1) var<storage, read> indices : Buffer;\\n@group(0) @binding(2) var<storage, read_write> positions : PositionBuffer;\\n\\nstruct Params {\\n  vertexNum: f32,\\n  k: f32,\\n  k2: f32,\\n  gravity: f32,\\n  speed: f32,\\n  maxDisplace: f32,\\n  center: vec2<f32>,\\n};\\n@group(0) @binding(3) var<uniform> params : Params;\\n\\nfn calc_repulsive(i: u32, current_node: vec2<f32>) -> vec2<f32> {\\n  var dx = 0.0;\\n  var dy = 0.0;\\n  for (var j = 0u; j < u32(params.vertexNum); j = j + 1u) {\\n    if (i != j) {\\n      var nextNode = positions.data[j];\\n      var x_dist = current_node[0] - nextNode[0];\\n      var y_dist = current_node[1] - nextNode[1];\\n      var dist = sqrt(x_dist * x_dist + y_dist * y_dist) + 0.01;\\n      if (dist > 0.0) {\\n        var repulsiveF = params.k2 / dist;\\n        dx = dx + x_dist / dist * repulsiveF;\\n        dy = dy + y_dist / dist * repulsiveF;\\n      }\\n    }\\n  }\\n  return vec2<f32>(dx, dy);\\n}\\n\\nfn calc_gravity(current_node: vec2<f32>) -> vec2<f32> {\\n  var dx = 0.0;\\n  var dy = 0.0;\\n  var vx = current_node[0] - params.center[0];\\n  var vy = current_node[1] - params.center[1];\\n  var gf = 0.01 * params.k * params.gravity;\\n  dx = gf * vx;\\n  dy = gf * vy;\\n\\n  return vec2<f32>(dx, dy);\\n}\\n\\nfn calc_attractive(i: u32, current_node: vec2<f32>) -> vec2<f32> {\\n  var dx = 0.0;\\n  var dy = 0.0;\\n\\n  for (var j = indices.data[i]; j < indices.data[i + 1u]; j = j + 1) {\\n    var next_node = positions.data[edges.data[j]];\\n    var x_dist = current_node[0] - next_node[0];\\n    var y_dist = current_node[1] - next_node[1];\\n    var dist = sqrt(x_dist * x_dist + y_dist * y_dist) + 0.01;\\n    var attractiveF = dist * dist / params.k;\\n    if (dist > 0.0) {\\n      dx = dx - x_dist / dist * attractiveF;\\n      dy = dy - y_dist / dist * attractiveF;\\n    }\\n  }\\n\\n  return vec2<f32>(dx, dy);\\n}\\n\\n@stage(compute) @workgroup_size(1, 1)\\nfn main(\\n  @builtin(global_invocation_id) global_id : vec3<u32>,\\n) {\\n  var i = global_id.x;\\n  if (i < u32(params.vertexNum)) {\\n    var current_node = positions.data[i];\\n    var dx = 0.0;\\n    var dy = 0.0;\\n\\n    // repulsive\\n    var repulsive = calc_repulsive(i, current_node);\\n    dx = dx + repulsive[0];\\n    dy = dy + repulsive[1];\\n\\n    // attractive\\n    var attractive = calc_attractive(i, current_node);\\n    dx = dx + attractive[0];\\n    dy = dy + attractive[1];\\n\\n    // gravity\\n    var gravity = calc_gravity(current_node);\\n    dx = dx - gravity[0];\\n    dy = dy - gravity[1];\\n\\n    // speed\\n    dx = dx * params.speed;\\n    dy = dy * params.speed;\\n\\n    // move\\n    var dist_length = sqrt(dx * dx + dy * dy);\\n    if (dist_length > 0.0) {\\n      var limited_dist = min(params.maxDisplace * params.speed, dist_length);\\n\\n      positions.data[i] = vec2<f32>(\\n        positions.data[i][0] + dx / dist_length * limited_dist,\\n        positions.data[i][1] + dy / dist_length * limited_dist,\\n      );\\n    }\\n  }\\n}\"\n    });\n    var readback = device.createReadback();\n    var edgesBuffer = device.createBuffer({\n      usage: BufferUsage.STORAGE,\n      viewOrSize: new Int32Array(edges)\n    });\n    var indicesBuffer = device.createBuffer({\n      usage: BufferUsage.STORAGE,\n      viewOrSize: new Int32Array(indices)\n    });\n    var positionsBuffer = device.createBuffer({\n      usage: BufferUsage.STORAGE | BufferUsage.COPY_SRC,\n      viewOrSize: new Float32Array(positions)\n    });\n    var paramBuffer = device.createBuffer({\n      usage: BufferUsage.UNIFORM | BufferUsage.COPY_DST | BufferUsage.COPY_SRC,\n      viewOrSize: new Float32Array([nodeNum, k, k2, 10, 0.1, maxDisplace, center[0], center[1]])\n    });\n    kernel.setBinding(0, edgesBuffer);\n    kernel.setBinding(1, indicesBuffer);\n    kernel.setBinding(2, positionsBuffer);\n    kernel.setBinding(3, paramBuffer);\n\n    for (var i = 0; i < MAX_ITERATION; i++) {\n      kernel.dispatch(nodeNum, 1); // update uniform\n\n      maxDisplace *= 0.99;\n      paramBuffer.setSubData(5 * 4, new Float32Array([maxDisplace]));\n    }\n\n    var result = await readback.readBuffer(positionsBuffer);\n    console.log(\"GPU Time Elapsed: \".concat(Number.parseFloat(window.performance.now() - startTime).toFixed(2), \"ms\"));\n    renderCircles(edges, indices, result);\n  })();\n\n  var generateCSR = function generateCSR(nodes, edges) {\n    var resultEdges = [];\n    var indices = [];\n    var positions = [];\n    var nodeDict = [];\n    var mapIdPos = {}; // { A: 0, B: 1, C: 2 }\n\n    var i = 0;\n\n    for (i = 0; i < nodes.length; i++) {\n      var _nodes$i = nodes[i],\n          id = _nodes$i.id,\n          x = _nodes$i.x,\n          y = _nodes$i.y;\n      mapIdPos[id] = i;\n      nodeDict.push([]);\n      positions.push(x, y);\n    }\n\n    for (i = 0; i < edges.length; i++) {\n      var e = edges[i];\n      nodeDict[mapIdPos[e.source]].push(mapIdPos[e.target]);\n      nodeDict[mapIdPos[e.target]].push(mapIdPos[e.source]);\n    }\n\n    for (i = 0; i < nodes.length; i++) {\n      var offset = resultEdges.length;\n      var dests = nodeDict[i];\n      var len = dests.length;\n      indices[i] = offset;\n\n      for (var j = 0; j < len; ++j) {\n        var dest = dests[j];\n        resultEdges.push(dest);\n      }\n    }\n\n    indices.push(resultEdges.length);\n    return [resultEdges, indices, positions];\n  };\n\n  function renderCircles(edges, indices, positions) {\n    var $canvasContainer = document.createElement('div');\n    $wrapper.appendChild($canvasContainer);\n    var renderer = new _gWebgl.Renderer({\n      targets: ['webgl2', 'webgl1']\n    });\n    var canvas = new _g.Canvas({\n      container: $canvasContainer,\n      width: CANVAS_SIZE,\n      height: CANVAS_SIZE,\n      renderer: renderer\n    });\n    canvas.addEventListener(_g.CanvasEvent.READY, function () {\n      // draw edges\n      for (var i = 0; i < indices.length - 1; i++) {\n        var x1 = positions[i * 2];\n        var y1 = positions[i * 2 + 1];\n\n        for (var j = indices[i]; j < indices[i + 1]; j++) {\n          var x2 = positions[edges[j] * 2];\n          var y2 = positions[edges[j] * 2 + 1];\n          canvas.appendChild(new _g.Line({\n            style: {\n              x1: x1,\n              y1: y1,\n              x2: x2,\n              y2: y2,\n              stroke: '#1890FF',\n              lineWidth: 1\n            }\n          }));\n        }\n      } // draw nodes\n\n\n      for (var _i2 = 0; _i2 < positions.length; _i2 += 2) {\n        var x = positions[_i2];\n        var y = positions[_i2 + 1];\n        canvas.appendChild(new _g.Circle({\n          style: {\n            cx: x,\n            cy: y,\n            r: 5,\n            fill: 'red',\n            stroke: 'blue',\n            lineWidth: 2\n          }\n        }));\n      }\n    });\n  }\n});"},{"relativePath":"gpgpu/demo/matrix-multiplication.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/gpgpu/demo/matrix-multiplication.js","order":0,"filename":"matrix-multiplication.js","title":{"zh":"矩阵乘法","en":"Matrix multiplication"},"source":"import { Canvas, CanvasEvent } from '@antv/g';\nimport { Kernel, Plugin } from '@antv/g-plugin-gpgpu';\nimport { DeviceRenderer, Renderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\n\nconst { BufferUsage } = DeviceRenderer;\n\n/**\n * ported from https://web.dev/gpu-compute/\n *\n * should run under WebGPU-supported browsers such as Chrome 94+\n */\n\nconst WORKGROUP_SIZE_X = 8;\nconst WORKGROUP_SIZE_Y = 8;\n\n// use WebGPU\nconst renderer = new Renderer();\nrenderer.registerPlugin(new Plugin());\n\n// create a canvas\nconst $wrapper = document.getElementById('container');\nconst canvas = new Canvas({\n  container: $wrapper,\n  width: 1,\n  height: 1,\n  renderer,\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  const plugin = renderer.getPlugin('device-renderer');\n  const device = plugin.getDevice();\n\n  const kernel = new Kernel(device, {\n    computeShader: `\n  struct Matrix {\n    size : vec2<f32>,\n    numbers: array<f32>,\n  };\n  \n  @group(0) @binding(0) var<storage, read> firstMatrix : Matrix;\n  @group(0) @binding(1) var<storage, read> secondMatrix : Matrix;\n  @group(0) @binding(2) var<storage, write> resultMatrix : Matrix;\n  \n  @stage(compute) @workgroup_size(${WORKGROUP_SIZE_X}, ${WORKGROUP_SIZE_Y})\n  fn main(\n    @builtin(global_invocation_id) global_id : vec3<u32>\n  ) {\n    // Guard against out-of-bounds work group sizes\n    if (global_id.x >= u32(firstMatrix.size.x) || global_id.y >= u32(secondMatrix.size.y)) {\n      return;\n    }\n  \n    resultMatrix.size = vec2<f32>(firstMatrix.size.x, secondMatrix.size.y);\n  \n    let resultCell = vec2<u32>(global_id.x, global_id.y);\n    var result = 0.0;\n    for (var i = 0u; i < u32(firstMatrix.size.y); i = i + 1u) {\n      let a = i + resultCell.x * u32(firstMatrix.size.y);\n      let b = resultCell.y + i * u32(secondMatrix.size.y);\n      result = result + firstMatrix.numbers[a] * secondMatrix.numbers[b];\n    }\n  \n    let index = resultCell.y + resultCell.x * u32(secondMatrix.size.y);\n    resultMatrix.numbers[index] = result;\n  }`,\n  });\n\n  calc(\n    kernel,\n    device,\n    new Float32Array([2 /* rows */, 4 /* columns */, 1, 2, 3, 4, 5, 6, 7, 8]),\n    new Float32Array([4 /* rows */, 2 /* columns */, 1, 2, 3, 4, 5, 6, 7, 8]),\n  );\n\n  // GUI\n  const gui = new lil.GUI({ autoPlace: false });\n  $wrapper.appendChild(gui.domElement);\n  const folder = gui.addFolder('matrix size');\n  const config = {\n    size: 32,\n  };\n  folder.add(config, 'size', [32, 64, 128, 256, 512, 1024]).onChange((size) => {\n    const first = new Float32Array([size, size].concat(new Array(size * size).fill(Math.random())));\n    const second = new Float32Array(\n      [size, size].concat(new Array(size * size).fill(Math.random())),\n    );\n    calc(kernel, device, first, second);\n  });\n  folder.open();\n});\n\nconst cpuMultiplication = (firstMatrix, secondMatrix, $div) => {\n  const startTime = window.performance.now();\n\n  const x = firstMatrix[0];\n  const z = firstMatrix[1];\n  const y = secondMatrix[1];\n\n  const resultMatrix = new Float32Array(firstMatrix[0] * secondMatrix[1]);\n\n  let productRow = Array.apply(null, new Array(y)).map(Number.prototype.valueOf, 0);\n  let product = new Array(x);\n  for (let p = 0; p < x; p++) {\n    product[p] = productRow.slice();\n  }\n  for (let i = 0; i < x; i++) {\n    for (let j = 0; j < y; j++) {\n      for (let k = 0; k < z; k++) {\n        product[i][j] += firstMatrix[i * x + k] * secondMatrix[k * y + j];\n      }\n    }\n  }\n\n  const elapsed = window.performance.now() - startTime;\n  setCPUTimeElapsed(elapsed, $div);\n\n  return elapsed;\n};\n\nconst gpuMultiplication = async (kernel, device, firstMatrix, secondMatrix, $div) => {\n  let startTime = window.performance.now();\n  const x = Math.ceil(firstMatrix[0] / WORKGROUP_SIZE_X); // X dimension of the grid of workgroups to dispatch.\n  const y = Math.ceil(secondMatrix[1] / WORKGROUP_SIZE_Y); // Y dimension of the grid of workgroups to dispatch.\n  const resultMatrixBufferSize = 2 + firstMatrix[0] * secondMatrix[1];\n  const resultMatrix = new Float32Array(resultMatrixBufferSize);\n\n  const firstMatrixBuffer = device.createBuffer({\n    usage: BufferUsage.STORAGE,\n    viewOrSize: firstMatrix,\n  });\n  const secondMatrixBuffer = device.createBuffer({\n    usage: BufferUsage.STORAGE,\n    viewOrSize: secondMatrix,\n  });\n  const resultBuffer = device.createBuffer({\n    usage: BufferUsage.STORAGE | BufferUsage.COPY_SRC,\n    viewOrSize: resultMatrix,\n  });\n  const readback = device.createReadback();\n\n  kernel.setBinding(0, firstMatrixBuffer);\n  kernel.setBinding(1, secondMatrixBuffer);\n  kernel.setBinding(2, resultBuffer);\n  kernel.dispatch(x, y);\n\n  await readback.readBuffer(resultBuffer);\n  const elapsed = window.performance.now() - startTime;\n\n  setGPUTimeElapsed(elapsed, $div);\n\n  // output\n  console.log(resultMatrix);\n  return elapsed;\n};\n\nconst calc = async (kernel, device, firstMatrix, secondMatrix) => {\n  const $div = document.createElement('div');\n  $div.textContent = `Matrix size: ${firstMatrix[0]} * ${firstMatrix[1]}`;\n  $wrapper.appendChild($div);\n\n  const cpuTimeElapsed = cpuMultiplication(firstMatrix, secondMatrix, $div);\n  const gpuTimeElapsed = await gpuMultiplication(kernel, device, firstMatrix, secondMatrix, $div);\n  const speedUp = Number.parseFloat(cpuTimeElapsed / gpuTimeElapsed).toFixed(1);\n\n  const $speedUp = document.createElement('div');\n  $speedUp.textContent = `SpeedUp: ${speedUp}x`;\n  $speedUp.style = 'font-weight: bold; margin-bottom: 16px;';\n  $wrapper.appendChild($speedUp);\n};\n\nconst setCPUTimeElapsed = (time, $div) => {\n  const $cpu = document.createElement('div');\n  $cpu.textContent = `CPU Time Elapsed: ${Number.parseFloat(time).toFixed(2)}ms`;\n  $div.appendChild($cpu);\n};\nconst setGPUTimeElapsed = (time, $div) => {\n  const $gpu = document.createElement('div');\n  $gpu.textContent = `GPU Time Elapsed: ${Number.parseFloat(time).toFixed(2)}ms`;\n  $div.appendChild($gpu);\n};\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-plugin-gpgpu\", \"@antv/g-webgpu\", \"lil-gui\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-plugin-gpgpu\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gPluginGpgpu, global.gWebgpu, global.lilGui);\n    global.matrixMultiplication = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gPluginGpgpu, _gWebgpu, lil) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  var BufferUsage = _gWebgpu.DeviceRenderer.BufferUsage;\n  /**\n   * ported from https://web.dev/gpu-compute/\n   *\n   * should run under WebGPU-supported browsers such as Chrome 94+\n   */\n\n  var WORKGROUP_SIZE_X = 8;\n  var WORKGROUP_SIZE_Y = 8; // use WebGPU\n\n  var renderer = new _gWebgpu.Renderer();\n  renderer.registerPlugin(new _gPluginGpgpu.Plugin()); // create a canvas\n\n  var $wrapper = document.getElementById('container');\n  var canvas = new _g.Canvas({\n    container: $wrapper,\n    width: 1,\n    height: 1,\n    renderer: renderer\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    var plugin = renderer.getPlugin('device-renderer');\n    var device = plugin.getDevice();\n    var kernel = new _gPluginGpgpu.Kernel(device, {\n      computeShader: \"\\n  struct Matrix {\\n    size : vec2<f32>,\\n    numbers: array<f32>,\\n  };\\n  \\n  @group(0) @binding(0) var<storage, read> firstMatrix : Matrix;\\n  @group(0) @binding(1) var<storage, read> secondMatrix : Matrix;\\n  @group(0) @binding(2) var<storage, write> resultMatrix : Matrix;\\n  \\n  @stage(compute) @workgroup_size(\".concat(WORKGROUP_SIZE_X, \", \").concat(WORKGROUP_SIZE_Y, \")\\n  fn main(\\n    @builtin(global_invocation_id) global_id : vec3<u32>\\n  ) {\\n    // Guard against out-of-bounds work group sizes\\n    if (global_id.x >= u32(firstMatrix.size.x) || global_id.y >= u32(secondMatrix.size.y)) {\\n      return;\\n    }\\n  \\n    resultMatrix.size = vec2<f32>(firstMatrix.size.x, secondMatrix.size.y);\\n  \\n    let resultCell = vec2<u32>(global_id.x, global_id.y);\\n    var result = 0.0;\\n    for (var i = 0u; i < u32(firstMatrix.size.y); i = i + 1u) {\\n      let a = i + resultCell.x * u32(firstMatrix.size.y);\\n      let b = resultCell.y + i * u32(secondMatrix.size.y);\\n      result = result + firstMatrix.numbers[a] * secondMatrix.numbers[b];\\n    }\\n  \\n    let index = resultCell.y + resultCell.x * u32(secondMatrix.size.y);\\n    resultMatrix.numbers[index] = result;\\n  }\")\n    });\n    calc(kernel, device, new Float32Array([2\n    /* rows */\n    , 4\n    /* columns */\n    , 1, 2, 3, 4, 5, 6, 7, 8]), new Float32Array([4\n    /* rows */\n    , 2\n    /* columns */\n    , 1, 2, 3, 4, 5, 6, 7, 8])); // GUI\n\n    var gui = new lil.GUI({\n      autoPlace: false\n    });\n    $wrapper.appendChild(gui.domElement);\n    var folder = gui.addFolder('matrix size');\n    var config = {\n      size: 32\n    };\n    folder.add(config, 'size', [32, 64, 128, 256, 512, 1024]).onChange(function (size) {\n      var first = new Float32Array([size, size].concat(new Array(size * size).fill(Math.random())));\n      var second = new Float32Array([size, size].concat(new Array(size * size).fill(Math.random())));\n      calc(kernel, device, first, second);\n    });\n    folder.open();\n  });\n\n  var cpuMultiplication = function cpuMultiplication(firstMatrix, secondMatrix, $div) {\n    var startTime = window.performance.now();\n    var x = firstMatrix[0];\n    var z = firstMatrix[1];\n    var y = secondMatrix[1];\n    var resultMatrix = new Float32Array(firstMatrix[0] * secondMatrix[1]);\n    var productRow = Array.apply(null, new Array(y)).map(Number.prototype.valueOf, 0);\n    var product = new Array(x);\n\n    for (var p = 0; p < x; p++) {\n      product[p] = productRow.slice();\n    }\n\n    for (var i = 0; i < x; i++) {\n      for (var j = 0; j < y; j++) {\n        for (var k = 0; k < z; k++) {\n          product[i][j] += firstMatrix[i * x + k] * secondMatrix[k * y + j];\n        }\n      }\n    }\n\n    var elapsed = window.performance.now() - startTime;\n    setCPUTimeElapsed(elapsed, $div);\n    return elapsed;\n  };\n\n  var gpuMultiplication = async function gpuMultiplication(kernel, device, firstMatrix, secondMatrix, $div) {\n    var startTime = window.performance.now();\n    var x = Math.ceil(firstMatrix[0] / WORKGROUP_SIZE_X); // X dimension of the grid of workgroups to dispatch.\n\n    var y = Math.ceil(secondMatrix[1] / WORKGROUP_SIZE_Y); // Y dimension of the grid of workgroups to dispatch.\n\n    var resultMatrixBufferSize = 2 + firstMatrix[0] * secondMatrix[1];\n    var resultMatrix = new Float32Array(resultMatrixBufferSize);\n    var firstMatrixBuffer = device.createBuffer({\n      usage: BufferUsage.STORAGE,\n      viewOrSize: firstMatrix\n    });\n    var secondMatrixBuffer = device.createBuffer({\n      usage: BufferUsage.STORAGE,\n      viewOrSize: secondMatrix\n    });\n    var resultBuffer = device.createBuffer({\n      usage: BufferUsage.STORAGE | BufferUsage.COPY_SRC,\n      viewOrSize: resultMatrix\n    });\n    var readback = device.createReadback();\n    kernel.setBinding(0, firstMatrixBuffer);\n    kernel.setBinding(1, secondMatrixBuffer);\n    kernel.setBinding(2, resultBuffer);\n    kernel.dispatch(x, y);\n    await readback.readBuffer(resultBuffer);\n    var elapsed = window.performance.now() - startTime;\n    setGPUTimeElapsed(elapsed, $div); // output\n\n    console.log(resultMatrix);\n    return elapsed;\n  };\n\n  var calc = async function calc(kernel, device, firstMatrix, secondMatrix) {\n    var $div = document.createElement('div');\n    $div.textContent = \"Matrix size: \".concat(firstMatrix[0], \" * \").concat(firstMatrix[1]);\n    $wrapper.appendChild($div);\n    var cpuTimeElapsed = cpuMultiplication(firstMatrix, secondMatrix, $div);\n    var gpuTimeElapsed = await gpuMultiplication(kernel, device, firstMatrix, secondMatrix, $div);\n    var speedUp = Number.parseFloat(cpuTimeElapsed / gpuTimeElapsed).toFixed(1);\n    var $speedUp = document.createElement('div');\n    $speedUp.textContent = \"SpeedUp: \".concat(speedUp, \"x\");\n    $speedUp.style = 'font-weight: bold; margin-bottom: 16px;';\n    $wrapper.appendChild($speedUp);\n  };\n\n  var setCPUTimeElapsed = function setCPUTimeElapsed(time, $div) {\n    var $cpu = document.createElement('div');\n    $cpu.textContent = \"CPU Time Elapsed: \".concat(Number.parseFloat(time).toFixed(2), \"ms\");\n    $div.appendChild($cpu);\n  };\n\n  var setGPUTimeElapsed = function setGPUTimeElapsed(time, $div) {\n    var $gpu = document.createElement('div');\n    $gpu.textContent = \"GPU Time Elapsed: \".concat(Number.parseFloat(time).toFixed(2), \"ms\");\n    $div.appendChild($gpu);\n  };\n});"},{"relativePath":"gpgpu/demo/pagerank-big-dataset.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/gpgpu/demo/pagerank-big-dataset.js","order":7,"filename":"pagerank-big-dataset.js","title":{"zh":"Pagerank 算法（1k 节点 50w 边）","en":"Pagerank(1k vertices & 50w edges)"},"source":"import { Canvas } from '@antv/g';\nimport { Kernel, Plugin } from '@antv/g-plugin-gpgpu';\nimport { DeviceRenderer, Renderer } from '@antv/g-webgpu';\nimport { Algorithm } from '@antv/g6';\n\nconst { BufferUsage } = DeviceRenderer;\n\n/**\n * Pagerank with power method, ported from CUDA\n * @see https://github.com/princeofpython/PageRank-with-CUDA/blob/main/parallel.cu\n *\n * compared with G6:\n * @see https://g6.antv.vision/zh/docs/api/Algorithm#pagerank\n *\n * dataset: 1k vertices & 50w edges\n * @see https://github.com/sengorajkumar/gpu_graph_algorithms/tree/master/input\n */\n\nconst $wrapper = document.getElementById('container');\n(async () => {\n  // load & parse TXT datasets\n  const res = await fetch(\n    'https://gw.alipayobjects.com/os/bmw-prod/b2e21724-d8b7-415d-9fea-9b41b21410b8.txt',\n  );\n  const text = await res.text();\n  let V = [];\n  const From = [];\n  const To = [];\n  text.split('\\n').forEach((line, i) => {\n    if (i === 0) {\n      const [vertices] = line.split(' ');\n      V = new Array(Number(vertices)).fill(undefined).map((_, i) => i);\n    } else {\n      const [from, to] = line.split(' ');\n      From.push(Number(from));\n      To.push(Number(to));\n    }\n  });\n\n  // use G6's `pagerank` method\n  let startTime = window.performance.now();\n  let topNodes = calculateInCPU(V, From, To);\n  showResult('CPU', startTime, window.performance.now(), topNodes);\n\n  // use Compute Shader with WebGPU\n  startTime = window.performance.now();\n  topNodes = await calculateInGPU(V, From, To);\n  showResult('GPU', startTime, window.performance.now(), topNodes);\n})();\n\n// calculate with G6's pagerank in CPU\nconst calculateInCPU = (V, From, To) => {\n  const { pageRank } = Algorithm;\n  const data = {\n    nodes: V.map((v) => ({\n      id: `${v}`,\n      label: `${v}`,\n    })),\n    edges: From.map((from, i) => ({\n      source: `${from}`,\n      target: `${To[i]}`,\n    })),\n  };\n\n  const result = pageRank(data);\n  return Object.keys(result)\n    .map((key) => ({ id: Number(key), value: result[key] }))\n    .sort((a, b) => b.value - a.value);\n};\n\n// we use 3 kernels\nconst calculateInGPU = async (V, From, To) => {\n  // The total number of workgroup invocations (4096) exceeds the maximum allowed (256).\n  const BLOCK_SIZE = 1;\n  const BLOCKS = 256;\n  const CANVAS_SIZE = 1;\n  const d = 0.85;\n  const eps = 0.000001;\n  let maxIteration = 1000;\n\n  // use WebGPU\n  const renderer = new Renderer();\n  renderer.registerPlugin(new Plugin());\n\n  // create a canvas\n  const canvas = new Canvas({\n    container: $wrapper,\n    width: CANVAS_SIZE,\n    height: CANVAS_SIZE,\n    renderer,\n  });\n\n  // wait for canvas' services ready\n  await canvas.ready;\n\n  const plugin = renderer.getPlugin('device-renderer');\n  const device = plugin.getDevice();\n  const n = V.length;\n  const graph = new Float32Array(new Array(n * n).fill((1 - d) / n));\n  const r = new Float32Array(new Array(n).fill(1 / n));\n\n  From.forEach((from, i) => {\n    graph[To[i] * n + from] += d * 1.0;\n  });\n\n  for (let j = 0; j < n; j++) {\n    let sum = 0.0;\n\n    for (let i = 0; i < n; ++i) {\n      sum += graph[i * n + j];\n    }\n\n    for (let i = 0; i < n; ++i) {\n      if (sum != 0.0) {\n        graph[i * n + j] /= sum;\n      } else {\n        graph[i * n + j] = 1 / n;\n      }\n    }\n  }\n\n  const storeKernel = new Kernel(device, {\n    computeShader: `\nstruct Buffer {\n  data: array<f32>,\n};\n\n@group(0) @binding(0) var<storage, read> r : Buffer;\n@group(0) @binding(1) var<storage, write> r_last : Buffer;\n\n@stage(compute) @workgroup_size(${BLOCKS}, ${BLOCK_SIZE})\nfn main(\n  @builtin(global_invocation_id) global_id : vec3<u32>\n) {\n  var index = global_id.x;\n  if (index < ${V.length}u) {\n    r_last.data[index] = r.data[index];\n  }\n}`,\n  });\n\n  const matmulKernel = new Kernel(device, {\n    computeShader: `\nstruct Buffer {\n  data: array<f32>,\n};\n\n@group(0) @binding(0) var<storage, read> graph : Buffer;\n@group(0) @binding(1) var<storage, read_write> r : Buffer;\n@group(0) @binding(2) var<storage, read> r_last : Buffer;\n\n@stage(compute) @workgroup_size(${BLOCKS}, ${BLOCK_SIZE})\nfn main(\n  @builtin(global_invocation_id) global_id : vec3<u32>\n) {\n  var index = global_id.x;\n  if (index < ${V.length}u) {\n    var sum = 0.0;\n    for (var i = 0u; i < ${V.length}u; i = i + 1u) {\n      sum = sum + r_last.data[i] * graph.data[index * ${V.length}u + i];\n    }\n    r.data[index] = sum;\n  }\n}\n    `,\n  });\n\n  const rankDiffKernel = new Kernel(device, {\n    computeShader: `\nstruct Buffer {\n  data: array<f32>,\n};\n\n@group(0) @binding(0) var<storage, read> r : Buffer;\n@group(0) @binding(1) var<storage, read_write> r_last : Buffer;\n\n@stage(compute) @workgroup_size(${BLOCKS}, ${BLOCK_SIZE})\nfn main(\n  @builtin(global_invocation_id) global_id : vec3<u32>\n) {\n  var index = global_id.x;\n  if (index < ${V.length}u) {\n    r_last.data[index] = abs(r_last.data[index] - r.data[index]);\n  }\n}    \n    `,\n  });\n\n  const rBuffer = device.createBuffer({\n    usage: BufferUsage.STORAGE | BufferUsage.COPY_SRC,\n    viewOrSize: new Float32Array(r),\n  });\n  const rLastBuffer = device.createBuffer({\n    usage: BufferUsage.STORAGE | BufferUsage.COPY_SRC,\n    viewOrSize: new Float32Array(n),\n  });\n  const graphBuffer = device.createBuffer({\n    usage: BufferUsage.STORAGE,\n    viewOrSize: new Float32Array(graph),\n  });\n\n  const readback = device.createReadback();\n\n  storeKernel.setBinding(0, rBuffer);\n  storeKernel.setBinding(1, rLastBuffer);\n\n  matmulKernel.setBinding(0, graphBuffer);\n  matmulKernel.setBinding(1, rBuffer);\n  matmulKernel.setBinding(2, rLastBuffer);\n\n  rankDiffKernel.setBinding(0, rBuffer);\n  rankDiffKernel.setBinding(1, rLastBuffer);\n\n  const grids = Math.ceil(V.length / (BLOCKS * BLOCK_SIZE));\n\n  while (maxIteration--) {\n    storeKernel.dispatch(grids, 1);\n    matmulKernel.dispatch(grids, 1);\n    rankDiffKernel.dispatch(grids, 1);\n\n    const last = await readback.readBuffer(rLastBuffer);\n    const result = last.reduce((prev, cur) => prev + cur, 0);\n    if (result < eps) {\n      const out = await readback.readBuffer(rBuffer);\n\n      return Array.from(out)\n        .map((value, id) => ({ id, value }))\n        .sort((a, b) => b.value - a.value);\n    }\n  }\n};\n\nconst $text = document.createElement('div');\n$text.textContent = 'Please open the devtools, the top nodes will be printed in console.';\n$wrapper.appendChild($text);\n\nconst showResult = (label, startTime, endTime, topNodes) => {\n  const $cpu = document.createElement('div');\n  $cpu.textContent = `${label} Time Elapsed: ${Number.parseFloat(endTime - startTime).toFixed(\n    2,\n  )}ms`;\n  $wrapper.appendChild($cpu);\n  // print top nodes\n  console.log(topNodes);\n};\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-plugin-gpgpu\", \"@antv/g-webgpu\", \"@antv/g6\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-plugin-gpgpu\"), require(\"@antv/g-webgpu\"), require(\"@antv/g6\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gPluginGpgpu, global.gWebgpu, global.g6);\n    global.pagerankBigDataset = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gPluginGpgpu, _gWebgpu, _g2) {\n  \"use strict\";\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  var BufferUsage = _gWebgpu.DeviceRenderer.BufferUsage;\n  /**\n   * Pagerank with power method, ported from CUDA\n   * @see https://github.com/princeofpython/PageRank-with-CUDA/blob/main/parallel.cu\n   *\n   * compared with G6:\n   * @see https://g6.antv.vision/zh/docs/api/Algorithm#pagerank\n   *\n   * dataset: 1k vertices & 50w edges\n   * @see https://github.com/sengorajkumar/gpu_graph_algorithms/tree/master/input\n   */\n\n  var $wrapper = document.getElementById('container');\n\n  (async function () {\n    // load & parse TXT datasets\n    var res = await fetch('https://gw.alipayobjects.com/os/bmw-prod/b2e21724-d8b7-415d-9fea-9b41b21410b8.txt');\n    var text = await res.text();\n    var V = [];\n    var From = [];\n    var To = [];\n    text.split('\\n').forEach(function (line, i) {\n      if (i === 0) {\n        var _line$split = line.split(' '),\n            _line$split2 = _slicedToArray(_line$split, 1),\n            vertices = _line$split2[0];\n\n        V = new Array(Number(vertices)).fill(undefined).map(function (_, i) {\n          return i;\n        });\n      } else {\n        var _line$split3 = line.split(' '),\n            _line$split4 = _slicedToArray(_line$split3, 2),\n            from = _line$split4[0],\n            to = _line$split4[1];\n\n        From.push(Number(from));\n        To.push(Number(to));\n      }\n    }); // use G6's `pagerank` method\n\n    var startTime = window.performance.now();\n    var topNodes = calculateInCPU(V, From, To);\n    showResult('CPU', startTime, window.performance.now(), topNodes); // use Compute Shader with WebGPU\n\n    startTime = window.performance.now();\n    topNodes = await calculateInGPU(V, From, To);\n    showResult('GPU', startTime, window.performance.now(), topNodes);\n  })(); // calculate with G6's pagerank in CPU\n\n\n  var calculateInCPU = function calculateInCPU(V, From, To) {\n    var pageRank = _g2.Algorithm.pageRank;\n    var data = {\n      nodes: V.map(function (v) {\n        return {\n          id: \"\".concat(v),\n          label: \"\".concat(v)\n        };\n      }),\n      edges: From.map(function (from, i) {\n        return {\n          source: \"\".concat(from),\n          target: \"\".concat(To[i])\n        };\n      })\n    };\n    var result = pageRank(data);\n    return Object.keys(result).map(function (key) {\n      return {\n        id: Number(key),\n        value: result[key]\n      };\n    }).sort(function (a, b) {\n      return b.value - a.value;\n    });\n  }; // we use 3 kernels\n\n\n  var calculateInGPU = async function calculateInGPU(V, From, To) {\n    // The total number of workgroup invocations (4096) exceeds the maximum allowed (256).\n    var BLOCK_SIZE = 1;\n    var BLOCKS = 256;\n    var CANVAS_SIZE = 1;\n    var d = 0.85;\n    var eps = 0.000001;\n    var maxIteration = 1000; // use WebGPU\n\n    var renderer = new _gWebgpu.Renderer();\n    renderer.registerPlugin(new _gPluginGpgpu.Plugin()); // create a canvas\n\n    var canvas = new _g.Canvas({\n      container: $wrapper,\n      width: CANVAS_SIZE,\n      height: CANVAS_SIZE,\n      renderer: renderer\n    }); // wait for canvas' services ready\n\n    await canvas.ready;\n    var plugin = renderer.getPlugin('device-renderer');\n    var device = plugin.getDevice();\n    var n = V.length;\n    var graph = new Float32Array(new Array(n * n).fill((1 - d) / n));\n    var r = new Float32Array(new Array(n).fill(1 / n));\n    From.forEach(function (from, i) {\n      graph[To[i] * n + from] += d * 1.0;\n    });\n\n    for (var j = 0; j < n; j++) {\n      var sum = 0.0;\n\n      for (var i = 0; i < n; ++i) {\n        sum += graph[i * n + j];\n      }\n\n      for (var _i2 = 0; _i2 < n; ++_i2) {\n        if (sum != 0.0) {\n          graph[_i2 * n + j] /= sum;\n        } else {\n          graph[_i2 * n + j] = 1 / n;\n        }\n      }\n    }\n\n    var storeKernel = new _gPluginGpgpu.Kernel(device, {\n      computeShader: \"\\nstruct Buffer {\\n  data: array<f32>,\\n};\\n\\n@group(0) @binding(0) var<storage, read> r : Buffer;\\n@group(0) @binding(1) var<storage, write> r_last : Buffer;\\n\\n@stage(compute) @workgroup_size(\".concat(BLOCKS, \", \").concat(BLOCK_SIZE, \")\\nfn main(\\n  @builtin(global_invocation_id) global_id : vec3<u32>\\n) {\\n  var index = global_id.x;\\n  if (index < \").concat(V.length, \"u) {\\n    r_last.data[index] = r.data[index];\\n  }\\n}\")\n    });\n    var matmulKernel = new _gPluginGpgpu.Kernel(device, {\n      computeShader: \"\\nstruct Buffer {\\n  data: array<f32>,\\n};\\n\\n@group(0) @binding(0) var<storage, read> graph : Buffer;\\n@group(0) @binding(1) var<storage, read_write> r : Buffer;\\n@group(0) @binding(2) var<storage, read> r_last : Buffer;\\n\\n@stage(compute) @workgroup_size(\".concat(BLOCKS, \", \").concat(BLOCK_SIZE, \")\\nfn main(\\n  @builtin(global_invocation_id) global_id : vec3<u32>\\n) {\\n  var index = global_id.x;\\n  if (index < \").concat(V.length, \"u) {\\n    var sum = 0.0;\\n    for (var i = 0u; i < \").concat(V.length, \"u; i = i + 1u) {\\n      sum = sum + r_last.data[i] * graph.data[index * \").concat(V.length, \"u + i];\\n    }\\n    r.data[index] = sum;\\n  }\\n}\\n    \")\n    });\n    var rankDiffKernel = new _gPluginGpgpu.Kernel(device, {\n      computeShader: \"\\nstruct Buffer {\\n  data: array<f32>,\\n};\\n\\n@group(0) @binding(0) var<storage, read> r : Buffer;\\n@group(0) @binding(1) var<storage, read_write> r_last : Buffer;\\n\\n@stage(compute) @workgroup_size(\".concat(BLOCKS, \", \").concat(BLOCK_SIZE, \")\\nfn main(\\n  @builtin(global_invocation_id) global_id : vec3<u32>\\n) {\\n  var index = global_id.x;\\n  if (index < \").concat(V.length, \"u) {\\n    r_last.data[index] = abs(r_last.data[index] - r.data[index]);\\n  }\\n}    \\n    \")\n    });\n    var rBuffer = device.createBuffer({\n      usage: BufferUsage.STORAGE | BufferUsage.COPY_SRC,\n      viewOrSize: new Float32Array(r)\n    });\n    var rLastBuffer = device.createBuffer({\n      usage: BufferUsage.STORAGE | BufferUsage.COPY_SRC,\n      viewOrSize: new Float32Array(n)\n    });\n    var graphBuffer = device.createBuffer({\n      usage: BufferUsage.STORAGE,\n      viewOrSize: new Float32Array(graph)\n    });\n    var readback = device.createReadback();\n    storeKernel.setBinding(0, rBuffer);\n    storeKernel.setBinding(1, rLastBuffer);\n    matmulKernel.setBinding(0, graphBuffer);\n    matmulKernel.setBinding(1, rBuffer);\n    matmulKernel.setBinding(2, rLastBuffer);\n    rankDiffKernel.setBinding(0, rBuffer);\n    rankDiffKernel.setBinding(1, rLastBuffer);\n    var grids = Math.ceil(V.length / (BLOCKS * BLOCK_SIZE));\n\n    while (maxIteration--) {\n      storeKernel.dispatch(grids, 1);\n      matmulKernel.dispatch(grids, 1);\n      rankDiffKernel.dispatch(grids, 1);\n      var last = await readback.readBuffer(rLastBuffer);\n      var result = last.reduce(function (prev, cur) {\n        return prev + cur;\n      }, 0);\n\n      if (result < eps) {\n        var out = await readback.readBuffer(rBuffer);\n        return Array.from(out).map(function (value, id) {\n          return {\n            id: id,\n            value: value\n          };\n        }).sort(function (a, b) {\n          return b.value - a.value;\n        });\n      }\n    }\n  };\n\n  var $text = document.createElement('div');\n  $text.textContent = 'Please open the devtools, the top nodes will be printed in console.';\n  $wrapper.appendChild($text);\n\n  var showResult = function showResult(label, startTime, endTime, topNodes) {\n    var $cpu = document.createElement('div');\n    $cpu.textContent = \"\".concat(label, \" Time Elapsed: \").concat(Number.parseFloat(endTime - startTime).toFixed(2), \"ms\");\n    $wrapper.appendChild($cpu); // print top nodes\n\n    console.log(topNodes);\n  };\n});"},{"relativePath":"gpgpu/demo/pagerank.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/gpgpu/demo/pagerank.js","order":6,"filename":"pagerank.js","title":{"zh":"Pagerank 算法","en":"Pagerank"},"source":"import { Canvas, CanvasEvent } from '@antv/g';\nimport { Kernel, Plugin } from '@antv/g-plugin-gpgpu';\nimport { DeviceRenderer, Renderer } from '@antv/g-webgpu';\nimport { Algorithm } from '@antv/g6';\n\nconst { BufferUsage } = DeviceRenderer;\n\n/**\n * Pagerank with power method, ported from CUDA\n * @see https://github.com/princeofpython/PageRank-with-CUDA/blob/main/parallel.cu\n *\n * compared with G6:\n * @see https://g6.antv.vision/zh/docs/api/Algorithm#pagerank\n */\n\n/**\n * use Compressed Sparse Row (CSR) for adjacency list\n */\n// datasource: https://github.com/sengorajkumar/gpu_graph_algorithms/blob/master/input/simple.gr_E.csv\nconst V = [0, 1, 2, 3, 4];\nconst E = [1, 2, 2, 3, 4, 3, 4, 1, 3];\nconst I = [0, 2, 5, 7, 8, 10];\nconst W = [9, 4, 10, 2, 3, 2, 11, 2, 2];\nconst From = [0, 0, 1, 1, 1, 2, 2, 3, 4];\nconst To = [1, 2, 2, 3, 4, 3, 4, 1, 3];\nconst BLOCK_SIZE = 1;\nconst BLOCKS = 5;\n\nconst CANVAS_SIZE = 1;\n\nconst $wrapper = document.getElementById('container');\nconst $text = document.createElement('div');\n$text.textContent = 'Please open the devtools, the top nodes will be printed in console.';\n$wrapper.appendChild($text);\n\n// use WebGPU\nconst renderer = new Renderer();\nrenderer.registerPlugin(new Plugin());\n\n// create a canvas\nconst canvas = new Canvas({\n  container: $wrapper,\n  width: CANVAS_SIZE,\n  height: CANVAS_SIZE,\n  renderer,\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  const plugin = renderer.getPlugin('device-renderer');\n  const device = plugin.getDevice();\n  const storeKernel = new Kernel(device, {\n    computeShader: `\nstruct Buffer {\n  data: array<f32>,\n};\n\n@group(0) @binding(0) var<storage, read> r : Buffer;\n@group(0) @binding(1) var<storage, write> r_last : Buffer;\n\n@stage(compute) @workgroup_size(${BLOCKS}, ${BLOCK_SIZE})\nfn main(\n  @builtin(global_invocation_id) global_id : vec3<u32>\n) {\n  var index = global_id.x;\n  if (index < ${V.length}u) {\n    r_last.data[index] = r.data[index];\n  }\n}`,\n  });\n\n  const matmulKernel = new Kernel(device, {\n    computeShader: `\nstruct Buffer {\n  data: array<f32>,\n};\n\n@group(0) @binding(0) var<storage, read> graph : Buffer;\n@group(0) @binding(1) var<storage, read_write> r : Buffer;\n@group(0) @binding(2) var<storage, read> r_last : Buffer;\n\n@stage(compute) @workgroup_size(${BLOCKS}, ${BLOCK_SIZE})\nfn main(\n  @builtin(global_invocation_id) global_id : vec3<u32>\n) {\n  var index = global_id.x;\n  if (index < ${V.length}u) {\n    var sum = 0.0;\n    for (var i = 0u; i < ${V.length}u; i = i + 1u) {\n      sum = sum + r_last.data[i] * graph.data[index * ${V.length}u + i];\n    }\n    r.data[index] = sum;\n  }\n}\n    `,\n  });\n\n  const rankDiffKernel = new Kernel(device, {\n    computeShader: `\nstruct Buffer {\n  data: array<f32>,\n};\n\n@group(0) @binding(0) var<storage, read> r : Buffer;\n@group(0) @binding(1) var<storage, read_write> r_last : Buffer;\n\n@stage(compute) @workgroup_size(${BLOCKS}, ${BLOCK_SIZE})\nfn main(\n  @builtin(global_invocation_id) global_id : vec3<u32>\n) {\n  var index = global_id.x;\n  if (index < ${V.length}u) {\n    r_last.data[index] = abs(r_last.data[index] - r.data[index]);\n  }\n}    \n    `,\n  });\n\n  pageRankGPU(device, storeKernel, matmulKernel, rankDiffKernel);\n});\n\nconst pageRankGPU = async (device, storeKernel, matmulKernel, rankDiffKernel) => {\n  const d = 0.85;\n  const eps = 0.000001;\n  let maxIteration = 1000;\n  const n = V.length;\n  const graph = new Float32Array(new Array(n * n).fill((1 - d) / n));\n  const r = new Float32Array(new Array(n).fill(1 / n));\n\n  From.forEach((from, i) => {\n    graph[To[i] * n + from] += d * 1.0;\n  });\n\n  for (let j = 0; j < n; j++) {\n    let sum = 0.0;\n\n    for (let i = 0; i < n; ++i) {\n      sum += graph[i * n + j];\n    }\n\n    for (let i = 0; i < n; ++i) {\n      if (sum != 0.0) {\n        graph[i * n + j] /= sum;\n      } else {\n        graph[i * n + j] = 1 / n;\n      }\n    }\n  }\n\n  const rBuffer = device.createBuffer({\n    usage: BufferUsage.STORAGE | BufferUsage.COPY_SRC,\n    viewOrSize: new Float32Array(r),\n  });\n  const rLastBuffer = device.createBuffer({\n    usage: BufferUsage.STORAGE | BufferUsage.COPY_SRC,\n    viewOrSize: new Float32Array(n),\n  });\n  const graphBuffer = device.createBuffer({\n    usage: BufferUsage.STORAGE,\n    viewOrSize: new Float32Array(graph),\n  });\n\n  const readback = device.createReadback();\n\n  storeKernel.setBinding(0, rBuffer);\n  storeKernel.setBinding(1, rLastBuffer);\n\n  matmulKernel.setBinding(0, graphBuffer);\n  matmulKernel.setBinding(1, rBuffer);\n  matmulKernel.setBinding(2, rLastBuffer);\n\n  rankDiffKernel.setBinding(0, rBuffer);\n  rankDiffKernel.setBinding(1, rLastBuffer);\n\n  const startTime = window.performance.now();\n  while (maxIteration--) {\n    storeKernel.dispatch(1, 1);\n\n    matmulKernel.dispatch(1, 1);\n\n    rankDiffKernel.dispatch(1, 1);\n\n    const last = await readback.readBuffer(rLastBuffer);\n    const result = last.reduce((prev, cur) => prev + cur, 0);\n    if (result < eps) {\n      const out = await readback.readBuffer(rBuffer);\n      console.log(out);\n      break;\n    }\n  }\n\n  console.log(`GPU Time Elapsed: ${window.performance.now() - startTime}ms`);\n};\n\nconst { pageRank } = Algorithm;\nconst data = {\n  nodes: [\n    {\n      id: 'A',\n      label: 'A',\n    },\n    {\n      id: 'B',\n      label: 'B',\n    },\n    {\n      id: 'C',\n      label: 'C',\n    },\n    {\n      id: 'D',\n      label: 'D',\n    },\n    {\n      id: 'E',\n      label: 'E',\n    },\n  ],\n  edges: [\n    {\n      source: 'A',\n      target: 'B',\n    },\n    {\n      source: 'A',\n      target: 'C',\n    },\n    {\n      source: 'B',\n      target: 'C',\n    },\n    {\n      source: 'B',\n      target: 'D',\n    },\n    {\n      source: 'B',\n      target: 'E',\n    },\n    {\n      source: 'C',\n      target: 'D',\n    },\n    {\n      source: 'C',\n      target: 'E',\n    },\n    {\n      source: 'D',\n      target: 'B',\n    },\n    {\n      source: 'E',\n      target: 'D',\n    },\n  ],\n};\n\nconst startTime = window.performance.now();\nconst result = pageRank(data);\nconsole.log(result);\nconsole.log(`CPU Time Elapsed: ${window.performance.now() - startTime}ms`);\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-plugin-gpgpu\", \"@antv/g-webgpu\", \"@antv/g6\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-plugin-gpgpu\"), require(\"@antv/g-webgpu\"), require(\"@antv/g6\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gPluginGpgpu, global.gWebgpu, global.g6);\n    global.pagerank = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gPluginGpgpu, _gWebgpu, _g2) {\n  \"use strict\";\n\n  var BufferUsage = _gWebgpu.DeviceRenderer.BufferUsage;\n  /**\n   * Pagerank with power method, ported from CUDA\n   * @see https://github.com/princeofpython/PageRank-with-CUDA/blob/main/parallel.cu\n   *\n   * compared with G6:\n   * @see https://g6.antv.vision/zh/docs/api/Algorithm#pagerank\n   */\n\n  /**\n   * use Compressed Sparse Row (CSR) for adjacency list\n   */\n  // datasource: https://github.com/sengorajkumar/gpu_graph_algorithms/blob/master/input/simple.gr_E.csv\n\n  var V = [0, 1, 2, 3, 4];\n  var E = [1, 2, 2, 3, 4, 3, 4, 1, 3];\n  var I = [0, 2, 5, 7, 8, 10];\n  var W = [9, 4, 10, 2, 3, 2, 11, 2, 2];\n  var From = [0, 0, 1, 1, 1, 2, 2, 3, 4];\n  var To = [1, 2, 2, 3, 4, 3, 4, 1, 3];\n  var BLOCK_SIZE = 1;\n  var BLOCKS = 5;\n  var CANVAS_SIZE = 1;\n  var $wrapper = document.getElementById('container');\n  var $text = document.createElement('div');\n  $text.textContent = 'Please open the devtools, the top nodes will be printed in console.';\n  $wrapper.appendChild($text); // use WebGPU\n\n  var renderer = new _gWebgpu.Renderer();\n  renderer.registerPlugin(new _gPluginGpgpu.Plugin()); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: $wrapper,\n    width: CANVAS_SIZE,\n    height: CANVAS_SIZE,\n    renderer: renderer\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    var plugin = renderer.getPlugin('device-renderer');\n    var device = plugin.getDevice();\n    var storeKernel = new _gPluginGpgpu.Kernel(device, {\n      computeShader: \"\\nstruct Buffer {\\n  data: array<f32>,\\n};\\n\\n@group(0) @binding(0) var<storage, read> r : Buffer;\\n@group(0) @binding(1) var<storage, write> r_last : Buffer;\\n\\n@stage(compute) @workgroup_size(\".concat(BLOCKS, \", \").concat(BLOCK_SIZE, \")\\nfn main(\\n  @builtin(global_invocation_id) global_id : vec3<u32>\\n) {\\n  var index = global_id.x;\\n  if (index < \").concat(V.length, \"u) {\\n    r_last.data[index] = r.data[index];\\n  }\\n}\")\n    });\n    var matmulKernel = new _gPluginGpgpu.Kernel(device, {\n      computeShader: \"\\nstruct Buffer {\\n  data: array<f32>,\\n};\\n\\n@group(0) @binding(0) var<storage, read> graph : Buffer;\\n@group(0) @binding(1) var<storage, read_write> r : Buffer;\\n@group(0) @binding(2) var<storage, read> r_last : Buffer;\\n\\n@stage(compute) @workgroup_size(\".concat(BLOCKS, \", \").concat(BLOCK_SIZE, \")\\nfn main(\\n  @builtin(global_invocation_id) global_id : vec3<u32>\\n) {\\n  var index = global_id.x;\\n  if (index < \").concat(V.length, \"u) {\\n    var sum = 0.0;\\n    for (var i = 0u; i < \").concat(V.length, \"u; i = i + 1u) {\\n      sum = sum + r_last.data[i] * graph.data[index * \").concat(V.length, \"u + i];\\n    }\\n    r.data[index] = sum;\\n  }\\n}\\n    \")\n    });\n    var rankDiffKernel = new _gPluginGpgpu.Kernel(device, {\n      computeShader: \"\\nstruct Buffer {\\n  data: array<f32>,\\n};\\n\\n@group(0) @binding(0) var<storage, read> r : Buffer;\\n@group(0) @binding(1) var<storage, read_write> r_last : Buffer;\\n\\n@stage(compute) @workgroup_size(\".concat(BLOCKS, \", \").concat(BLOCK_SIZE, \")\\nfn main(\\n  @builtin(global_invocation_id) global_id : vec3<u32>\\n) {\\n  var index = global_id.x;\\n  if (index < \").concat(V.length, \"u) {\\n    r_last.data[index] = abs(r_last.data[index] - r.data[index]);\\n  }\\n}    \\n    \")\n    });\n    pageRankGPU(device, storeKernel, matmulKernel, rankDiffKernel);\n  });\n\n  var pageRankGPU = async function pageRankGPU(device, storeKernel, matmulKernel, rankDiffKernel) {\n    var d = 0.85;\n    var eps = 0.000001;\n    var maxIteration = 1000;\n    var n = V.length;\n    var graph = new Float32Array(new Array(n * n).fill((1 - d) / n));\n    var r = new Float32Array(new Array(n).fill(1 / n));\n    From.forEach(function (from, i) {\n      graph[To[i] * n + from] += d * 1.0;\n    });\n\n    for (var j = 0; j < n; j++) {\n      var sum = 0.0;\n\n      for (var i = 0; i < n; ++i) {\n        sum += graph[i * n + j];\n      }\n\n      for (var _i = 0; _i < n; ++_i) {\n        if (sum != 0.0) {\n          graph[_i * n + j] /= sum;\n        } else {\n          graph[_i * n + j] = 1 / n;\n        }\n      }\n    }\n\n    var rBuffer = device.createBuffer({\n      usage: BufferUsage.STORAGE | BufferUsage.COPY_SRC,\n      viewOrSize: new Float32Array(r)\n    });\n    var rLastBuffer = device.createBuffer({\n      usage: BufferUsage.STORAGE | BufferUsage.COPY_SRC,\n      viewOrSize: new Float32Array(n)\n    });\n    var graphBuffer = device.createBuffer({\n      usage: BufferUsage.STORAGE,\n      viewOrSize: new Float32Array(graph)\n    });\n    var readback = device.createReadback();\n    storeKernel.setBinding(0, rBuffer);\n    storeKernel.setBinding(1, rLastBuffer);\n    matmulKernel.setBinding(0, graphBuffer);\n    matmulKernel.setBinding(1, rBuffer);\n    matmulKernel.setBinding(2, rLastBuffer);\n    rankDiffKernel.setBinding(0, rBuffer);\n    rankDiffKernel.setBinding(1, rLastBuffer);\n    var startTime = window.performance.now();\n\n    while (maxIteration--) {\n      storeKernel.dispatch(1, 1);\n      matmulKernel.dispatch(1, 1);\n      rankDiffKernel.dispatch(1, 1);\n      var last = await readback.readBuffer(rLastBuffer);\n\n      var _result = last.reduce(function (prev, cur) {\n        return prev + cur;\n      }, 0);\n\n      if (_result < eps) {\n        var out = await readback.readBuffer(rBuffer);\n        console.log(out);\n        break;\n      }\n    }\n\n    console.log(\"GPU Time Elapsed: \".concat(window.performance.now() - startTime, \"ms\"));\n  };\n\n  var pageRank = _g2.Algorithm.pageRank;\n  var data = {\n    nodes: [{\n      id: 'A',\n      label: 'A'\n    }, {\n      id: 'B',\n      label: 'B'\n    }, {\n      id: 'C',\n      label: 'C'\n    }, {\n      id: 'D',\n      label: 'D'\n    }, {\n      id: 'E',\n      label: 'E'\n    }],\n    edges: [{\n      source: 'A',\n      target: 'B'\n    }, {\n      source: 'A',\n      target: 'C'\n    }, {\n      source: 'B',\n      target: 'C'\n    }, {\n      source: 'B',\n      target: 'D'\n    }, {\n      source: 'B',\n      target: 'E'\n    }, {\n      source: 'C',\n      target: 'D'\n    }, {\n      source: 'C',\n      target: 'E'\n    }, {\n      source: 'D',\n      target: 'B'\n    }, {\n      source: 'E',\n      target: 'D'\n    }]\n  };\n  var startTime = window.performance.now();\n  var result = pageRank(data);\n  console.log(result);\n  console.log(\"CPU Time Elapsed: \".concat(window.performance.now() - startTime, \"ms\"));\n});"},{"relativePath":"gpgpu/demo/reduce.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/gpgpu/demo/reduce.js","order":1,"filename":"reduce.js","title":{"zh":"Reduce Sum","en":"Reduce Sum"},"source":"import { Canvas, CanvasEvent } from '@antv/g';\nimport { Kernel, Plugin } from '@antv/g-plugin-gpgpu';\nimport { DeviceRenderer, Renderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\n\nconst { BufferUsage } = DeviceRenderer;\n\n/**\n * ported from https://github.com/9ballsyndrome/WebGL_Compute_shader/blob/master/webgl-compute-bitonicSort/js/script.js\n */\n\nconst CANVAS_SIZE = 1;\n\n// use WebGPU\nconst renderer = new Renderer();\nrenderer.registerPlugin(new Plugin());\n\n// create a canvas\nconst $wrapper = document.getElementById('container');\nconst canvas = new Canvas({\n  container: $wrapper,\n  width: CANVAS_SIZE,\n  height: CANVAS_SIZE,\n  renderer,\n});\n\nconst workgroupSize = 128;\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  const plugin = renderer.getPlugin('device-renderer');\n  const device = plugin.getDevice();\n  const kernel = new Kernel(device, {\n    computeShader: `\nstruct Array {\n  size: u32,\n  data: array<f32>,\n};\n\n@group(0) @binding(0) var<storage, read_write> input : Array;\n\nvar<workgroup> shared : array<f32, ${workgroupSize}>;\n\n@stage(compute) @workgroup_size(${workgroupSize}, 1)\nfn main(\n  @builtin(global_invocation_id) global_id : vec3<u32>,\n  @builtin(local_invocation_id) local_id : vec3<u32>,\n  @builtin(workgroup_id) workgroup_id : vec3<u32>,\n) {\n  var tid = local_id.x;\n  // var i = global_id.x;\n\n  // version 4\n  var i = workgroup_id.x * ${workgroupSize}u * 2u + local_id.x;\n  shared[tid] = input.data[i] + input.data[i + ${workgroupSize}u];\n  // shared[tid] = input.data[i];\n  workgroupBarrier();\n\n  // version 5\n  // for (var s = ${workgroupSize}u / 2u; s > 32u; s = s >> 1u) {\n  // version 3\n  for (var s = ${workgroupSize}u / 2u; s > 0u; s = s >> 1u) {\n    if (tid < s) {\n      shared[tid] = shared[tid] + shared[tid + s];\n    }\n\n  // for (var s = 1u; s < ${workgroupSize}u; s = s * 2u) {\n    // version 1\n    // if (tid % (s * 2u) == 0u) {\n    //   shared[tid] = shared[tid] + shared[tid + s];\n    // }\n\n    // version 2\n    // var index = 2u * s * tid;\n    // if (index < ${workgroupSize}u) {\n    //   shared[index] = shared[index] + shared[index + s];\n    // }\n    \n    workgroupBarrier();\n  }\n\n  // if (tid < 32u) {\n  //   shared[tid] =\n  //     shared[tid + 32u]\n  //     + shared[tid + 16u]\n  //     + shared[tid + 8u]\n  //     + shared[tid + 4u]\n  //     + shared[tid + 2u]\n  //     + shared[tid + 1u];\n  // }\n\n  if (tid == 0u) {\n    input.data[workgroup_id.x] = shared[0u];\n  }\n}`,\n  });\n\n  calc(kernel, device, new Array(200).fill(1));\n\n  // GUI\n  const gui = new lil.GUI({ autoPlace: false });\n  $wrapper.appendChild(gui.domElement);\n  const folder = gui.addFolder('array size');\n  const config = {\n    size: 32,\n  };\n  folder.add(config, 'size', [32, 1000, 10000, 100000, 1000000]).onChange((size) => {\n    calc(\n      kernel,\n      device,\n      new Array(Number(size)).fill(undefined).map(() => Math.random()),\n    );\n  });\n  folder.open();\n});\n\nconst cpuReduceSum = (array) => {\n  const startTime = window.performance.now();\n  console.log(array.reduce((prev, cur) => prev + cur, 0));\n  console.log(`CPU Time Elapsed: ${window.performance.now() - startTime}ms`);\n};\n\nconst gpuReduceSum = async (kernel, device, array) => {\n  const padding = array.concat(new Array(workgroupSize - (array.length % workgroupSize)).fill(0));\n\n  const input = new Float32Array(\n    [padding.length] // size\n      .concat(padding), // origin data\n  );\n\n  let startTime = window.performance.now();\n\n  const result = device.createBuffer({\n    usage: BufferUsage.STORAGE | BufferUsage.COPY_SRC,\n    viewOrSize: input,\n  });\n  const readback = device.createReadback();\n  kernel.setBinding(0, result);\n  kernel.dispatch(Math.ceil(array.length / workgroupSize), 1);\n\n  // result\n  await readback.readBuffer(result);\n\n  console.log(\n    input.slice(1, padding.length / workgroupSize + 1).reduce((prev, cur) => prev + cur, 0),\n  );\n  console.log(`GPU Time Elapsed: ${window.performance.now() - startTime}ms`);\n};\n\nconst calc = async (kernel, device, array) => {\n  cpuReduceSum(array);\n  gpuReduceSum(kernel, device, array);\n};\n\nconst $text = document.createElement('div');\n$text.textContent = 'Please open the devtools, the CPU & CPU time will be printed in console.';\n$wrapper.appendChild($text);\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-plugin-gpgpu\", \"@antv/g-webgpu\", \"lil-gui\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-plugin-gpgpu\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gPluginGpgpu, global.gWebgpu, global.lilGui);\n    global.reduce = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gPluginGpgpu, _gWebgpu, lil) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  var BufferUsage = _gWebgpu.DeviceRenderer.BufferUsage;\n  /**\n   * ported from https://github.com/9ballsyndrome/WebGL_Compute_shader/blob/master/webgl-compute-bitonicSort/js/script.js\n   */\n\n  var CANVAS_SIZE = 1; // use WebGPU\n\n  var renderer = new _gWebgpu.Renderer();\n  renderer.registerPlugin(new _gPluginGpgpu.Plugin()); // create a canvas\n\n  var $wrapper = document.getElementById('container');\n  var canvas = new _g.Canvas({\n    container: $wrapper,\n    width: CANVAS_SIZE,\n    height: CANVAS_SIZE,\n    renderer: renderer\n  });\n  var workgroupSize = 128;\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    var plugin = renderer.getPlugin('device-renderer');\n    var device = plugin.getDevice();\n    var kernel = new _gPluginGpgpu.Kernel(device, {\n      computeShader: \"\\nstruct Array {\\n  size: u32,\\n  data: array<f32>,\\n};\\n\\n@group(0) @binding(0) var<storage, read_write> input : Array;\\n\\nvar<workgroup> shared : array<f32, \".concat(workgroupSize, \">;\\n\\n@stage(compute) @workgroup_size(\").concat(workgroupSize, \", 1)\\nfn main(\\n  @builtin(global_invocation_id) global_id : vec3<u32>,\\n  @builtin(local_invocation_id) local_id : vec3<u32>,\\n  @builtin(workgroup_id) workgroup_id : vec3<u32>,\\n) {\\n  var tid = local_id.x;\\n  // var i = global_id.x;\\n\\n  // version 4\\n  var i = workgroup_id.x * \").concat(workgroupSize, \"u * 2u + local_id.x;\\n  shared[tid] = input.data[i] + input.data[i + \").concat(workgroupSize, \"u];\\n  // shared[tid] = input.data[i];\\n  workgroupBarrier();\\n\\n  // version 5\\n  // for (var s = \").concat(workgroupSize, \"u / 2u; s > 32u; s = s >> 1u) {\\n  // version 3\\n  for (var s = \").concat(workgroupSize, \"u / 2u; s > 0u; s = s >> 1u) {\\n    if (tid < s) {\\n      shared[tid] = shared[tid] + shared[tid + s];\\n    }\\n\\n  // for (var s = 1u; s < \").concat(workgroupSize, \"u; s = s * 2u) {\\n    // version 1\\n    // if (tid % (s * 2u) == 0u) {\\n    //   shared[tid] = shared[tid] + shared[tid + s];\\n    // }\\n\\n    // version 2\\n    // var index = 2u * s * tid;\\n    // if (index < \").concat(workgroupSize, \"u) {\\n    //   shared[index] = shared[index] + shared[index + s];\\n    // }\\n    \\n    workgroupBarrier();\\n  }\\n\\n  // if (tid < 32u) {\\n  //   shared[tid] =\\n  //     shared[tid + 32u]\\n  //     + shared[tid + 16u]\\n  //     + shared[tid + 8u]\\n  //     + shared[tid + 4u]\\n  //     + shared[tid + 2u]\\n  //     + shared[tid + 1u];\\n  // }\\n\\n  if (tid == 0u) {\\n    input.data[workgroup_id.x] = shared[0u];\\n  }\\n}\")\n    });\n    calc(kernel, device, new Array(200).fill(1)); // GUI\n\n    var gui = new lil.GUI({\n      autoPlace: false\n    });\n    $wrapper.appendChild(gui.domElement);\n    var folder = gui.addFolder('array size');\n    var config = {\n      size: 32\n    };\n    folder.add(config, 'size', [32, 1000, 10000, 100000, 1000000]).onChange(function (size) {\n      calc(kernel, device, new Array(Number(size)).fill(undefined).map(function () {\n        return Math.random();\n      }));\n    });\n    folder.open();\n  });\n\n  var cpuReduceSum = function cpuReduceSum(array) {\n    var startTime = window.performance.now();\n    console.log(array.reduce(function (prev, cur) {\n      return prev + cur;\n    }, 0));\n    console.log(\"CPU Time Elapsed: \".concat(window.performance.now() - startTime, \"ms\"));\n  };\n\n  var gpuReduceSum = async function gpuReduceSum(kernel, device, array) {\n    var padding = array.concat(new Array(workgroupSize - array.length % workgroupSize).fill(0));\n    var input = new Float32Array([padding.length] // size\n    .concat(padding));\n    var startTime = window.performance.now();\n    var result = device.createBuffer({\n      usage: BufferUsage.STORAGE | BufferUsage.COPY_SRC,\n      viewOrSize: input\n    });\n    var readback = device.createReadback();\n    kernel.setBinding(0, result);\n    kernel.dispatch(Math.ceil(array.length / workgroupSize), 1); // result\n\n    await readback.readBuffer(result);\n    console.log(input.slice(1, padding.length / workgroupSize + 1).reduce(function (prev, cur) {\n      return prev + cur;\n    }, 0));\n    console.log(\"GPU Time Elapsed: \".concat(window.performance.now() - startTime, \"ms\"));\n  };\n\n  var calc = async function calc(kernel, device, array) {\n    cpuReduceSum(array);\n    gpuReduceSum(kernel, device, array);\n  };\n\n  var $text = document.createElement('div');\n  $text.textContent = 'Please open the devtools, the CPU & CPU time will be printed in console.';\n  $wrapper.appendChild($text);\n});"},{"relativePath":"gpgpu/demo/webgpu-graph-bfs.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/gpgpu/demo/webgpu-graph-bfs.js","order":12,"filename":"webgpu-graph-bfs.js","title":{"zh":"WebGPU Graph BFS","en":"WebGPU Graph BFS"},"source":"import { Algorithm } from '@antv/g6';\nimport { WebGPUGraph } from '@antv/webgpu-graph';\nimport * as lil from 'lil-gui';\n\n/**\n * @see /zh/docs/api/gpgpu/webgpu-graph#bfs\n */\n\n// GPU version\nconst graph = new WebGPUGraph();\n// CPU version\nconst { breadthFirstSearch } = Algorithm;\n\nconst simpleDataset = {\n  nodes: [\n    {\n      id: 'A',\n    },\n    {\n      id: 'B',\n    },\n    {\n      id: 'C',\n    },\n    {\n      id: 'D',\n    },\n    {\n      id: 'E',\n    },\n    {\n      id: 'F',\n    },\n    {\n      id: 'G',\n    },\n    {\n      id: 'H',\n    },\n  ],\n  edges: [\n    {\n      source: 'A',\n      target: 'B',\n    },\n    {\n      source: 'B',\n      target: 'C',\n    },\n    {\n      source: 'C',\n      target: 'G',\n    },\n    {\n      source: 'A',\n      target: 'D',\n    },\n    {\n      source: 'A',\n      target: 'E',\n    },\n    {\n      source: 'E',\n      target: 'F',\n    },\n    {\n      source: 'F',\n      target: 'D',\n    },\n  ],\n};\n\nconst calcInCPU = (data, root) => {\n  const startTime = window.performance.now();\n  breadthFirstSearch(data, root, {\n    enter: ({ current, previous }) => {\n      // 开始遍历点的回调\n      // console.log('enter', current);\n    },\n    leave: ({ current, previous }) => {\n      // 遍历完节点的回调\n      // console.log('leave', current);\n    },\n  });\n  console.log(`CPU Time Elapsed: ${window.performance.now() - startTime}ms`);\n};\n\nconst calcInGPU = async (data, root) => {\n  const startTime = window.performance.now();\n  await graph.bfs(data, root);\n  console.log(`GPU Time Elapsed: ${window.performance.now() - startTime}ms`);\n};\n\ncalcInCPU(simpleDataset, 'A');\ncalcInGPU(simpleDataset, 'A');\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild(gui.domElement);\nconst folder = gui.addFolder('dataset');\nconst config = {\n  dataset: 'simple',\n};\nfolder\n  .add(config, 'dataset', ['simple', '1k nodes & 5k edges', '1k nodes & 500k edges'])\n  .onChange(async (dataset) => {\n    if (dataset === 'simple') {\n      calcInCPU(simpleDataset, 'A');\n      calcInGPU(simpleDataset, 'A');\n    } else if (dataset === '1k nodes & 5k edges') {\n      const res = await fetch(\n        'https://gw.alipayobjects.com/os/bmw-prod/180daecd-28d0-4d8f-ac4b-064d21062c12.json',\n      );\n      const input = await res.json();\n      calcInGPU(input, '0');\n      calcInCPU(input, '0');\n    } else if (dataset === '1k nodes & 500k edges') {\n      const res = await fetch(\n        'https://gw.alipayobjects.com/os/bmw-prod/db52686c-423b-41d8-956b-38536252a48f.json',\n      );\n      const input = await res.json();\n      calcInGPU(input, '0');\n      calcInCPU(input, '0');\n    }\n  });\nfolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g6\", \"@antv/webgpu-graph\", \"lil-gui\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g6\"), require(\"@antv/webgpu-graph\"), require(\"lil-gui\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g6, global.webgpuGraph, global.lilGui);\n    global.webgpuGraphBfs = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _webgpuGraph, lil) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * @see /zh/docs/api/gpgpu/webgpu-graph#bfs\n   */\n  // GPU version\n  var graph = new _webgpuGraph.WebGPUGraph(); // CPU version\n\n  var breadthFirstSearch = _g.Algorithm.breadthFirstSearch;\n  var simpleDataset = {\n    nodes: [{\n      id: 'A'\n    }, {\n      id: 'B'\n    }, {\n      id: 'C'\n    }, {\n      id: 'D'\n    }, {\n      id: 'E'\n    }, {\n      id: 'F'\n    }, {\n      id: 'G'\n    }, {\n      id: 'H'\n    }],\n    edges: [{\n      source: 'A',\n      target: 'B'\n    }, {\n      source: 'B',\n      target: 'C'\n    }, {\n      source: 'C',\n      target: 'G'\n    }, {\n      source: 'A',\n      target: 'D'\n    }, {\n      source: 'A',\n      target: 'E'\n    }, {\n      source: 'E',\n      target: 'F'\n    }, {\n      source: 'F',\n      target: 'D'\n    }]\n  };\n\n  var calcInCPU = function calcInCPU(data, root) {\n    var startTime = window.performance.now();\n    breadthFirstSearch(data, root, {\n      enter: function enter(_ref) {// 开始遍历点的回调\n        // console.log('enter', current);\n\n        var current = _ref.current,\n            previous = _ref.previous;\n      },\n      leave: function leave(_ref2) {// 遍历完节点的回调\n        // console.log('leave', current);\n\n        var current = _ref2.current,\n            previous = _ref2.previous;\n      }\n    });\n    console.log(\"CPU Time Elapsed: \".concat(window.performance.now() - startTime, \"ms\"));\n  };\n\n  var calcInGPU = async function calcInGPU(data, root) {\n    var startTime = window.performance.now();\n    await graph.bfs(data, root);\n    console.log(\"GPU Time Elapsed: \".concat(window.performance.now() - startTime, \"ms\"));\n  };\n\n  calcInCPU(simpleDataset, 'A');\n  calcInGPU(simpleDataset, 'A'); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild(gui.domElement);\n  var folder = gui.addFolder('dataset');\n  var config = {\n    dataset: 'simple'\n  };\n  folder.add(config, 'dataset', ['simple', '1k nodes & 5k edges', '1k nodes & 500k edges']).onChange(async function (dataset) {\n    if (dataset === 'simple') {\n      calcInCPU(simpleDataset, 'A');\n      calcInGPU(simpleDataset, 'A');\n    } else if (dataset === '1k nodes & 5k edges') {\n      var res = await fetch('https://gw.alipayobjects.com/os/bmw-prod/180daecd-28d0-4d8f-ac4b-064d21062c12.json');\n      var input = await res.json();\n      calcInGPU(input, '0');\n      calcInCPU(input, '0');\n    } else if (dataset === '1k nodes & 500k edges') {\n      var _res = await fetch('https://gw.alipayobjects.com/os/bmw-prod/db52686c-423b-41d8-956b-38536252a48f.json');\n\n      var _input = await _res.json();\n\n      calcInGPU(_input, '0');\n      calcInCPU(_input, '0');\n    }\n  });\n  folder.open();\n});"},{"relativePath":"gpgpu/demo/webgpu-graph-pagerank.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/gpgpu/demo/webgpu-graph-pagerank.js","order":10,"filename":"webgpu-graph-pagerank.js","title":{"zh":"WebGPU Graph PageRank","en":"WebGPU Graph PageRank"},"source":"import { WebGPUGraph } from '@antv/webgpu-graph';\nimport { Algorithm } from '@antv/g6';\nimport * as lil from 'lil-gui';\n\n/**\n * @see /zh/docs/api/gpgpu/webgpu-graph#pagerank\n */\n\n// GPU version\nconst graph = new WebGPUGraph();\n// CPU version\nconst { pageRank } = Algorithm;\n\nconst calcInCPU = (data) => {\n  const startTime = window.performance.now();\n  const result = pageRank(data);\n  console.log(`CPU Time Elapsed: ${window.performance.now() - startTime}ms`);\n  // console.log('CPU result: ', result);\n};\nconst calcInGPU = async (data) => {\n  const startTime = window.performance.now();\n  const result = await graph.pageRank(data);\n  console.log(`GPU Time Elapsed: ${window.performance.now() - startTime}ms`);\n  // console.log('GPU result: ', result);\n};\n\nconst simpleDataset = {\n  nodes: [\n    {\n      id: 'A',\n      label: 'A',\n    },\n    {\n      id: 'B',\n      label: 'B',\n    },\n    {\n      id: 'C',\n      label: 'C',\n    },\n    {\n      id: 'D',\n      label: 'D',\n    },\n    {\n      id: 'E',\n      label: 'E',\n    },\n    {\n      id: 'F',\n      label: 'F',\n    },\n    {\n      id: 'G',\n      label: 'G',\n    },\n    {\n      id: 'H',\n      label: 'H',\n    },\n    {\n      id: 'I',\n      label: 'I',\n    },\n    {\n      id: 'J',\n      label: 'J',\n    },\n    {\n      id: 'K',\n      label: 'K',\n    },\n  ],\n  edges: [\n    {\n      source: 'D',\n      target: 'A',\n    },\n    {\n      source: 'D',\n      target: 'B',\n    },\n    {\n      source: 'B',\n      target: 'C',\n    },\n    {\n      source: 'C',\n      target: 'B',\n    },\n    {\n      source: 'F',\n      target: 'B',\n    },\n    {\n      source: 'F',\n      target: 'E',\n    },\n    {\n      source: 'E',\n      target: 'F',\n    },\n    {\n      source: 'E',\n      target: 'D',\n    },\n    {\n      source: 'E',\n      target: 'B',\n    },\n    {\n      source: 'K',\n      target: 'E',\n    },\n    {\n      source: 'J',\n      target: 'E',\n    },\n    {\n      source: 'I',\n      target: 'E',\n    },\n    {\n      source: 'H',\n      target: 'E',\n    },\n    {\n      source: 'G',\n      target: 'E',\n    },\n    {\n      source: 'G',\n      target: 'B',\n    },\n    {\n      source: 'H',\n      target: 'B',\n    },\n    {\n      source: 'I',\n      target: 'B',\n    },\n  ],\n};\n\ncalcInCPU(simpleDataset);\ncalcInGPU(simpleDataset);\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild(gui.domElement);\nconst folder = gui.addFolder('dataset');\nconst config = {\n  dataset: 'simple',\n};\nfolder\n  .add(config, 'dataset', ['simple', '8k nodes & 5k edges', '1k nodes & 500k edges'])\n  .onChange(async (dataset) => {\n    let input;\n    if (dataset === 'simple') {\n      input = simpleDataset;\n    } else if (dataset === '8k nodes & 5k edges') {\n      const res = await fetch(\n        'https://gw.alipayobjects.com/os/basement_prod/0b9730ff-0850-46ff-84d0-1d4afecd43e6.json',\n      );\n      input = await res.json();\n    } else if (dataset === '1k nodes & 500k edges') {\n      const res = await fetch(\n        'https://gw.alipayobjects.com/os/bmw-prod/db52686c-423b-41d8-956b-38536252a48f.json',\n      );\n      input = await res.json();\n    }\n\n    calcInCPU(input);\n    calcInGPU(input);\n  });\nfolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/webgpu-graph\", \"@antv/g6\", \"lil-gui\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/webgpu-graph\"), require(\"@antv/g6\"), require(\"lil-gui\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.webgpuGraph, global.g6, global.lilGui);\n    global.webgpuGraphPagerank = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_webgpuGraph, _g, lil) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * @see /zh/docs/api/gpgpu/webgpu-graph#pagerank\n   */\n  // GPU version\n  var graph = new _webgpuGraph.WebGPUGraph(); // CPU version\n\n  var pageRank = _g.Algorithm.pageRank;\n\n  var calcInCPU = function calcInCPU(data) {\n    var startTime = window.performance.now();\n    var result = pageRank(data);\n    console.log(\"CPU Time Elapsed: \".concat(window.performance.now() - startTime, \"ms\")); // console.log('CPU result: ', result);\n  };\n\n  var calcInGPU = async function calcInGPU(data) {\n    var startTime = window.performance.now();\n    var result = await graph.pageRank(data);\n    console.log(\"GPU Time Elapsed: \".concat(window.performance.now() - startTime, \"ms\")); // console.log('GPU result: ', result);\n  };\n\n  var simpleDataset = {\n    nodes: [{\n      id: 'A',\n      label: 'A'\n    }, {\n      id: 'B',\n      label: 'B'\n    }, {\n      id: 'C',\n      label: 'C'\n    }, {\n      id: 'D',\n      label: 'D'\n    }, {\n      id: 'E',\n      label: 'E'\n    }, {\n      id: 'F',\n      label: 'F'\n    }, {\n      id: 'G',\n      label: 'G'\n    }, {\n      id: 'H',\n      label: 'H'\n    }, {\n      id: 'I',\n      label: 'I'\n    }, {\n      id: 'J',\n      label: 'J'\n    }, {\n      id: 'K',\n      label: 'K'\n    }],\n    edges: [{\n      source: 'D',\n      target: 'A'\n    }, {\n      source: 'D',\n      target: 'B'\n    }, {\n      source: 'B',\n      target: 'C'\n    }, {\n      source: 'C',\n      target: 'B'\n    }, {\n      source: 'F',\n      target: 'B'\n    }, {\n      source: 'F',\n      target: 'E'\n    }, {\n      source: 'E',\n      target: 'F'\n    }, {\n      source: 'E',\n      target: 'D'\n    }, {\n      source: 'E',\n      target: 'B'\n    }, {\n      source: 'K',\n      target: 'E'\n    }, {\n      source: 'J',\n      target: 'E'\n    }, {\n      source: 'I',\n      target: 'E'\n    }, {\n      source: 'H',\n      target: 'E'\n    }, {\n      source: 'G',\n      target: 'E'\n    }, {\n      source: 'G',\n      target: 'B'\n    }, {\n      source: 'H',\n      target: 'B'\n    }, {\n      source: 'I',\n      target: 'B'\n    }]\n  };\n  calcInCPU(simpleDataset);\n  calcInGPU(simpleDataset); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild(gui.domElement);\n  var folder = gui.addFolder('dataset');\n  var config = {\n    dataset: 'simple'\n  };\n  folder.add(config, 'dataset', ['simple', '8k nodes & 5k edges', '1k nodes & 500k edges']).onChange(async function (dataset) {\n    var input;\n\n    if (dataset === 'simple') {\n      input = simpleDataset;\n    } else if (dataset === '8k nodes & 5k edges') {\n      var res = await fetch('https://gw.alipayobjects.com/os/basement_prod/0b9730ff-0850-46ff-84d0-1d4afecd43e6.json');\n      input = await res.json();\n    } else if (dataset === '1k nodes & 500k edges') {\n      var _res = await fetch('https://gw.alipayobjects.com/os/bmw-prod/db52686c-423b-41d8-956b-38536252a48f.json');\n\n      input = await _res.json();\n    }\n\n    calcInCPU(input);\n    calcInGPU(input);\n  });\n  folder.open();\n});"},{"relativePath":"gpgpu/demo/webgpu-graph-sssp.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/gpgpu/demo/webgpu-graph-sssp.js","order":11,"filename":"webgpu-graph-sssp.js","title":{"zh":"WebGPU Graph SSSP","en":"WebGPU Graph SSSP"},"source":"import { Algorithm } from '@antv/g6';\nimport { WebGPUGraph } from '@antv/webgpu-graph';\nimport * as lil from 'lil-gui';\n\n/**\n * @see /zh/docs/api/gpgpu/webgpu-graph#sssp\n */\n\n// GPU version\nconst graph = new WebGPUGraph();\n// CPU version\nconst { findShortestPath } = Algorithm;\n\nconst calcInCPU = (data, sourceId, weightPropertyName) => {\n  const startTime = window.performance.now();\n  for (let i = 0; i < data.nodes.length; i++) {\n    const { length, path, allPath } = findShortestPath(\n      data,\n      sourceId,\n      data.nodes[i].id,\n      true,\n      weightPropertyName,\n    );\n    // console.log(`from A to ${data.nodes[i].id} = ${length}: `, path);\n  }\n  console.log(`CPU Time Elapsed: ${window.performance.now() - startTime}ms`);\n};\nconst calcInGPU = async (data, sourceId, weightPropertyName) => {\n  const startTime = window.performance.now();\n  const result = await graph.sssp(data, sourceId, weightPropertyName);\n  console.log(`GPU Time Elapsed: ${window.performance.now() - startTime}ms`);\n\n  // console.log(result);\n};\n\nconst simpleDataset = {\n  nodes: [\n    {\n      id: 'A',\n      label: 'A',\n    },\n    {\n      id: 'B',\n      label: 'B',\n    },\n    {\n      id: 'C',\n      label: 'C',\n    },\n    {\n      id: 'D',\n      label: 'D',\n    },\n    {\n      id: 'E',\n      label: 'E',\n    },\n  ],\n  edges: [\n    {\n      source: 'A',\n      target: 'B',\n      weight: 9,\n    },\n    {\n      source: 'A',\n      target: 'C',\n      weight: 4,\n    },\n    {\n      source: 'B',\n      target: 'C',\n      weight: 10,\n    },\n    {\n      source: 'B',\n      target: 'D',\n      weight: 2,\n    },\n    {\n      source: 'B',\n      target: 'E',\n      weight: 3,\n    },\n    {\n      source: 'C',\n      target: 'D',\n      weight: 2,\n    },\n    {\n      source: 'C',\n      target: 'E',\n      weight: 11,\n    },\n    {\n      source: 'D',\n      target: 'B',\n      weight: 2,\n    },\n    {\n      source: 'E',\n      target: 'D',\n      weight: 2,\n    },\n  ],\n};\n\ncalcInGPU(simpleDataset, 'A', 'weight');\ncalcInCPU(simpleDataset, 'A', 'weight');\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild(gui.domElement);\nconst folder = gui.addFolder('dataset');\nconst config = {\n  dataset: 'simple',\n};\nfolder.add(config, 'dataset', ['simple', '1k nodes & 5k edges']).onChange(async (dataset) => {\n  if (dataset === 'simple') {\n    calcInGPU(simpleDataset, 'A', 'weight');\n    calcInCPU(simpleDataset, 'A', 'weight');\n  } else if (dataset === '1k nodes & 5k edges') {\n    const res = await fetch(\n      'https://gw.alipayobjects.com/os/bmw-prod/180daecd-28d0-4d8f-ac4b-064d21062c12.json',\n    );\n    const input = await res.json();\n    calcInGPU(input, '0', 'weight');\n    calcInCPU(input, '0', 'weight');\n  }\n});\nfolder.open();\n\nconst $text = document.createElement('div');\n$text.textContent = 'Please open the devtools, the shortest paths will be printed in console.';\n$wrapper.appendChild($text);\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g6\", \"@antv/webgpu-graph\", \"lil-gui\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g6\"), require(\"@antv/webgpu-graph\"), require(\"lil-gui\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g6, global.webgpuGraph, global.lilGui);\n    global.webgpuGraphSssp = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _webgpuGraph, lil) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * @see /zh/docs/api/gpgpu/webgpu-graph#sssp\n   */\n  // GPU version\n  var graph = new _webgpuGraph.WebGPUGraph(); // CPU version\n\n  var findShortestPath = _g.Algorithm.findShortestPath;\n\n  var calcInCPU = function calcInCPU(data, sourceId, weightPropertyName) {\n    var startTime = window.performance.now();\n\n    for (var i = 0; i < data.nodes.length; i++) {\n      var _findShortestPath = findShortestPath(data, sourceId, data.nodes[i].id, true, weightPropertyName),\n          length = _findShortestPath.length,\n          path = _findShortestPath.path,\n          allPath = _findShortestPath.allPath; // console.log(`from A to ${data.nodes[i].id} = ${length}: `, path);\n\n    }\n\n    console.log(\"CPU Time Elapsed: \".concat(window.performance.now() - startTime, \"ms\"));\n  };\n\n  var calcInGPU = async function calcInGPU(data, sourceId, weightPropertyName) {\n    var startTime = window.performance.now();\n    var result = await graph.sssp(data, sourceId, weightPropertyName);\n    console.log(\"GPU Time Elapsed: \".concat(window.performance.now() - startTime, \"ms\")); // console.log(result);\n  };\n\n  var simpleDataset = {\n    nodes: [{\n      id: 'A',\n      label: 'A'\n    }, {\n      id: 'B',\n      label: 'B'\n    }, {\n      id: 'C',\n      label: 'C'\n    }, {\n      id: 'D',\n      label: 'D'\n    }, {\n      id: 'E',\n      label: 'E'\n    }],\n    edges: [{\n      source: 'A',\n      target: 'B',\n      weight: 9\n    }, {\n      source: 'A',\n      target: 'C',\n      weight: 4\n    }, {\n      source: 'B',\n      target: 'C',\n      weight: 10\n    }, {\n      source: 'B',\n      target: 'D',\n      weight: 2\n    }, {\n      source: 'B',\n      target: 'E',\n      weight: 3\n    }, {\n      source: 'C',\n      target: 'D',\n      weight: 2\n    }, {\n      source: 'C',\n      target: 'E',\n      weight: 11\n    }, {\n      source: 'D',\n      target: 'B',\n      weight: 2\n    }, {\n      source: 'E',\n      target: 'D',\n      weight: 2\n    }]\n  };\n  calcInGPU(simpleDataset, 'A', 'weight');\n  calcInCPU(simpleDataset, 'A', 'weight'); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild(gui.domElement);\n  var folder = gui.addFolder('dataset');\n  var config = {\n    dataset: 'simple'\n  };\n  folder.add(config, 'dataset', ['simple', '1k nodes & 5k edges']).onChange(async function (dataset) {\n    if (dataset === 'simple') {\n      calcInGPU(simpleDataset, 'A', 'weight');\n      calcInCPU(simpleDataset, 'A', 'weight');\n    } else if (dataset === '1k nodes & 5k edges') {\n      var res = await fetch('https://gw.alipayobjects.com/os/bmw-prod/180daecd-28d0-4d8f-ac4b-064d21062c12.json');\n      var input = await res.json();\n      calcInGPU(input, '0', 'weight');\n      calcInCPU(input, '0', 'weight');\n    }\n  });\n  folder.open();\n  var $text = document.createElement('div');\n  $text.textContent = 'Please open the devtools, the shortest paths will be printed in console.';\n  $wrapper.appendChild($text);\n});"},{"relativePath":"gpgpu/demo/louvain.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/gpgpu/demo/louvain.js","order":3,"filename":"louvain.js","title":{"zh":"Louvain Clustering Algorithm","en":"Louvain Clustering Algorithm"},"source":"// import { Canvas, CanvasEvent } from '@antv/g';\n// import { Kernel, Plugin } from '@antv/g-plugin-gpgpu';\n// import { DeviceRenderer, Renderer } from '@antv/g-webgpu';\nimport { Algorithm } from '@antv/g6';\n\n// const { BufferUsage } = DeviceRenderer;\n\n/**\n * Implementing Louvain Clustering Algorithms in CUDA\n * @see https://github.com/rapidsai/cugraph/tree/branch-22.08/cpp/src/community\n * @see https://medium.com/walmartglobaltech/demystifying-louvains-algorithm-and-its-implementation-in-gpu-9a07cdd3b010\n *\n * compared with G6:\n * @see https://g6.antv.vision/zh/docs/api/Algorithm#louvain\n */\n\n// /**\n//  * use Compressed Sparse Row (CSR) for adjacency list\n//  */\n// // datasource: https://github.com/sengorajkumar/gpu_graph_algorithms/blob/master/input/simple.gr_E.csv\n// const V = [0, 1, 2, 3, 4];\n// const E = [1, 2, 2, 3, 4, 3, 4, 1, 3];\n// const I = [0, 2, 5, 7, 8, 10];\n// const W = [9, 4, 10, 2, 3, 2, 11, 2, 2];\n// const From = [0, 0, 1, 1, 1, 2, 2, 3, 4];\n// const To = [1, 2, 2, 3, 4, 3, 4, 1, 3];\n// const BLOCK_SIZE = 1;\n// const BLOCKS = 5;\n\n// const CANVAS_SIZE = 1;\n\n// const $wrapper = document.getElementById('container');\n// const $text = document.createElement('div');\n// $text.textContent = 'Please open the devtools, the top nodes will be printed in console.';\n// $wrapper.appendChild($text);\n\n// // use WebGPU\n// const renderer = new Renderer();\n// renderer.registerPlugin(new Plugin());\n\n// // create a canvas\n// const canvas = new Canvas({\n//   container: $wrapper,\n//   width: CANVAS_SIZE,\n//   height: CANVAS_SIZE,\n//   renderer,\n// });\n\n// canvas.addEventListener(CanvasEvent.READY, () => {\n//   const plugin = renderer.getPlugin('device-renderer');\n//   const device = plugin.getDevice();\n//   const storeKernel = new Kernel(device, {\n//     computeShader: `\n// struct Buffer {\n//   data: array<f32>,\n// };\n\n// @group(0) @binding(0) var<storage, read> r : Buffer;\n// @group(0) @binding(1) var<storage, write> r_last : Buffer;\n\n// @stage(compute) @workgroup_size(${BLOCKS}, ${BLOCK_SIZE})\n// fn main(\n//   @builtin(global_invocation_id) global_id : vec3<u32>\n// ) {\n//   var index = global_id.x;\n//   if (index < ${V.length}u) {\n//     r_last.data[index] = r.data[index];\n//   }\n// }`,\n//   });\n\n//   const matmulKernel = new Kernel(device, {\n//     computeShader: `\n// struct Buffer {\n//   data: array<f32>,\n// };\n\n// @group(0) @binding(0) var<storage, read> graph : Buffer;\n// @group(0) @binding(1) var<storage, read_write> r : Buffer;\n// @group(0) @binding(2) var<storage, read> r_last : Buffer;\n\n// @stage(compute) @workgroup_size(${BLOCKS}, ${BLOCK_SIZE})\n// fn main(\n//   @builtin(global_invocation_id) global_id : vec3<u32>\n// ) {\n//   var index = global_id.x;\n//   if (index < ${V.length}u) {\n//     var sum = 0.0;\n//     for (var i = 0u; i < ${V.length}u; i = i + 1u) {\n//       sum = sum + r_last.data[i] * graph.data[index * ${V.length}u + i];\n//     }\n//     r.data[index] = sum;\n//   }\n// }\n//     `,\n//   });\n\n//   const rankDiffKernel = new Kernel(device, {\n//     computeShader: `\n// struct Buffer {\n//   data: array<f32>,\n// };\n\n// @group(0) @binding(0) var<storage, read> r : Buffer;\n// @group(0) @binding(1) var<storage, read_write> r_last : Buffer;\n\n// @stage(compute) @workgroup_size(${BLOCKS}, ${BLOCK_SIZE})\n// fn main(\n//   @builtin(global_invocation_id) global_id : vec3<u32>\n// ) {\n//   var index = global_id.x;\n//   if (index < ${V.length}u) {\n//     r_last.data[index] = abs(r_last.data[index] - r.data[index]);\n//   }\n// }\n//     `,\n//   });\n\n//   pageRankGPU(device, storeKernel, matmulKernel, rankDiffKernel);\n// });\n\n// const pageRankGPU = async (device, storeKernel, matmulKernel, rankDiffKernel) => {\n//   const d = 0.85;\n//   const eps = 0.000001;\n//   let maxIteration = 1000;\n//   const n = V.length;\n//   const graph = new Float32Array(new Array(n * n).fill((1 - d) / n));\n//   const r = new Float32Array(new Array(n).fill(1 / n));\n\n//   From.forEach((from, i) => {\n//     graph[To[i] * n + from] += d * 1.0;\n//   });\n\n//   for (let j = 0; j < n; j++) {\n//     let sum = 0.0;\n\n//     for (let i = 0; i < n; ++i) {\n//       sum += graph[i * n + j];\n//     }\n\n//     for (let i = 0; i < n; ++i) {\n//       if (sum != 0.0) {\n//         graph[i * n + j] /= sum;\n//       } else {\n//         graph[i * n + j] = 1 / n;\n//       }\n//     }\n//   }\n\n//   const rBuffer = device.createBuffer({\n//     usage: BufferUsage.STORAGE | BufferUsage.COPY_SRC,\n//     viewOrSize: new Float32Array(r),\n//   });\n//   const rLastBuffer = device.createBuffer({\n//     usage: BufferUsage.STORAGE | BufferUsage.COPY_SRC,\n//     viewOrSize: new Float32Array(n),\n//   });\n//   const graphBuffer = device.createBuffer({\n//     usage: BufferUsage.STORAGE,\n//     viewOrSize: new Float32Array(graph),\n//   });\n\n//   const readback = device.createReadback();\n\n//   storeKernel.setBinding(0, rBuffer);\n//   storeKernel.setBinding(1, rLastBuffer);\n\n//   matmulKernel.setBinding(0, graphBuffer);\n//   matmulKernel.setBinding(1, rBuffer);\n//   matmulKernel.setBinding(2, rLastBuffer);\n\n//   rankDiffKernel.setBinding(0, rBuffer);\n//   rankDiffKernel.setBinding(1, rLastBuffer);\n\n//   const startTime = window.performance.now();\n//   while (maxIteration--) {\n//     storeKernel.dispatch(1, 1);\n\n//     matmulKernel.dispatch(1, 1);\n\n//     rankDiffKernel.dispatch(1, 1);\n\n//     const last = await readback.readBuffer(rLastBuffer);\n//     const result = last.reduce((prev, cur) => prev + cur, 0);\n//     if (result < eps) {\n//       const out = await readback.readBuffer(rBuffer);\n//       console.log(out);\n//       break;\n//     }\n//   }\n\n//   console.log(`GPU Time Elapsed: ${window.performance.now() - startTime}ms`);\n// };\n\nconst { louvain } = Algorithm;\nconst data = {\n  nodes: [\n    {\n      id: 'A',\n    },\n    {\n      id: 'B',\n    },\n    {\n      id: 'C',\n    },\n    {\n      id: 'D',\n    },\n    {\n      id: 'E',\n    },\n    {\n      id: 'F',\n    },\n    {\n      id: 'G',\n    },\n  ],\n  edges: [\n    {\n      source: 'A',\n      target: 'B',\n    },\n    {\n      source: 'B',\n      target: 'C',\n    },\n    {\n      source: 'C',\n      target: 'G',\n    },\n    {\n      source: 'A',\n      target: 'D',\n    },\n    {\n      source: 'A',\n      target: 'E',\n    },\n    {\n      source: 'E',\n      target: 'F',\n    },\n    {\n      source: 'F',\n      target: 'D',\n    },\n    {\n      source: 'D',\n      target: 'G',\n    },\n  ],\n};\n\n(async () => {\n  // load & parse CSV datasets, which use Compressed Sparse Row (CSR) for adjacency list\n  const [V, E, From, To, I, W] = await Promise.all(\n    [\n      'https://gw.alipayobjects.com/os/bmw-prod/0272cae4-5ae0-4fbd-93f9-2b6a8e640a24.csv',\n      'https://gw.alipayobjects.com/os/bmw-prod/e8b24b84-3cc4-4a73-b213-7edf4467e03a.csv',\n      'https://gw.alipayobjects.com/os/bmw-prod/cba4ec3d-4eca-4f85-ae54-faeee0fa708a.csv',\n      'https://gw.alipayobjects.com/os/bmw-prod/8582d1ca-9fe6-4afb-8364-df6ccc619594.csv',\n      'https://gw.alipayobjects.com/os/bmw-prod/d84981b4-edcf-4df5-b672-45b0000fc5da.csv',\n      'https://gw.alipayobjects.com/os/bmw-prod/eb455fa7-73ac-43fe-bc5e-d5e6c3a1fb77.csv',\n    ].map(async (url, i) => {\n      const res = await fetch(url);\n      // adjust index for V, E, From and To\n      return (await res.text()).split(',').map((v) => Number(v.trim()) - (i <= 3 ? 1 : 0));\n    }),\n  );\n\n  const bigDataSet = {\n    nodes: V.map((v) => ({\n      id: `${v}`,\n      label: `${v}`,\n    })),\n    edges: From.map((from, i) => ({\n      source: `${from}`,\n      target: `${To[i]}`,\n    })),\n  };\n\n  const startTime = window.performance.now();\n  const result = louvain(bigDataSet);\n  console.log(`CPU Time Elapsed: ${window.performance.now() - startTime}ms`);\n  console.log(result);\n})();\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g6\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g6\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g6);\n    global.louvain = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g) {\n  \"use strict\";\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  // const { BufferUsage } = DeviceRenderer;\n\n  /**\n   * Implementing Louvain Clustering Algorithms in CUDA\n   * @see https://github.com/rapidsai/cugraph/tree/branch-22.08/cpp/src/community\n   * @see https://medium.com/walmartglobaltech/demystifying-louvains-algorithm-and-its-implementation-in-gpu-9a07cdd3b010\n   *\n   * compared with G6:\n   * @see https://g6.antv.vision/zh/docs/api/Algorithm#louvain\n   */\n  // /**\n  //  * use Compressed Sparse Row (CSR) for adjacency list\n  //  */\n  // // datasource: https://github.com/sengorajkumar/gpu_graph_algorithms/blob/master/input/simple.gr_E.csv\n  // const V = [0, 1, 2, 3, 4];\n  // const E = [1, 2, 2, 3, 4, 3, 4, 1, 3];\n  // const I = [0, 2, 5, 7, 8, 10];\n  // const W = [9, 4, 10, 2, 3, 2, 11, 2, 2];\n  // const From = [0, 0, 1, 1, 1, 2, 2, 3, 4];\n  // const To = [1, 2, 2, 3, 4, 3, 4, 1, 3];\n  // const BLOCK_SIZE = 1;\n  // const BLOCKS = 5;\n  // const CANVAS_SIZE = 1;\n  // const $wrapper = document.getElementById('container');\n  // const $text = document.createElement('div');\n  // $text.textContent = 'Please open the devtools, the top nodes will be printed in console.';\n  // $wrapper.appendChild($text);\n  // // use WebGPU\n  // const renderer = new Renderer();\n  // renderer.registerPlugin(new Plugin());\n  // // create a canvas\n  // const canvas = new Canvas({\n  //   container: $wrapper,\n  //   width: CANVAS_SIZE,\n  //   height: CANVAS_SIZE,\n  //   renderer,\n  // });\n  // canvas.addEventListener(CanvasEvent.READY, () => {\n  //   const plugin = renderer.getPlugin('device-renderer');\n  //   const device = plugin.getDevice();\n  //   const storeKernel = new Kernel(device, {\n  //     computeShader: `\n  // struct Buffer {\n  //   data: array<f32>,\n  // };\n  // @group(0) @binding(0) var<storage, read> r : Buffer;\n  // @group(0) @binding(1) var<storage, write> r_last : Buffer;\n  // @stage(compute) @workgroup_size(${BLOCKS}, ${BLOCK_SIZE})\n  // fn main(\n  //   @builtin(global_invocation_id) global_id : vec3<u32>\n  // ) {\n  //   var index = global_id.x;\n  //   if (index < ${V.length}u) {\n  //     r_last.data[index] = r.data[index];\n  //   }\n  // }`,\n  //   });\n  //   const matmulKernel = new Kernel(device, {\n  //     computeShader: `\n  // struct Buffer {\n  //   data: array<f32>,\n  // };\n  // @group(0) @binding(0) var<storage, read> graph : Buffer;\n  // @group(0) @binding(1) var<storage, read_write> r : Buffer;\n  // @group(0) @binding(2) var<storage, read> r_last : Buffer;\n  // @stage(compute) @workgroup_size(${BLOCKS}, ${BLOCK_SIZE})\n  // fn main(\n  //   @builtin(global_invocation_id) global_id : vec3<u32>\n  // ) {\n  //   var index = global_id.x;\n  //   if (index < ${V.length}u) {\n  //     var sum = 0.0;\n  //     for (var i = 0u; i < ${V.length}u; i = i + 1u) {\n  //       sum = sum + r_last.data[i] * graph.data[index * ${V.length}u + i];\n  //     }\n  //     r.data[index] = sum;\n  //   }\n  // }\n  //     `,\n  //   });\n  //   const rankDiffKernel = new Kernel(device, {\n  //     computeShader: `\n  // struct Buffer {\n  //   data: array<f32>,\n  // };\n  // @group(0) @binding(0) var<storage, read> r : Buffer;\n  // @group(0) @binding(1) var<storage, read_write> r_last : Buffer;\n  // @stage(compute) @workgroup_size(${BLOCKS}, ${BLOCK_SIZE})\n  // fn main(\n  //   @builtin(global_invocation_id) global_id : vec3<u32>\n  // ) {\n  //   var index = global_id.x;\n  //   if (index < ${V.length}u) {\n  //     r_last.data[index] = abs(r_last.data[index] - r.data[index]);\n  //   }\n  // }\n  //     `,\n  //   });\n  //   pageRankGPU(device, storeKernel, matmulKernel, rankDiffKernel);\n  // });\n  // const pageRankGPU = async (device, storeKernel, matmulKernel, rankDiffKernel) => {\n  //   const d = 0.85;\n  //   const eps = 0.000001;\n  //   let maxIteration = 1000;\n  //   const n = V.length;\n  //   const graph = new Float32Array(new Array(n * n).fill((1 - d) / n));\n  //   const r = new Float32Array(new Array(n).fill(1 / n));\n  //   From.forEach((from, i) => {\n  //     graph[To[i] * n + from] += d * 1.0;\n  //   });\n  //   for (let j = 0; j < n; j++) {\n  //     let sum = 0.0;\n  //     for (let i = 0; i < n; ++i) {\n  //       sum += graph[i * n + j];\n  //     }\n  //     for (let i = 0; i < n; ++i) {\n  //       if (sum != 0.0) {\n  //         graph[i * n + j] /= sum;\n  //       } else {\n  //         graph[i * n + j] = 1 / n;\n  //       }\n  //     }\n  //   }\n  //   const rBuffer = device.createBuffer({\n  //     usage: BufferUsage.STORAGE | BufferUsage.COPY_SRC,\n  //     viewOrSize: new Float32Array(r),\n  //   });\n  //   const rLastBuffer = device.createBuffer({\n  //     usage: BufferUsage.STORAGE | BufferUsage.COPY_SRC,\n  //     viewOrSize: new Float32Array(n),\n  //   });\n  //   const graphBuffer = device.createBuffer({\n  //     usage: BufferUsage.STORAGE,\n  //     viewOrSize: new Float32Array(graph),\n  //   });\n  //   const readback = device.createReadback();\n  //   storeKernel.setBinding(0, rBuffer);\n  //   storeKernel.setBinding(1, rLastBuffer);\n  //   matmulKernel.setBinding(0, graphBuffer);\n  //   matmulKernel.setBinding(1, rBuffer);\n  //   matmulKernel.setBinding(2, rLastBuffer);\n  //   rankDiffKernel.setBinding(0, rBuffer);\n  //   rankDiffKernel.setBinding(1, rLastBuffer);\n  //   const startTime = window.performance.now();\n  //   while (maxIteration--) {\n  //     storeKernel.dispatch(1, 1);\n  //     matmulKernel.dispatch(1, 1);\n  //     rankDiffKernel.dispatch(1, 1);\n  //     const last = await readback.readBuffer(rLastBuffer);\n  //     const result = last.reduce((prev, cur) => prev + cur, 0);\n  //     if (result < eps) {\n  //       const out = await readback.readBuffer(rBuffer);\n  //       console.log(out);\n  //       break;\n  //     }\n  //   }\n  //   console.log(`GPU Time Elapsed: ${window.performance.now() - startTime}ms`);\n  // };\n  var louvain = _g.Algorithm.louvain;\n  var data = {\n    nodes: [{\n      id: 'A'\n    }, {\n      id: 'B'\n    }, {\n      id: 'C'\n    }, {\n      id: 'D'\n    }, {\n      id: 'E'\n    }, {\n      id: 'F'\n    }, {\n      id: 'G'\n    }],\n    edges: [{\n      source: 'A',\n      target: 'B'\n    }, {\n      source: 'B',\n      target: 'C'\n    }, {\n      source: 'C',\n      target: 'G'\n    }, {\n      source: 'A',\n      target: 'D'\n    }, {\n      source: 'A',\n      target: 'E'\n    }, {\n      source: 'E',\n      target: 'F'\n    }, {\n      source: 'F',\n      target: 'D'\n    }, {\n      source: 'D',\n      target: 'G'\n    }]\n  };\n\n  (async function () {\n    // load & parse CSV datasets, which use Compressed Sparse Row (CSR) for adjacency list\n    var _await$Promise$all = await Promise.all(['https://gw.alipayobjects.com/os/bmw-prod/0272cae4-5ae0-4fbd-93f9-2b6a8e640a24.csv', 'https://gw.alipayobjects.com/os/bmw-prod/e8b24b84-3cc4-4a73-b213-7edf4467e03a.csv', 'https://gw.alipayobjects.com/os/bmw-prod/cba4ec3d-4eca-4f85-ae54-faeee0fa708a.csv', 'https://gw.alipayobjects.com/os/bmw-prod/8582d1ca-9fe6-4afb-8364-df6ccc619594.csv', 'https://gw.alipayobjects.com/os/bmw-prod/d84981b4-edcf-4df5-b672-45b0000fc5da.csv', 'https://gw.alipayobjects.com/os/bmw-prod/eb455fa7-73ac-43fe-bc5e-d5e6c3a1fb77.csv'].map(async function (url, i) {\n      var res = await fetch(url); // adjust index for V, E, From and To\n\n      return (await res.text()).split(',').map(function (v) {\n        return Number(v.trim()) - (i <= 3 ? 1 : 0);\n      });\n    })),\n        _await$Promise$all2 = _slicedToArray(_await$Promise$all, 6),\n        V = _await$Promise$all2[0],\n        E = _await$Promise$all2[1],\n        From = _await$Promise$all2[2],\n        To = _await$Promise$all2[3],\n        I = _await$Promise$all2[4],\n        W = _await$Promise$all2[5];\n\n    var bigDataSet = {\n      nodes: V.map(function (v) {\n        return {\n          id: \"\".concat(v),\n          label: \"\".concat(v)\n        };\n      }),\n      edges: From.map(function (from, i) {\n        return {\n          source: \"\".concat(from),\n          target: \"\".concat(To[i])\n        };\n      })\n    };\n    var startTime = window.performance.now();\n    var result = louvain(bigDataSet);\n    console.log(\"CPU Time Elapsed: \".concat(window.performance.now() - startTime, \"ms\"));\n    console.log(result);\n  })();\n});"},{"relativePath":"event/demo/coordinates.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/event/demo/coordinates.js","order":12,"filename":"coordinates.js","title":{"zh":"坐标系转换","en":"Coordinates"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*kPfcTKwZG90AAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent, Circle, Text } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer({\n  enableDirtyRectangleRenderingDebug: true,\n});\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\nconst camera = canvas.getCamera();\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  // add a circle to canvas\n  const circle = new Circle({\n    style: {\n      cx: 300,\n      cy: 200,\n      r: 100,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n      cursor: 'pointer',\n    },\n  });\n\n  canvas.appendChild(circle);\n\n  circle.addEventListener('mouseenter', () => {\n    circle.style.fill = '#2FC25B';\n  });\n\n  circle.addEventListener('mouseleave', () => {\n    circle.style.fill = '#1890FF';\n  });\n\n  const clientText = new Text({\n    style: {\n      fill: '#000',\n      fontSize: 22,\n      text: 'Client: ',\n      textBaseline: 'middle',\n    },\n  });\n  clientText.setPosition(100, 80);\n  canvas.appendChild(clientText);\n\n  const canvasText = clientText.cloneNode();\n  canvasText.style.text = 'Canvas: ';\n  canvasText.setPosition(100, 110);\n  canvas.appendChild(canvasText);\n\n  const viewportText = clientText.cloneNode();\n  viewportText.style.text = 'Viewport: ';\n  viewportText.setPosition(100, 140);\n  canvas.appendChild(viewportText);\n\n  const screenText = clientText.cloneNode();\n  screenText.style.text = 'Screen: ';\n  screenText.setPosition(100, 20);\n  canvas.appendChild(screenText);\n\n  const pageText = clientText.cloneNode();\n  pageText.style.text = 'Page: ';\n  pageText.setPosition(100, 50);\n  canvas.appendChild(pageText);\n\n  canvas.addEventListener('mousemove', (e) => {\n    const screenX = e.screenX;\n    const screenY = e.screenY;\n    screenText.style.text = `Screen: ${screenX}, ${screenY}`;\n\n    const pageX = e.pageX;\n    const pageY = e.pageY;\n    pageText.style.text = `Page: ${pageX}, ${pageY}`;\n\n    const clientX = e.clientX;\n    const clientY = e.clientY;\n    clientText.style.text = `Client: ${clientX}, ${clientY}`;\n\n    const canvasX = e.canvasX;\n    const canvasY = e.canvasY;\n    canvasText.style.text = `Canvas: ${canvasX}, ${canvasY}`;\n\n    const viewportX = e.viewportX;\n    const viewportY = e.viewportY;\n    viewportText.style.text = `Viewport: ${viewportX}, ${viewportY}`;\n  });\n\n  // stats\n  const stats = new Stats();\n  stats.showPanel(0);\n  const $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  const $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n    if (stats) {\n      stats.update();\n    }\n  });\n\n  // display dirty rectangle\n  const $dirtyRectangle = document.createElement('div');\n  $dirtyRectangle.style.cssText = `\n  position: absolute;\n  pointer-events: none;\n  background: rgba(255, 0, 0, 0.5);\n  `;\n  $wrapper.appendChild($dirtyRectangle);\n\n  canvas.addEventListener(CanvasEvent.DIRTY_RECTANGLE, (e) => {\n    const { dirtyRect } = e.detail;\n    const { x, y, width, height } = dirtyRect;\n    const dpr = window.devicePixelRatio;\n\n    // convert from canvas coords to viewport\n    $dirtyRectangle.style.left = `${x / dpr}px`;\n    $dirtyRectangle.style.top = `${y / dpr}px`;\n    $dirtyRectangle.style.width = `${width / dpr}px`;\n    $dirtyRectangle.style.height = `${height / dpr}px`;\n  });\n\n  // GUI\n  const gui = new lil.GUI({ autoPlace: false });\n  $wrapper.appendChild(gui.domElement);\n  const rendererFolder = gui.addFolder('renderer');\n  const rendererConfig = {\n    renderer: 'canvas',\n  };\n  rendererFolder\n    .add(rendererConfig, 'renderer', ['canvas', 'webgl', 'svg'])\n    .onChange((renderer) => {\n      canvas.setRenderer(\n        renderer === 'canvas' ? canvasRenderer : renderer === 'webgl' ? webglRenderer : svgRenderer,\n      );\n    });\n  rendererFolder.open();\n\n  const cameraFolder = gui.addFolder('camera actions');\n  const cameraConfig = {\n    x: 300,\n    y: 250,\n    panX: 0,\n    panY: 0,\n    zoom: 1,\n    roll: 0,\n  };\n\n  const origin = camera.getPosition();\n  cameraFolder.add(cameraConfig, 'x', 0, 500).onChange((x) => {\n    const current = camera.getPosition();\n    camera.setPosition(x, current[1]);\n    camera.setFocalPoint(x, current[1]);\n  });\n  cameraFolder.add(cameraConfig, 'y', 0, 500).onChange((y) => {\n    const current = camera.getPosition();\n    camera.setPosition(current[0], y);\n    camera.setFocalPoint(current[0], y);\n  });\n  cameraFolder.add(cameraConfig, 'panX', -300, 300).onChange((panX) => {\n    const current = camera.getPosition();\n    camera.pan(origin[0] + panX - current[0], 0);\n  });\n  cameraFolder.add(cameraConfig, 'panY', -300, 300).onChange((panY) => {\n    const current = camera.getPosition();\n    camera.pan(0, origin[1] + panY - current[1]);\n  });\n  cameraFolder.add(cameraConfig, 'roll', -90, 90).onChange((roll) => {\n    camera.rotate(0, 0, roll);\n  });\n  cameraFolder.add(cameraConfig, 'zoom', 0, 10).onChange((zoom) => {\n    camera.setZoom(zoom);\n  });\n  cameraFolder.open();\n});\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.coordinates = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer({\n    enableDirtyRectangleRenderingDebug: true\n  });\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  var camera = canvas.getCamera();\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    // add a circle to canvas\n    var circle = new _g.Circle({\n      style: {\n        cx: 300,\n        cy: 200,\n        r: 100,\n        fill: '#1890FF',\n        stroke: '#F04864',\n        lineWidth: 4,\n        cursor: 'pointer'\n      }\n    });\n    canvas.appendChild(circle);\n    circle.addEventListener('mouseenter', function () {\n      circle.style.fill = '#2FC25B';\n    });\n    circle.addEventListener('mouseleave', function () {\n      circle.style.fill = '#1890FF';\n    });\n    var clientText = new _g.Text({\n      style: {\n        fill: '#000',\n        fontSize: 22,\n        text: 'Client: ',\n        textBaseline: 'middle'\n      }\n    });\n    clientText.setPosition(100, 80);\n    canvas.appendChild(clientText);\n    var canvasText = clientText.cloneNode();\n    canvasText.style.text = 'Canvas: ';\n    canvasText.setPosition(100, 110);\n    canvas.appendChild(canvasText);\n    var viewportText = clientText.cloneNode();\n    viewportText.style.text = 'Viewport: ';\n    viewportText.setPosition(100, 140);\n    canvas.appendChild(viewportText);\n    var screenText = clientText.cloneNode();\n    screenText.style.text = 'Screen: ';\n    screenText.setPosition(100, 20);\n    canvas.appendChild(screenText);\n    var pageText = clientText.cloneNode();\n    pageText.style.text = 'Page: ';\n    pageText.setPosition(100, 50);\n    canvas.appendChild(pageText);\n    canvas.addEventListener('mousemove', function (e) {\n      var screenX = e.screenX;\n      var screenY = e.screenY;\n      screenText.style.text = \"Screen: \".concat(screenX, \", \").concat(screenY);\n      var pageX = e.pageX;\n      var pageY = e.pageY;\n      pageText.style.text = \"Page: \".concat(pageX, \", \").concat(pageY);\n      var clientX = e.clientX;\n      var clientY = e.clientY;\n      clientText.style.text = \"Client: \".concat(clientX, \", \").concat(clientY);\n      var canvasX = e.canvasX;\n      var canvasY = e.canvasY;\n      canvasText.style.text = \"Canvas: \".concat(canvasX, \", \").concat(canvasY);\n      var viewportX = e.viewportX;\n      var viewportY = e.viewportY;\n      viewportText.style.text = \"Viewport: \".concat(viewportX, \", \").concat(viewportY);\n    }); // stats\n\n    var stats = new _stats.default();\n    stats.showPanel(0);\n    var $stats = stats.dom;\n    $stats.style.position = 'absolute';\n    $stats.style.left = '0px';\n    $stats.style.top = '0px';\n    var $wrapper = document.getElementById('container');\n    $wrapper.appendChild($stats);\n    canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n      if (stats) {\n        stats.update();\n      }\n    }); // display dirty rectangle\n\n    var $dirtyRectangle = document.createElement('div');\n    $dirtyRectangle.style.cssText = \"\\n  position: absolute;\\n  pointer-events: none;\\n  background: rgba(255, 0, 0, 0.5);\\n  \";\n    $wrapper.appendChild($dirtyRectangle);\n    canvas.addEventListener(_g.CanvasEvent.DIRTY_RECTANGLE, function (e) {\n      var dirtyRect = e.detail.dirtyRect;\n      var x = dirtyRect.x,\n          y = dirtyRect.y,\n          width = dirtyRect.width,\n          height = dirtyRect.height;\n      var dpr = window.devicePixelRatio; // convert from canvas coords to viewport\n\n      $dirtyRectangle.style.left = \"\".concat(x / dpr, \"px\");\n      $dirtyRectangle.style.top = \"\".concat(y / dpr, \"px\");\n      $dirtyRectangle.style.width = \"\".concat(width / dpr, \"px\");\n      $dirtyRectangle.style.height = \"\".concat(height / dpr, \"px\");\n    }); // GUI\n\n    var gui = new lil.GUI({\n      autoPlace: false\n    });\n    $wrapper.appendChild(gui.domElement);\n    var rendererFolder = gui.addFolder('renderer');\n    var rendererConfig = {\n      renderer: 'canvas'\n    };\n    rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'webgl', 'svg']).onChange(function (renderer) {\n      canvas.setRenderer(renderer === 'canvas' ? canvasRenderer : renderer === 'webgl' ? webglRenderer : svgRenderer);\n    });\n    rendererFolder.open();\n    var cameraFolder = gui.addFolder('camera actions');\n    var cameraConfig = {\n      x: 300,\n      y: 250,\n      panX: 0,\n      panY: 0,\n      zoom: 1,\n      roll: 0\n    };\n    var origin = camera.getPosition();\n    cameraFolder.add(cameraConfig, 'x', 0, 500).onChange(function (x) {\n      var current = camera.getPosition();\n      camera.setPosition(x, current[1]);\n      camera.setFocalPoint(x, current[1]);\n    });\n    cameraFolder.add(cameraConfig, 'y', 0, 500).onChange(function (y) {\n      var current = camera.getPosition();\n      camera.setPosition(current[0], y);\n      camera.setFocalPoint(current[0], y);\n    });\n    cameraFolder.add(cameraConfig, 'panX', -300, 300).onChange(function (panX) {\n      var current = camera.getPosition();\n      camera.pan(origin[0] + panX - current[0], 0);\n    });\n    cameraFolder.add(cameraConfig, 'panY', -300, 300).onChange(function (panY) {\n      var current = camera.getPosition();\n      camera.pan(0, origin[1] + panY - current[1]);\n    });\n    cameraFolder.add(cameraConfig, 'roll', -90, 90).onChange(function (roll) {\n      camera.rotate(0, 0, roll);\n    });\n    cameraFolder.add(cameraConfig, 'zoom', 0, 10).onChange(function (zoom) {\n      camera.setZoom(zoom);\n    });\n    cameraFolder.open();\n  });\n});"},{"relativePath":"event/demo/circles.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/event/demo/circles.js","order":7,"filename":"circles.js","title":{"zh":"多个圆拾取","en":"Multiple circle picking"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*dc0NTrzOwHYAAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent, Circle } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n});\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\nconst camera = canvas.getCamera();\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  for (let i = 0; i < 1000; i++) {\n    const circle = new Circle({\n      style: {\n        cx: Math.random() * 600,\n        cy: Math.random() * 500,\n        r: 20 + Math.random() * 10,\n        fill: '#1890FF',\n        stroke: '#F04864',\n        lineWidth: 4,\n      },\n    });\n\n    canvas.appendChild(circle);\n\n    circle.on('mouseenter', () => {\n      circle.attr('fill', '#2FC25B');\n    });\n\n    circle.on('mouseleave', () => {\n      circle.attr('fill', '#1890FF');\n    });\n  }\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n\n  camera.rotate(0, 0, 0.1);\n\n  console.log(canvas.getStats());\n});\n\n// GUI\nlet currentRenderer = canvasRenderer;\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\n\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n\nconst folder0 = gui.addFolder('dirty rectangle');\nconst dirtyRectangleConfig = {\n  enable: true,\n};\nfolder0.add(dirtyRectangleConfig, 'enable').onChange((enable) => {\n  currentRenderer.setConfig({\n    enableDirtyRectangleRendering: enable,\n  });\n});\nfolder0.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.lilGui, global.stats);\n    global.circles = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/'\n  }); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  var camera = canvas.getCamera();\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    var _loop = function _loop(i) {\n      var circle = new _g.Circle({\n        style: {\n          cx: Math.random() * 600,\n          cy: Math.random() * 500,\n          r: 20 + Math.random() * 10,\n          fill: '#1890FF',\n          stroke: '#F04864',\n          lineWidth: 4\n        }\n      });\n      canvas.appendChild(circle);\n      circle.on('mouseenter', function () {\n        circle.attr('fill', '#2FC25B');\n      });\n      circle.on('mouseleave', function () {\n        circle.attr('fill', '#1890FF');\n      });\n    };\n\n    for (var i = 0; i < 1000; i++) {\n      _loop(i);\n    }\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n\n    camera.rotate(0, 0, 0.1);\n    console.log(canvas.getStats());\n  }); // GUI\n\n  var currentRenderer = canvasRenderer;\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n  var folder0 = gui.addFolder('dirty rectangle');\n  var dirtyRectangleConfig = {\n    enable: true\n  };\n  folder0.add(dirtyRectangleConfig, 'enable').onChange(function (enable) {\n    currentRenderer.setConfig({\n      enableDirtyRectangleRendering: enable\n    });\n  });\n  folder0.open();\n});"},{"relativePath":"event/demo/circle.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/event/demo/circle.js","order":6,"filename":"circle.js","title":{"zh":"单个圆拾取","en":"Single circle picking"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*xJB7TY68IVUAAAAAAAAAAABkARQnAQ","source":"import { Canvas, CanvasEvent, Circle } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\n// add a circle to canvas\nconst circle = new Circle({\n  style: {\n    cx: 300,\n    cy: 200,\n    r: 100,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 4,\n    cursor: 'pointer',\n  },\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  canvas.appendChild(circle);\n\n  circle.addEventListener('pointerenter', function (e) {\n    console.log(this, e.currentTarget);\n    circle.style.fill = '#2FC25B';\n  });\n\n  circle.addEventListener('pointerleave', () => {\n    console.log(this);\n    circle.style.fill = '#1890FF';\n  });\n\n  // stats\n  const stats = new Stats();\n  stats.showPanel(0);\n  const $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  const $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n    if (stats) {\n      stats.update();\n    }\n  });\n\n  // GUI\n  const gui = new lil.GUI({ autoPlace: false });\n  $wrapper.appendChild(gui.domElement);\n  const rendererFolder = gui.addFolder('renderer');\n  const rendererConfig = {\n    renderer: 'canvas',\n  };\n  rendererFolder\n    .add(rendererConfig, 'renderer', ['canvas', 'webgl', 'svg'])\n    .onChange((renderer) => {\n      canvas.setRenderer(\n        renderer === 'canvas' ? canvasRenderer : renderer === 'webgl' ? webglRenderer : svgRenderer,\n      );\n    });\n  rendererFolder.open();\n\n  const circleFolder = gui.addFolder('circle');\n  const circleConfig = {\n    interactive: true,\n    visible: true,\n  };\n  circleFolder.add(circleConfig, 'visible').onChange((visible) => {\n    if (visible) {\n      circle.style.visibility = 'visible';\n      // circle.show();\n    } else {\n      circle.style.visibility = 'hidden';\n      // circle.hide();\n    }\n  });\n  circleFolder.add(circleConfig, 'interactive').onChange((interactive) => {\n    circle.interactive = interactive;\n  });\n  circleFolder.open();\n});\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.circle = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  var _this = void 0;\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  }); // add a circle to canvas\n\n  var circle = new _g.Circle({\n    style: {\n      cx: 300,\n      cy: 200,\n      r: 100,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n      cursor: 'pointer'\n    }\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    canvas.appendChild(circle);\n    circle.addEventListener('pointerenter', function (e) {\n      console.log(this, e.currentTarget);\n      circle.style.fill = '#2FC25B';\n    });\n    circle.addEventListener('pointerleave', function () {\n      console.log(_this);\n      circle.style.fill = '#1890FF';\n    }); // stats\n\n    var stats = new _stats.default();\n    stats.showPanel(0);\n    var $stats = stats.dom;\n    $stats.style.position = 'absolute';\n    $stats.style.left = '0px';\n    $stats.style.top = '0px';\n    var $wrapper = document.getElementById('container');\n    $wrapper.appendChild($stats);\n    canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n      if (stats) {\n        stats.update();\n      }\n    }); // GUI\n\n    var gui = new lil.GUI({\n      autoPlace: false\n    });\n    $wrapper.appendChild(gui.domElement);\n    var rendererFolder = gui.addFolder('renderer');\n    var rendererConfig = {\n      renderer: 'canvas'\n    };\n    rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'webgl', 'svg']).onChange(function (renderer) {\n      canvas.setRenderer(renderer === 'canvas' ? canvasRenderer : renderer === 'webgl' ? webglRenderer : svgRenderer);\n    });\n    rendererFolder.open();\n    var circleFolder = gui.addFolder('circle');\n    var circleConfig = {\n      interactive: true,\n      visible: true\n    };\n    circleFolder.add(circleConfig, 'visible').onChange(function (visible) {\n      if (visible) {\n        circle.style.visibility = 'visible'; // circle.show();\n      } else {\n        circle.style.visibility = 'hidden'; // circle.hide();\n      }\n    });\n    circleFolder.add(circleConfig, 'interactive').onChange(function (interactive) {\n      circle.interactive = interactive;\n    });\n    circleFolder.open();\n  });\n});"},{"relativePath":"event/demo/custom.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/event/demo/custom.js","order":9,"filename":"custom.js","title":{"zh":"触发自定义事件","en":"Dispatch custom event"},"source":"import { Canvas, CanvasEvent, CustomEvent, Group, Rect, Text } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a custom event\nconst event = new CustomEvent('build', { detail: { prop1: 'xx' } });\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  const ul = new Group({\n    id: 'ul',\n  });\n  const li1 = new Rect({\n    id: 'li1',\n    style: {\n      x: 200,\n      y: 100,\n      width: 300,\n      height: 100,\n      fill: '#1890FF',\n    },\n  });\n  const text = new Text({\n    style: {\n      x: 150,\n      y: 50,\n      text: 'Click me!',\n      fontSize: 22,\n      fill: '#000',\n      textAlign: 'center',\n      textBaseline: 'middle',\n    },\n  });\n  li1.appendChild(text);\n\n  const li2 = new Rect({\n    id: 'li2',\n    style: {\n      x: 200,\n      y: 300,\n      width: 300,\n      height: 100,\n      fill: '#1890FF',\n    },\n  });\n\n  canvas.appendChild(ul);\n  ul.appendChild(li1);\n  ul.appendChild(li2);\n\n  li1.addEventListener('click', (e) => {\n    // dispatch my custom event!\n    li1.dispatchEvent(event);\n\n    // @deprecated\n    // li1.emit('build', { prop1: 'xx' });\n  });\n\n  // delegate to parent\n  ul.addEventListener('build', (e) => {\n    console.log(e.target); // circle\n    console.log(e.detail); // { prop1: 'xx' }\n  });\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.custom = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // create a custom event\n  var event = new _g.CustomEvent('build', {\n    detail: {\n      prop1: 'xx'\n    }\n  }); // create a renderer\n\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    var ul = new _g.Group({\n      id: 'ul'\n    });\n    var li1 = new _g.Rect({\n      id: 'li1',\n      style: {\n        x: 200,\n        y: 100,\n        width: 300,\n        height: 100,\n        fill: '#1890FF'\n      }\n    });\n    var text = new _g.Text({\n      style: {\n        x: 150,\n        y: 50,\n        text: 'Click me!',\n        fontSize: 22,\n        fill: '#000',\n        textAlign: 'center',\n        textBaseline: 'middle'\n      }\n    });\n    li1.appendChild(text);\n    var li2 = new _g.Rect({\n      id: 'li2',\n      style: {\n        x: 200,\n        y: 300,\n        width: 300,\n        height: 100,\n        fill: '#1890FF'\n      }\n    });\n    canvas.appendChild(ul);\n    ul.appendChild(li1);\n    ul.appendChild(li2);\n    li1.addEventListener('click', function (e) {\n      // dispatch my custom event!\n      li1.dispatchEvent(event); // @deprecated\n      // li1.emit('build', { prop1: 'xx' });\n    }); // delegate to parent\n\n    ul.addEventListener('build', function (e) {\n      console.log(e.target); // circle\n\n      console.log(e.detail); // { prop1: 'xx' }\n    });\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n});"},{"relativePath":"event/demo/builtin.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/event/demo/builtin.js","order":11,"filename":"builtin.js","title":{"zh":"内置场景图事件","en":"SceneGraph Events"},"source":"import { Canvas, CanvasEvent, Circle, ElementEvent, Text } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\ncanvas.addEventListener(ElementEvent.INSERTED, (e) => {\n  console.log('inserted', e.target);\n});\ncanvas.addEventListener(ElementEvent.MOUNTED, (e) => {\n  console.log('mounted', e.target);\n});\ncanvas.addEventListener(ElementEvent.UNMOUNTED, (e) => {\n  console.log('unmounted', e.target);\n});\ncanvas.addEventListener(ElementEvent.REMOVED, (e) => {\n  console.log('removed', e.target);\n});\ncanvas.addEventListener(ElementEvent.DESTROY, (e) => {\n  console.log('destroyed', e.target);\n});\n\n// observe root node\n// const observer = new MutationObserver(() => {});\n// observer.observe(canvas.document.documentElement, { childList: true });\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n\nconst circleFolder = gui.addFolder('circle');\nlet circles = [];\nlet removed = [];\nlet counter = 0;\nconst circleConfig = {\n  insert: () => {\n    let id = counter++;\n    const circle = new Circle({\n      id,\n      style: {\n        r: 40,\n        fill: '#1890FF',\n        stroke: '#F04864',\n        lineWidth: 4,\n        cursor: 'pointer',\n      },\n    });\n    const text = new Text({\n      id: 'text',\n      style: {\n        fill: '#000',\n        text: '' + id,\n        textAlign: 'center',\n        textBaseline: 'middle',\n      },\n    });\n    circle.appendChild(text);\n\n    circles.push(circle);\n    canvas.appendChild(circle);\n    circle.setPosition(300 + (circles.length - 1) * 20, 250);\n\n    // const records = observer.takeRecords();\n    // console.log(records);\n  },\n  remove: () => {\n    const circle = circles.pop();\n    if (circle) {\n      removed.push(circle);\n      // remove but don't destroy, can re-insert it later\n      circle.remove(false);\n    }\n  },\n  're-insert': () => {\n    const circle = removed.pop();\n    if (circle) {\n      circles.push(circle);\n      canvas.appendChild(circle);\n      // const records = observer.takeRecords();\n      // console.log(records);\n    }\n  },\n  destroy: () => {\n    const circle = circles.pop();\n    if (circle) {\n      circle.destroy();\n    }\n  },\n};\ncircleFolder.add(circleConfig, 'insert');\ncircleFolder.add(circleConfig, 'remove');\ncircleFolder.add(circleConfig, 're-insert');\ncircleFolder.add(circleConfig, 'destroy');\ncircleFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.builtin = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  canvas.addEventListener(_g.ElementEvent.INSERTED, function (e) {\n    console.log('inserted', e.target);\n  });\n  canvas.addEventListener(_g.ElementEvent.MOUNTED, function (e) {\n    console.log('mounted', e.target);\n  });\n  canvas.addEventListener(_g.ElementEvent.UNMOUNTED, function (e) {\n    console.log('unmounted', e.target);\n  });\n  canvas.addEventListener(_g.ElementEvent.REMOVED, function (e) {\n    console.log('removed', e.target);\n  });\n  canvas.addEventListener(_g.ElementEvent.DESTROY, function (e) {\n    console.log('destroyed', e.target);\n  }); // observe root node\n  // const observer = new MutationObserver(() => {});\n  // observer.observe(canvas.document.documentElement, { childList: true });\n  // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n  var circleFolder = gui.addFolder('circle');\n  var circles = [];\n  var removed = [];\n  var counter = 0;\n  var circleConfig = {\n    insert: function insert() {\n      var id = counter++;\n      var circle = new _g.Circle({\n        id: id,\n        style: {\n          r: 40,\n          fill: '#1890FF',\n          stroke: '#F04864',\n          lineWidth: 4,\n          cursor: 'pointer'\n        }\n      });\n      var text = new _g.Text({\n        id: 'text',\n        style: {\n          fill: '#000',\n          text: '' + id,\n          textAlign: 'center',\n          textBaseline: 'middle'\n        }\n      });\n      circle.appendChild(text);\n      circles.push(circle);\n      canvas.appendChild(circle);\n      circle.setPosition(300 + (circles.length - 1) * 20, 250); // const records = observer.takeRecords();\n      // console.log(records);\n    },\n    remove: function remove() {\n      var circle = circles.pop();\n\n      if (circle) {\n        removed.push(circle); // remove but don't destroy, can re-insert it later\n\n        circle.remove(false);\n      }\n    },\n    're-insert': function reInsert() {\n      var circle = removed.pop();\n\n      if (circle) {\n        circles.push(circle);\n        canvas.appendChild(circle); // const records = observer.takeRecords();\n        // console.log(records);\n      }\n    },\n    destroy: function destroy() {\n      var circle = circles.pop();\n\n      if (circle) {\n        circle.destroy();\n      }\n    }\n  };\n  circleFolder.add(circleConfig, 'insert');\n  circleFolder.add(circleConfig, 'remove');\n  circleFolder.add(circleConfig, 're-insert');\n  circleFolder.add(circleConfig, 'destroy');\n  circleFolder.open();\n});"},{"relativePath":"event/demo/deprecated-delegate.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/event/demo/deprecated-delegate.js","order":10,"filename":"deprecated-delegate.js","title":{"zh":"兼容旧版的事件委托写法","en":"Delegate with event's name"},"source":"import { Canvas, CanvasEvent, Group, Rect, Text } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n/**\n * 实现事件委托，点击两个矩形，在控制台输出：\n * * target\n * * currentTarget\n * * clientX/Y\n * * composedPath() 事件传播路径\n */\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  const ul = new Group({\n    id: 'ul',\n  });\n  const li1 = new Rect({\n    id: 'li1',\n    name: 'test-name',\n    style: {\n      x: 200,\n      y: 100,\n      width: 300,\n      height: 100,\n      fill: '#1890FF',\n    },\n  });\n  const text = new Text({\n    style: {\n      x: 150,\n      y: 50,\n      text: 'Click me!',\n      fontSize: 22,\n      fill: '#000',\n      textAlign: 'center',\n      textBaseline: 'middle',\n    },\n  });\n  li1.appendChild(text);\n  const li2 = new Rect({\n    id: 'li2',\n    name: 'test-name',\n    style: {\n      x: 200,\n      y: 300,\n      width: 300,\n      height: 100,\n      fill: '#1890FF',\n    },\n  });\n\n  canvas.appendChild(ul);\n  ul.appendChild(li1);\n  ul.appendChild(li2);\n\n  ul.addEventListener('test-name:click', (e) => {\n    console.log('target', e.target);\n    console.log('path', e.composedPath());\n  });\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.deprecatedDelegate = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * 实现事件委托，点击两个矩形，在控制台输出：\n   * * target\n   * * currentTarget\n   * * clientX/Y\n   * * composedPath() 事件传播路径\n   */\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    var ul = new _g.Group({\n      id: 'ul'\n    });\n    var li1 = new _g.Rect({\n      id: 'li1',\n      name: 'test-name',\n      style: {\n        x: 200,\n        y: 100,\n        width: 300,\n        height: 100,\n        fill: '#1890FF'\n      }\n    });\n    var text = new _g.Text({\n      style: {\n        x: 150,\n        y: 50,\n        text: 'Click me!',\n        fontSize: 22,\n        fill: '#000',\n        textAlign: 'center',\n        textBaseline: 'middle'\n      }\n    });\n    li1.appendChild(text);\n    var li2 = new _g.Rect({\n      id: 'li2',\n      name: 'test-name',\n      style: {\n        x: 200,\n        y: 300,\n        width: 300,\n        height: 100,\n        fill: '#1890FF'\n      }\n    });\n    canvas.appendChild(ul);\n    ul.appendChild(li1);\n    ul.appendChild(li2);\n    ul.addEventListener('test-name:click', function (e) {\n      console.log('target', e.target);\n      console.log('path', e.composedPath());\n    });\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n});"},{"relativePath":"event/demo/hammer-zoom.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/event/demo/hammer-zoom.js","order":2,"filename":"hammer-zoom.js","title":{"zh":"使用 Hammer.js 手势库实现图片缩放","en":"Gesture with Hammer.js"},"source":"import { Canvas, CanvasEvent, Image as GImage } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport Hammer from 'hammerjs';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n/**\n * Pinch Zoom And Pan With HammerJS\n * @see https://bl.ocks.org/redgeoff/6be0295e6ebf18649966d48768398252\n */\n\nconst CANVAS_WIDTH = 300;\nconst CANVAS_HEIGHT = 200;\nconst MIN_SCALE = 1; // 1=scaling when first loaded\nconst MAX_SCALE = 64;\n\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvas = new Canvas({\n  container: 'container',\n  width: CANVAS_WIDTH,\n  height: CANVAS_HEIGHT,\n  renderer: canvasRenderer,\n});\n\n// prevent browser default actions\n// @see https://developer.mozilla.org/zh-CN/docs/Web/CSS/touch-action\nconst $canvas = canvas.getContextService().getDomElement();\n$canvas.style.touchAction = 'none';\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  let image;\n\n  let imgWidth = null;\n  let imgHeight = null;\n  let viewportWidth = CANVAS_WIDTH;\n  let viewportHeight = CANVAS_HEIGHT;\n  let scale = null;\n  let lastScale = null;\n  let img = null;\n  let x = 0;\n  let lastX = 0;\n  let y = 0;\n  let lastY = 0;\n  let pinchCenter = null;\n  let pinchCenterOffset = null;\n  let curWidth;\n  let curHeight;\n\n  // Traverse the DOM to calculate the absolute position of an element\n  const absolutePosition = function (el) {\n    const { top, left } = canvas.getContextService().getDomElement().getBoundingClientRect();\n    return { x: left, y: top };\n  };\n\n  const restrictScale = (scale) => {\n    if (scale < MIN_SCALE) {\n      scale = MIN_SCALE;\n    } else if (scale > MAX_SCALE) {\n      scale = MAX_SCALE;\n    }\n    return scale;\n  };\n\n  const restrictRawPos = (pos, viewportDim, imgDim) => {\n    if (pos < viewportDim / scale - imgDim) {\n      // too far left/up?\n      pos = viewportDim / scale - imgDim;\n    } else if (pos > 0) {\n      // too far right/down?\n      pos = 0;\n    }\n    return pos;\n  };\n\n  const updateLastPos = (deltaX, deltaY) => {\n    lastX = x;\n    lastY = y;\n  };\n\n  const translate = (deltaX, deltaY) => {\n    // We restrict to the min of the viewport width/height or current width/height as the\n    // current width/height may be smaller than the viewport width/height\n    const newX = restrictRawPos(\n      lastX + deltaX / scale,\n      Math.min(viewportWidth, curWidth),\n      imgWidth,\n    );\n    x = newX;\n\n    const newY = restrictRawPos(\n      lastY + deltaY / scale,\n      Math.min(viewportHeight, curHeight),\n      imgHeight,\n    );\n    y = newY;\n\n    image.setLocalPosition(Math.ceil(newX * scale), Math.ceil(newY * scale));\n  };\n\n  const zoom = (scaleBy) => {\n    scale = restrictScale(lastScale * scaleBy);\n\n    curWidth = imgWidth * scale;\n    curHeight = imgHeight * scale;\n\n    image.style.width = Math.ceil(curWidth);\n    image.style.height = Math.ceil(curHeight);\n\n    // Adjust margins to make sure that we aren't out of bounds\n    translate(0, 0);\n  };\n\n  const rawCenter = (e) => {\n    const pos = absolutePosition(canvas);\n\n    // We need to account for the scroll position\n    const scrollLeft = window.pageXOffset ? window.pageXOffset : document.body.scrollLeft;\n    const scrollTop = window.pageYOffset ? window.pageYOffset : document.body.scrollTop;\n\n    const zoomX = -x + (e.center.x - pos.x + scrollLeft) / scale;\n    const zoomY = -y + (e.center.y - pos.y + scrollTop) / scale;\n\n    return { x: zoomX, y: zoomY };\n  };\n\n  const updateLastScale = function () {\n    lastScale = scale;\n  };\n\n  const zoomAround = (scaleBy, rawZoomX, rawZoomY, doNotUpdateLast) => {\n    // Zoom\n    zoom(scaleBy);\n\n    // New raw center of viewport\n    const rawCenterX = -x + Math.min(viewportWidth, curWidth) / 2 / scale;\n    const rawCenterY = -y + Math.min(viewportHeight, curHeight) / 2 / scale;\n\n    // Delta\n    const deltaX = (rawCenterX - rawZoomX) * scale;\n    const deltaY = (rawCenterY - rawZoomY) * scale;\n\n    // Translate back to zoom center\n    translate(deltaX, deltaY);\n\n    if (!doNotUpdateLast) {\n      updateLastScale();\n      updateLastPos();\n    }\n  };\n\n  const zoomCenter = (scaleBy) => {\n    // Center of viewport\n    const zoomX = -x + Math.min(viewportWidth, curWidth) / 2 / scale;\n    const zoomY = -y + Math.min(viewportHeight, curHeight) / 2 / scale;\n\n    zoomAround(scaleBy, zoomX, zoomY);\n  };\n\n  const zoomIn = () => {\n    zoomCenter(2);\n  };\n\n  const zoomOut = () => {\n    zoomCenter(1 / 2);\n  };\n\n  img = new Image();\n\n  img.src = 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*wnQmQ6j3UGQAAAAAAAAAAAAAARQnAQ';\n  img.crossOrigin = 'Anonymous';\n  img.onload = () => {\n    // 图片加载成功后创建\n    image = new GImage({\n      style: {\n        width: CANVAS_WIDTH,\n        height: (CANVAS_WIDTH * 119) / 960,\n        src: img, // 传入 Image 对象\n      },\n    });\n    canvas.appendChild(image);\n\n    imgWidth = image.style.width;\n    imgHeight = image.style.height;\n    scale = viewportWidth / imgWidth;\n    lastScale = scale;\n    curWidth = imgWidth * scale;\n    curHeight = imgHeight * scale;\n\n    // use hammer.js\n    const hammer = new Hammer(image, {\n      inputClass: Hammer.PointerEventInput,\n    });\n\n    hammer.get('pinch').set({\n      enable: true,\n    });\n\n    hammer.on('pan', function (e) {\n      translate(e.deltaX, e.deltaY);\n    });\n\n    hammer.on('panend', function (e) {\n      updateLastPos();\n    });\n\n    hammer.on('pinch', function (e) {\n      // We only calculate the pinch center on the first pinch event as we want the center to\n      // stay consistent during the entire pinch\n      if (pinchCenter === null) {\n        pinchCenter = rawCenter(e);\n        var offsetX = pinchCenter.x * scale - (-x * scale + Math.min(viewportWidth, curWidth) / 2);\n        var offsetY =\n          pinchCenter.y * scale - (-y * scale + Math.min(viewportHeight, curHeight) / 2);\n        pinchCenterOffset = { x: offsetX, y: offsetY };\n      }\n\n      // When the user pinch zooms, she/he expects the pinch center to remain in the same\n      // relative location of the screen. To achieve this, the raw zoom center is calculated by\n      // first storing the pinch center and the scaled offset to the current center of the\n      // image. The new scale is then used to calculate the zoom center. This has the effect of\n      // actually translating the zoom center on each pinch zoom event.\n      var newScale = restrictScale(scale * e.scale);\n      var zoomX = pinchCenter.x * newScale - pinchCenterOffset.x;\n      var zoomY = pinchCenter.y * newScale - pinchCenterOffset.y;\n      var zoomCenter = { x: zoomX / newScale, y: zoomY / newScale };\n\n      zoomAround(e.scale, zoomCenter.x, zoomCenter.y, true);\n    });\n\n    hammer.on('pinchend', function (e) {\n      updateLastScale();\n      updateLastPos();\n      pinchCenter = null;\n    });\n\n    hammer.on('doubletap', function (e) {\n      const c = rawCenter(e);\n      zoomAround(2, c.x, c.y);\n    });\n\n    // GUI\n    const gui = new lil.GUI({ autoPlace: false });\n    $wrapper.appendChild(gui.domElement);\n    const rendererFolder = gui.addFolder('renderer');\n    const rendererConfig = {\n      renderer: 'canvas',\n    };\n    rendererFolder\n      .add(rendererConfig, 'renderer', ['canvas', 'webgl', 'svg'])\n      .onChange((renderer) => {\n        canvas.setRenderer(\n          renderer === 'canvas'\n            ? canvasRenderer\n            : renderer === 'webgl'\n            ? webglRenderer\n            : svgRenderer,\n        );\n      });\n    rendererFolder.open();\n    const zoomFolder = gui.addFolder('zoom');\n    const zoomConfig = {\n      zoomIn,\n      zoomOut,\n    };\n    zoomFolder.add(zoomConfig, 'zoomIn');\n    zoomFolder.add(zoomConfig, 'zoomOut');\n  };\n\n  // stats\n  const stats = new Stats();\n  stats.showPanel(0);\n  const $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  const $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n    if (stats) {\n      stats.update();\n    }\n  });\n});\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-svg\", \"@antv/g-webgl\", \"hammerjs\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"hammerjs\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gSvg, global.gWebgl, global.hammerjs, global.lilGui, global.stats);\n    global.hammerZoom = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gSvg, _gWebgl, _hammerjs, lil, _stats) {\n  \"use strict\";\n\n  _hammerjs = _interopRequireDefault(_hammerjs);\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  /**\n   * Pinch Zoom And Pan With HammerJS\n   * @see https://bl.ocks.org/redgeoff/6be0295e6ebf18649966d48768398252\n   */\n  var CANVAS_WIDTH = 300;\n  var CANVAS_HEIGHT = 200;\n  var MIN_SCALE = 1; // 1=scaling when first loaded\n\n  var MAX_SCALE = 64;\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: CANVAS_WIDTH,\n    height: CANVAS_HEIGHT,\n    renderer: canvasRenderer\n  }); // prevent browser default actions\n  // @see https://developer.mozilla.org/zh-CN/docs/Web/CSS/touch-action\n\n  var $canvas = canvas.getContextService().getDomElement();\n  $canvas.style.touchAction = 'none';\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    var image;\n    var imgWidth = null;\n    var imgHeight = null;\n    var viewportWidth = CANVAS_WIDTH;\n    var viewportHeight = CANVAS_HEIGHT;\n    var scale = null;\n    var lastScale = null;\n    var img = null;\n    var x = 0;\n    var lastX = 0;\n    var y = 0;\n    var lastY = 0;\n    var pinchCenter = null;\n    var pinchCenterOffset = null;\n    var curWidth;\n    var curHeight; // Traverse the DOM to calculate the absolute position of an element\n\n    var absolutePosition = function absolutePosition(el) {\n      var _canvas$getContextSer = canvas.getContextService().getDomElement().getBoundingClientRect(),\n          top = _canvas$getContextSer.top,\n          left = _canvas$getContextSer.left;\n\n      return {\n        x: left,\n        y: top\n      };\n    };\n\n    var restrictScale = function restrictScale(scale) {\n      if (scale < MIN_SCALE) {\n        scale = MIN_SCALE;\n      } else if (scale > MAX_SCALE) {\n        scale = MAX_SCALE;\n      }\n\n      return scale;\n    };\n\n    var restrictRawPos = function restrictRawPos(pos, viewportDim, imgDim) {\n      if (pos < viewportDim / scale - imgDim) {\n        // too far left/up?\n        pos = viewportDim / scale - imgDim;\n      } else if (pos > 0) {\n        // too far right/down?\n        pos = 0;\n      }\n\n      return pos;\n    };\n\n    var updateLastPos = function updateLastPos(deltaX, deltaY) {\n      lastX = x;\n      lastY = y;\n    };\n\n    var translate = function translate(deltaX, deltaY) {\n      // We restrict to the min of the viewport width/height or current width/height as the\n      // current width/height may be smaller than the viewport width/height\n      var newX = restrictRawPos(lastX + deltaX / scale, Math.min(viewportWidth, curWidth), imgWidth);\n      x = newX;\n      var newY = restrictRawPos(lastY + deltaY / scale, Math.min(viewportHeight, curHeight), imgHeight);\n      y = newY;\n      image.setLocalPosition(Math.ceil(newX * scale), Math.ceil(newY * scale));\n    };\n\n    var zoom = function zoom(scaleBy) {\n      scale = restrictScale(lastScale * scaleBy);\n      curWidth = imgWidth * scale;\n      curHeight = imgHeight * scale;\n      image.style.width = Math.ceil(curWidth);\n      image.style.height = Math.ceil(curHeight); // Adjust margins to make sure that we aren't out of bounds\n\n      translate(0, 0);\n    };\n\n    var rawCenter = function rawCenter(e) {\n      var pos = absolutePosition(canvas); // We need to account for the scroll position\n\n      var scrollLeft = window.pageXOffset ? window.pageXOffset : document.body.scrollLeft;\n      var scrollTop = window.pageYOffset ? window.pageYOffset : document.body.scrollTop;\n      var zoomX = -x + (e.center.x - pos.x + scrollLeft) / scale;\n      var zoomY = -y + (e.center.y - pos.y + scrollTop) / scale;\n      return {\n        x: zoomX,\n        y: zoomY\n      };\n    };\n\n    var updateLastScale = function updateLastScale() {\n      lastScale = scale;\n    };\n\n    var zoomAround = function zoomAround(scaleBy, rawZoomX, rawZoomY, doNotUpdateLast) {\n      // Zoom\n      zoom(scaleBy); // New raw center of viewport\n\n      var rawCenterX = -x + Math.min(viewportWidth, curWidth) / 2 / scale;\n      var rawCenterY = -y + Math.min(viewportHeight, curHeight) / 2 / scale; // Delta\n\n      var deltaX = (rawCenterX - rawZoomX) * scale;\n      var deltaY = (rawCenterY - rawZoomY) * scale; // Translate back to zoom center\n\n      translate(deltaX, deltaY);\n\n      if (!doNotUpdateLast) {\n        updateLastScale();\n        updateLastPos();\n      }\n    };\n\n    var zoomCenter = function zoomCenter(scaleBy) {\n      // Center of viewport\n      var zoomX = -x + Math.min(viewportWidth, curWidth) / 2 / scale;\n      var zoomY = -y + Math.min(viewportHeight, curHeight) / 2 / scale;\n      zoomAround(scaleBy, zoomX, zoomY);\n    };\n\n    var zoomIn = function zoomIn() {\n      zoomCenter(2);\n    };\n\n    var zoomOut = function zoomOut() {\n      zoomCenter(1 / 2);\n    };\n\n    img = new Image();\n    img.src = 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*wnQmQ6j3UGQAAAAAAAAAAAAAARQnAQ';\n    img.crossOrigin = 'Anonymous';\n\n    img.onload = function () {\n      // 图片加载成功后创建\n      image = new _g.Image({\n        style: {\n          width: CANVAS_WIDTH,\n          height: CANVAS_WIDTH * 119 / 960,\n          src: img // 传入 Image 对象\n\n        }\n      });\n      canvas.appendChild(image);\n      imgWidth = image.style.width;\n      imgHeight = image.style.height;\n      scale = viewportWidth / imgWidth;\n      lastScale = scale;\n      curWidth = imgWidth * scale;\n      curHeight = imgHeight * scale; // use hammer.js\n\n      var hammer = new _hammerjs.default(image, {\n        inputClass: _hammerjs.default.PointerEventInput\n      });\n      hammer.get('pinch').set({\n        enable: true\n      });\n      hammer.on('pan', function (e) {\n        translate(e.deltaX, e.deltaY);\n      });\n      hammer.on('panend', function (e) {\n        updateLastPos();\n      });\n      hammer.on('pinch', function (e) {\n        // We only calculate the pinch center on the first pinch event as we want the center to\n        // stay consistent during the entire pinch\n        if (pinchCenter === null) {\n          pinchCenter = rawCenter(e);\n          var offsetX = pinchCenter.x * scale - (-x * scale + Math.min(viewportWidth, curWidth) / 2);\n          var offsetY = pinchCenter.y * scale - (-y * scale + Math.min(viewportHeight, curHeight) / 2);\n          pinchCenterOffset = {\n            x: offsetX,\n            y: offsetY\n          };\n        } // When the user pinch zooms, she/he expects the pinch center to remain in the same\n        // relative location of the screen. To achieve this, the raw zoom center is calculated by\n        // first storing the pinch center and the scaled offset to the current center of the\n        // image. The new scale is then used to calculate the zoom center. This has the effect of\n        // actually translating the zoom center on each pinch zoom event.\n\n\n        var newScale = restrictScale(scale * e.scale);\n        var zoomX = pinchCenter.x * newScale - pinchCenterOffset.x;\n        var zoomY = pinchCenter.y * newScale - pinchCenterOffset.y;\n        var zoomCenter = {\n          x: zoomX / newScale,\n          y: zoomY / newScale\n        };\n        zoomAround(e.scale, zoomCenter.x, zoomCenter.y, true);\n      });\n      hammer.on('pinchend', function (e) {\n        updateLastScale();\n        updateLastPos();\n        pinchCenter = null;\n      });\n      hammer.on('doubletap', function (e) {\n        var c = rawCenter(e);\n        zoomAround(2, c.x, c.y);\n      }); // GUI\n\n      var gui = new lil.GUI({\n        autoPlace: false\n      });\n      $wrapper.appendChild(gui.domElement);\n      var rendererFolder = gui.addFolder('renderer');\n      var rendererConfig = {\n        renderer: 'canvas'\n      };\n      rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'webgl', 'svg']).onChange(function (renderer) {\n        canvas.setRenderer(renderer === 'canvas' ? canvasRenderer : renderer === 'webgl' ? webglRenderer : svgRenderer);\n      });\n      rendererFolder.open();\n      var zoomFolder = gui.addFolder('zoom');\n      var zoomConfig = {\n        zoomIn: zoomIn,\n        zoomOut: zoomOut\n      };\n      zoomFolder.add(zoomConfig, 'zoomIn');\n      zoomFolder.add(zoomConfig, 'zoomOut');\n    }; // stats\n\n\n    var stats = new _stats.default();\n    stats.showPanel(0);\n    var $stats = stats.dom;\n    $stats.style.position = 'absolute';\n    $stats.style.left = '0px';\n    $stats.style.top = '0px';\n    var $wrapper = document.getElementById('container');\n    $wrapper.appendChild($stats);\n    canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n      if (stats) {\n        stats.update();\n      }\n    });\n  });\n});"},{"relativePath":"event/demo/interact.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/event/demo/interact.js","order":3,"filename":"interact.js","title":{"zh":"使用 Interact.js 拖拽库","en":"Drag&Drop with Interact.js"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*9YqIQo56RasAAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent, Circle, Rect, Text } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Plugin } from '@antv/g-plugin-css-select';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport interact from 'interactjs';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n/**\n * use interact.js\n * @see https://interactjs.io/\n */\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// register css select plugin\ncanvasRenderer.registerPlugin(new Plugin());\nwebglRenderer.registerPlugin(new Plugin());\nsvgRenderer.registerPlugin(new Plugin());\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  /**\n   * Draggable\n   */\n  const circle = new Circle({\n    className: 'draggable',\n    style: {\n      fill: 'rgb(239, 244, 255)',\n      fillOpacity: 1,\n      lineWidth: 1,\n      opacity: 1,\n      r: 60,\n      stroke: 'rgb(95, 149, 255)',\n      strokeOpacity: 1,\n      zIndex: 1,\n    },\n  });\n  const text = new Text({\n    style: {\n      text: 'Drag me',\n      fontSize: 22,\n      fill: '#000',\n      textAlign: 'center',\n      textBaseline: 'middle',\n    },\n  });\n  circle.appendChild(text);\n  canvas.appendChild(circle);\n  circle.setPosition(100, 100);\n  interact(circle, {\n    context: canvas.document,\n  }).draggable({\n    onmove: function (event) {\n      const { dx, dy } = event;\n      circle.translateLocal(dx, dy);\n    },\n  });\n\n  /**\n   * Resizable\n   */\n  const resizableRect = new Rect({\n    style: {\n      x: 220,\n      y: 260,\n      width: 200,\n      height: 200,\n      fill: '#1890FF',\n    },\n  });\n  const resizableRectText = new Text({\n    style: {\n      text: 'Resize from any edge or corner',\n      fontSize: 16,\n      fill: 'white',\n      textAlign: 'left',\n      textBaseline: 'top',\n      wordWrap: true,\n      wordWrapWidth: 200,\n    },\n  });\n  resizableRectText.translateLocal(0, 20);\n  resizableRect.appendChild(resizableRectText);\n  canvas.appendChild(resizableRect);\n  interact(resizableRect, {\n    context: canvas.document,\n  }).resizable({\n    edges: { top: true, left: true, bottom: true, right: true },\n    onmove: function (event) {\n      resizableRect.translateLocal(event.deltaRect.left, event.deltaRect.top);\n      resizableRect.style.width = event.rect.width;\n      resizableRect.style.height = event.rect.height;\n\n      resizableRectText.style.wordWrapWidth = event.rect.width;\n    },\n  });\n\n  /**\n   * Drop zone\n   */\n  const dropZone = new Rect({\n    style: {\n      x: 100,\n      y: 50,\n      width: 300,\n      height: 200,\n      fill: '#1890FF',\n    },\n  });\n  canvas.appendChild(dropZone);\n  interact(dropZone, {\n    context: canvas.document,\n  }).dropzone({\n    accept: '.draggable',\n    overlap: 0.75,\n    ondragenter: function (event) {\n      text.style.text = 'Dragged in';\n    },\n    ondragleave: function (event) {\n      text.style.text = 'Dragged out';\n    },\n    ondrop: function (event) {\n      text.style.text = 'Dropped';\n    },\n    ondropactivate: function (event) {\n      // add active dropzone feedback\n      event.target.style.fill = '#4e4';\n    },\n    ondropdeactivate: function (event) {\n      event.target.style.fill = '#1890FF';\n    },\n  });\n\n  /**\n   * Gesture\n   */\n  const gesture = new Circle({\n    style: {\n      fill: 'rgb(239, 244, 255)',\n      fillOpacity: 1,\n      lineWidth: 1,\n      opacity: 1,\n      r: 60,\n      stroke: 'rgb(95, 149, 255)',\n      strokeOpacity: 1,\n    },\n  });\n  const gestureText = new Text({\n    style: {\n      text: 'Tap to Change color\\n Doubletap to change size\\n Hold to rotate',\n      fontSize: 12,\n      fill: '#000',\n      textAlign: 'center',\n      textBaseline: 'middle',\n    },\n  });\n  gesture.appendChild(gestureText);\n  canvas.appendChild(gesture);\n  gesture.setPosition(500, 100);\n  let tapped = false;\n  let doubleTapped = false;\n  interact(gesture, {\n    context: canvas.document,\n  })\n    .on('tap', function (event) {\n      event.currentTarget.style.fill = tapped ? 'red' : 'rgb(239, 244, 255)';\n      tapped = !tapped;\n      event.preventDefault();\n    })\n    .on('doubletap', function (event) {\n      event.currentTarget.style.r = doubleTapped ? 100 : 60;\n      doubleTapped = !doubleTapped;\n      event.preventDefault();\n    })\n    .on('hold', function (event) {\n      event.currentTarget.rotateLocal(30);\n    });\n\n  /**\n   * Snapping\n   */\n  const snapRect = new Rect({\n    style: {\n      fill: 'rgb(239, 244, 255)',\n      fillOpacity: 1,\n      lineWidth: 1,\n      opacity: 1,\n      width: 200,\n      height: 200,\n      stroke: 'rgb(95, 149, 255)',\n      strokeOpacity: 1,\n    },\n  });\n  const snapCircle = new Circle({\n    style: {\n      fill: 'rgb(239, 244, 255)',\n      fillOpacity: 1,\n      lineWidth: 1,\n      opacity: 1,\n      r: 30,\n      stroke: 'rgb(95, 149, 255)',\n      strokeOpacity: 1,\n    },\n  });\n  const snapText = new Text({\n    style: {\n      text: 'Drag me',\n      fontSize: 12,\n      fill: '#000',\n      textAlign: 'center',\n      textBaseline: 'middle',\n    },\n  });\n  snapRect.appendChild(snapCircle);\n  snapCircle.appendChild(snapText);\n  canvas.appendChild(snapRect);\n  snapRect.setPosition(0, 260);\n  snapCircle.translateLocal(150, 150);\n  interact(snapCircle, {\n    context: canvas.document,\n  }).draggable({\n    modifiers: [\n      interact.modifiers.restrict({\n        restriction: snapCircle.parentNode,\n        elementRect: { top: 0, left: 0, bottom: 1, right: 1 },\n        endOnly: true,\n      }),\n    ],\n    inertia: true,\n    onmove: function (event) {\n      const { dx, dy } = event;\n      snapCircle.translateLocal(dx, dy);\n    },\n  });\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-plugin-css-select\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"interactjs\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-plugin-css-select\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"interactjs\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gPluginCssSelect, global.gSvg, global.gWebgl, global.gWebgpu, global.interactjs, global.lilGui, global.stats);\n    global.interact = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gPluginCssSelect, _gSvg, _gWebgl, _gWebgpu, _interactjs, lil, _stats) {\n  \"use strict\";\n\n  _interactjs = _interopRequireDefault(_interactjs);\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  /**\n   * use interact.js\n   * @see https://interactjs.io/\n   */\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // register css select plugin\n\n  canvasRenderer.registerPlugin(new _gPluginCssSelect.Plugin());\n  webglRenderer.registerPlugin(new _gPluginCssSelect.Plugin());\n  svgRenderer.registerPlugin(new _gPluginCssSelect.Plugin()); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    /**\n     * Draggable\n     */\n    var circle = new _g.Circle({\n      className: 'draggable',\n      style: {\n        fill: 'rgb(239, 244, 255)',\n        fillOpacity: 1,\n        lineWidth: 1,\n        opacity: 1,\n        r: 60,\n        stroke: 'rgb(95, 149, 255)',\n        strokeOpacity: 1,\n        zIndex: 1\n      }\n    });\n    var text = new _g.Text({\n      style: {\n        text: 'Drag me',\n        fontSize: 22,\n        fill: '#000',\n        textAlign: 'center',\n        textBaseline: 'middle'\n      }\n    });\n    circle.appendChild(text);\n    canvas.appendChild(circle);\n    circle.setPosition(100, 100);\n    (0, _interactjs.default)(circle, {\n      context: canvas.document\n    }).draggable({\n      onmove: function onmove(event) {\n        var dx = event.dx,\n            dy = event.dy;\n        circle.translateLocal(dx, dy);\n      }\n    });\n    /**\n     * Resizable\n     */\n\n    var resizableRect = new _g.Rect({\n      style: {\n        x: 220,\n        y: 260,\n        width: 200,\n        height: 200,\n        fill: '#1890FF'\n      }\n    });\n    var resizableRectText = new _g.Text({\n      style: {\n        text: 'Resize from any edge or corner',\n        fontSize: 16,\n        fill: 'white',\n        textAlign: 'left',\n        textBaseline: 'top',\n        wordWrap: true,\n        wordWrapWidth: 200\n      }\n    });\n    resizableRectText.translateLocal(0, 20);\n    resizableRect.appendChild(resizableRectText);\n    canvas.appendChild(resizableRect);\n    (0, _interactjs.default)(resizableRect, {\n      context: canvas.document\n    }).resizable({\n      edges: {\n        top: true,\n        left: true,\n        bottom: true,\n        right: true\n      },\n      onmove: function onmove(event) {\n        resizableRect.translateLocal(event.deltaRect.left, event.deltaRect.top);\n        resizableRect.style.width = event.rect.width;\n        resizableRect.style.height = event.rect.height;\n        resizableRectText.style.wordWrapWidth = event.rect.width;\n      }\n    });\n    /**\n     * Drop zone\n     */\n\n    var dropZone = new _g.Rect({\n      style: {\n        x: 100,\n        y: 50,\n        width: 300,\n        height: 200,\n        fill: '#1890FF'\n      }\n    });\n    canvas.appendChild(dropZone);\n    (0, _interactjs.default)(dropZone, {\n      context: canvas.document\n    }).dropzone({\n      accept: '.draggable',\n      overlap: 0.75,\n      ondragenter: function ondragenter(event) {\n        text.style.text = 'Dragged in';\n      },\n      ondragleave: function ondragleave(event) {\n        text.style.text = 'Dragged out';\n      },\n      ondrop: function ondrop(event) {\n        text.style.text = 'Dropped';\n      },\n      ondropactivate: function ondropactivate(event) {\n        // add active dropzone feedback\n        event.target.style.fill = '#4e4';\n      },\n      ondropdeactivate: function ondropdeactivate(event) {\n        event.target.style.fill = '#1890FF';\n      }\n    });\n    /**\n     * Gesture\n     */\n\n    var gesture = new _g.Circle({\n      style: {\n        fill: 'rgb(239, 244, 255)',\n        fillOpacity: 1,\n        lineWidth: 1,\n        opacity: 1,\n        r: 60,\n        stroke: 'rgb(95, 149, 255)',\n        strokeOpacity: 1\n      }\n    });\n    var gestureText = new _g.Text({\n      style: {\n        text: 'Tap to Change color\\n Doubletap to change size\\n Hold to rotate',\n        fontSize: 12,\n        fill: '#000',\n        textAlign: 'center',\n        textBaseline: 'middle'\n      }\n    });\n    gesture.appendChild(gestureText);\n    canvas.appendChild(gesture);\n    gesture.setPosition(500, 100);\n    var tapped = false;\n    var doubleTapped = false;\n    (0, _interactjs.default)(gesture, {\n      context: canvas.document\n    }).on('tap', function (event) {\n      event.currentTarget.style.fill = tapped ? 'red' : 'rgb(239, 244, 255)';\n      tapped = !tapped;\n      event.preventDefault();\n    }).on('doubletap', function (event) {\n      event.currentTarget.style.r = doubleTapped ? 100 : 60;\n      doubleTapped = !doubleTapped;\n      event.preventDefault();\n    }).on('hold', function (event) {\n      event.currentTarget.rotateLocal(30);\n    });\n    /**\n     * Snapping\n     */\n\n    var snapRect = new _g.Rect({\n      style: {\n        fill: 'rgb(239, 244, 255)',\n        fillOpacity: 1,\n        lineWidth: 1,\n        opacity: 1,\n        width: 200,\n        height: 200,\n        stroke: 'rgb(95, 149, 255)',\n        strokeOpacity: 1\n      }\n    });\n    var snapCircle = new _g.Circle({\n      style: {\n        fill: 'rgb(239, 244, 255)',\n        fillOpacity: 1,\n        lineWidth: 1,\n        opacity: 1,\n        r: 30,\n        stroke: 'rgb(95, 149, 255)',\n        strokeOpacity: 1\n      }\n    });\n    var snapText = new _g.Text({\n      style: {\n        text: 'Drag me',\n        fontSize: 12,\n        fill: '#000',\n        textAlign: 'center',\n        textBaseline: 'middle'\n      }\n    });\n    snapRect.appendChild(snapCircle);\n    snapCircle.appendChild(snapText);\n    canvas.appendChild(snapRect);\n    snapRect.setPosition(0, 260);\n    snapCircle.translateLocal(150, 150);\n    (0, _interactjs.default)(snapCircle, {\n      context: canvas.document\n    }).draggable({\n      modifiers: [_interactjs.default.modifiers.restrict({\n        restriction: snapCircle.parentNode,\n        elementRect: {\n          top: 0,\n          left: 0,\n          bottom: 1,\n          right: 1\n        },\n        endOnly: true\n      })],\n      inertia: true,\n      onmove: function onmove(event) {\n        var dx = event.dx,\n            dy = event.dy;\n        snapCircle.translateLocal(dx, dy);\n      }\n    });\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n});"},{"relativePath":"event/demo/mutation-observer.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/event/demo/mutation-observer.js","order":13,"filename":"mutation-observer.js","title":{"zh":"使用 MutationObserver","en":"Use MutationObserver"},"source":"import { Canvas, CanvasEvent, Circle, MutationObserver } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\nconst circle = new Circle({\n  style: {\n    cx: 300,\n    cy: 250,\n    r: 100,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 4,\n  },\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  canvas.appendChild(circle);\n\n  circle.addEventListener('mouseenter', () => {\n    circle.attr('fill', '#2FC25B');\n  });\n\n  circle.addEventListener('mouseleave', () => {\n    circle.attr('fill', '#1890FF');\n  });\n\n  // use mutation observer\n  const config = { attributes: true, childList: true, subtree: true, attributeOldValue: true };\n  const observer = new MutationObserver((mutationsList, observer) => {\n    for (const mutation of mutationsList) {\n      console.log(mutation);\n      if (mutation.type === 'attributes') {\n      }\n    }\n  });\n  observer.observe(circle, config);\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nlet currentRenderer = canvasRenderer;\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder.add(rendererConfig, 'renderer', ['canvas', 'webgl', 'svg']).onChange((renderer) => {\n  currentRenderer =\n    renderer === 'canvas' ? canvasRenderer : renderer === 'webgl' ? webglRenderer : svgRenderer;\n  canvas.setRenderer(currentRenderer);\n});\nrendererFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.mutationObserver = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  var circle = new _g.Circle({\n    style: {\n      cx: 300,\n      cy: 250,\n      r: 100,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4\n    }\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    canvas.appendChild(circle);\n    circle.addEventListener('mouseenter', function () {\n      circle.attr('fill', '#2FC25B');\n    });\n    circle.addEventListener('mouseleave', function () {\n      circle.attr('fill', '#1890FF');\n    }); // use mutation observer\n\n    var config = {\n      attributes: true,\n      childList: true,\n      subtree: true,\n      attributeOldValue: true\n    };\n    var observer = new _g.MutationObserver(function (mutationsList, observer) {\n      var _iterator = _createForOfIteratorHelper(mutationsList),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var mutation = _step.value;\n          console.log(mutation);\n\n          if (mutation.type === 'attributes') {}\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    });\n    observer.observe(circle, config);\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var currentRenderer = canvasRenderer;\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'webgl', 'svg']).onChange(function (renderer) {\n    currentRenderer = renderer === 'canvas' ? canvasRenderer : renderer === 'webgl' ? webglRenderer : svgRenderer;\n    canvas.setRenderer(currentRenderer);\n  });\n  rendererFolder.open();\n});"},{"relativePath":"event/demo/pinch-with-pointer.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/event/demo/pinch-with-pointer.js","order":0,"filename":"pinch-with-pointer.js","title":{"zh":"使用 PointerEvents 实现 Pinch 手势","en":"Pinch zoom gestures with PointerEvents"},"source":"import { Canvas, CanvasEvent, Circle, Text } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\n\n/**\n * Implements Pinch zoom gestures with PointerEvent\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Pointer_events/Pinch_zoom_gestures\n */\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 300,\n  height: 300,\n  renderer: canvasRenderer,\n});\n\n// add a circle to canvas\nconst circle = new Circle({\n  style: {\n    cx: 200,\n    cy: 200,\n    r: 200,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 4,\n  },\n});\nconst text = new Text({\n  style: {\n    x: -150,\n    y: -100,\n    fill: 'black',\n    text: 'Pinch',\n    wordWrap: true,\n    wordWrapWidth: 160,\n    pointerEvents: 'none',\n  },\n});\ncircle.appendChild(text);\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  canvas.appendChild(circle);\n\n  // Global vars to cache event state\n  var evCache = new Array();\n  var prevDiff = -1;\n\n  function log(prefix, ev) {\n    text.style.text =\n      prefix +\n      ': pointerID = ' +\n      ev.pointerId +\n      ' ; pointerType = ' +\n      ev.pointerType +\n      ' ; isPrimary = ' +\n      ev.isPrimary;\n  }\n\n  function pointerdown_handler(ev) {\n    // The pointerdown event signals the start of a touch interaction.\n    // This event is cached to support 2-finger gestures\n    evCache.push({\n      pointerId: ev.pointerId,\n      clientX: ev.clientX,\n      clientY: ev.clientY,\n    });\n\n    log('pointerDown', ev);\n  }\n\n  function pointermove_handler(ev) {\n    // This function implements a 2-pointer horizontal pinch/zoom gesture.\n    //\n    // If the distance between the two pointers has increased (zoom in),\n    // the taget element's background is changed to \"pink\" and if the\n    // distance is decreasing (zoom out), the color is changed to \"lightblue\".\n    //\n    // This function sets the target element's border to \"dashed\" to visually\n    // indicate the pointer's target received a move event.\n    log('pointerMove', ev);\n    // ev.target.style.border = 'dashed';\n\n    // Find this event in the cache and update its record with this event\n    for (var i = 0; i < evCache.length; i++) {\n      if (ev.pointerId == evCache[i].pointerId) {\n        evCache[i] = {\n          pointerId: ev.pointerId,\n          clientX: ev.clientX,\n          clientY: ev.clientY,\n        };\n        break;\n      }\n    }\n\n    // If two pointers are down, check for pinch gestures\n    if (evCache.length == 2) {\n      // Calculate the distance between the two pointers\n      var curDiff = Math.abs(evCache[0].clientX - evCache[1].clientX);\n\n      if (prevDiff > 0) {\n        if (curDiff > prevDiff) {\n          // The distance between the two pointers has increased\n          log('Pinch moving OUT -> Zoom in', ev);\n          ev.target.style.fill = 'pink';\n        }\n        if (curDiff < prevDiff) {\n          // The distance between the two pointers has decreased\n          log('Pinch moving IN -> Zoom out', ev);\n          ev.target.style.fill = 'lightblue';\n        }\n      }\n\n      // Cache the distance for the next move event\n      prevDiff = curDiff;\n    }\n  }\n\n  function pointerup_handler(ev) {\n    log(ev.type, ev);\n    // Remove this pointer from the cache and reset the target's\n    // background and border\n    remove_event(ev);\n    ev.target.style.fill = '#1890FF';\n\n    // If the number of pointers down is less than two then reset diff tracker\n    if (evCache.length < 2) prevDiff = -1;\n  }\n\n  function remove_event(ev) {\n    // Remove this event from the target's cache\n    for (var i = 0; i < evCache.length; i++) {\n      if (evCache[i].pointerId == ev.pointerId) {\n        evCache.splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  circle.addEventListener('pointerdown', pointerdown_handler);\n  circle.addEventListener('pointermove', pointermove_handler);\n  circle.addEventListener('pointerup', pointerup_handler);\n  circle.addEventListener('pointecancel', pointerup_handler);\n  circle.addEventListener('pointerout', pointerup_handler);\n  circle.addEventListener('pointerleave', pointerup_handler);\n});\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas);\n    global.pinchWithPointer = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas) {\n  \"use strict\";\n\n  /**\n   * Implements Pinch zoom gestures with PointerEvent\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Pointer_events/Pinch_zoom_gestures\n   */\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 300,\n    height: 300,\n    renderer: canvasRenderer\n  }); // add a circle to canvas\n\n  var circle = new _g.Circle({\n    style: {\n      cx: 200,\n      cy: 200,\n      r: 200,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4\n    }\n  });\n  var text = new _g.Text({\n    style: {\n      x: -150,\n      y: -100,\n      fill: 'black',\n      text: 'Pinch',\n      wordWrap: true,\n      wordWrapWidth: 160,\n      pointerEvents: 'none'\n    }\n  });\n  circle.appendChild(text);\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    canvas.appendChild(circle); // Global vars to cache event state\n\n    var evCache = new Array();\n    var prevDiff = -1;\n\n    function log(prefix, ev) {\n      text.style.text = prefix + ': pointerID = ' + ev.pointerId + ' ; pointerType = ' + ev.pointerType + ' ; isPrimary = ' + ev.isPrimary;\n    }\n\n    function pointerdown_handler(ev) {\n      // The pointerdown event signals the start of a touch interaction.\n      // This event is cached to support 2-finger gestures\n      evCache.push({\n        pointerId: ev.pointerId,\n        clientX: ev.clientX,\n        clientY: ev.clientY\n      });\n      log('pointerDown', ev);\n    }\n\n    function pointermove_handler(ev) {\n      // This function implements a 2-pointer horizontal pinch/zoom gesture.\n      //\n      // If the distance between the two pointers has increased (zoom in),\n      // the taget element's background is changed to \"pink\" and if the\n      // distance is decreasing (zoom out), the color is changed to \"lightblue\".\n      //\n      // This function sets the target element's border to \"dashed\" to visually\n      // indicate the pointer's target received a move event.\n      log('pointerMove', ev); // ev.target.style.border = 'dashed';\n      // Find this event in the cache and update its record with this event\n\n      for (var i = 0; i < evCache.length; i++) {\n        if (ev.pointerId == evCache[i].pointerId) {\n          evCache[i] = {\n            pointerId: ev.pointerId,\n            clientX: ev.clientX,\n            clientY: ev.clientY\n          };\n          break;\n        }\n      } // If two pointers are down, check for pinch gestures\n\n\n      if (evCache.length == 2) {\n        // Calculate the distance between the two pointers\n        var curDiff = Math.abs(evCache[0].clientX - evCache[1].clientX);\n\n        if (prevDiff > 0) {\n          if (curDiff > prevDiff) {\n            // The distance between the two pointers has increased\n            log('Pinch moving OUT -> Zoom in', ev);\n            ev.target.style.fill = 'pink';\n          }\n\n          if (curDiff < prevDiff) {\n            // The distance between the two pointers has decreased\n            log('Pinch moving IN -> Zoom out', ev);\n            ev.target.style.fill = 'lightblue';\n          }\n        } // Cache the distance for the next move event\n\n\n        prevDiff = curDiff;\n      }\n    }\n\n    function pointerup_handler(ev) {\n      log(ev.type, ev); // Remove this pointer from the cache and reset the target's\n      // background and border\n\n      remove_event(ev);\n      ev.target.style.fill = '#1890FF'; // If the number of pointers down is less than two then reset diff tracker\n\n      if (evCache.length < 2) prevDiff = -1;\n    }\n\n    function remove_event(ev) {\n      // Remove this event from the target's cache\n      for (var i = 0; i < evCache.length; i++) {\n        if (evCache[i].pointerId == ev.pointerId) {\n          evCache.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    circle.addEventListener('pointerdown', pointerdown_handler);\n    circle.addEventListener('pointermove', pointermove_handler);\n    circle.addEventListener('pointerup', pointerup_handler);\n    circle.addEventListener('pointecancel', pointerup_handler);\n    circle.addEventListener('pointerout', pointerup_handler);\n    circle.addEventListener('pointerleave', pointerup_handler);\n  });\n});"},{"relativePath":"event/demo/touch.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/event/demo/touch.js","order":14,"filename":"touch.js","title":{"zh":"TouchEvents","en":"TouchEvents"},"source":"import { Canvas, CanvasEvent, Circle } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\n// add a circle to canvas\nconst circle = new Circle({\n  style: {\n    cx: 300,\n    cy: 200,\n    r: 100,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 4,\n  },\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  canvas.appendChild(circle);\n\n  circle.addEventListener('touchstart', function (e) {\n    console.log('touchstart');\n    circle.style.fill = '#2FC25B';\n  });\n\n  circle.addEventListener('touchmove', (e) => {\n    console.log('touchmove');\n  });\n\n  circle.addEventListener('touchend', function (e) {\n    console.log('touchend');\n    circle.style.fill = '#1890FF';\n  });\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.touch = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  }); // add a circle to canvas\n\n  var circle = new _g.Circle({\n    style: {\n      cx: 300,\n      cy: 200,\n      r: 100,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4\n    }\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    canvas.appendChild(circle);\n    circle.addEventListener('touchstart', function (e) {\n      console.log('touchstart');\n      circle.style.fill = '#2FC25B';\n    });\n    circle.addEventListener('touchmove', function (e) {\n      console.log('touchmove');\n    });\n    circle.addEventListener('touchend', function (e) {\n      console.log('touchend');\n      circle.style.fill = '#1890FF';\n    });\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n});"},{"relativePath":"event/demo/shapes.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/event/demo/shapes.js","order":5,"filename":"shapes.js","title":{"zh":"多种图形拾取","en":"Multiple shapes picking"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*D7xLQp4L4VoAAAAAAAAAAAAAARQnAQ","source":"import {\n  Canvas,\n  CanvasEvent,\n  Circle,\n  Ellipse,\n  Image,\n  Line,\n  Path,\n  Polygon,\n  Polyline,\n  Rect,\n  Text,\n} from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst svgRenderer = new SVGRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst webgpuRenderer = new WebGPURenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf',\n    },\n    {\n      name: 'sans-serif',\n      url: '/NotoSansCJKsc-VF.ttf',\n    },\n  ],\n});\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\nconst circle = new Circle({\n  style: {\n    r: 50,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 4,\n    cursor: 'pointer',\n  },\n});\nconst ellipse = new Ellipse({\n  style: {\n    rx: 60,\n    ry: 80,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 4,\n    cursor: 'pointer',\n  },\n});\nconst rect = new Rect({\n  style: {\n    width: 80,\n    height: 60,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 4,\n    radius: 8,\n    cursor: 'pointer',\n  },\n});\nconst image = new Image({\n  style: {\n    width: 100,\n    height: 100,\n    img: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ',\n    cursor: 'pointer',\n  },\n});\nconst line = new Line({\n  style: {\n    x1: 0,\n    y1: 0,\n    x2: 200,\n    y2: 0,\n    stroke: '#1890FF',\n    lineWidth: 10,\n    cursor: 'pointer',\n  },\n});\nconst polyline = new Polyline({\n  style: {\n    points: [\n      [50, 50],\n      [100, 50],\n      [100, 100],\n      [150, 100],\n      [150, 150],\n      [200, 150],\n      [200, 200],\n      [250, 200],\n    ],\n    stroke: '#1890FF',\n    lineWidth: 10,\n    cursor: 'pointer',\n  },\n});\nconst path = new Path({\n  style: {\n    path:\n      'M 100,300' +\n      'l 50,-25' +\n      'a25,25 -30 0,1 50,-25' +\n      'l 50,-25' +\n      'a25,50 -30 0,1 50,-25' +\n      'l 50,-25' +\n      'a25,75 -30 0,1 50,-25' +\n      'l 50,-25' +\n      'a25,100 -30 0,1 50,-25' +\n      'l 50,-25' +\n      'l 0, 200,' +\n      'z',\n    lineWidth: 10,\n    lineJoin: 'round',\n    stroke: '#1890FF',\n    cursor: 'pointer',\n  },\n});\nconst polygon = new Polygon({\n  style: {\n    points: [\n      [200, 100],\n      [400, 100],\n      [400 + 200 * Math.sin(Math.PI / 6), 100 + 200 * Math.cos(Math.PI / 6)],\n      [400, 100 + 200 * Math.cos(Math.PI / 6) * 2],\n      [200, 100 + 200 * Math.cos(Math.PI / 6) * 2],\n      [200 - 200 * Math.sin(Math.PI / 6), 100 + 200 * Math.cos(Math.PI / 6)],\n    ],\n    stroke: '#1890FF',\n    fill: '#1890FF',\n    lineWidth: 10,\n    cursor: 'pointer',\n  },\n});\nconst text = new Text({\n  style: {\n    fontFamily: 'PingFang SC',\n    text: '这是测试文本',\n    fontSize: 40,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 5,\n    cursor: 'pointer',\n  },\n});\nconst clippedText = new Text({\n  style: {\n    fontFamily: 'PingFang SC',\n    text: '这是测试文本',\n    fontSize: 40,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 5,\n    clipPath: new Circle({\n      style: {\n        cx: 20,\n        cy: -10,\n        r: 20,\n      },\n    }),\n    cursor: 'pointer',\n  },\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  circle.setPosition(100, 100);\n  canvas.appendChild(circle);\n\n  ellipse.setPosition(220, 100);\n  canvas.appendChild(ellipse);\n\n  rect.setPosition(300, 100);\n  canvas.appendChild(rect);\n\n  image.setPosition(400, 100);\n  canvas.appendChild(image);\n\n  line.setPosition(100, 200);\n  canvas.appendChild(line);\n\n  polyline.setPosition(0, 200);\n  polyline.rotate(20);\n  canvas.appendChild(polyline);\n\n  path.setPosition(160, 200);\n  path.rotate(20);\n  path.scale(0.5);\n  canvas.appendChild(path);\n\n  polygon.setPosition(340, 200);\n  polygon.scale(0.3);\n  canvas.appendChild(polygon);\n\n  text.setPosition(160, 450);\n  canvas.appendChild(text);\n\n  clippedText.setPosition(160, 500);\n  canvas.appendChild(clippedText);\n\n  circle.addEventListener('mouseenter', () => {\n    circle.style.fill = '#2FC25B';\n  });\n  circle.addEventListener('mouseleave', () => {\n    circle.style.fill = '#1890FF';\n  });\n  ellipse.addEventListener('mouseenter', () => {\n    ellipse.style.fill = '#2FC25B';\n  });\n  ellipse.addEventListener('mouseleave', () => {\n    ellipse.style.fill = '#1890FF';\n  });\n  rect.addEventListener('mouseenter', () => {\n    rect.style.fill = '#2FC25B';\n  });\n  rect.addEventListener('mouseleave', () => {\n    rect.style.fill = '#1890FF';\n  });\n  line.addEventListener('mouseenter', () => {\n    line.style.stroke = '#2FC25B';\n  });\n  line.addEventListener('mouseleave', () => {\n    line.style.stroke = '#1890FF';\n  });\n  polyline.addEventListener('mouseenter', () => {\n    polyline.style.stroke = '#2FC25B';\n  });\n  polyline.addEventListener('mouseleave', () => {\n    polyline.style.stroke = '#1890FF';\n  });\n  path.addEventListener('mouseenter', () => {\n    path.style.stroke = '#2FC25B';\n  });\n  path.addEventListener('mouseleave', () => {\n    path.style.stroke = '#1890FF';\n  });\n  polygon.addEventListener('mouseenter', () => {\n    polygon.style.stroke = '#2FC25B';\n  });\n  polygon.addEventListener('mouseleave', () => {\n    polygon.style.stroke = '#1890FF';\n  });\n  text.addEventListener('mouseenter', () => {\n    text.attr('stroke', '#2FC25B');\n  });\n  text.addEventListener('mouseleave', () => {\n    text.attr('stroke', '#F04864');\n  });\n  clippedText.addEventListener('mouseenter', () => {\n    clippedText.attr('stroke', '#2FC25B');\n  });\n  clippedText.addEventListener('mouseleave', () => {\n    clippedText.attr('stroke', '#F04864');\n  });\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener('afterrender', () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.shapes = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var webgpuRenderer = new _gWebgpu.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf'\n    }, {\n      name: 'sans-serif',\n      url: '/NotoSansCJKsc-VF.ttf'\n    }]\n  }); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  var circle = new _g.Circle({\n    style: {\n      r: 50,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n      cursor: 'pointer'\n    }\n  });\n  var ellipse = new _g.Ellipse({\n    style: {\n      rx: 60,\n      ry: 80,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n      cursor: 'pointer'\n    }\n  });\n  var rect = new _g.Rect({\n    style: {\n      width: 80,\n      height: 60,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n      radius: 8,\n      cursor: 'pointer'\n    }\n  });\n  var image = new _g.Image({\n    style: {\n      width: 100,\n      height: 100,\n      img: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ',\n      cursor: 'pointer'\n    }\n  });\n  var line = new _g.Line({\n    style: {\n      x1: 0,\n      y1: 0,\n      x2: 200,\n      y2: 0,\n      stroke: '#1890FF',\n      lineWidth: 10,\n      cursor: 'pointer'\n    }\n  });\n  var polyline = new _g.Polyline({\n    style: {\n      points: [[50, 50], [100, 50], [100, 100], [150, 100], [150, 150], [200, 150], [200, 200], [250, 200]],\n      stroke: '#1890FF',\n      lineWidth: 10,\n      cursor: 'pointer'\n    }\n  });\n  var path = new _g.Path({\n    style: {\n      path: 'M 100,300' + 'l 50,-25' + 'a25,25 -30 0,1 50,-25' + 'l 50,-25' + 'a25,50 -30 0,1 50,-25' + 'l 50,-25' + 'a25,75 -30 0,1 50,-25' + 'l 50,-25' + 'a25,100 -30 0,1 50,-25' + 'l 50,-25' + 'l 0, 200,' + 'z',\n      lineWidth: 10,\n      lineJoin: 'round',\n      stroke: '#1890FF',\n      cursor: 'pointer'\n    }\n  });\n  var polygon = new _g.Polygon({\n    style: {\n      points: [[200, 100], [400, 100], [400 + 200 * Math.sin(Math.PI / 6), 100 + 200 * Math.cos(Math.PI / 6)], [400, 100 + 200 * Math.cos(Math.PI / 6) * 2], [200, 100 + 200 * Math.cos(Math.PI / 6) * 2], [200 - 200 * Math.sin(Math.PI / 6), 100 + 200 * Math.cos(Math.PI / 6)]],\n      stroke: '#1890FF',\n      fill: '#1890FF',\n      lineWidth: 10,\n      cursor: 'pointer'\n    }\n  });\n  var text = new _g.Text({\n    style: {\n      fontFamily: 'PingFang SC',\n      text: '这是测试文本',\n      fontSize: 40,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 5,\n      cursor: 'pointer'\n    }\n  });\n  var clippedText = new _g.Text({\n    style: {\n      fontFamily: 'PingFang SC',\n      text: '这是测试文本',\n      fontSize: 40,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 5,\n      clipPath: new _g.Circle({\n        style: {\n          cx: 20,\n          cy: -10,\n          r: 20\n        }\n      }),\n      cursor: 'pointer'\n    }\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    circle.setPosition(100, 100);\n    canvas.appendChild(circle);\n    ellipse.setPosition(220, 100);\n    canvas.appendChild(ellipse);\n    rect.setPosition(300, 100);\n    canvas.appendChild(rect);\n    image.setPosition(400, 100);\n    canvas.appendChild(image);\n    line.setPosition(100, 200);\n    canvas.appendChild(line);\n    polyline.setPosition(0, 200);\n    polyline.rotate(20);\n    canvas.appendChild(polyline);\n    path.setPosition(160, 200);\n    path.rotate(20);\n    path.scale(0.5);\n    canvas.appendChild(path);\n    polygon.setPosition(340, 200);\n    polygon.scale(0.3);\n    canvas.appendChild(polygon);\n    text.setPosition(160, 450);\n    canvas.appendChild(text);\n    clippedText.setPosition(160, 500);\n    canvas.appendChild(clippedText);\n    circle.addEventListener('mouseenter', function () {\n      circle.style.fill = '#2FC25B';\n    });\n    circle.addEventListener('mouseleave', function () {\n      circle.style.fill = '#1890FF';\n    });\n    ellipse.addEventListener('mouseenter', function () {\n      ellipse.style.fill = '#2FC25B';\n    });\n    ellipse.addEventListener('mouseleave', function () {\n      ellipse.style.fill = '#1890FF';\n    });\n    rect.addEventListener('mouseenter', function () {\n      rect.style.fill = '#2FC25B';\n    });\n    rect.addEventListener('mouseleave', function () {\n      rect.style.fill = '#1890FF';\n    });\n    line.addEventListener('mouseenter', function () {\n      line.style.stroke = '#2FC25B';\n    });\n    line.addEventListener('mouseleave', function () {\n      line.style.stroke = '#1890FF';\n    });\n    polyline.addEventListener('mouseenter', function () {\n      polyline.style.stroke = '#2FC25B';\n    });\n    polyline.addEventListener('mouseleave', function () {\n      polyline.style.stroke = '#1890FF';\n    });\n    path.addEventListener('mouseenter', function () {\n      path.style.stroke = '#2FC25B';\n    });\n    path.addEventListener('mouseleave', function () {\n      path.style.stroke = '#1890FF';\n    });\n    polygon.addEventListener('mouseenter', function () {\n      polygon.style.stroke = '#2FC25B';\n    });\n    polygon.addEventListener('mouseleave', function () {\n      polygon.style.stroke = '#1890FF';\n    });\n    text.addEventListener('mouseenter', function () {\n      text.attr('stroke', '#2FC25B');\n    });\n    text.addEventListener('mouseleave', function () {\n      text.attr('stroke', '#F04864');\n    });\n    clippedText.addEventListener('mouseenter', function () {\n      clippedText.attr('stroke', '#2FC25B');\n    });\n    clippedText.addEventListener('mouseleave', function () {\n      clippedText.attr('stroke', '#F04864');\n    });\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener('afterrender', function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n});"},{"relativePath":"ecosystem/demo/d3-annotation.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/ecosystem/demo/d3-annotation.js","order":8,"filename":"d3-annotation.js","title":{"zh":"D3 标注","en":"D3's Annotation"},"source":"import { Canvas, CanvasEvent } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Plugin as PluginCSSSelect } from '@antv/g-plugin-css-select';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as d3 from 'd3';\nimport * as d3SvgAnnotation from 'd3-svg-annotation';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\nObject.assign(d3, d3SvgAnnotation);\n\n/**\n * inspired by sprite.js\n * @see http://spritejs.com/#/en/guide/d3\n *\n * ported from https://d3-annotation.susielu.com/\n * @see https://bl.ocks.org/susielu/974e41473737320f8db5ae711ded8542\n */\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\nconst cssSelectPlugin = new PluginCSSSelect();\n\ncanvasRenderer.registerPlugin(cssSelectPlugin);\nwebglRenderer.registerPlugin(cssSelectPlugin);\nsvgRenderer.registerPlugin(cssSelectPlugin);\nwebgpuRenderer.registerPlugin(cssSelectPlugin);\ncanvaskitRenderer.registerPlugin(cssSelectPlugin);\n\n// create chart dimensions\nconst margin = { top: 20, right: 20, bottom: 30, left: 50 },\n  height = 500 - margin.top - margin.bottom;\nconst maxWidth = 860 - margin.left - margin.right;\nlet width = 860 - margin.left - margin.right;\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 960,\n  height: height + margin.top + margin.bottom,\n  renderer: canvasRenderer,\n});\n\nconst drawBars = async () => {\n  const wrapper = d3.select(\n    canvas.document.documentElement, // use GCanvas' document element instead of a real DOM\n  );\n\n  const svg = wrapper\n    .append('g')\n    .style('transform', `translate(${margin.left}px, ${margin.top}px)`);\n\n  const parseTime = d3.timeParse('%d-%b-%y');\n  const x = d3.scaleTime().range([0, width]);\n  const y = d3.scaleLinear().range([height, 0]);\n\n  const valueline = d3\n    .line()\n    .x((d) => x(d.date))\n    .y((d) => y(d.close));\n\n  const data = await d3.json(\n    'https://gw.alipayobjects.com/os/bmw-prod/e5e0e405-e0b0-4585-a10d-caf6b657dc9f.json',\n  );\n\n  data.forEach(function (d) {\n    d.date = parseTime(d.date);\n    d.close = +d.close;\n  });\n\n  x.domain(d3.extent(data, (d) => d.date));\n  y.domain([0, d3.max(data, (d) => d.close)]);\n\n  svg\n    .append('path')\n    .data([data])\n    .attr('class', 'line')\n    .attr('d', valueline)\n    .style('stroke', 'black')\n    .style('stroke-width', '1px');\n\n  svg\n    .append('g')\n    .attr('class', 'x-axis')\n    .attr('transform', 'translate(0,' + height + ')')\n    .call(d3.axisBottom(x));\n\n  svg.append('g').call(d3.axisLeft(y));\n\n  //Add annotations\n  const labels = [\n    {\n      data: { date: '9-Apr-12', close: 636.23 },\n      dy: 37,\n      dx: -142,\n      subject: { text: 'C', y: 'bottom' },\n      id: 'minimize-badge',\n    },\n    {\n      data: { date: '26-Feb-08', close: 119.15 },\n      dy: -137,\n      dx: 0,\n      note: { align: 'middle' },\n      subject: { text: 'A', y: 'bottom' },\n      id: 'minimize-badge',\n    },\n    {\n      data: { date: '18-Sep-09', close: 185.02 },\n      dy: 37,\n      dx: 42,\n      subject: { text: 'B' },\n      id: 'minimize-badge',\n    },\n  ].map((l) => {\n    l.note = Object.assign({}, l.note, {\n      title: `Close: ${l.data.close}`,\n      label: `${l.data.date}`,\n    });\n    return l;\n  });\n\n  //using a separate type of annotation to control the resize functionality\n  const resize = [\n    {\n      subject: {\n        y1: 0,\n        y2: height,\n      },\n      x: width,\n      dx: 10,\n      dy: height / 2,\n      disable: ['connector'],\n      note: {\n        title: '< >',\n        label: 'drag to resize',\n        lineType: 'none',\n      },\n    },\n  ];\n\n  const timeFormat = d3.timeFormat('%d-%b-%y');\n\n  window.makeAnnotations = d3\n    .annotation()\n    .annotations(labels)\n    .type(d3.annotationCalloutElbow)\n    .accessors({ x: (d) => x(parseTime(d.date)), y: (d) => y(d.close) })\n    .accessorsInverse({\n      date: (d) => timeFormat(x.invert(d.x)),\n      close: (d) => y.invert(d.y),\n    })\n    .on('subjectover', function (annotation) {\n      //cannot reference this if you are using es6 function syntax\n      this.append('text')\n        .attr('class', 'hover')\n        .text(annotation.note.title)\n        .attr('text-anchor', 'middle')\n        .attr('y', annotation.subject.y && annotation.subject.y == 'bottom' ? 50 : -40)\n        .attr('x', -15);\n\n      this.append('text')\n        .attr('class', 'hover')\n        .text(annotation.note.label)\n        .attr('text-anchor', 'middle')\n        .attr('y', annotation.subject.y && annotation.subject.y == 'bottom' ? 70 : -60)\n        .attr('x', -15);\n    })\n    .on('subjectout', function (annotation) {\n      this.selectAll('text.hover').remove();\n    });\n\n  //Isn't using data for placement so accessors and accessorsInverse\n  //are not necessary\n  window.makeResize = d3.annotation().annotations(resize).type(d3.annotationXYThreshold);\n\n  svg.append('g').attr('class', 'annotation-test').call(makeAnnotations);\n\n  svg.append('g').attr('class', 'annotation-resize').call(makeResize);\n\n  svg.select('.annotation.xythreshold').call(\n    d3.drag().on('drag', function (d) {\n      const newWidth = Math.max(0, Math.min(maxWidth, d.x + d.dx));\n      // d.x = newWidth;\n\n      const threshold = 400;\n      if (newWidth < threshold && width >= threshold) {\n        makeAnnotations.type(d3.annotationBadge);\n        svg.select('g.annotation-test').call(makeAnnotations);\n      } else if (newWidth > threshold && width <= threshold) {\n        makeAnnotations.type(d3.annotationCalloutElbow);\n        svg.select('g.annotation-test').call(makeAnnotations);\n      }\n\n      width = newWidth;\n\n      x.range([0, width]);\n      makeAnnotations.updatedAccessors();\n      makeResize.updatedAccessors();\n\n      svg.select('g.x-axis').call(d3.axisBottom(x));\n\n      svg.select('path.line').attr('d', valueline);\n    }),\n  );\n\n  // load font\n  // const latoFontFace = new FontFace(\n  //   'Lato',\n  //   'url(https://fonts.gstatic.com/s/lato/v22/S6u9w4BMUTPHh7USSwaPGQ3q5d0N7w.woff2)',\n  // );\n  // window.document.fonts.add(latoFontFace);\n  // latoFontFace.loaded.then((fontFace) => {\n  //   console.log(fontFace.family);\n  //   canvas.document.documentElement.style.fontFamily = 'Lato';\n  // });\n\n  var bitterFontFace = new FontFace(\n    'Lato',\n    'url(https://fonts.gstatic.com/s/lato/v22/S6u9w4BMUTPHh7USSwaPGQ3q5d0N7w.woff2)',\n  );\n  document.fonts.add(bitterFontFace);\n  bitterFontFace.loaded.then((fontFace) => {\n    console.log(fontFace.family);\n  });\n\n  document.fonts.ready.then(function () {\n    for (const c of document.fonts.values()) {\n      console.log(c);\n    }\n\n    canvas.document.documentElement.style.fontFamily = 'Lato';\n  });\n\n  // apply CSS styles\n  canvas.document.querySelectorAll('.annotation path').forEach((path) => {\n    path.style.stroke = '#E8336D';\n  });\n\n  canvas.document.querySelectorAll('.annotation-note-title').forEach((title) => {\n    title.style['font-weight'] = 'bold';\n  });\n\n  const handle = canvas.document.querySelector('.annotation.xythreshold');\n  handle.style.cursor = 'move';\n  // console.log(t, svg.selectAll('.annotation path'));\n};\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  drawBars();\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-plugin-css-select\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"d3\", \"d3-svg-annotation\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-plugin-css-select\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"d3\"), require(\"d3-svg-annotation\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gPluginCssSelect, global.gSvg, global.gWebgl, global.gWebgpu, global.d3, global.d3SvgAnnotation, global.lilGui, global.stats);\n    global.d3Annotation = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gPluginCssSelect, _gSvg, _gWebgl, _gWebgpu, d3, d3SvgAnnotation, lil, _stats) {\n  \"use strict\";\n\n  d3 = _interopRequireWildcard(d3);\n  d3SvgAnnotation = _interopRequireWildcard(d3SvgAnnotation);\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  Object.assign(d3, d3SvgAnnotation);\n  /**\n   * inspired by sprite.js\n   * @see http://spritejs.com/#/en/guide/d3\n   *\n   * ported from https://d3-annotation.susielu.com/\n   * @see https://bl.ocks.org/susielu/974e41473737320f8db5ae711ded8542\n   */\n  // create a renderer\n\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer();\n  var cssSelectPlugin = new _gPluginCssSelect.Plugin();\n  canvasRenderer.registerPlugin(cssSelectPlugin);\n  webglRenderer.registerPlugin(cssSelectPlugin);\n  svgRenderer.registerPlugin(cssSelectPlugin);\n  webgpuRenderer.registerPlugin(cssSelectPlugin);\n  canvaskitRenderer.registerPlugin(cssSelectPlugin); // create chart dimensions\n\n  var margin = {\n    top: 20,\n    right: 20,\n    bottom: 30,\n    left: 50\n  },\n      height = 500 - margin.top - margin.bottom;\n  var maxWidth = 860 - margin.left - margin.right;\n  var width = 860 - margin.left - margin.right; // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 960,\n    height: height + margin.top + margin.bottom,\n    renderer: canvasRenderer\n  });\n\n  var drawBars = async function drawBars() {\n    var wrapper = d3.select(canvas.document.documentElement // use GCanvas' document element instead of a real DOM\n    );\n    var svg = wrapper.append('g').style('transform', \"translate(\".concat(margin.left, \"px, \").concat(margin.top, \"px)\"));\n    var parseTime = d3.timeParse('%d-%b-%y');\n\n    var _x = d3.scaleTime().range([0, width]);\n\n    var _y = d3.scaleLinear().range([height, 0]);\n\n    var valueline = d3.line().x(function (d) {\n      return _x(d.date);\n    }).y(function (d) {\n      return _y(d.close);\n    });\n    var data = await d3.json('https://gw.alipayobjects.com/os/bmw-prod/e5e0e405-e0b0-4585-a10d-caf6b657dc9f.json');\n    data.forEach(function (d) {\n      d.date = parseTime(d.date);\n      d.close = +d.close;\n    });\n\n    _x.domain(d3.extent(data, function (d) {\n      return d.date;\n    }));\n\n    _y.domain([0, d3.max(data, function (d) {\n      return d.close;\n    })]);\n\n    svg.append('path').data([data]).attr('class', 'line').attr('d', valueline).style('stroke', 'black').style('stroke-width', '1px');\n    svg.append('g').attr('class', 'x-axis').attr('transform', 'translate(0,' + height + ')').call(d3.axisBottom(_x));\n    svg.append('g').call(d3.axisLeft(_y)); //Add annotations\n\n    var labels = [{\n      data: {\n        date: '9-Apr-12',\n        close: 636.23\n      },\n      dy: 37,\n      dx: -142,\n      subject: {\n        text: 'C',\n        y: 'bottom'\n      },\n      id: 'minimize-badge'\n    }, {\n      data: {\n        date: '26-Feb-08',\n        close: 119.15\n      },\n      dy: -137,\n      dx: 0,\n      note: {\n        align: 'middle'\n      },\n      subject: {\n        text: 'A',\n        y: 'bottom'\n      },\n      id: 'minimize-badge'\n    }, {\n      data: {\n        date: '18-Sep-09',\n        close: 185.02\n      },\n      dy: 37,\n      dx: 42,\n      subject: {\n        text: 'B'\n      },\n      id: 'minimize-badge'\n    }].map(function (l) {\n      l.note = Object.assign({}, l.note, {\n        title: \"Close: \".concat(l.data.close),\n        label: \"\".concat(l.data.date)\n      });\n      return l;\n    }); //using a separate type of annotation to control the resize functionality\n\n    var resize = [{\n      subject: {\n        y1: 0,\n        y2: height\n      },\n      x: width,\n      dx: 10,\n      dy: height / 2,\n      disable: ['connector'],\n      note: {\n        title: '< >',\n        label: 'drag to resize',\n        lineType: 'none'\n      }\n    }];\n    var timeFormat = d3.timeFormat('%d-%b-%y');\n    window.makeAnnotations = d3.annotation().annotations(labels).type(d3.annotationCalloutElbow).accessors({\n      x: function x(d) {\n        return _x(parseTime(d.date));\n      },\n      y: function y(d) {\n        return _y(d.close);\n      }\n    }).accessorsInverse({\n      date: function date(d) {\n        return timeFormat(_x.invert(d.x));\n      },\n      close: function close(d) {\n        return _y.invert(d.y);\n      }\n    }).on('subjectover', function (annotation) {\n      //cannot reference this if you are using es6 function syntax\n      this.append('text').attr('class', 'hover').text(annotation.note.title).attr('text-anchor', 'middle').attr('y', annotation.subject.y && annotation.subject.y == 'bottom' ? 50 : -40).attr('x', -15);\n      this.append('text').attr('class', 'hover').text(annotation.note.label).attr('text-anchor', 'middle').attr('y', annotation.subject.y && annotation.subject.y == 'bottom' ? 70 : -60).attr('x', -15);\n    }).on('subjectout', function (annotation) {\n      this.selectAll('text.hover').remove();\n    }); //Isn't using data for placement so accessors and accessorsInverse\n    //are not necessary\n\n    window.makeResize = d3.annotation().annotations(resize).type(d3.annotationXYThreshold);\n    svg.append('g').attr('class', 'annotation-test').call(makeAnnotations);\n    svg.append('g').attr('class', 'annotation-resize').call(makeResize);\n    svg.select('.annotation.xythreshold').call(d3.drag().on('drag', function (d) {\n      var newWidth = Math.max(0, Math.min(maxWidth, d.x + d.dx)); // d.x = newWidth;\n\n      var threshold = 400;\n\n      if (newWidth < threshold && width >= threshold) {\n        makeAnnotations.type(d3.annotationBadge);\n        svg.select('g.annotation-test').call(makeAnnotations);\n      } else if (newWidth > threshold && width <= threshold) {\n        makeAnnotations.type(d3.annotationCalloutElbow);\n        svg.select('g.annotation-test').call(makeAnnotations);\n      }\n\n      width = newWidth;\n\n      _x.range([0, width]);\n\n      makeAnnotations.updatedAccessors();\n      makeResize.updatedAccessors();\n      svg.select('g.x-axis').call(d3.axisBottom(_x));\n      svg.select('path.line').attr('d', valueline);\n    })); // load font\n    // const latoFontFace = new FontFace(\n    //   'Lato',\n    //   'url(https://fonts.gstatic.com/s/lato/v22/S6u9w4BMUTPHh7USSwaPGQ3q5d0N7w.woff2)',\n    // );\n    // window.document.fonts.add(latoFontFace);\n    // latoFontFace.loaded.then((fontFace) => {\n    //   console.log(fontFace.family);\n    //   canvas.document.documentElement.style.fontFamily = 'Lato';\n    // });\n\n    var bitterFontFace = new FontFace('Lato', 'url(https://fonts.gstatic.com/s/lato/v22/S6u9w4BMUTPHh7USSwaPGQ3q5d0N7w.woff2)');\n    document.fonts.add(bitterFontFace);\n    bitterFontFace.loaded.then(function (fontFace) {\n      console.log(fontFace.family);\n    });\n    document.fonts.ready.then(function () {\n      var _iterator = _createForOfIteratorHelper(document.fonts.values()),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var c = _step.value;\n          console.log(c);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      canvas.document.documentElement.style.fontFamily = 'Lato';\n    }); // apply CSS styles\n\n    canvas.document.querySelectorAll('.annotation path').forEach(function (path) {\n      path.style.stroke = '#E8336D';\n    });\n    canvas.document.querySelectorAll('.annotation-note-title').forEach(function (title) {\n      title.style['font-weight'] = 'bold';\n    });\n    var handle = canvas.document.querySelector('.annotation.xythreshold');\n    handle.style.cursor = 'move'; // console.log(t, svg.selectAll('.annotation path'));\n  };\n\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    drawBars();\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n});"},{"relativePath":"ecosystem/demo/d3-barchart.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/ecosystem/demo/d3-barchart.js","order":3,"filename":"d3-barchart.js","title":{"zh":"替换 D3 渲染层 - 柱状图","en":"Takeover D3's rendering layer"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*h6vDS6eRVFoAAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as d3 from 'd3';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n/**\n * inspired by sprite.js\n * @see http://spritejs.com/#/en/guide/d3\n *\n * ported from fullstack-d3\n * @see https://codesandbox.io/s/vllpx?file=/chart.js\n */\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst svgRenderer = new SVGRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst webgpuRenderer = new WebGPURenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf',\n    },\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\nconst drawBars = async () => {\n  // 1. Access data\n  const dataset = await d3.json(\n    'https://gw.alipayobjects.com/os/bmw-prod/8e7cfeb6-28e5-4e78-8d16-c08468360f5f.json',\n  );\n  const metricAccessor = (d) => d.humidity;\n  const yAccessor = (d) => d.length;\n\n  // 2. Create chart dimensions\n  const width = 600;\n  let dimensions = {\n    width: width,\n    height: width * 0.6,\n    margin: {\n      top: 30,\n      right: 10,\n      bottom: 50,\n      left: 50,\n    },\n  };\n  dimensions.boundedWidth = dimensions.width - dimensions.margin.left - dimensions.margin.right;\n  dimensions.boundedHeight = dimensions.height - dimensions.margin.top - dimensions.margin.bottom;\n\n  // 3. Draw canvas\n  const wrapper = d3.select(\n    canvas.document.documentElement, // use GCanvas' document element instead of a real DOM\n  );\n\n  const bounds = wrapper\n    .append('g')\n    .style('transform', `translate(${dimensions.margin.left}px, ${dimensions.margin.top}px)`);\n\n  // 4. Create scales\n\n  const xScale = d3\n    .scaleLinear()\n    .domain(d3.extent(dataset, metricAccessor))\n    .range([0, dimensions.boundedWidth])\n    .nice();\n\n  const binsGenerator = d3.bin().domain(xScale.domain()).value(metricAccessor).thresholds(12);\n\n  const bins = binsGenerator(dataset);\n\n  const yScale = d3\n    .scaleLinear()\n    .domain([0, d3.max(bins, yAccessor)])\n    .range([dimensions.boundedHeight, 0])\n    .nice();\n\n  // 5. Draw data\n  const binsGroup = bounds.append('g');\n  const binGroups = binsGroup.selectAll('g').data(bins).join('g').attr('class', 'bin');\n\n  const barPadding = 1;\n  const barRects = binGroups\n    .append('rect')\n    .attr('x', (d) => xScale(d.x0) + barPadding / 2)\n    .attr('y', (d) => yScale(yAccessor(d)))\n    .attr('width', (d) => d3.max([0, xScale(d.x1) - xScale(d.x0) - barPadding]))\n    .attr('height', (d) => dimensions.boundedHeight - yScale(yAccessor(d)))\n    .attr('fill', 'cornflowerblue')\n    .on('mouseenter', function (e) {\n      d3.select(e.target).attr('fill', 'red');\n    })\n    .on('mouseleave', function (e) {\n      d3.select(e.target).attr('fill', 'cornflowerblue');\n    });\n\n  const barText = binGroups\n    .filter(yAccessor)\n    .append('text')\n    .attr('x', (d) => xScale(d.x0) + (xScale(d.x1) - xScale(d.x0)) / 2)\n    .attr('y', (d) => yScale(yAccessor(d)) - 5)\n    .text(yAccessor)\n    .attr('fill', 'darkgrey')\n    .style('text-anchor', 'middle')\n    .style('font-size', '12px')\n    .style('font-family', 'sans-serif');\n\n  const mean = d3.mean(dataset, metricAccessor);\n  const meanLine = bounds\n    .append('line')\n    .attr('x1', xScale(mean))\n    .attr('x2', xScale(mean))\n    .attr('y1', -15)\n    .attr('y2', dimensions.boundedHeight)\n    .attr('stroke-width', 1)\n    .attr('stroke', 'maroon')\n    .attr('stroke-dasharray', '2px 4px');\n\n  const meanLabel = bounds\n    .append('text')\n    .attr('x', xScale(mean))\n    .attr('y', -20)\n    .text('mean')\n    .attr('fill', 'maroon')\n    .style('font-size', '12px')\n    .style('text-anchor', 'middle');\n\n  // 6. Draw peripherals\n  const xAxisGenerator = d3.axisBottom().scale(xScale);\n\n  const xAxis = bounds\n    .append('g')\n    .call(xAxisGenerator)\n    .attr('transform', `translateY(${dimensions.boundedHeight}px)`)\n    .attr('fill', 'black');\n\n  const xAxisLabel = xAxis\n    .append('text')\n    .attr('x', dimensions.boundedWidth / 2)\n    .attr('y', dimensions.margin.bottom - 10)\n    .attr('fill', 'black')\n    .style('font-size', '10px')\n    .text('Humidity')\n    .style('text-transform', 'capitalize');\n};\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  drawBars();\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"d3\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"d3\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.d3, global.lilGui, global.stats);\n    global.d3Barchart = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, d3, lil, _stats) {\n  \"use strict\";\n\n  d3 = _interopRequireWildcard(d3);\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * inspired by sprite.js\n   * @see http://spritejs.com/#/en/guide/d3\n   *\n   * ported from fullstack-d3\n   * @see https://codesandbox.io/s/vllpx?file=/chart.js\n   */\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var webgpuRenderer = new _gWebgpu.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf'\n    }, {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  }); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n\n  var drawBars = async function drawBars() {\n    // 1. Access data\n    var dataset = await d3.json('https://gw.alipayobjects.com/os/bmw-prod/8e7cfeb6-28e5-4e78-8d16-c08468360f5f.json');\n\n    var metricAccessor = function metricAccessor(d) {\n      return d.humidity;\n    };\n\n    var yAccessor = function yAccessor(d) {\n      return d.length;\n    }; // 2. Create chart dimensions\n\n\n    var width = 600;\n    var dimensions = {\n      width: width,\n      height: width * 0.6,\n      margin: {\n        top: 30,\n        right: 10,\n        bottom: 50,\n        left: 50\n      }\n    };\n    dimensions.boundedWidth = dimensions.width - dimensions.margin.left - dimensions.margin.right;\n    dimensions.boundedHeight = dimensions.height - dimensions.margin.top - dimensions.margin.bottom; // 3. Draw canvas\n\n    var wrapper = d3.select(canvas.document.documentElement // use GCanvas' document element instead of a real DOM\n    );\n    var bounds = wrapper.append('g').style('transform', \"translate(\".concat(dimensions.margin.left, \"px, \").concat(dimensions.margin.top, \"px)\")); // 4. Create scales\n\n    var xScale = d3.scaleLinear().domain(d3.extent(dataset, metricAccessor)).range([0, dimensions.boundedWidth]).nice();\n    var binsGenerator = d3.bin().domain(xScale.domain()).value(metricAccessor).thresholds(12);\n    var bins = binsGenerator(dataset);\n    var yScale = d3.scaleLinear().domain([0, d3.max(bins, yAccessor)]).range([dimensions.boundedHeight, 0]).nice(); // 5. Draw data\n\n    var binsGroup = bounds.append('g');\n    var binGroups = binsGroup.selectAll('g').data(bins).join('g').attr('class', 'bin');\n    var barPadding = 1;\n    var barRects = binGroups.append('rect').attr('x', function (d) {\n      return xScale(d.x0) + barPadding / 2;\n    }).attr('y', function (d) {\n      return yScale(yAccessor(d));\n    }).attr('width', function (d) {\n      return d3.max([0, xScale(d.x1) - xScale(d.x0) - barPadding]);\n    }).attr('height', function (d) {\n      return dimensions.boundedHeight - yScale(yAccessor(d));\n    }).attr('fill', 'cornflowerblue').on('mouseenter', function (e) {\n      d3.select(e.target).attr('fill', 'red');\n    }).on('mouseleave', function (e) {\n      d3.select(e.target).attr('fill', 'cornflowerblue');\n    });\n    var barText = binGroups.filter(yAccessor).append('text').attr('x', function (d) {\n      return xScale(d.x0) + (xScale(d.x1) - xScale(d.x0)) / 2;\n    }).attr('y', function (d) {\n      return yScale(yAccessor(d)) - 5;\n    }).text(yAccessor).attr('fill', 'darkgrey').style('text-anchor', 'middle').style('font-size', '12px').style('font-family', 'sans-serif');\n    var mean = d3.mean(dataset, metricAccessor);\n    var meanLine = bounds.append('line').attr('x1', xScale(mean)).attr('x2', xScale(mean)).attr('y1', -15).attr('y2', dimensions.boundedHeight).attr('stroke-width', 1).attr('stroke', 'maroon').attr('stroke-dasharray', '2px 4px');\n    var meanLabel = bounds.append('text').attr('x', xScale(mean)).attr('y', -20).text('mean').attr('fill', 'maroon').style('font-size', '12px').style('text-anchor', 'middle'); // 6. Draw peripherals\n\n    var xAxisGenerator = d3.axisBottom().scale(xScale);\n    var xAxis = bounds.append('g').call(xAxisGenerator).attr('transform', \"translateY(\".concat(dimensions.boundedHeight, \"px)\")).attr('fill', 'black');\n    var xAxisLabel = xAxis.append('text').attr('x', dimensions.boundedWidth / 2).attr('y', dimensions.margin.bottom - 10).attr('fill', 'black').style('font-size', '10px').text('Humidity').style('text-transform', 'capitalize');\n  };\n\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    drawBars();\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n});"},{"relativePath":"ecosystem/demo/d3-force-directed-graph.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/ecosystem/demo/d3-force-directed-graph.js","order":6,"filename":"d3-force-directed-graph.js","title":{"zh":"D3 力导","en":"D3's ForceDirectedGraph"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*PovRRJtsBMIAAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Plugin as PluginCSSSelect } from '@antv/g-plugin-css-select';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as d3 from 'd3';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n/**\n * ported from https://observablehq.com/@d3/force-directed-graph\n */\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst svgRenderer = new SVGRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst webgpuRenderer = new WebGPURenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf',\n    },\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\n\nconst cssSelectPlugin = new PluginCSSSelect();\n\ncanvasRenderer.registerPlugin(cssSelectPlugin);\nwebglRenderer.registerPlugin(cssSelectPlugin);\nwebgpuRenderer.registerPlugin(cssSelectPlugin);\ncanvaskitRenderer.registerPlugin(cssSelectPlugin);\nsvgRenderer.registerPlugin(cssSelectPlugin);\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 600,\n  renderer: canvasRenderer,\n});\n\n// Copyright 2021 Observable, Inc.\n// Released under the ISC license.\n// https://observablehq.com/@d3/force-directed-graph\nfunction ForceGraph(\n  {\n    nodes, // an iterable of node objects (typically [{id}, …])\n    links, // an iterable of link objects (typically [{source, target}, …])\n  },\n  {\n    nodeId = (d) => d.id, // given d in nodes, returns a unique identifier (string)\n    nodeGroup, // given d in nodes, returns an (ordinal) value for color\n    nodeGroups, // an array of ordinal values representing the node groups\n    nodeTitle, // given d in nodes, a title string\n    nodeFill = 'currentColor', // node stroke fill (if not using a group color encoding)\n    nodeStroke = '#fff', // node stroke color\n    nodeStrokeWidth = 1.5, // node stroke width, in pixels\n    nodeStrokeOpacity = 1, // node stroke opacity\n    nodeRadius = 5, // node radius, in pixels\n    nodeStrength,\n    linkSource = ({ source }) => source, // given d in links, returns a node identifier string\n    linkTarget = ({ target }) => target, // given d in links, returns a node identifier string\n    linkStroke = '#999', // link stroke color\n    linkStrokeOpacity = 0.6, // link stroke opacity\n    linkStrokeWidth = 1.5, // given d in links, returns a stroke width in pixels\n    linkStrokeLinecap = 'round', // link stroke linecap\n    linkStrength,\n    colors = d3.schemeTableau10, // an array of color strings, for the node groups\n    width = 640, // outer width, in pixels\n    height = 400, // outer height, in pixels\n    invalidation, // when this promise resolves, stop the simulation\n  } = {},\n) {\n  // Compute values.\n  const N = d3.map(nodes, nodeId).map(intern);\n  const LS = d3.map(links, linkSource).map(intern);\n  const LT = d3.map(links, linkTarget).map(intern);\n  if (nodeTitle === undefined) nodeTitle = (_, i) => N[i];\n  const T = nodeTitle == null ? null : d3.map(nodes, nodeTitle);\n  const G = nodeGroup == null ? null : d3.map(nodes, nodeGroup).map(intern);\n  const W = typeof linkStrokeWidth !== 'function' ? null : d3.map(links, linkStrokeWidth);\n  const L = typeof linkStroke !== 'function' ? null : d3.map(links, linkStroke);\n\n  // Replace the input nodes and links with mutable objects for the simulation.\n  nodes = d3.map(nodes, (_, i) => ({ id: N[i] }));\n  links = d3.map(links, (_, i) => ({ source: LS[i], target: LT[i] }));\n\n  // Compute default domains.\n  if (G && nodeGroups === undefined) nodeGroups = d3.sort(G);\n\n  // Construct the scales.\n  const color = nodeGroup == null ? null : d3.scaleOrdinal(nodeGroups, colors);\n\n  // Construct the forces.\n  const forceNode = d3.forceManyBody();\n  const forceLink = d3.forceLink(links).id(({ index: i }) => N[i]);\n  if (nodeStrength !== undefined) forceNode.strength(nodeStrength);\n  if (linkStrength !== undefined) forceLink.strength(linkStrength);\n\n  const simulation = d3\n    .forceSimulation(nodes)\n    .force('link', forceLink)\n    .force('charge', forceNode)\n    .force('center', d3.forceCenter())\n    .on('tick', ticked);\n\n  const wrapper = d3.select(\n    canvas.document.documentElement, // use GCanvas' document element instead of a real DOM\n  );\n\n  const svg = wrapper.append('g').style('transform', `translate(${width / 2}px, ${height / 2}px)`);\n\n  // const svg = d3\n  //   .create('svg')\n  //   .attr('width', width)\n  //   .attr('height', height)\n  //   .attr('viewBox', [-width / 2, -height / 2, width, height])\n  //   .attr('style', 'max-width: 100%; height: auto; height: intrinsic;');\n\n  const link = svg\n    .append('g')\n    .attr('stroke', typeof linkStroke !== 'function' ? linkStroke : null)\n    .attr('stroke-opacity', linkStrokeOpacity)\n    .attr('stroke-width', typeof linkStrokeWidth !== 'function' ? linkStrokeWidth : null)\n    .attr('stroke-linecap', linkStrokeLinecap)\n    .selectAll('line')\n    .data(links)\n    .join('line');\n\n  const node = svg\n    .append('g')\n    .attr('fill', nodeFill)\n    .attr('stroke', nodeStroke)\n    .attr('stroke-opacity', nodeStrokeOpacity)\n    .attr('stroke-width', nodeStrokeWidth)\n    .selectAll('circle')\n    .data(nodes)\n    .join('circle')\n    .attr('r', nodeRadius)\n    .call(drag(simulation));\n\n  if (W) link.attr('stroke-width', ({ index: i }) => W[i]);\n  if (L) link.attr('stroke', ({ index: i }) => L[i]);\n  if (G) node.attr('fill', ({ index: i }) => color(G[i]));\n  if (T) node.append('title').text(({ index: i }) => T[i]);\n  if (invalidation != null) invalidation.then(() => simulation.stop());\n\n  function intern(value) {\n    return value !== null && typeof value === 'object' ? value.valueOf() : value;\n  }\n\n  function ticked() {\n    link\n      .attr('x1', (d) => d.source.x)\n      .attr('y1', (d) => d.source.y)\n      .attr('x2', (d) => d.target.x)\n      .attr('y2', (d) => d.target.y);\n\n    node.attr('cx', (d) => d.x).attr('cy', (d) => d.y);\n  }\n\n  function drag(simulation) {\n    function dragstarted(event) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      event.subject.fx = event.subject.x;\n      event.subject.fy = event.subject.y;\n    }\n\n    function dragged(event) {\n      event.subject.fx = event.x;\n      event.subject.fy = event.y;\n    }\n\n    function dragended(event) {\n      if (!event.active) simulation.alphaTarget(0);\n      event.subject.fx = null;\n      event.subject.fy = null;\n    }\n\n    return d3.drag().on('start', dragstarted).on('drag', dragged).on('end', dragended);\n  }\n\n  return Object.assign(svg.node(), { scales: { color } });\n}\n\nconst miserables = {\n  nodes: [\n    { id: 'Myriel', group: 1 },\n    { id: 'Napoleon', group: 1 },\n    { id: 'Mlle.Baptistine', group: 1 },\n    { id: 'Mme.Magloire', group: 1 },\n    { id: 'CountessdeLo', group: 1 },\n    { id: 'Geborand', group: 1 },\n    { id: 'Champtercier', group: 1 },\n    { id: 'Cravatte', group: 1 },\n    { id: 'Count', group: 1 },\n    { id: 'OldMan', group: 1 },\n    { id: 'Labarre', group: 2 },\n    { id: 'Valjean', group: 2 },\n    { id: 'Marguerite', group: 3 },\n    { id: 'Mme.deR', group: 2 },\n    { id: 'Isabeau', group: 2 },\n    { id: 'Gervais', group: 2 },\n    { id: 'Tholomyes', group: 3 },\n    { id: 'Listolier', group: 3 },\n    { id: 'Fameuil', group: 3 },\n    { id: 'Blacheville', group: 3 },\n    { id: 'Favourite', group: 3 },\n    { id: 'Dahlia', group: 3 },\n    { id: 'Zephine', group: 3 },\n    { id: 'Fantine', group: 3 },\n    { id: 'Mme.Thenardier', group: 4 },\n    { id: 'Thenardier', group: 4 },\n    { id: 'Cosette', group: 5 },\n    { id: 'Javert', group: 4 },\n    { id: 'Fauchelevent', group: 0 },\n    { id: 'Bamatabois', group: 2 },\n    { id: 'Perpetue', group: 3 },\n    { id: 'Simplice', group: 2 },\n    { id: 'Scaufflaire', group: 2 },\n    { id: 'Woman1', group: 2 },\n    { id: 'Judge', group: 2 },\n    { id: 'Champmathieu', group: 2 },\n    { id: 'Brevet', group: 2 },\n    { id: 'Chenildieu', group: 2 },\n    { id: 'Cochepaille', group: 2 },\n    { id: 'Pontmercy', group: 4 },\n    { id: 'Boulatruelle', group: 6 },\n    { id: 'Eponine', group: 4 },\n    { id: 'Anzelma', group: 4 },\n    { id: 'Woman2', group: 5 },\n    { id: 'MotherInnocent', group: 0 },\n    { id: 'Gribier', group: 0 },\n    { id: 'Jondrette', group: 7 },\n    { id: 'Mme.Burgon', group: 7 },\n    { id: 'Gavroche', group: 8 },\n    { id: 'Gillenormand', group: 5 },\n    { id: 'Magnon', group: 5 },\n    { id: 'Mlle.Gillenormand', group: 5 },\n    { id: 'Mme.Pontmercy', group: 5 },\n    { id: 'Mlle.Vaubois', group: 5 },\n    { id: 'Lt.Gillenormand', group: 5 },\n    { id: 'Marius', group: 8 },\n    { id: 'BaronessT', group: 5 },\n    { id: 'Mabeuf', group: 8 },\n    { id: 'Enjolras', group: 8 },\n    { id: 'Combeferre', group: 8 },\n    { id: 'Prouvaire', group: 8 },\n    { id: 'Feuilly', group: 8 },\n    { id: 'Courfeyrac', group: 8 },\n    { id: 'Bahorel', group: 8 },\n    { id: 'Bossuet', group: 8 },\n    { id: 'Joly', group: 8 },\n    { id: 'Grantaire', group: 8 },\n    { id: 'MotherPlutarch', group: 9 },\n    { id: 'Gueulemer', group: 4 },\n    { id: 'Babet', group: 4 },\n    { id: 'Claquesous', group: 4 },\n    { id: 'Montparnasse', group: 4 },\n    { id: 'Toussaint', group: 5 },\n    { id: 'Child1', group: 10 },\n    { id: 'Child2', group: 10 },\n    { id: 'Brujon', group: 4 },\n    { id: 'Mme.Hucheloup', group: 8 },\n  ],\n  links: [\n    { source: 'Napoleon', target: 'Myriel', value: 1 },\n    { source: 'Mlle.Baptistine', target: 'Myriel', value: 8 },\n    { source: 'Mme.Magloire', target: 'Myriel', value: 10 },\n    { source: 'Mme.Magloire', target: 'Mlle.Baptistine', value: 6 },\n    { source: 'CountessdeLo', target: 'Myriel', value: 1 },\n    { source: 'Geborand', target: 'Myriel', value: 1 },\n    { source: 'Champtercier', target: 'Myriel', value: 1 },\n    { source: 'Cravatte', target: 'Myriel', value: 1 },\n    { source: 'Count', target: 'Myriel', value: 2 },\n    { source: 'OldMan', target: 'Myriel', value: 1 },\n    { source: 'Valjean', target: 'Labarre', value: 1 },\n    { source: 'Valjean', target: 'Mme.Magloire', value: 3 },\n    { source: 'Valjean', target: 'Mlle.Baptistine', value: 3 },\n    { source: 'Valjean', target: 'Myriel', value: 5 },\n    { source: 'Marguerite', target: 'Valjean', value: 1 },\n    { source: 'Mme.deR', target: 'Valjean', value: 1 },\n    { source: 'Isabeau', target: 'Valjean', value: 1 },\n    { source: 'Gervais', target: 'Valjean', value: 1 },\n    { source: 'Listolier', target: 'Tholomyes', value: 4 },\n    { source: 'Fameuil', target: 'Tholomyes', value: 4 },\n    { source: 'Fameuil', target: 'Listolier', value: 4 },\n    { source: 'Blacheville', target: 'Tholomyes', value: 4 },\n    { source: 'Blacheville', target: 'Listolier', value: 4 },\n    { source: 'Blacheville', target: 'Fameuil', value: 4 },\n    { source: 'Favourite', target: 'Tholomyes', value: 3 },\n    { source: 'Favourite', target: 'Listolier', value: 3 },\n    { source: 'Favourite', target: 'Fameuil', value: 3 },\n    { source: 'Favourite', target: 'Blacheville', value: 4 },\n    { source: 'Dahlia', target: 'Tholomyes', value: 3 },\n    { source: 'Dahlia', target: 'Listolier', value: 3 },\n    { source: 'Dahlia', target: 'Fameuil', value: 3 },\n    { source: 'Dahlia', target: 'Blacheville', value: 3 },\n    { source: 'Dahlia', target: 'Favourite', value: 5 },\n    { source: 'Zephine', target: 'Tholomyes', value: 3 },\n    { source: 'Zephine', target: 'Listolier', value: 3 },\n    { source: 'Zephine', target: 'Fameuil', value: 3 },\n    { source: 'Zephine', target: 'Blacheville', value: 3 },\n    { source: 'Zephine', target: 'Favourite', value: 4 },\n    { source: 'Zephine', target: 'Dahlia', value: 4 },\n    { source: 'Fantine', target: 'Tholomyes', value: 3 },\n    { source: 'Fantine', target: 'Listolier', value: 3 },\n    { source: 'Fantine', target: 'Fameuil', value: 3 },\n    { source: 'Fantine', target: 'Blacheville', value: 3 },\n    { source: 'Fantine', target: 'Favourite', value: 4 },\n    { source: 'Fantine', target: 'Dahlia', value: 4 },\n    { source: 'Fantine', target: 'Zephine', value: 4 },\n    { source: 'Fantine', target: 'Marguerite', value: 2 },\n    { source: 'Fantine', target: 'Valjean', value: 9 },\n    { source: 'Mme.Thenardier', target: 'Fantine', value: 2 },\n    { source: 'Mme.Thenardier', target: 'Valjean', value: 7 },\n    { source: 'Thenardier', target: 'Mme.Thenardier', value: 13 },\n    { source: 'Thenardier', target: 'Fantine', value: 1 },\n    { source: 'Thenardier', target: 'Valjean', value: 12 },\n    { source: 'Cosette', target: 'Mme.Thenardier', value: 4 },\n    { source: 'Cosette', target: 'Valjean', value: 31 },\n    { source: 'Cosette', target: 'Tholomyes', value: 1 },\n    { source: 'Cosette', target: 'Thenardier', value: 1 },\n    { source: 'Javert', target: 'Valjean', value: 17 },\n    { source: 'Javert', target: 'Fantine', value: 5 },\n    { source: 'Javert', target: 'Thenardier', value: 5 },\n    { source: 'Javert', target: 'Mme.Thenardier', value: 1 },\n    { source: 'Javert', target: 'Cosette', value: 1 },\n    { source: 'Fauchelevent', target: 'Valjean', value: 8 },\n    { source: 'Fauchelevent', target: 'Javert', value: 1 },\n    { source: 'Bamatabois', target: 'Fantine', value: 1 },\n    { source: 'Bamatabois', target: 'Javert', value: 1 },\n    { source: 'Bamatabois', target: 'Valjean', value: 2 },\n    { source: 'Perpetue', target: 'Fantine', value: 1 },\n    { source: 'Simplice', target: 'Perpetue', value: 2 },\n    { source: 'Simplice', target: 'Valjean', value: 3 },\n    { source: 'Simplice', target: 'Fantine', value: 2 },\n    { source: 'Simplice', target: 'Javert', value: 1 },\n    { source: 'Scaufflaire', target: 'Valjean', value: 1 },\n    { source: 'Woman1', target: 'Valjean', value: 2 },\n    { source: 'Woman1', target: 'Javert', value: 1 },\n    { source: 'Judge', target: 'Valjean', value: 3 },\n    { source: 'Judge', target: 'Bamatabois', value: 2 },\n    { source: 'Champmathieu', target: 'Valjean', value: 3 },\n    { source: 'Champmathieu', target: 'Judge', value: 3 },\n    { source: 'Champmathieu', target: 'Bamatabois', value: 2 },\n    { source: 'Brevet', target: 'Judge', value: 2 },\n    { source: 'Brevet', target: 'Champmathieu', value: 2 },\n    { source: 'Brevet', target: 'Valjean', value: 2 },\n    { source: 'Brevet', target: 'Bamatabois', value: 1 },\n    { source: 'Chenildieu', target: 'Judge', value: 2 },\n    { source: 'Chenildieu', target: 'Champmathieu', value: 2 },\n    { source: 'Chenildieu', target: 'Brevet', value: 2 },\n    { source: 'Chenildieu', target: 'Valjean', value: 2 },\n    { source: 'Chenildieu', target: 'Bamatabois', value: 1 },\n    { source: 'Cochepaille', target: 'Judge', value: 2 },\n    { source: 'Cochepaille', target: 'Champmathieu', value: 2 },\n    { source: 'Cochepaille', target: 'Brevet', value: 2 },\n    { source: 'Cochepaille', target: 'Chenildieu', value: 2 },\n    { source: 'Cochepaille', target: 'Valjean', value: 2 },\n    { source: 'Cochepaille', target: 'Bamatabois', value: 1 },\n    { source: 'Pontmercy', target: 'Thenardier', value: 1 },\n    { source: 'Boulatruelle', target: 'Thenardier', value: 1 },\n    { source: 'Eponine', target: 'Mme.Thenardier', value: 2 },\n    { source: 'Eponine', target: 'Thenardier', value: 3 },\n    { source: 'Anzelma', target: 'Eponine', value: 2 },\n    { source: 'Anzelma', target: 'Thenardier', value: 2 },\n    { source: 'Anzelma', target: 'Mme.Thenardier', value: 1 },\n    { source: 'Woman2', target: 'Valjean', value: 3 },\n    { source: 'Woman2', target: 'Cosette', value: 1 },\n    { source: 'Woman2', target: 'Javert', value: 1 },\n    { source: 'MotherInnocent', target: 'Fauchelevent', value: 3 },\n    { source: 'MotherInnocent', target: 'Valjean', value: 1 },\n    { source: 'Gribier', target: 'Fauchelevent', value: 2 },\n    { source: 'Mme.Burgon', target: 'Jondrette', value: 1 },\n    { source: 'Gavroche', target: 'Mme.Burgon', value: 2 },\n    { source: 'Gavroche', target: 'Thenardier', value: 1 },\n    { source: 'Gavroche', target: 'Javert', value: 1 },\n    { source: 'Gavroche', target: 'Valjean', value: 1 },\n    { source: 'Gillenormand', target: 'Cosette', value: 3 },\n    { source: 'Gillenormand', target: 'Valjean', value: 2 },\n    { source: 'Magnon', target: 'Gillenormand', value: 1 },\n    { source: 'Magnon', target: 'Mme.Thenardier', value: 1 },\n    { source: 'Mlle.Gillenormand', target: 'Gillenormand', value: 9 },\n    { source: 'Mlle.Gillenormand', target: 'Cosette', value: 2 },\n    { source: 'Mlle.Gillenormand', target: 'Valjean', value: 2 },\n    { source: 'Mme.Pontmercy', target: 'Mlle.Gillenormand', value: 1 },\n    { source: 'Mme.Pontmercy', target: 'Pontmercy', value: 1 },\n    { source: 'Mlle.Vaubois', target: 'Mlle.Gillenormand', value: 1 },\n    { source: 'Lt.Gillenormand', target: 'Mlle.Gillenormand', value: 2 },\n    { source: 'Lt.Gillenormand', target: 'Gillenormand', value: 1 },\n    { source: 'Lt.Gillenormand', target: 'Cosette', value: 1 },\n    { source: 'Marius', target: 'Mlle.Gillenormand', value: 6 },\n    { source: 'Marius', target: 'Gillenormand', value: 12 },\n    { source: 'Marius', target: 'Pontmercy', value: 1 },\n    { source: 'Marius', target: 'Lt.Gillenormand', value: 1 },\n    { source: 'Marius', target: 'Cosette', value: 21 },\n    { source: 'Marius', target: 'Valjean', value: 19 },\n    { source: 'Marius', target: 'Tholomyes', value: 1 },\n    { source: 'Marius', target: 'Thenardier', value: 2 },\n    { source: 'Marius', target: 'Eponine', value: 5 },\n    { source: 'Marius', target: 'Gavroche', value: 4 },\n    { source: 'BaronessT', target: 'Gillenormand', value: 1 },\n    { source: 'BaronessT', target: 'Marius', value: 1 },\n    { source: 'Mabeuf', target: 'Marius', value: 1 },\n    { source: 'Mabeuf', target: 'Eponine', value: 1 },\n    { source: 'Mabeuf', target: 'Gavroche', value: 1 },\n    { source: 'Enjolras', target: 'Marius', value: 7 },\n    { source: 'Enjolras', target: 'Gavroche', value: 7 },\n    { source: 'Enjolras', target: 'Javert', value: 6 },\n    { source: 'Enjolras', target: 'Mabeuf', value: 1 },\n    { source: 'Enjolras', target: 'Valjean', value: 4 },\n    { source: 'Combeferre', target: 'Enjolras', value: 15 },\n    { source: 'Combeferre', target: 'Marius', value: 5 },\n    { source: 'Combeferre', target: 'Gavroche', value: 6 },\n    { source: 'Combeferre', target: 'Mabeuf', value: 2 },\n    { source: 'Prouvaire', target: 'Gavroche', value: 1 },\n    { source: 'Prouvaire', target: 'Enjolras', value: 4 },\n    { source: 'Prouvaire', target: 'Combeferre', value: 2 },\n    { source: 'Feuilly', target: 'Gavroche', value: 2 },\n    { source: 'Feuilly', target: 'Enjolras', value: 6 },\n    { source: 'Feuilly', target: 'Prouvaire', value: 2 },\n    { source: 'Feuilly', target: 'Combeferre', value: 5 },\n    { source: 'Feuilly', target: 'Mabeuf', value: 1 },\n    { source: 'Feuilly', target: 'Marius', value: 1 },\n    { source: 'Courfeyrac', target: 'Marius', value: 9 },\n    { source: 'Courfeyrac', target: 'Enjolras', value: 17 },\n    { source: 'Courfeyrac', target: 'Combeferre', value: 13 },\n    { source: 'Courfeyrac', target: 'Gavroche', value: 7 },\n    { source: 'Courfeyrac', target: 'Mabeuf', value: 2 },\n    { source: 'Courfeyrac', target: 'Eponine', value: 1 },\n    { source: 'Courfeyrac', target: 'Feuilly', value: 6 },\n    { source: 'Courfeyrac', target: 'Prouvaire', value: 3 },\n    { source: 'Bahorel', target: 'Combeferre', value: 5 },\n    { source: 'Bahorel', target: 'Gavroche', value: 5 },\n    { source: 'Bahorel', target: 'Courfeyrac', value: 6 },\n    { source: 'Bahorel', target: 'Mabeuf', value: 2 },\n    { source: 'Bahorel', target: 'Enjolras', value: 4 },\n    { source: 'Bahorel', target: 'Feuilly', value: 3 },\n    { source: 'Bahorel', target: 'Prouvaire', value: 2 },\n    { source: 'Bahorel', target: 'Marius', value: 1 },\n    { source: 'Bossuet', target: 'Marius', value: 5 },\n    { source: 'Bossuet', target: 'Courfeyrac', value: 12 },\n    { source: 'Bossuet', target: 'Gavroche', value: 5 },\n    { source: 'Bossuet', target: 'Bahorel', value: 4 },\n    { source: 'Bossuet', target: 'Enjolras', value: 10 },\n    { source: 'Bossuet', target: 'Feuilly', value: 6 },\n    { source: 'Bossuet', target: 'Prouvaire', value: 2 },\n    { source: 'Bossuet', target: 'Combeferre', value: 9 },\n    { source: 'Bossuet', target: 'Mabeuf', value: 1 },\n    { source: 'Bossuet', target: 'Valjean', value: 1 },\n    { source: 'Joly', target: 'Bahorel', value: 5 },\n    { source: 'Joly', target: 'Bossuet', value: 7 },\n    { source: 'Joly', target: 'Gavroche', value: 3 },\n    { source: 'Joly', target: 'Courfeyrac', value: 5 },\n    { source: 'Joly', target: 'Enjolras', value: 5 },\n    { source: 'Joly', target: 'Feuilly', value: 5 },\n    { source: 'Joly', target: 'Prouvaire', value: 2 },\n    { source: 'Joly', target: 'Combeferre', value: 5 },\n    { source: 'Joly', target: 'Mabeuf', value: 1 },\n    { source: 'Joly', target: 'Marius', value: 2 },\n    { source: 'Grantaire', target: 'Bossuet', value: 3 },\n    { source: 'Grantaire', target: 'Enjolras', value: 3 },\n    { source: 'Grantaire', target: 'Combeferre', value: 1 },\n    { source: 'Grantaire', target: 'Courfeyrac', value: 2 },\n    { source: 'Grantaire', target: 'Joly', value: 2 },\n    { source: 'Grantaire', target: 'Gavroche', value: 1 },\n    { source: 'Grantaire', target: 'Bahorel', value: 1 },\n    { source: 'Grantaire', target: 'Feuilly', value: 1 },\n    { source: 'Grantaire', target: 'Prouvaire', value: 1 },\n    { source: 'MotherPlutarch', target: 'Mabeuf', value: 3 },\n    { source: 'Gueulemer', target: 'Thenardier', value: 5 },\n    { source: 'Gueulemer', target: 'Valjean', value: 1 },\n    { source: 'Gueulemer', target: 'Mme.Thenardier', value: 1 },\n    { source: 'Gueulemer', target: 'Javert', value: 1 },\n    { source: 'Gueulemer', target: 'Gavroche', value: 1 },\n    { source: 'Gueulemer', target: 'Eponine', value: 1 },\n    { source: 'Babet', target: 'Thenardier', value: 6 },\n    { source: 'Babet', target: 'Gueulemer', value: 6 },\n    { source: 'Babet', target: 'Valjean', value: 1 },\n    { source: 'Babet', target: 'Mme.Thenardier', value: 1 },\n    { source: 'Babet', target: 'Javert', value: 2 },\n    { source: 'Babet', target: 'Gavroche', value: 1 },\n    { source: 'Babet', target: 'Eponine', value: 1 },\n    { source: 'Claquesous', target: 'Thenardier', value: 4 },\n    { source: 'Claquesous', target: 'Babet', value: 4 },\n    { source: 'Claquesous', target: 'Gueulemer', value: 4 },\n    { source: 'Claquesous', target: 'Valjean', value: 1 },\n    { source: 'Claquesous', target: 'Mme.Thenardier', value: 1 },\n    { source: 'Claquesous', target: 'Javert', value: 1 },\n    { source: 'Claquesous', target: 'Eponine', value: 1 },\n    { source: 'Claquesous', target: 'Enjolras', value: 1 },\n    { source: 'Montparnasse', target: 'Javert', value: 1 },\n    { source: 'Montparnasse', target: 'Babet', value: 2 },\n    { source: 'Montparnasse', target: 'Gueulemer', value: 2 },\n    { source: 'Montparnasse', target: 'Claquesous', value: 2 },\n    { source: 'Montparnasse', target: 'Valjean', value: 1 },\n    { source: 'Montparnasse', target: 'Gavroche', value: 1 },\n    { source: 'Montparnasse', target: 'Eponine', value: 1 },\n    { source: 'Montparnasse', target: 'Thenardier', value: 1 },\n    { source: 'Toussaint', target: 'Cosette', value: 2 },\n    { source: 'Toussaint', target: 'Javert', value: 1 },\n    { source: 'Toussaint', target: 'Valjean', value: 1 },\n    { source: 'Child1', target: 'Gavroche', value: 2 },\n    { source: 'Child2', target: 'Gavroche', value: 2 },\n    { source: 'Child2', target: 'Child1', value: 3 },\n    { source: 'Brujon', target: 'Babet', value: 3 },\n    { source: 'Brujon', target: 'Gueulemer', value: 3 },\n    { source: 'Brujon', target: 'Thenardier', value: 3 },\n    { source: 'Brujon', target: 'Gavroche', value: 1 },\n    { source: 'Brujon', target: 'Eponine', value: 1 },\n    { source: 'Brujon', target: 'Claquesous', value: 1 },\n    { source: 'Brujon', target: 'Montparnasse', value: 1 },\n    { source: 'Mme.Hucheloup', target: 'Bossuet', value: 1 },\n    { source: 'Mme.Hucheloup', target: 'Joly', value: 1 },\n    { source: 'Mme.Hucheloup', target: 'Grantaire', value: 1 },\n    { source: 'Mme.Hucheloup', target: 'Bahorel', value: 1 },\n    { source: 'Mme.Hucheloup', target: 'Courfeyrac', value: 1 },\n    { source: 'Mme.Hucheloup', target: 'Gavroche', value: 1 },\n    { source: 'Mme.Hucheloup', target: 'Enjolras', value: 1 },\n  ],\n};\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  const chart = ForceGraph(miserables, {\n    nodeId: (d) => d.id,\n    nodeGroup: (d) => d.group,\n    nodeTitle: (d) => `${d.id}\\n${d.group}`,\n    linkStroke: () => '#999',\n    linkStrokeWidth: (l) => Math.sqrt(l.value),\n    width: 600,\n    height: 600,\n    invalidation: null, // a promise to stop the simulation when the cell is re-run\n  });\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-plugin-css-select\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"d3\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-plugin-css-select\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"d3\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gPluginCssSelect, global.gSvg, global.gWebgl, global.gWebgpu, global.d3, global.lilGui, global.stats);\n    global.d3ForceDirectedGraph = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gPluginCssSelect, _gSvg, _gWebgl, _gWebgpu, d3, lil, _stats) {\n  \"use strict\";\n\n  d3 = _interopRequireWildcard(d3);\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n  /**\n   * ported from https://observablehq.com/@d3/force-directed-graph\n   */\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var webgpuRenderer = new _gWebgpu.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf'\n    }, {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var cssSelectPlugin = new _gPluginCssSelect.Plugin();\n  canvasRenderer.registerPlugin(cssSelectPlugin);\n  webglRenderer.registerPlugin(cssSelectPlugin);\n  webgpuRenderer.registerPlugin(cssSelectPlugin);\n  canvaskitRenderer.registerPlugin(cssSelectPlugin);\n  svgRenderer.registerPlugin(cssSelectPlugin); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 600,\n    renderer: canvasRenderer\n  }); // Copyright 2021 Observable, Inc.\n  // Released under the ISC license.\n  // https://observablehq.com/@d3/force-directed-graph\n\n  function ForceGraph(_ref) {\n    var nodes = _ref.nodes,\n        links = _ref.links;\n\n    var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref2$nodeId = _ref2.nodeId,\n        nodeId = _ref2$nodeId === void 0 ? function (d) {\n      return d.id;\n    } : _ref2$nodeId,\n        nodeGroup = _ref2.nodeGroup,\n        nodeGroups = _ref2.nodeGroups,\n        nodeTitle = _ref2.nodeTitle,\n        _ref2$nodeFill = _ref2.nodeFill,\n        nodeFill = _ref2$nodeFill === void 0 ? 'currentColor' : _ref2$nodeFill,\n        _ref2$nodeStroke = _ref2.nodeStroke,\n        nodeStroke = _ref2$nodeStroke === void 0 ? '#fff' : _ref2$nodeStroke,\n        _ref2$nodeStrokeWidth = _ref2.nodeStrokeWidth,\n        nodeStrokeWidth = _ref2$nodeStrokeWidth === void 0 ? 1.5 : _ref2$nodeStrokeWidth,\n        _ref2$nodeStrokeOpaci = _ref2.nodeStrokeOpacity,\n        nodeStrokeOpacity = _ref2$nodeStrokeOpaci === void 0 ? 1 : _ref2$nodeStrokeOpaci,\n        _ref2$nodeRadius = _ref2.nodeRadius,\n        nodeRadius = _ref2$nodeRadius === void 0 ? 5 : _ref2$nodeRadius,\n        nodeStrength = _ref2.nodeStrength,\n        _ref2$linkSource = _ref2.linkSource,\n        linkSource = _ref2$linkSource === void 0 ? function (_ref3) {\n      var source = _ref3.source;\n      return source;\n    } : _ref2$linkSource,\n        _ref2$linkTarget = _ref2.linkTarget,\n        linkTarget = _ref2$linkTarget === void 0 ? function (_ref4) {\n      var target = _ref4.target;\n      return target;\n    } : _ref2$linkTarget,\n        _ref2$linkStroke = _ref2.linkStroke,\n        linkStroke = _ref2$linkStroke === void 0 ? '#999' : _ref2$linkStroke,\n        _ref2$linkStrokeOpaci = _ref2.linkStrokeOpacity,\n        linkStrokeOpacity = _ref2$linkStrokeOpaci === void 0 ? 0.6 : _ref2$linkStrokeOpaci,\n        _ref2$linkStrokeWidth = _ref2.linkStrokeWidth,\n        linkStrokeWidth = _ref2$linkStrokeWidth === void 0 ? 1.5 : _ref2$linkStrokeWidth,\n        _ref2$linkStrokeLinec = _ref2.linkStrokeLinecap,\n        linkStrokeLinecap = _ref2$linkStrokeLinec === void 0 ? 'round' : _ref2$linkStrokeLinec,\n        linkStrength = _ref2.linkStrength,\n        _ref2$colors = _ref2.colors,\n        colors = _ref2$colors === void 0 ? d3.schemeTableau10 : _ref2$colors,\n        _ref2$width = _ref2.width,\n        width = _ref2$width === void 0 ? 640 : _ref2$width,\n        _ref2$height = _ref2.height,\n        height = _ref2$height === void 0 ? 400 : _ref2$height,\n        invalidation = _ref2.invalidation;\n\n    // Compute values.\n    var N = d3.map(nodes, nodeId).map(intern);\n    var LS = d3.map(links, linkSource).map(intern);\n    var LT = d3.map(links, linkTarget).map(intern);\n    if (nodeTitle === undefined) nodeTitle = function nodeTitle(_, i) {\n      return N[i];\n    };\n    var T = nodeTitle == null ? null : d3.map(nodes, nodeTitle);\n    var G = nodeGroup == null ? null : d3.map(nodes, nodeGroup).map(intern);\n    var W = typeof linkStrokeWidth !== 'function' ? null : d3.map(links, linkStrokeWidth);\n    var L = typeof linkStroke !== 'function' ? null : d3.map(links, linkStroke); // Replace the input nodes and links with mutable objects for the simulation.\n\n    nodes = d3.map(nodes, function (_, i) {\n      return {\n        id: N[i]\n      };\n    });\n    links = d3.map(links, function (_, i) {\n      return {\n        source: LS[i],\n        target: LT[i]\n      };\n    }); // Compute default domains.\n\n    if (G && nodeGroups === undefined) nodeGroups = d3.sort(G); // Construct the scales.\n\n    var color = nodeGroup == null ? null : d3.scaleOrdinal(nodeGroups, colors); // Construct the forces.\n\n    var forceNode = d3.forceManyBody();\n    var forceLink = d3.forceLink(links).id(function (_ref5) {\n      var i = _ref5.index;\n      return N[i];\n    });\n    if (nodeStrength !== undefined) forceNode.strength(nodeStrength);\n    if (linkStrength !== undefined) forceLink.strength(linkStrength);\n    var simulation = d3.forceSimulation(nodes).force('link', forceLink).force('charge', forceNode).force('center', d3.forceCenter()).on('tick', ticked);\n    var wrapper = d3.select(canvas.document.documentElement // use GCanvas' document element instead of a real DOM\n    );\n    var svg = wrapper.append('g').style('transform', \"translate(\".concat(width / 2, \"px, \").concat(height / 2, \"px)\")); // const svg = d3\n    //   .create('svg')\n    //   .attr('width', width)\n    //   .attr('height', height)\n    //   .attr('viewBox', [-width / 2, -height / 2, width, height])\n    //   .attr('style', 'max-width: 100%; height: auto; height: intrinsic;');\n\n    var link = svg.append('g').attr('stroke', typeof linkStroke !== 'function' ? linkStroke : null).attr('stroke-opacity', linkStrokeOpacity).attr('stroke-width', typeof linkStrokeWidth !== 'function' ? linkStrokeWidth : null).attr('stroke-linecap', linkStrokeLinecap).selectAll('line').data(links).join('line');\n    var node = svg.append('g').attr('fill', nodeFill).attr('stroke', nodeStroke).attr('stroke-opacity', nodeStrokeOpacity).attr('stroke-width', nodeStrokeWidth).selectAll('circle').data(nodes).join('circle').attr('r', nodeRadius).call(drag(simulation));\n    if (W) link.attr('stroke-width', function (_ref6) {\n      var i = _ref6.index;\n      return W[i];\n    });\n    if (L) link.attr('stroke', function (_ref7) {\n      var i = _ref7.index;\n      return L[i];\n    });\n    if (G) node.attr('fill', function (_ref8) {\n      var i = _ref8.index;\n      return color(G[i]);\n    });\n    if (T) node.append('title').text(function (_ref9) {\n      var i = _ref9.index;\n      return T[i];\n    });\n    if (invalidation != null) invalidation.then(function () {\n      return simulation.stop();\n    });\n\n    function intern(value) {\n      return value !== null && _typeof(value) === 'object' ? value.valueOf() : value;\n    }\n\n    function ticked() {\n      link.attr('x1', function (d) {\n        return d.source.x;\n      }).attr('y1', function (d) {\n        return d.source.y;\n      }).attr('x2', function (d) {\n        return d.target.x;\n      }).attr('y2', function (d) {\n        return d.target.y;\n      });\n      node.attr('cx', function (d) {\n        return d.x;\n      }).attr('cy', function (d) {\n        return d.y;\n      });\n    }\n\n    function drag(simulation) {\n      function dragstarted(event) {\n        if (!event.active) simulation.alphaTarget(0.3).restart();\n        event.subject.fx = event.subject.x;\n        event.subject.fy = event.subject.y;\n      }\n\n      function dragged(event) {\n        event.subject.fx = event.x;\n        event.subject.fy = event.y;\n      }\n\n      function dragended(event) {\n        if (!event.active) simulation.alphaTarget(0);\n        event.subject.fx = null;\n        event.subject.fy = null;\n      }\n\n      return d3.drag().on('start', dragstarted).on('drag', dragged).on('end', dragended);\n    }\n\n    return Object.assign(svg.node(), {\n      scales: {\n        color: color\n      }\n    });\n  }\n\n  var miserables = {\n    nodes: [{\n      id: 'Myriel',\n      group: 1\n    }, {\n      id: 'Napoleon',\n      group: 1\n    }, {\n      id: 'Mlle.Baptistine',\n      group: 1\n    }, {\n      id: 'Mme.Magloire',\n      group: 1\n    }, {\n      id: 'CountessdeLo',\n      group: 1\n    }, {\n      id: 'Geborand',\n      group: 1\n    }, {\n      id: 'Champtercier',\n      group: 1\n    }, {\n      id: 'Cravatte',\n      group: 1\n    }, {\n      id: 'Count',\n      group: 1\n    }, {\n      id: 'OldMan',\n      group: 1\n    }, {\n      id: 'Labarre',\n      group: 2\n    }, {\n      id: 'Valjean',\n      group: 2\n    }, {\n      id: 'Marguerite',\n      group: 3\n    }, {\n      id: 'Mme.deR',\n      group: 2\n    }, {\n      id: 'Isabeau',\n      group: 2\n    }, {\n      id: 'Gervais',\n      group: 2\n    }, {\n      id: 'Tholomyes',\n      group: 3\n    }, {\n      id: 'Listolier',\n      group: 3\n    }, {\n      id: 'Fameuil',\n      group: 3\n    }, {\n      id: 'Blacheville',\n      group: 3\n    }, {\n      id: 'Favourite',\n      group: 3\n    }, {\n      id: 'Dahlia',\n      group: 3\n    }, {\n      id: 'Zephine',\n      group: 3\n    }, {\n      id: 'Fantine',\n      group: 3\n    }, {\n      id: 'Mme.Thenardier',\n      group: 4\n    }, {\n      id: 'Thenardier',\n      group: 4\n    }, {\n      id: 'Cosette',\n      group: 5\n    }, {\n      id: 'Javert',\n      group: 4\n    }, {\n      id: 'Fauchelevent',\n      group: 0\n    }, {\n      id: 'Bamatabois',\n      group: 2\n    }, {\n      id: 'Perpetue',\n      group: 3\n    }, {\n      id: 'Simplice',\n      group: 2\n    }, {\n      id: 'Scaufflaire',\n      group: 2\n    }, {\n      id: 'Woman1',\n      group: 2\n    }, {\n      id: 'Judge',\n      group: 2\n    }, {\n      id: 'Champmathieu',\n      group: 2\n    }, {\n      id: 'Brevet',\n      group: 2\n    }, {\n      id: 'Chenildieu',\n      group: 2\n    }, {\n      id: 'Cochepaille',\n      group: 2\n    }, {\n      id: 'Pontmercy',\n      group: 4\n    }, {\n      id: 'Boulatruelle',\n      group: 6\n    }, {\n      id: 'Eponine',\n      group: 4\n    }, {\n      id: 'Anzelma',\n      group: 4\n    }, {\n      id: 'Woman2',\n      group: 5\n    }, {\n      id: 'MotherInnocent',\n      group: 0\n    }, {\n      id: 'Gribier',\n      group: 0\n    }, {\n      id: 'Jondrette',\n      group: 7\n    }, {\n      id: 'Mme.Burgon',\n      group: 7\n    }, {\n      id: 'Gavroche',\n      group: 8\n    }, {\n      id: 'Gillenormand',\n      group: 5\n    }, {\n      id: 'Magnon',\n      group: 5\n    }, {\n      id: 'Mlle.Gillenormand',\n      group: 5\n    }, {\n      id: 'Mme.Pontmercy',\n      group: 5\n    }, {\n      id: 'Mlle.Vaubois',\n      group: 5\n    }, {\n      id: 'Lt.Gillenormand',\n      group: 5\n    }, {\n      id: 'Marius',\n      group: 8\n    }, {\n      id: 'BaronessT',\n      group: 5\n    }, {\n      id: 'Mabeuf',\n      group: 8\n    }, {\n      id: 'Enjolras',\n      group: 8\n    }, {\n      id: 'Combeferre',\n      group: 8\n    }, {\n      id: 'Prouvaire',\n      group: 8\n    }, {\n      id: 'Feuilly',\n      group: 8\n    }, {\n      id: 'Courfeyrac',\n      group: 8\n    }, {\n      id: 'Bahorel',\n      group: 8\n    }, {\n      id: 'Bossuet',\n      group: 8\n    }, {\n      id: 'Joly',\n      group: 8\n    }, {\n      id: 'Grantaire',\n      group: 8\n    }, {\n      id: 'MotherPlutarch',\n      group: 9\n    }, {\n      id: 'Gueulemer',\n      group: 4\n    }, {\n      id: 'Babet',\n      group: 4\n    }, {\n      id: 'Claquesous',\n      group: 4\n    }, {\n      id: 'Montparnasse',\n      group: 4\n    }, {\n      id: 'Toussaint',\n      group: 5\n    }, {\n      id: 'Child1',\n      group: 10\n    }, {\n      id: 'Child2',\n      group: 10\n    }, {\n      id: 'Brujon',\n      group: 4\n    }, {\n      id: 'Mme.Hucheloup',\n      group: 8\n    }],\n    links: [{\n      source: 'Napoleon',\n      target: 'Myriel',\n      value: 1\n    }, {\n      source: 'Mlle.Baptistine',\n      target: 'Myriel',\n      value: 8\n    }, {\n      source: 'Mme.Magloire',\n      target: 'Myriel',\n      value: 10\n    }, {\n      source: 'Mme.Magloire',\n      target: 'Mlle.Baptistine',\n      value: 6\n    }, {\n      source: 'CountessdeLo',\n      target: 'Myriel',\n      value: 1\n    }, {\n      source: 'Geborand',\n      target: 'Myriel',\n      value: 1\n    }, {\n      source: 'Champtercier',\n      target: 'Myriel',\n      value: 1\n    }, {\n      source: 'Cravatte',\n      target: 'Myriel',\n      value: 1\n    }, {\n      source: 'Count',\n      target: 'Myriel',\n      value: 2\n    }, {\n      source: 'OldMan',\n      target: 'Myriel',\n      value: 1\n    }, {\n      source: 'Valjean',\n      target: 'Labarre',\n      value: 1\n    }, {\n      source: 'Valjean',\n      target: 'Mme.Magloire',\n      value: 3\n    }, {\n      source: 'Valjean',\n      target: 'Mlle.Baptistine',\n      value: 3\n    }, {\n      source: 'Valjean',\n      target: 'Myriel',\n      value: 5\n    }, {\n      source: 'Marguerite',\n      target: 'Valjean',\n      value: 1\n    }, {\n      source: 'Mme.deR',\n      target: 'Valjean',\n      value: 1\n    }, {\n      source: 'Isabeau',\n      target: 'Valjean',\n      value: 1\n    }, {\n      source: 'Gervais',\n      target: 'Valjean',\n      value: 1\n    }, {\n      source: 'Listolier',\n      target: 'Tholomyes',\n      value: 4\n    }, {\n      source: 'Fameuil',\n      target: 'Tholomyes',\n      value: 4\n    }, {\n      source: 'Fameuil',\n      target: 'Listolier',\n      value: 4\n    }, {\n      source: 'Blacheville',\n      target: 'Tholomyes',\n      value: 4\n    }, {\n      source: 'Blacheville',\n      target: 'Listolier',\n      value: 4\n    }, {\n      source: 'Blacheville',\n      target: 'Fameuil',\n      value: 4\n    }, {\n      source: 'Favourite',\n      target: 'Tholomyes',\n      value: 3\n    }, {\n      source: 'Favourite',\n      target: 'Listolier',\n      value: 3\n    }, {\n      source: 'Favourite',\n      target: 'Fameuil',\n      value: 3\n    }, {\n      source: 'Favourite',\n      target: 'Blacheville',\n      value: 4\n    }, {\n      source: 'Dahlia',\n      target: 'Tholomyes',\n      value: 3\n    }, {\n      source: 'Dahlia',\n      target: 'Listolier',\n      value: 3\n    }, {\n      source: 'Dahlia',\n      target: 'Fameuil',\n      value: 3\n    }, {\n      source: 'Dahlia',\n      target: 'Blacheville',\n      value: 3\n    }, {\n      source: 'Dahlia',\n      target: 'Favourite',\n      value: 5\n    }, {\n      source: 'Zephine',\n      target: 'Tholomyes',\n      value: 3\n    }, {\n      source: 'Zephine',\n      target: 'Listolier',\n      value: 3\n    }, {\n      source: 'Zephine',\n      target: 'Fameuil',\n      value: 3\n    }, {\n      source: 'Zephine',\n      target: 'Blacheville',\n      value: 3\n    }, {\n      source: 'Zephine',\n      target: 'Favourite',\n      value: 4\n    }, {\n      source: 'Zephine',\n      target: 'Dahlia',\n      value: 4\n    }, {\n      source: 'Fantine',\n      target: 'Tholomyes',\n      value: 3\n    }, {\n      source: 'Fantine',\n      target: 'Listolier',\n      value: 3\n    }, {\n      source: 'Fantine',\n      target: 'Fameuil',\n      value: 3\n    }, {\n      source: 'Fantine',\n      target: 'Blacheville',\n      value: 3\n    }, {\n      source: 'Fantine',\n      target: 'Favourite',\n      value: 4\n    }, {\n      source: 'Fantine',\n      target: 'Dahlia',\n      value: 4\n    }, {\n      source: 'Fantine',\n      target: 'Zephine',\n      value: 4\n    }, {\n      source: 'Fantine',\n      target: 'Marguerite',\n      value: 2\n    }, {\n      source: 'Fantine',\n      target: 'Valjean',\n      value: 9\n    }, {\n      source: 'Mme.Thenardier',\n      target: 'Fantine',\n      value: 2\n    }, {\n      source: 'Mme.Thenardier',\n      target: 'Valjean',\n      value: 7\n    }, {\n      source: 'Thenardier',\n      target: 'Mme.Thenardier',\n      value: 13\n    }, {\n      source: 'Thenardier',\n      target: 'Fantine',\n      value: 1\n    }, {\n      source: 'Thenardier',\n      target: 'Valjean',\n      value: 12\n    }, {\n      source: 'Cosette',\n      target: 'Mme.Thenardier',\n      value: 4\n    }, {\n      source: 'Cosette',\n      target: 'Valjean',\n      value: 31\n    }, {\n      source: 'Cosette',\n      target: 'Tholomyes',\n      value: 1\n    }, {\n      source: 'Cosette',\n      target: 'Thenardier',\n      value: 1\n    }, {\n      source: 'Javert',\n      target: 'Valjean',\n      value: 17\n    }, {\n      source: 'Javert',\n      target: 'Fantine',\n      value: 5\n    }, {\n      source: 'Javert',\n      target: 'Thenardier',\n      value: 5\n    }, {\n      source: 'Javert',\n      target: 'Mme.Thenardier',\n      value: 1\n    }, {\n      source: 'Javert',\n      target: 'Cosette',\n      value: 1\n    }, {\n      source: 'Fauchelevent',\n      target: 'Valjean',\n      value: 8\n    }, {\n      source: 'Fauchelevent',\n      target: 'Javert',\n      value: 1\n    }, {\n      source: 'Bamatabois',\n      target: 'Fantine',\n      value: 1\n    }, {\n      source: 'Bamatabois',\n      target: 'Javert',\n      value: 1\n    }, {\n      source: 'Bamatabois',\n      target: 'Valjean',\n      value: 2\n    }, {\n      source: 'Perpetue',\n      target: 'Fantine',\n      value: 1\n    }, {\n      source: 'Simplice',\n      target: 'Perpetue',\n      value: 2\n    }, {\n      source: 'Simplice',\n      target: 'Valjean',\n      value: 3\n    }, {\n      source: 'Simplice',\n      target: 'Fantine',\n      value: 2\n    }, {\n      source: 'Simplice',\n      target: 'Javert',\n      value: 1\n    }, {\n      source: 'Scaufflaire',\n      target: 'Valjean',\n      value: 1\n    }, {\n      source: 'Woman1',\n      target: 'Valjean',\n      value: 2\n    }, {\n      source: 'Woman1',\n      target: 'Javert',\n      value: 1\n    }, {\n      source: 'Judge',\n      target: 'Valjean',\n      value: 3\n    }, {\n      source: 'Judge',\n      target: 'Bamatabois',\n      value: 2\n    }, {\n      source: 'Champmathieu',\n      target: 'Valjean',\n      value: 3\n    }, {\n      source: 'Champmathieu',\n      target: 'Judge',\n      value: 3\n    }, {\n      source: 'Champmathieu',\n      target: 'Bamatabois',\n      value: 2\n    }, {\n      source: 'Brevet',\n      target: 'Judge',\n      value: 2\n    }, {\n      source: 'Brevet',\n      target: 'Champmathieu',\n      value: 2\n    }, {\n      source: 'Brevet',\n      target: 'Valjean',\n      value: 2\n    }, {\n      source: 'Brevet',\n      target: 'Bamatabois',\n      value: 1\n    }, {\n      source: 'Chenildieu',\n      target: 'Judge',\n      value: 2\n    }, {\n      source: 'Chenildieu',\n      target: 'Champmathieu',\n      value: 2\n    }, {\n      source: 'Chenildieu',\n      target: 'Brevet',\n      value: 2\n    }, {\n      source: 'Chenildieu',\n      target: 'Valjean',\n      value: 2\n    }, {\n      source: 'Chenildieu',\n      target: 'Bamatabois',\n      value: 1\n    }, {\n      source: 'Cochepaille',\n      target: 'Judge',\n      value: 2\n    }, {\n      source: 'Cochepaille',\n      target: 'Champmathieu',\n      value: 2\n    }, {\n      source: 'Cochepaille',\n      target: 'Brevet',\n      value: 2\n    }, {\n      source: 'Cochepaille',\n      target: 'Chenildieu',\n      value: 2\n    }, {\n      source: 'Cochepaille',\n      target: 'Valjean',\n      value: 2\n    }, {\n      source: 'Cochepaille',\n      target: 'Bamatabois',\n      value: 1\n    }, {\n      source: 'Pontmercy',\n      target: 'Thenardier',\n      value: 1\n    }, {\n      source: 'Boulatruelle',\n      target: 'Thenardier',\n      value: 1\n    }, {\n      source: 'Eponine',\n      target: 'Mme.Thenardier',\n      value: 2\n    }, {\n      source: 'Eponine',\n      target: 'Thenardier',\n      value: 3\n    }, {\n      source: 'Anzelma',\n      target: 'Eponine',\n      value: 2\n    }, {\n      source: 'Anzelma',\n      target: 'Thenardier',\n      value: 2\n    }, {\n      source: 'Anzelma',\n      target: 'Mme.Thenardier',\n      value: 1\n    }, {\n      source: 'Woman2',\n      target: 'Valjean',\n      value: 3\n    }, {\n      source: 'Woman2',\n      target: 'Cosette',\n      value: 1\n    }, {\n      source: 'Woman2',\n      target: 'Javert',\n      value: 1\n    }, {\n      source: 'MotherInnocent',\n      target: 'Fauchelevent',\n      value: 3\n    }, {\n      source: 'MotherInnocent',\n      target: 'Valjean',\n      value: 1\n    }, {\n      source: 'Gribier',\n      target: 'Fauchelevent',\n      value: 2\n    }, {\n      source: 'Mme.Burgon',\n      target: 'Jondrette',\n      value: 1\n    }, {\n      source: 'Gavroche',\n      target: 'Mme.Burgon',\n      value: 2\n    }, {\n      source: 'Gavroche',\n      target: 'Thenardier',\n      value: 1\n    }, {\n      source: 'Gavroche',\n      target: 'Javert',\n      value: 1\n    }, {\n      source: 'Gavroche',\n      target: 'Valjean',\n      value: 1\n    }, {\n      source: 'Gillenormand',\n      target: 'Cosette',\n      value: 3\n    }, {\n      source: 'Gillenormand',\n      target: 'Valjean',\n      value: 2\n    }, {\n      source: 'Magnon',\n      target: 'Gillenormand',\n      value: 1\n    }, {\n      source: 'Magnon',\n      target: 'Mme.Thenardier',\n      value: 1\n    }, {\n      source: 'Mlle.Gillenormand',\n      target: 'Gillenormand',\n      value: 9\n    }, {\n      source: 'Mlle.Gillenormand',\n      target: 'Cosette',\n      value: 2\n    }, {\n      source: 'Mlle.Gillenormand',\n      target: 'Valjean',\n      value: 2\n    }, {\n      source: 'Mme.Pontmercy',\n      target: 'Mlle.Gillenormand',\n      value: 1\n    }, {\n      source: 'Mme.Pontmercy',\n      target: 'Pontmercy',\n      value: 1\n    }, {\n      source: 'Mlle.Vaubois',\n      target: 'Mlle.Gillenormand',\n      value: 1\n    }, {\n      source: 'Lt.Gillenormand',\n      target: 'Mlle.Gillenormand',\n      value: 2\n    }, {\n      source: 'Lt.Gillenormand',\n      target: 'Gillenormand',\n      value: 1\n    }, {\n      source: 'Lt.Gillenormand',\n      target: 'Cosette',\n      value: 1\n    }, {\n      source: 'Marius',\n      target: 'Mlle.Gillenormand',\n      value: 6\n    }, {\n      source: 'Marius',\n      target: 'Gillenormand',\n      value: 12\n    }, {\n      source: 'Marius',\n      target: 'Pontmercy',\n      value: 1\n    }, {\n      source: 'Marius',\n      target: 'Lt.Gillenormand',\n      value: 1\n    }, {\n      source: 'Marius',\n      target: 'Cosette',\n      value: 21\n    }, {\n      source: 'Marius',\n      target: 'Valjean',\n      value: 19\n    }, {\n      source: 'Marius',\n      target: 'Tholomyes',\n      value: 1\n    }, {\n      source: 'Marius',\n      target: 'Thenardier',\n      value: 2\n    }, {\n      source: 'Marius',\n      target: 'Eponine',\n      value: 5\n    }, {\n      source: 'Marius',\n      target: 'Gavroche',\n      value: 4\n    }, {\n      source: 'BaronessT',\n      target: 'Gillenormand',\n      value: 1\n    }, {\n      source: 'BaronessT',\n      target: 'Marius',\n      value: 1\n    }, {\n      source: 'Mabeuf',\n      target: 'Marius',\n      value: 1\n    }, {\n      source: 'Mabeuf',\n      target: 'Eponine',\n      value: 1\n    }, {\n      source: 'Mabeuf',\n      target: 'Gavroche',\n      value: 1\n    }, {\n      source: 'Enjolras',\n      target: 'Marius',\n      value: 7\n    }, {\n      source: 'Enjolras',\n      target: 'Gavroche',\n      value: 7\n    }, {\n      source: 'Enjolras',\n      target: 'Javert',\n      value: 6\n    }, {\n      source: 'Enjolras',\n      target: 'Mabeuf',\n      value: 1\n    }, {\n      source: 'Enjolras',\n      target: 'Valjean',\n      value: 4\n    }, {\n      source: 'Combeferre',\n      target: 'Enjolras',\n      value: 15\n    }, {\n      source: 'Combeferre',\n      target: 'Marius',\n      value: 5\n    }, {\n      source: 'Combeferre',\n      target: 'Gavroche',\n      value: 6\n    }, {\n      source: 'Combeferre',\n      target: 'Mabeuf',\n      value: 2\n    }, {\n      source: 'Prouvaire',\n      target: 'Gavroche',\n      value: 1\n    }, {\n      source: 'Prouvaire',\n      target: 'Enjolras',\n      value: 4\n    }, {\n      source: 'Prouvaire',\n      target: 'Combeferre',\n      value: 2\n    }, {\n      source: 'Feuilly',\n      target: 'Gavroche',\n      value: 2\n    }, {\n      source: 'Feuilly',\n      target: 'Enjolras',\n      value: 6\n    }, {\n      source: 'Feuilly',\n      target: 'Prouvaire',\n      value: 2\n    }, {\n      source: 'Feuilly',\n      target: 'Combeferre',\n      value: 5\n    }, {\n      source: 'Feuilly',\n      target: 'Mabeuf',\n      value: 1\n    }, {\n      source: 'Feuilly',\n      target: 'Marius',\n      value: 1\n    }, {\n      source: 'Courfeyrac',\n      target: 'Marius',\n      value: 9\n    }, {\n      source: 'Courfeyrac',\n      target: 'Enjolras',\n      value: 17\n    }, {\n      source: 'Courfeyrac',\n      target: 'Combeferre',\n      value: 13\n    }, {\n      source: 'Courfeyrac',\n      target: 'Gavroche',\n      value: 7\n    }, {\n      source: 'Courfeyrac',\n      target: 'Mabeuf',\n      value: 2\n    }, {\n      source: 'Courfeyrac',\n      target: 'Eponine',\n      value: 1\n    }, {\n      source: 'Courfeyrac',\n      target: 'Feuilly',\n      value: 6\n    }, {\n      source: 'Courfeyrac',\n      target: 'Prouvaire',\n      value: 3\n    }, {\n      source: 'Bahorel',\n      target: 'Combeferre',\n      value: 5\n    }, {\n      source: 'Bahorel',\n      target: 'Gavroche',\n      value: 5\n    }, {\n      source: 'Bahorel',\n      target: 'Courfeyrac',\n      value: 6\n    }, {\n      source: 'Bahorel',\n      target: 'Mabeuf',\n      value: 2\n    }, {\n      source: 'Bahorel',\n      target: 'Enjolras',\n      value: 4\n    }, {\n      source: 'Bahorel',\n      target: 'Feuilly',\n      value: 3\n    }, {\n      source: 'Bahorel',\n      target: 'Prouvaire',\n      value: 2\n    }, {\n      source: 'Bahorel',\n      target: 'Marius',\n      value: 1\n    }, {\n      source: 'Bossuet',\n      target: 'Marius',\n      value: 5\n    }, {\n      source: 'Bossuet',\n      target: 'Courfeyrac',\n      value: 12\n    }, {\n      source: 'Bossuet',\n      target: 'Gavroche',\n      value: 5\n    }, {\n      source: 'Bossuet',\n      target: 'Bahorel',\n      value: 4\n    }, {\n      source: 'Bossuet',\n      target: 'Enjolras',\n      value: 10\n    }, {\n      source: 'Bossuet',\n      target: 'Feuilly',\n      value: 6\n    }, {\n      source: 'Bossuet',\n      target: 'Prouvaire',\n      value: 2\n    }, {\n      source: 'Bossuet',\n      target: 'Combeferre',\n      value: 9\n    }, {\n      source: 'Bossuet',\n      target: 'Mabeuf',\n      value: 1\n    }, {\n      source: 'Bossuet',\n      target: 'Valjean',\n      value: 1\n    }, {\n      source: 'Joly',\n      target: 'Bahorel',\n      value: 5\n    }, {\n      source: 'Joly',\n      target: 'Bossuet',\n      value: 7\n    }, {\n      source: 'Joly',\n      target: 'Gavroche',\n      value: 3\n    }, {\n      source: 'Joly',\n      target: 'Courfeyrac',\n      value: 5\n    }, {\n      source: 'Joly',\n      target: 'Enjolras',\n      value: 5\n    }, {\n      source: 'Joly',\n      target: 'Feuilly',\n      value: 5\n    }, {\n      source: 'Joly',\n      target: 'Prouvaire',\n      value: 2\n    }, {\n      source: 'Joly',\n      target: 'Combeferre',\n      value: 5\n    }, {\n      source: 'Joly',\n      target: 'Mabeuf',\n      value: 1\n    }, {\n      source: 'Joly',\n      target: 'Marius',\n      value: 2\n    }, {\n      source: 'Grantaire',\n      target: 'Bossuet',\n      value: 3\n    }, {\n      source: 'Grantaire',\n      target: 'Enjolras',\n      value: 3\n    }, {\n      source: 'Grantaire',\n      target: 'Combeferre',\n      value: 1\n    }, {\n      source: 'Grantaire',\n      target: 'Courfeyrac',\n      value: 2\n    }, {\n      source: 'Grantaire',\n      target: 'Joly',\n      value: 2\n    }, {\n      source: 'Grantaire',\n      target: 'Gavroche',\n      value: 1\n    }, {\n      source: 'Grantaire',\n      target: 'Bahorel',\n      value: 1\n    }, {\n      source: 'Grantaire',\n      target: 'Feuilly',\n      value: 1\n    }, {\n      source: 'Grantaire',\n      target: 'Prouvaire',\n      value: 1\n    }, {\n      source: 'MotherPlutarch',\n      target: 'Mabeuf',\n      value: 3\n    }, {\n      source: 'Gueulemer',\n      target: 'Thenardier',\n      value: 5\n    }, {\n      source: 'Gueulemer',\n      target: 'Valjean',\n      value: 1\n    }, {\n      source: 'Gueulemer',\n      target: 'Mme.Thenardier',\n      value: 1\n    }, {\n      source: 'Gueulemer',\n      target: 'Javert',\n      value: 1\n    }, {\n      source: 'Gueulemer',\n      target: 'Gavroche',\n      value: 1\n    }, {\n      source: 'Gueulemer',\n      target: 'Eponine',\n      value: 1\n    }, {\n      source: 'Babet',\n      target: 'Thenardier',\n      value: 6\n    }, {\n      source: 'Babet',\n      target: 'Gueulemer',\n      value: 6\n    }, {\n      source: 'Babet',\n      target: 'Valjean',\n      value: 1\n    }, {\n      source: 'Babet',\n      target: 'Mme.Thenardier',\n      value: 1\n    }, {\n      source: 'Babet',\n      target: 'Javert',\n      value: 2\n    }, {\n      source: 'Babet',\n      target: 'Gavroche',\n      value: 1\n    }, {\n      source: 'Babet',\n      target: 'Eponine',\n      value: 1\n    }, {\n      source: 'Claquesous',\n      target: 'Thenardier',\n      value: 4\n    }, {\n      source: 'Claquesous',\n      target: 'Babet',\n      value: 4\n    }, {\n      source: 'Claquesous',\n      target: 'Gueulemer',\n      value: 4\n    }, {\n      source: 'Claquesous',\n      target: 'Valjean',\n      value: 1\n    }, {\n      source: 'Claquesous',\n      target: 'Mme.Thenardier',\n      value: 1\n    }, {\n      source: 'Claquesous',\n      target: 'Javert',\n      value: 1\n    }, {\n      source: 'Claquesous',\n      target: 'Eponine',\n      value: 1\n    }, {\n      source: 'Claquesous',\n      target: 'Enjolras',\n      value: 1\n    }, {\n      source: 'Montparnasse',\n      target: 'Javert',\n      value: 1\n    }, {\n      source: 'Montparnasse',\n      target: 'Babet',\n      value: 2\n    }, {\n      source: 'Montparnasse',\n      target: 'Gueulemer',\n      value: 2\n    }, {\n      source: 'Montparnasse',\n      target: 'Claquesous',\n      value: 2\n    }, {\n      source: 'Montparnasse',\n      target: 'Valjean',\n      value: 1\n    }, {\n      source: 'Montparnasse',\n      target: 'Gavroche',\n      value: 1\n    }, {\n      source: 'Montparnasse',\n      target: 'Eponine',\n      value: 1\n    }, {\n      source: 'Montparnasse',\n      target: 'Thenardier',\n      value: 1\n    }, {\n      source: 'Toussaint',\n      target: 'Cosette',\n      value: 2\n    }, {\n      source: 'Toussaint',\n      target: 'Javert',\n      value: 1\n    }, {\n      source: 'Toussaint',\n      target: 'Valjean',\n      value: 1\n    }, {\n      source: 'Child1',\n      target: 'Gavroche',\n      value: 2\n    }, {\n      source: 'Child2',\n      target: 'Gavroche',\n      value: 2\n    }, {\n      source: 'Child2',\n      target: 'Child1',\n      value: 3\n    }, {\n      source: 'Brujon',\n      target: 'Babet',\n      value: 3\n    }, {\n      source: 'Brujon',\n      target: 'Gueulemer',\n      value: 3\n    }, {\n      source: 'Brujon',\n      target: 'Thenardier',\n      value: 3\n    }, {\n      source: 'Brujon',\n      target: 'Gavroche',\n      value: 1\n    }, {\n      source: 'Brujon',\n      target: 'Eponine',\n      value: 1\n    }, {\n      source: 'Brujon',\n      target: 'Claquesous',\n      value: 1\n    }, {\n      source: 'Brujon',\n      target: 'Montparnasse',\n      value: 1\n    }, {\n      source: 'Mme.Hucheloup',\n      target: 'Bossuet',\n      value: 1\n    }, {\n      source: 'Mme.Hucheloup',\n      target: 'Joly',\n      value: 1\n    }, {\n      source: 'Mme.Hucheloup',\n      target: 'Grantaire',\n      value: 1\n    }, {\n      source: 'Mme.Hucheloup',\n      target: 'Bahorel',\n      value: 1\n    }, {\n      source: 'Mme.Hucheloup',\n      target: 'Courfeyrac',\n      value: 1\n    }, {\n      source: 'Mme.Hucheloup',\n      target: 'Gavroche',\n      value: 1\n    }, {\n      source: 'Mme.Hucheloup',\n      target: 'Enjolras',\n      value: 1\n    }]\n  };\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    var chart = ForceGraph(miserables, {\n      nodeId: function nodeId(d) {\n        return d.id;\n      },\n      nodeGroup: function nodeGroup(d) {\n        return d.group;\n      },\n      nodeTitle: function nodeTitle(d) {\n        return \"\".concat(d.id, \"\\n\").concat(d.group);\n      },\n      linkStroke: function linkStroke() {\n        return '#999';\n      },\n      linkStrokeWidth: function linkStrokeWidth(l) {\n        return Math.sqrt(l.value);\n      },\n      width: 600,\n      height: 600,\n      invalidation: null // a promise to stop the simulation when the cell is re-run\n\n    });\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n});"},{"relativePath":"ecosystem/demo/d3-linechart.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/ecosystem/demo/d3-linechart.js","order":4,"filename":"d3-linechart.js","title":{"zh":"替换 D3 渲染层 - 折线图","en":"D3's Linechart"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*j50URoC5hSMAAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as d3 from 'd3';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n/**\n * inspired by sprite.js\n * @see http://spritejs.com/#/en/guide/d3\n *\n * ported from fullstack-d3\n * @see https://codesandbox.io/s/30io6?file=/chart.js\n */\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst svgRenderer = new SVGRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst webgpuRenderer = new WebGPURenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf',\n    },\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\nconst drawLineChart = async () => {\n  // 1. Access data\n  const data = await d3.json(\n    'https://gw.alipayobjects.com/os/bmw-prod/8e7cfeb6-28e5-4e78-8d16-c08468360f5f.json',\n  );\n  const parseDate = d3.timeParse('%Y-%m-%d');\n  //define x axis with xAccessor, wrape with parseDate from above\n  const xAccessor = (d) => parseDate(d['date']);\n  const yAccessor = (d) => d['temperatureMax'];\n\n  // 2. Create chart dimensions\n  const width = 600;\n  let dimensions = {\n    width: width,\n    height: width * 0.6,\n    margin: {\n      top: 30,\n      right: 10,\n      bottom: 50,\n      left: 50,\n    },\n  };\n  dimensions.boundedWidth = dimensions.width - dimensions.margin.left - dimensions.margin.right;\n  dimensions.boundedHeight = dimensions.height - dimensions.margin.top - dimensions.margin.bottom;\n\n  // 3. Draw canvas\n  const container = d3\n    .select(\n      canvas.document.documentElement, // use GCanvas' document element instead of a real DOM\n    )\n    .append('g')\n    .attr('x', dimensions.margin.left)\n    .attr('y', dimensions.margin.top);\n\n  // 4. Create scales\n\n  const yScale = d3\n    .scaleLinear()\n    //domain is the min and max input value, range is min and max output\n    //domain should be the smallest and largest numbers our y axis will need to handle — in this case the lowest and highest max temperature in our dataset.\n    // could define ourselves with .domain([0, 100])\n    //better to use d3.extent, which will figure if out for us\n    //needs two parameters, the data and the yAccessor (temp max)\n    .domain(d3.extent(data, yAccessor))\n    //range, in this case, should be min and max on xaxis. Can use boundedHeight to stay within margins\n    .range([dimensions.boundedHeight, 0]);\n\n  //Draw a rectangle covering all temps below freezing.\n  //define scale - 32 degrees\n  const freezingTemperaturePlacement = yScale(32);\n  //create the rectangle with x,y, width and height\n  const freezingTemperatures = container\n    .append('rect')\n    .attr('x', 0)\n    .attr('width', dimensions.boundedWidth)\n    .attr('y', freezingTemperaturePlacement)\n    .attr('height', dimensions.boundedHeight - freezingTemperaturePlacement)\n    .attr('fill', '#e0f3f3');\n\n  const xScale = d3\n    .scaleTime()\n    .domain(d3.extent(data, xAccessor))\n    .range([0, dimensions.boundedWidth]);\n\n  // 5. Draw data\n\n  //We transform our data point with both the accessor function and the scale to get the scaled value in pixel space.\n\n  const lineGenerator = d3\n    .line()\n    .x((d) => xScale(xAccessor(d)))\n    .y((d) => yScale(yAccessor(d)));\n\n  //Now add the path element to the points\n  // Will be filled by default. Use styles to add a stroke\n  const line = container\n    .append('path')\n    .attr('d', lineGenerator(data))\n    .attr('fill', 'none')\n    .attr('stroke', '#af9358')\n    .attr('stroke-width', 2);\n\n  // 6. Draw Axis\n\n  const yAxisGenerator = d3.axisLeft().scale(yScale);\n\n  const yAxis = container.append('g').call(yAxisGenerator);\n\n  const xAxisGenerator = d3.axisBottom().scale(xScale);\n\n  const xAxis = container\n    .append('g')\n    .call(xAxisGenerator)\n    .style('transform', `translateY(${dimensions.boundedHeight}px)`);\n};\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  drawLineChart();\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"d3\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"d3\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.d3, global.lilGui, global.stats);\n    global.d3Linechart = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, d3, lil, _stats) {\n  \"use strict\";\n\n  d3 = _interopRequireWildcard(d3);\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * inspired by sprite.js\n   * @see http://spritejs.com/#/en/guide/d3\n   *\n   * ported from fullstack-d3\n   * @see https://codesandbox.io/s/30io6?file=/chart.js\n   */\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var webgpuRenderer = new _gWebgpu.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf'\n    }, {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  }); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n\n  var drawLineChart = async function drawLineChart() {\n    // 1. Access data\n    var data = await d3.json('https://gw.alipayobjects.com/os/bmw-prod/8e7cfeb6-28e5-4e78-8d16-c08468360f5f.json');\n    var parseDate = d3.timeParse('%Y-%m-%d'); //define x axis with xAccessor, wrape with parseDate from above\n\n    var xAccessor = function xAccessor(d) {\n      return parseDate(d['date']);\n    };\n\n    var yAccessor = function yAccessor(d) {\n      return d['temperatureMax'];\n    }; // 2. Create chart dimensions\n\n\n    var width = 600;\n    var dimensions = {\n      width: width,\n      height: width * 0.6,\n      margin: {\n        top: 30,\n        right: 10,\n        bottom: 50,\n        left: 50\n      }\n    };\n    dimensions.boundedWidth = dimensions.width - dimensions.margin.left - dimensions.margin.right;\n    dimensions.boundedHeight = dimensions.height - dimensions.margin.top - dimensions.margin.bottom; // 3. Draw canvas\n\n    var container = d3.select(canvas.document.documentElement // use GCanvas' document element instead of a real DOM\n    ).append('g').attr('x', dimensions.margin.left).attr('y', dimensions.margin.top); // 4. Create scales\n\n    var yScale = d3.scaleLinear() //domain is the min and max input value, range is min and max output\n    //domain should be the smallest and largest numbers our y axis will need to handle — in this case the lowest and highest max temperature in our dataset.\n    // could define ourselves with .domain([0, 100])\n    //better to use d3.extent, which will figure if out for us\n    //needs two parameters, the data and the yAccessor (temp max)\n    .domain(d3.extent(data, yAccessor)) //range, in this case, should be min and max on xaxis. Can use boundedHeight to stay within margins\n    .range([dimensions.boundedHeight, 0]); //Draw a rectangle covering all temps below freezing.\n    //define scale - 32 degrees\n\n    var freezingTemperaturePlacement = yScale(32); //create the rectangle with x,y, width and height\n\n    var freezingTemperatures = container.append('rect').attr('x', 0).attr('width', dimensions.boundedWidth).attr('y', freezingTemperaturePlacement).attr('height', dimensions.boundedHeight - freezingTemperaturePlacement).attr('fill', '#e0f3f3');\n    var xScale = d3.scaleTime().domain(d3.extent(data, xAccessor)).range([0, dimensions.boundedWidth]); // 5. Draw data\n    //We transform our data point with both the accessor function and the scale to get the scaled value in pixel space.\n\n    var lineGenerator = d3.line().x(function (d) {\n      return xScale(xAccessor(d));\n    }).y(function (d) {\n      return yScale(yAccessor(d));\n    }); //Now add the path element to the points\n    // Will be filled by default. Use styles to add a stroke\n\n    var line = container.append('path').attr('d', lineGenerator(data)).attr('fill', 'none').attr('stroke', '#af9358').attr('stroke-width', 2); // 6. Draw Axis\n\n    var yAxisGenerator = d3.axisLeft().scale(yScale);\n    var yAxis = container.append('g').call(yAxisGenerator);\n    var xAxisGenerator = d3.axisBottom().scale(xScale);\n    var xAxis = container.append('g').call(xAxisGenerator).style('transform', \"translateY(\".concat(dimensions.boundedHeight, \"px)\"));\n  };\n\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    drawLineChart();\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n});"},{"relativePath":"ecosystem/demo/d3-piechart.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/ecosystem/demo/d3-piechart.js","order":2,"filename":"d3-piechart.js","title":{"zh":"替换 D3 渲染层 - 饼图","en":"D3's Piechart"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*Wq7wSK_0p3AAAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as d3 from 'd3';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n/**\n * inspired by sprite.js\n * @see http://spritejs.com/#/en/guide/d3\n *\n * ported from fullstack-d3\n * @see https://codesandbox.io/s/z375662r0p?file=/src/index.js\n */\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst svgRenderer = new SVGRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst webgpuRenderer = new WebGPURenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf',\n    },\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\nconst data = [38024.7, 209484.6, 6201.2, 17741.9, 24377.7];\nconst total = d3.sum(data);\nconst colors = 'blue red maroon gray orange'.split(' ');\nconst width = 600;\nconst sectorArc = d3\n  .arc()\n  .innerRadius(width / 8)\n  .outerRadius(width / 5);\nconst tweens = [\n  function (sectorData) {\n    const currentPath = this.getAttribute('d');\n    return d3.interpolate(currentPath, sectorArc(sectorData));\n  },\n  function (sectorData) {\n    const interpolator = d3.interpolate(this._current, sectorData);\n    this._current = interpolator(0);\n    return (t) => sectorArc(interpolator(t));\n  },\n];\nlet svg;\n\nfunction drawCharts(data) {\n  const pieData = d3.pie().sort(null)(data);\n  const sectors = svg.selectAll('path').data(pieData);\n\n  sectors\n    .enter()\n    .append('path')\n    .attr('fill', (_, i) => colors[i])\n    .attr('d', sectorArc)\n    .property('_current', (d) => d);\n\n  sectors.transition().duration(1000).attrTween('d', tweens[1]);\n}\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  const wrapper = d3.select(\n    canvas.document.documentElement, // use GCanvas' document element instead of a real DOM\n  );\n\n  const bounds = wrapper\n    .append('g')\n    .style('transform', `translate(${width / 2}px, ${width / 2}px)`);\n  svg = bounds.append('g');\n\n  drawCharts(data);\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.on('afterrender', () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n\nlet isEven = false;\nconst animationFolder = gui.addFolder('animation');\nconst animationConfig = {\n  swapData: () => {\n    isEven = !isEven;\n    drawCharts(isEven ? [...data].fill(total / data.length) : data);\n  },\n};\nanimationFolder.add(animationConfig, 'swapData');\nanimationFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"d3\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"d3\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.d3, global.lilGui, global.stats);\n    global.d3Piechart = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, d3, lil, _stats) {\n  \"use strict\";\n\n  d3 = _interopRequireWildcard(d3);\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * inspired by sprite.js\n   * @see http://spritejs.com/#/en/guide/d3\n   *\n   * ported from fullstack-d3\n   * @see https://codesandbox.io/s/z375662r0p?file=/src/index.js\n   */\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var webgpuRenderer = new _gWebgpu.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf'\n    }, {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  }); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  var data = [38024.7, 209484.6, 6201.2, 17741.9, 24377.7];\n  var total = d3.sum(data);\n  var colors = 'blue red maroon gray orange'.split(' ');\n  var width = 600;\n  var sectorArc = d3.arc().innerRadius(width / 8).outerRadius(width / 5);\n  var tweens = [function (sectorData) {\n    var currentPath = this.getAttribute('d');\n    return d3.interpolate(currentPath, sectorArc(sectorData));\n  }, function (sectorData) {\n    var interpolator = d3.interpolate(this._current, sectorData);\n    this._current = interpolator(0);\n    return function (t) {\n      return sectorArc(interpolator(t));\n    };\n  }];\n  var svg;\n\n  function drawCharts(data) {\n    var pieData = d3.pie().sort(null)(data);\n    var sectors = svg.selectAll('path').data(pieData);\n    sectors.enter().append('path').attr('fill', function (_, i) {\n      return colors[i];\n    }).attr('d', sectorArc).property('_current', function (d) {\n      return d;\n    });\n    sectors.transition().duration(1000).attrTween('d', tweens[1]);\n  }\n\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    var wrapper = d3.select(canvas.document.documentElement // use GCanvas' document element instead of a real DOM\n    );\n    var bounds = wrapper.append('g').style('transform', \"translate(\".concat(width / 2, \"px, \").concat(width / 2, \"px)\"));\n    svg = bounds.append('g');\n    drawCharts(data);\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.on('afterrender', function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n  var isEven = false;\n  var animationFolder = gui.addFolder('animation');\n  var animationConfig = {\n    swapData: function swapData() {\n      isEven = !isEven;\n      drawCharts(isEven ? [].concat(data).fill(total / data.length) : data);\n    }\n  };\n  animationFolder.add(animationConfig, 'swapData');\n  animationFolder.open();\n});"},{"relativePath":"ecosystem/demo/d3-scatterplot.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/ecosystem/demo/d3-scatterplot.js","order":5,"filename":"d3-scatterplot.js","title":{"zh":"替换 D3 渲染层 - 散点图","en":"D3's Scatterplot"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*JTbHSYrWlYQAAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as d3 from 'd3';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n/**\n * use D3's data-driven syntax & G's rendering, ported from fullstack-d3\n * @see https://codesandbox.io/s/ruu4q?file=/chart.js\n *\n * inspired by sprite.js\n * @see http://spritejs.com/#/en/guide/d3\n */\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst svgRenderer = new SVGRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst webgpuRenderer = new WebGPURenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf',\n    },\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 600,\n  renderer: canvasRenderer,\n});\n\nconst drawScatter = async () => {\n  // 1. Access data\n  const dataset = await d3.json(\n    'https://gw.alipayobjects.com/os/bmw-prod/8e7cfeb6-28e5-4e78-8d16-c08468360f5f.json',\n  );\n  const xAccessor = (d) => d.dewPoint;\n  const yAccessor = (d) => d.humidity;\n  const colorAccessor = (d) => d.cloudCover;\n\n  // 2. Create chart dimensions\n  const width = 600;\n  let dimensions = {\n    width: width,\n    height: width,\n    margin: {\n      top: 10,\n      right: 10,\n      bottom: 50,\n      left: 50,\n    },\n  };\n  dimensions.boundedWidth = dimensions.width - dimensions.margin.left - dimensions.margin.right;\n  dimensions.boundedHeight = dimensions.height - dimensions.margin.top - dimensions.margin.bottom;\n\n  // 3. Draw canvas\n  const bounds = d3\n    .select(\n      canvas.document.documentElement, // use GCanvas' document element instead of a real DOM\n    )\n    .append('g')\n    .attr('x', dimensions.margin.left)\n    .attr('y', dimensions.margin.top);\n\n  // 4. Create scales\n\n  const xScale = d3\n    .scaleLinear()\n    .domain(d3.extent(dataset, xAccessor))\n    .range([0, dimensions.boundedWidth])\n    .nice();\n\n  const yScale = d3\n    .scaleLinear()\n    .domain(d3.extent(dataset, yAccessor))\n    .range([dimensions.boundedHeight, 0])\n    .nice();\n\n  const colorScale = d3\n    .scaleLinear()\n    .domain(d3.extent(dataset, colorAccessor))\n    .range(['skyblue', 'darkslategrey']);\n\n  // 5. Draw data\n\n  const dots = bounds.selectAll('circle').data(dataset);\n\n  dots\n    .join('circle')\n    .attr('cx', (d) => xScale(xAccessor(d)))\n    .attr('cy', (d) => yScale(yAccessor(d)))\n    .attr('r', 5)\n    .attr('fill', (d) => colorScale(colorAccessor(d)));\n\n  // 6. Draw Preipherals - x axis and y axis\n\n  //create a variable for xaxis and define it\n  const xAxisGenerator = d3.axisBottom().scale(xScale);\n\n  //add to the bounds\n  const xAxis = bounds\n    .append('g')\n    .call(xAxisGenerator)\n    //move to the bottom of the screen\n    .style('transform', `translateY(${dimensions.boundedHeight}px)`);\n\n  const xAxisLabel = xAxis\n    .append('text')\n    .attr('x', dimensions.boundedWidth / 2)\n    .attr('y', dimensions.margin.bottom - 10)\n    .attr('fill', 'black')\n    .style('font-size', '1.4em')\n    .html('Dew point (&deg;F)');\n\n  //same thing with the y axis\n  const yAxisGenerator = d3\n    .axisLeft()\n    .scale(yScale)\n    //define the number of ticks that you want\n    .ticks(4);\n\n  const yAxis = bounds.append('g').call(yAxisGenerator);\n\n  const yAxisLabel = yAxis\n    .append('text')\n    //using negative dimensions so we can rotate below with transform\n    .attr('x', -dimensions.boundedHeight / 2)\n    .attr('y', -dimensions.margin.left + 10)\n    .style('fill', 'black')\n    .text('Relative Humidity')\n    .style('transform', 'rotate(-90deg)')\n    .style('font-size', '1.4em')\n    .style('text-anchor', 'middle');\n};\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  drawScatter();\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\n\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"d3\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"d3\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.d3, global.lilGui, global.stats);\n    global.d3Scatterplot = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, d3, lil, _stats) {\n  \"use strict\";\n\n  d3 = _interopRequireWildcard(d3);\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * use D3's data-driven syntax & G's rendering, ported from fullstack-d3\n   * @see https://codesandbox.io/s/ruu4q?file=/chart.js\n   *\n   * inspired by sprite.js\n   * @see http://spritejs.com/#/en/guide/d3\n   */\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var webgpuRenderer = new _gWebgpu.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf'\n    }, {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  }); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 600,\n    renderer: canvasRenderer\n  });\n\n  var drawScatter = async function drawScatter() {\n    // 1. Access data\n    var dataset = await d3.json('https://gw.alipayobjects.com/os/bmw-prod/8e7cfeb6-28e5-4e78-8d16-c08468360f5f.json');\n\n    var xAccessor = function xAccessor(d) {\n      return d.dewPoint;\n    };\n\n    var yAccessor = function yAccessor(d) {\n      return d.humidity;\n    };\n\n    var colorAccessor = function colorAccessor(d) {\n      return d.cloudCover;\n    }; // 2. Create chart dimensions\n\n\n    var width = 600;\n    var dimensions = {\n      width: width,\n      height: width,\n      margin: {\n        top: 10,\n        right: 10,\n        bottom: 50,\n        left: 50\n      }\n    };\n    dimensions.boundedWidth = dimensions.width - dimensions.margin.left - dimensions.margin.right;\n    dimensions.boundedHeight = dimensions.height - dimensions.margin.top - dimensions.margin.bottom; // 3. Draw canvas\n\n    var bounds = d3.select(canvas.document.documentElement // use GCanvas' document element instead of a real DOM\n    ).append('g').attr('x', dimensions.margin.left).attr('y', dimensions.margin.top); // 4. Create scales\n\n    var xScale = d3.scaleLinear().domain(d3.extent(dataset, xAccessor)).range([0, dimensions.boundedWidth]).nice();\n    var yScale = d3.scaleLinear().domain(d3.extent(dataset, yAccessor)).range([dimensions.boundedHeight, 0]).nice();\n    var colorScale = d3.scaleLinear().domain(d3.extent(dataset, colorAccessor)).range(['skyblue', 'darkslategrey']); // 5. Draw data\n\n    var dots = bounds.selectAll('circle').data(dataset);\n    dots.join('circle').attr('cx', function (d) {\n      return xScale(xAccessor(d));\n    }).attr('cy', function (d) {\n      return yScale(yAccessor(d));\n    }).attr('r', 5).attr('fill', function (d) {\n      return colorScale(colorAccessor(d));\n    }); // 6. Draw Preipherals - x axis and y axis\n    //create a variable for xaxis and define it\n\n    var xAxisGenerator = d3.axisBottom().scale(xScale); //add to the bounds\n\n    var xAxis = bounds.append('g').call(xAxisGenerator) //move to the bottom of the screen\n    .style('transform', \"translateY(\".concat(dimensions.boundedHeight, \"px)\"));\n    var xAxisLabel = xAxis.append('text').attr('x', dimensions.boundedWidth / 2).attr('y', dimensions.margin.bottom - 10).attr('fill', 'black').style('font-size', '1.4em').html('Dew point (&deg;F)'); //same thing with the y axis\n\n    var yAxisGenerator = d3.axisLeft().scale(yScale) //define the number of ticks that you want\n    .ticks(4);\n    var yAxis = bounds.append('g').call(yAxisGenerator);\n    var yAxisLabel = yAxis.append('text') //using negative dimensions so we can rotate below with transform\n    .attr('x', -dimensions.boundedHeight / 2).attr('y', -dimensions.margin.left + 10).style('fill', 'black').text('Relative Humidity').style('transform', 'rotate(-90deg)').style('font-size', '1.4em').style('text-anchor', 'middle');\n  };\n\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    drawScatter();\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n});"},{"relativePath":"ecosystem/demo/image-exporter.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/ecosystem/demo/image-exporter.js","order":10,"filename":"image-exporter.js","title":{"zh":"导出画布内容成图片","en":"Export canvas' contents to image"},"source":"import { Canvas, CanvasEvent, HTML, Rectangle } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { ImageExporter } from '@antv/g-image-exporter';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as d3 from 'd3';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n/**\n * Export contents in canvas to image.\n *\n * inspired by sprite.js\n * @see http://spritejs.com/#/en/guide/d3\n *\n * ported from fullstack-d3\n * @see https://codesandbox.io/s/vllpx?file=/chart.js\n */\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst svgRenderer = new SVGRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst webgpuRenderer = new WebGPURenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\nconst exporter = new ImageExporter({\n  canvas,\n  defaultFilename: 'test',\n});\n\nconst drawBars = async () => {\n  // 1. Access data\n  const dataset = await d3.json(\n    'https://gw.alipayobjects.com/os/bmw-prod/8e7cfeb6-28e5-4e78-8d16-c08468360f5f.json',\n  );\n  const metricAccessor = (d) => d.humidity;\n  const yAccessor = (d) => d.length;\n\n  // 2. Create chart dimensions\n  const width = 600;\n  let dimensions = {\n    width: width,\n    height: width * 0.6,\n    margin: {\n      top: 30,\n      right: 10,\n      bottom: 50,\n      left: 50,\n    },\n  };\n  dimensions.boundedWidth = dimensions.width - dimensions.margin.left - dimensions.margin.right;\n  dimensions.boundedHeight = dimensions.height - dimensions.margin.top - dimensions.margin.bottom;\n\n  // 3. Draw canvas\n  const wrapper = d3.select(\n    canvas.document.documentElement, // use GCanvas' document element instead of a real DOM\n  );\n\n  const bounds = wrapper\n    .append('g')\n    .style('transform', `translate(${dimensions.margin.left}px, ${dimensions.margin.top}px)`);\n\n  // 4. Create scales\n\n  const xScale = d3\n    .scaleLinear()\n    .domain(d3.extent(dataset, metricAccessor))\n    .range([0, dimensions.boundedWidth])\n    .nice();\n\n  const binsGenerator = d3.bin().domain(xScale.domain()).value(metricAccessor).thresholds(12);\n\n  const bins = binsGenerator(dataset);\n\n  const yScale = d3\n    .scaleLinear()\n    .domain([0, d3.max(bins, yAccessor)])\n    .range([dimensions.boundedHeight, 0])\n    .nice();\n\n  // 5. Draw data\n  const binsGroup = bounds.append('g');\n  const binGroups = binsGroup.selectAll('g').data(bins).join('g').attr('class', 'bin');\n\n  const barPadding = 1;\n  const barRects = binGroups\n    .append('rect')\n    .attr('x', (d) => xScale(d.x0) + barPadding / 2)\n    .attr('y', (d) => yScale(yAccessor(d)))\n    .attr('width', (d) => d3.max([0, xScale(d.x1) - xScale(d.x0) - barPadding]))\n    .attr('height', (d) => dimensions.boundedHeight - yScale(yAccessor(d)))\n    .attr('fill', 'cornflowerblue')\n    .on('mouseenter', function (e) {\n      d3.select(e.target).attr('fill', 'red');\n    })\n    .on('mouseleave', function (e) {\n      d3.select(e.target).attr('fill', 'cornflowerblue');\n    });\n\n  const barText = binGroups\n    .filter(yAccessor)\n    .append('text')\n    .attr('x', (d) => xScale(d.x0) + (xScale(d.x1) - xScale(d.x0)) / 2)\n    .attr('y', (d) => yScale(yAccessor(d)) - 5)\n    .text(yAccessor)\n    .attr('fill', 'darkgrey')\n    .style('text-anchor', 'middle')\n    .style('font-size', '12px')\n    .style('font-family', 'sans-serif');\n\n  const mean = d3.mean(dataset, metricAccessor);\n  const meanLine = bounds\n    .append('line')\n    .attr('x1', xScale(mean))\n    .attr('x2', xScale(mean))\n    .attr('y1', -15)\n    .attr('y2', dimensions.boundedHeight)\n    .attr('stroke-width', 1)\n    .attr('stroke', 'maroon')\n    .attr('stroke-dasharray', '2px 4px');\n\n  const meanLabel = bounds\n    .append('text')\n    .attr('x', xScale(mean))\n    .attr('y', -20)\n    .text('mean')\n    .attr('fill', 'maroon')\n    .style('font-size', '12px')\n    .style('text-anchor', 'middle');\n\n  // 6. Draw peripherals\n  const xAxisGenerator = d3.axisBottom().scale(xScale);\n\n  const xAxis = bounds\n    .append('g')\n    .call(xAxisGenerator)\n    .attr('transform', `translateY(${dimensions.boundedHeight}px)`)\n    .attr('fill', 'black');\n\n  const xAxisLabel = xAxis\n    .append('text')\n    .attr('x', dimensions.boundedWidth / 2)\n    .attr('y', dimensions.margin.bottom - 10)\n    .attr('fill', 'black')\n    .style('font-size', '10px')\n    .text('Humidity')\n    .style('text-transform', 'capitalize');\n};\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  drawBars();\n\n  const tooltip = new HTML({\n    style: {\n      x: 100,\n      y: 100,\n      innerHTML: 'Tooltip',\n      fill: 'white',\n      stroke: 'black',\n      lineWidth: 6,\n      width: 100,\n      height: 30,\n      pointerEvents: 'none',\n    },\n  });\n  canvas.appendChild(tooltip);\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n\nconst exporterFolder = gui.addFolder('exporter');\nconst exporterConfig = {\n  clippingRegionX: 0,\n  clippingRegionY: 0,\n  clippingRegionWidth: 600,\n  clippingRegionHeight: 500,\n  enableBackgroundColor: false,\n  backgroundColor: 'none',\n  enableWatermark: false,\n  type: 'image/png',\n  encoderOptions: 1,\n  toDataURL: async () => {\n    const {\n      clippingRegionX,\n      clippingRegionY,\n      clippingRegionWidth,\n      clippingRegionHeight,\n      enableBackgroundColor,\n      backgroundColor,\n      enableWatermark,\n      type,\n      encoderOptions,\n    } = exporterConfig;\n    const canvas = await exporter.toCanvas({\n      ignoreElements: (element) => {\n        return [gui.domElement, stats.dom].indexOf(element) > -1;\n      },\n      clippingRegion: new Rectangle(\n        clippingRegionX,\n        clippingRegionY,\n        clippingRegionWidth,\n        clippingRegionHeight,\n      ),\n      beforeDrawImage: (context) => {\n        if (enableBackgroundColor) {\n          context.fillStyle = backgroundColor;\n          context.fillRect(0, 0, clippingRegionWidth, clippingRegionHeight);\n        }\n      },\n      afterDrawImage: (context) => {\n        if (enableWatermark) {\n          context.font = '24px Times New Roman';\n          context.fillStyle = '#FFC82C';\n          context.fillText('AntV', 20, 20);\n        }\n      },\n    });\n    console.log(canvas.toDataURL(type, encoderOptions));\n  },\n  downloadImage: async () => {\n    const {\n      clippingRegionX,\n      clippingRegionY,\n      clippingRegionWidth,\n      clippingRegionHeight,\n      enableBackgroundColor,\n      backgroundColor,\n      enableWatermark,\n      type,\n      encoderOptions,\n    } = exporterConfig;\n    const canvas = await exporter.toCanvas({\n      ignoreElements: (element) => {\n        return [gui.domElement, stats.dom].indexOf(element) > -1;\n      },\n      clippingRegion: new Rectangle(\n        clippingRegionX,\n        clippingRegionY,\n        clippingRegionWidth,\n        clippingRegionHeight,\n      ),\n      beforeDrawImage: (context) => {\n        if (enableBackgroundColor) {\n          context.fillStyle = backgroundColor;\n          context.fillRect(0, 0, clippingRegionWidth, clippingRegionHeight);\n        }\n      },\n      afterDrawImage: (context) => {\n        if (enableWatermark) {\n          context.font = '24px Times New Roman';\n          context.fillStyle = '#FFC82C';\n          context.fillText('AntV', 20, 20);\n        }\n      },\n    });\n    const dataURL = canvas.toDataURL(type, encoderOptions);\n    exporter.downloadImage({\n      dataURL,\n      name: 'test',\n    });\n  },\n  toSVGDataURL: async () => {\n    const svgDataURL = await exporter.toSVGDataURL();\n    if (!svgDataURL) {\n      console.log(\"Current renderer doesn't support exporting SVG.\");\n    } else {\n      console.log(svgDataURL);\n    }\n  },\n  downloadSVG: async () => {\n    const svgDataURL = await exporter.toSVGDataURL();\n    if (!svgDataURL) {\n      console.log(\"Current renderer doesn't support exporting SVG.\");\n    } else {\n      exporter.downloadImage({\n        dataURL: svgDataURL,\n        name: 'test',\n      });\n    }\n  },\n};\nexporterFolder.add(exporterConfig, 'clippingRegionX', 0, 600);\nexporterFolder.add(exporterConfig, 'clippingRegionY', 0, 500);\nexporterFolder.add(exporterConfig, 'clippingRegionWidth', 0, 600);\nexporterFolder.add(exporterConfig, 'clippingRegionHeight', 0, 500);\nexporterFolder.add(exporterConfig, 'enableBackgroundColor');\nexporterFolder.addColor(exporterConfig, 'backgroundColor');\nexporterFolder.add(exporterConfig, 'enableWatermark');\nexporterFolder.add(exporterConfig, 'type', ['image/png', 'image/jpeg', 'image/webp', 'image/bmp']);\nexporterFolder.add(exporterConfig, 'encoderOptions', 0, 1);\nexporterFolder.add(exporterConfig, 'toDataURL');\nexporterFolder.add(exporterConfig, 'downloadImage');\nexporterFolder.add(exporterConfig, 'toSVGDataURL');\nexporterFolder.add(exporterConfig, 'downloadSVG');\nexporterFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-image-exporter\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"d3\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-image-exporter\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"d3\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gImageExporter, global.gSvg, global.gWebgl, global.gWebgpu, global.d3, global.lilGui, global.stats);\n    global.imageExporter = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gImageExporter, _gSvg, _gWebgl, _gWebgpu, d3, lil, _stats) {\n  \"use strict\";\n\n  d3 = _interopRequireWildcard(d3);\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * Export contents in canvas to image.\n   *\n   * inspired by sprite.js\n   * @see http://spritejs.com/#/en/guide/d3\n   *\n   * ported from fullstack-d3\n   * @see https://codesandbox.io/s/vllpx?file=/chart.js\n   */\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var webgpuRenderer = new _gWebgpu.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  }); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  var exporter = new _gImageExporter.ImageExporter({\n    canvas: canvas,\n    defaultFilename: 'test'\n  });\n\n  var drawBars = async function drawBars() {\n    // 1. Access data\n    var dataset = await d3.json('https://gw.alipayobjects.com/os/bmw-prod/8e7cfeb6-28e5-4e78-8d16-c08468360f5f.json');\n\n    var metricAccessor = function metricAccessor(d) {\n      return d.humidity;\n    };\n\n    var yAccessor = function yAccessor(d) {\n      return d.length;\n    }; // 2. Create chart dimensions\n\n\n    var width = 600;\n    var dimensions = {\n      width: width,\n      height: width * 0.6,\n      margin: {\n        top: 30,\n        right: 10,\n        bottom: 50,\n        left: 50\n      }\n    };\n    dimensions.boundedWidth = dimensions.width - dimensions.margin.left - dimensions.margin.right;\n    dimensions.boundedHeight = dimensions.height - dimensions.margin.top - dimensions.margin.bottom; // 3. Draw canvas\n\n    var wrapper = d3.select(canvas.document.documentElement // use GCanvas' document element instead of a real DOM\n    );\n    var bounds = wrapper.append('g').style('transform', \"translate(\".concat(dimensions.margin.left, \"px, \").concat(dimensions.margin.top, \"px)\")); // 4. Create scales\n\n    var xScale = d3.scaleLinear().domain(d3.extent(dataset, metricAccessor)).range([0, dimensions.boundedWidth]).nice();\n    var binsGenerator = d3.bin().domain(xScale.domain()).value(metricAccessor).thresholds(12);\n    var bins = binsGenerator(dataset);\n    var yScale = d3.scaleLinear().domain([0, d3.max(bins, yAccessor)]).range([dimensions.boundedHeight, 0]).nice(); // 5. Draw data\n\n    var binsGroup = bounds.append('g');\n    var binGroups = binsGroup.selectAll('g').data(bins).join('g').attr('class', 'bin');\n    var barPadding = 1;\n    var barRects = binGroups.append('rect').attr('x', function (d) {\n      return xScale(d.x0) + barPadding / 2;\n    }).attr('y', function (d) {\n      return yScale(yAccessor(d));\n    }).attr('width', function (d) {\n      return d3.max([0, xScale(d.x1) - xScale(d.x0) - barPadding]);\n    }).attr('height', function (d) {\n      return dimensions.boundedHeight - yScale(yAccessor(d));\n    }).attr('fill', 'cornflowerblue').on('mouseenter', function (e) {\n      d3.select(e.target).attr('fill', 'red');\n    }).on('mouseleave', function (e) {\n      d3.select(e.target).attr('fill', 'cornflowerblue');\n    });\n    var barText = binGroups.filter(yAccessor).append('text').attr('x', function (d) {\n      return xScale(d.x0) + (xScale(d.x1) - xScale(d.x0)) / 2;\n    }).attr('y', function (d) {\n      return yScale(yAccessor(d)) - 5;\n    }).text(yAccessor).attr('fill', 'darkgrey').style('text-anchor', 'middle').style('font-size', '12px').style('font-family', 'sans-serif');\n    var mean = d3.mean(dataset, metricAccessor);\n    var meanLine = bounds.append('line').attr('x1', xScale(mean)).attr('x2', xScale(mean)).attr('y1', -15).attr('y2', dimensions.boundedHeight).attr('stroke-width', 1).attr('stroke', 'maroon').attr('stroke-dasharray', '2px 4px');\n    var meanLabel = bounds.append('text').attr('x', xScale(mean)).attr('y', -20).text('mean').attr('fill', 'maroon').style('font-size', '12px').style('text-anchor', 'middle'); // 6. Draw peripherals\n\n    var xAxisGenerator = d3.axisBottom().scale(xScale);\n    var xAxis = bounds.append('g').call(xAxisGenerator).attr('transform', \"translateY(\".concat(dimensions.boundedHeight, \"px)\")).attr('fill', 'black');\n    var xAxisLabel = xAxis.append('text').attr('x', dimensions.boundedWidth / 2).attr('y', dimensions.margin.bottom - 10).attr('fill', 'black').style('font-size', '10px').text('Humidity').style('text-transform', 'capitalize');\n  };\n\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    drawBars();\n    var tooltip = new _g.HTML({\n      style: {\n        x: 100,\n        y: 100,\n        innerHTML: 'Tooltip',\n        fill: 'white',\n        stroke: 'black',\n        lineWidth: 6,\n        width: 100,\n        height: 30,\n        pointerEvents: 'none'\n      }\n    });\n    canvas.appendChild(tooltip);\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n  var exporterFolder = gui.addFolder('exporter');\n  var exporterConfig = {\n    clippingRegionX: 0,\n    clippingRegionY: 0,\n    clippingRegionWidth: 600,\n    clippingRegionHeight: 500,\n    enableBackgroundColor: false,\n    backgroundColor: 'none',\n    enableWatermark: false,\n    type: 'image/png',\n    encoderOptions: 1,\n    toDataURL: async function toDataURL() {\n      var clippingRegionX = exporterConfig.clippingRegionX,\n          clippingRegionY = exporterConfig.clippingRegionY,\n          clippingRegionWidth = exporterConfig.clippingRegionWidth,\n          clippingRegionHeight = exporterConfig.clippingRegionHeight,\n          enableBackgroundColor = exporterConfig.enableBackgroundColor,\n          backgroundColor = exporterConfig.backgroundColor,\n          enableWatermark = exporterConfig.enableWatermark,\n          type = exporterConfig.type,\n          encoderOptions = exporterConfig.encoderOptions;\n      var canvas = await exporter.toCanvas({\n        ignoreElements: function ignoreElements(element) {\n          return [gui.domElement, stats.dom].indexOf(element) > -1;\n        },\n        clippingRegion: new _g.Rectangle(clippingRegionX, clippingRegionY, clippingRegionWidth, clippingRegionHeight),\n        beforeDrawImage: function beforeDrawImage(context) {\n          if (enableBackgroundColor) {\n            context.fillStyle = backgroundColor;\n            context.fillRect(0, 0, clippingRegionWidth, clippingRegionHeight);\n          }\n        },\n        afterDrawImage: function afterDrawImage(context) {\n          if (enableWatermark) {\n            context.font = '24px Times New Roman';\n            context.fillStyle = '#FFC82C';\n            context.fillText('AntV', 20, 20);\n          }\n        }\n      });\n      console.log(canvas.toDataURL(type, encoderOptions));\n    },\n    downloadImage: async function downloadImage() {\n      var clippingRegionX = exporterConfig.clippingRegionX,\n          clippingRegionY = exporterConfig.clippingRegionY,\n          clippingRegionWidth = exporterConfig.clippingRegionWidth,\n          clippingRegionHeight = exporterConfig.clippingRegionHeight,\n          enableBackgroundColor = exporterConfig.enableBackgroundColor,\n          backgroundColor = exporterConfig.backgroundColor,\n          enableWatermark = exporterConfig.enableWatermark,\n          type = exporterConfig.type,\n          encoderOptions = exporterConfig.encoderOptions;\n      var canvas = await exporter.toCanvas({\n        ignoreElements: function ignoreElements(element) {\n          return [gui.domElement, stats.dom].indexOf(element) > -1;\n        },\n        clippingRegion: new _g.Rectangle(clippingRegionX, clippingRegionY, clippingRegionWidth, clippingRegionHeight),\n        beforeDrawImage: function beforeDrawImage(context) {\n          if (enableBackgroundColor) {\n            context.fillStyle = backgroundColor;\n            context.fillRect(0, 0, clippingRegionWidth, clippingRegionHeight);\n          }\n        },\n        afterDrawImage: function afterDrawImage(context) {\n          if (enableWatermark) {\n            context.font = '24px Times New Roman';\n            context.fillStyle = '#FFC82C';\n            context.fillText('AntV', 20, 20);\n          }\n        }\n      });\n      var dataURL = canvas.toDataURL(type, encoderOptions);\n      exporter.downloadImage({\n        dataURL: dataURL,\n        name: 'test'\n      });\n    },\n    toSVGDataURL: async function toSVGDataURL() {\n      var svgDataURL = await exporter.toSVGDataURL();\n\n      if (!svgDataURL) {\n        console.log(\"Current renderer doesn't support exporting SVG.\");\n      } else {\n        console.log(svgDataURL);\n      }\n    },\n    downloadSVG: async function downloadSVG() {\n      var svgDataURL = await exporter.toSVGDataURL();\n\n      if (!svgDataURL) {\n        console.log(\"Current renderer doesn't support exporting SVG.\");\n      } else {\n        exporter.downloadImage({\n          dataURL: svgDataURL,\n          name: 'test'\n        });\n      }\n    }\n  };\n  exporterFolder.add(exporterConfig, 'clippingRegionX', 0, 600);\n  exporterFolder.add(exporterConfig, 'clippingRegionY', 0, 500);\n  exporterFolder.add(exporterConfig, 'clippingRegionWidth', 0, 600);\n  exporterFolder.add(exporterConfig, 'clippingRegionHeight', 0, 500);\n  exporterFolder.add(exporterConfig, 'enableBackgroundColor');\n  exporterFolder.addColor(exporterConfig, 'backgroundColor');\n  exporterFolder.add(exporterConfig, 'enableWatermark');\n  exporterFolder.add(exporterConfig, 'type', ['image/png', 'image/jpeg', 'image/webp', 'image/bmp']);\n  exporterFolder.add(exporterConfig, 'encoderOptions', 0, 1);\n  exporterFolder.add(exporterConfig, 'toDataURL');\n  exporterFolder.add(exporterConfig, 'downloadImage');\n  exporterFolder.add(exporterConfig, 'toSVGDataURL');\n  exporterFolder.add(exporterConfig, 'downloadSVG');\n  exporterFolder.open();\n});"},{"relativePath":"ecosystem/demo/lite.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/ecosystem/demo/lite.js","order":11,"filename":"lite.js","title":{"zh":"使用轻量版","en":"Use lightweight version of G"},"source":"import { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Canvas, CanvasEvent } from '@antv/g-lite';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as d3 from 'd3';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n/**\n * inspired by sprite.js\n * @see http://spritejs.com/#/en/guide/d3\n *\n * ported from fullstack-d3\n * @see https://codesandbox.io/s/vllpx?file=/chart.js\n */\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst svgRenderer = new SVGRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst webgpuRenderer = new WebGPURenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf',\n    },\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\nconst drawBars = async () => {\n  // 1. Access data\n  const dataset = await d3.json(\n    'https://gw.alipayobjects.com/os/bmw-prod/8e7cfeb6-28e5-4e78-8d16-c08468360f5f.json',\n  );\n  const metricAccessor = (d) => d.humidity;\n  const yAccessor = (d) => d.length;\n\n  // 2. Create chart dimensions\n  const width = 600;\n  let dimensions = {\n    width: width,\n    height: width * 0.6,\n    margin: {\n      top: 30,\n      right: 10,\n      bottom: 50,\n      left: 50,\n    },\n  };\n  dimensions.boundedWidth = dimensions.width - dimensions.margin.left - dimensions.margin.right;\n  dimensions.boundedHeight = dimensions.height - dimensions.margin.top - dimensions.margin.bottom;\n\n  // 3. Draw canvas\n  const wrapper = d3.select(\n    canvas.document.documentElement, // use GCanvas' document element instead of a real DOM\n  );\n\n  const bounds = wrapper\n    .append('g')\n    .style('transform', `translate(${dimensions.margin.left}px, ${dimensions.margin.top}px)`);\n\n  // 4. Create scales\n\n  const xScale = d3\n    .scaleLinear()\n    .domain(d3.extent(dataset, metricAccessor))\n    .range([0, dimensions.boundedWidth])\n    .nice();\n\n  const binsGenerator = d3.bin().domain(xScale.domain()).value(metricAccessor).thresholds(12);\n\n  const bins = binsGenerator(dataset);\n\n  const yScale = d3\n    .scaleLinear()\n    .domain([0, d3.max(bins, yAccessor)])\n    .range([dimensions.boundedHeight, 0])\n    .nice();\n\n  // 5. Draw data\n  const binsGroup = bounds.append('g');\n  const binGroups = binsGroup.selectAll('g').data(bins).join('g').attr('class', 'bin');\n\n  const barPadding = 1;\n  const barRects = binGroups\n    .append('rect')\n    .attr('x', (d) => xScale(d.x0) + barPadding / 2)\n    .attr('y', (d) => yScale(yAccessor(d)))\n    .attr('width', (d) => d3.max([0, xScale(d.x1) - xScale(d.x0) - barPadding]))\n    .attr('height', (d) => dimensions.boundedHeight - yScale(yAccessor(d)))\n    .attr('fill', 'cornflowerblue')\n    .on('mouseenter', function (e) {\n      d3.select(e.target).attr('fill', 'red');\n    })\n    .on('mouseleave', function (e) {\n      d3.select(e.target).attr('fill', 'cornflowerblue');\n    });\n\n  const barText = binGroups\n    .filter(yAccessor)\n    .append('text')\n    .attr('x', (d) => xScale(d.x0) + (xScale(d.x1) - xScale(d.x0)) / 2)\n    .attr('y', (d) => yScale(yAccessor(d)) - 5)\n    .text(yAccessor)\n    .attr('fill', 'darkgrey')\n    .style('text-anchor', 'middle')\n    .style('font-size', '12px')\n    .style('font-family', 'sans-serif');\n\n  const mean = d3.mean(dataset, metricAccessor);\n  const meanLine = bounds\n    .append('line')\n    .attr('x1', xScale(mean))\n    .attr('x2', xScale(mean))\n    .attr('y1', -15)\n    .attr('y2', dimensions.boundedHeight)\n    .attr('stroke-width', 1)\n    .attr('stroke', 'maroon')\n    .attr('stroke-dasharray', '2px 4px');\n\n  const meanLabel = bounds\n    .append('text')\n    .attr('x', xScale(mean))\n    .attr('y', -20)\n    .text('mean')\n    .attr('fill', 'maroon')\n    .style('font-size', '12px')\n    .style('text-anchor', 'middle');\n\n  // 6. Draw peripherals\n  const xAxisGenerator = d3.axisBottom().scale(xScale);\n\n  const xAxis = bounds\n    .append('g')\n    .call(xAxisGenerator)\n    .attr('transform', `translateY(${dimensions.boundedHeight}px)`)\n    .attr('fill', 'black');\n\n  const xAxisLabel = xAxis\n    .append('text')\n    .attr('x', dimensions.boundedWidth / 2)\n    .attr('y', dimensions.margin.bottom - 10)\n    .attr('fill', 'black')\n    .style('font-size', '10px')\n    .text('Humidity')\n    .style('text-transform', 'capitalize');\n};\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  drawBars();\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-lite\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"d3\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-lite\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"d3\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.gCanvas, global.gCanvaskit, global.gLite, global.gSvg, global.gWebgl, global.gWebgpu, global.d3, global.lilGui, global.stats);\n    global.lite = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_gCanvas, _gCanvaskit, _gLite, _gSvg, _gWebgl, _gWebgpu, d3, lil, _stats) {\n  \"use strict\";\n\n  d3 = _interopRequireWildcard(d3);\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * inspired by sprite.js\n   * @see http://spritejs.com/#/en/guide/d3\n   *\n   * ported from fullstack-d3\n   * @see https://codesandbox.io/s/vllpx?file=/chart.js\n   */\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var webgpuRenderer = new _gWebgpu.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'Roboto',\n      url: '/Roboto-Regular.ttf'\n    }, {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  }); // create a canvas\n\n  var canvas = new _gLite.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n\n  var drawBars = async function drawBars() {\n    // 1. Access data\n    var dataset = await d3.json('https://gw.alipayobjects.com/os/bmw-prod/8e7cfeb6-28e5-4e78-8d16-c08468360f5f.json');\n\n    var metricAccessor = function metricAccessor(d) {\n      return d.humidity;\n    };\n\n    var yAccessor = function yAccessor(d) {\n      return d.length;\n    }; // 2. Create chart dimensions\n\n\n    var width = 600;\n    var dimensions = {\n      width: width,\n      height: width * 0.6,\n      margin: {\n        top: 30,\n        right: 10,\n        bottom: 50,\n        left: 50\n      }\n    };\n    dimensions.boundedWidth = dimensions.width - dimensions.margin.left - dimensions.margin.right;\n    dimensions.boundedHeight = dimensions.height - dimensions.margin.top - dimensions.margin.bottom; // 3. Draw canvas\n\n    var wrapper = d3.select(canvas.document.documentElement // use GCanvas' document element instead of a real DOM\n    );\n    var bounds = wrapper.append('g').style('transform', \"translate(\".concat(dimensions.margin.left, \"px, \").concat(dimensions.margin.top, \"px)\")); // 4. Create scales\n\n    var xScale = d3.scaleLinear().domain(d3.extent(dataset, metricAccessor)).range([0, dimensions.boundedWidth]).nice();\n    var binsGenerator = d3.bin().domain(xScale.domain()).value(metricAccessor).thresholds(12);\n    var bins = binsGenerator(dataset);\n    var yScale = d3.scaleLinear().domain([0, d3.max(bins, yAccessor)]).range([dimensions.boundedHeight, 0]).nice(); // 5. Draw data\n\n    var binsGroup = bounds.append('g');\n    var binGroups = binsGroup.selectAll('g').data(bins).join('g').attr('class', 'bin');\n    var barPadding = 1;\n    var barRects = binGroups.append('rect').attr('x', function (d) {\n      return xScale(d.x0) + barPadding / 2;\n    }).attr('y', function (d) {\n      return yScale(yAccessor(d));\n    }).attr('width', function (d) {\n      return d3.max([0, xScale(d.x1) - xScale(d.x0) - barPadding]);\n    }).attr('height', function (d) {\n      return dimensions.boundedHeight - yScale(yAccessor(d));\n    }).attr('fill', 'cornflowerblue').on('mouseenter', function (e) {\n      d3.select(e.target).attr('fill', 'red');\n    }).on('mouseleave', function (e) {\n      d3.select(e.target).attr('fill', 'cornflowerblue');\n    });\n    var barText = binGroups.filter(yAccessor).append('text').attr('x', function (d) {\n      return xScale(d.x0) + (xScale(d.x1) - xScale(d.x0)) / 2;\n    }).attr('y', function (d) {\n      return yScale(yAccessor(d)) - 5;\n    }).text(yAccessor).attr('fill', 'darkgrey').style('text-anchor', 'middle').style('font-size', '12px').style('font-family', 'sans-serif');\n    var mean = d3.mean(dataset, metricAccessor);\n    var meanLine = bounds.append('line').attr('x1', xScale(mean)).attr('x2', xScale(mean)).attr('y1', -15).attr('y2', dimensions.boundedHeight).attr('stroke-width', 1).attr('stroke', 'maroon').attr('stroke-dasharray', '2px 4px');\n    var meanLabel = bounds.append('text').attr('x', xScale(mean)).attr('y', -20).text('mean').attr('fill', 'maroon').style('font-size', '12px').style('text-anchor', 'middle'); // 6. Draw peripherals\n\n    var xAxisGenerator = d3.axisBottom().scale(xScale);\n    var xAxis = bounds.append('g').call(xAxisGenerator).attr('transform', \"translateY(\".concat(dimensions.boundedHeight, \"px)\")).attr('fill', 'black');\n    var xAxisLabel = xAxis.append('text').attr('x', dimensions.boundedWidth / 2).attr('y', dimensions.margin.bottom - 10).attr('fill', 'black').style('font-size', '10px').text('Humidity').style('text-transform', 'capitalize');\n  };\n\n  canvas.addEventListener(_gLite.CanvasEvent.READY, function () {\n    drawBars();\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_gLite.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n});"},{"relativePath":"event/demo/delegate.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/event/demo/delegate.js","order":4,"filename":"delegate.js","title":{"zh":"事件委托","en":"Delegate"},"source":"import { Canvas, CanvasEvent, Group, Rect, Text } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n/**\n * 实现事件委托，点击两个矩形，在控制台输出：\n * * target\n * * currentTarget\n * * clientX/Y\n * * composedPath() 事件传播路径\n */\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  const ul = new Group({\n    id: 'ul',\n  });\n  const li1 = new Rect({\n    id: 'li1',\n    style: {\n      x: 200,\n      y: 100,\n      width: 300,\n      height: 100,\n      fill: '#1890FF',\n    },\n  });\n  const text = new Text({\n    style: {\n      x: 150,\n      y: 50,\n      text: 'Click me!',\n      fontSize: 22,\n      fill: '#000',\n      textAlign: 'center',\n      textBaseline: 'middle',\n    },\n  });\n  li1.appendChild(text);\n  const li2 = new Rect({\n    id: 'li2',\n    style: {\n      x: 200,\n      y: 300,\n      width: 300,\n      height: 100,\n      fill: '#1890FF',\n    },\n  });\n\n  canvas.appendChild(ul);\n  ul.appendChild(li1);\n  ul.appendChild(li2);\n\n  ul.addEventListener('click', (e) => {\n    console.log('currentTarget', e.currentTarget);\n    console.log('target', e.target);\n    console.log('clientX', e.clientX);\n    console.log('clientY', e.clientY);\n    console.log('x', e.x);\n    console.log('y', e.y);\n    console.log('path', e.composedPath());\n  });\n\n  canvas.addEventListener('click', (e) => {\n    console.log('currentTarget', e.currentTarget);\n  });\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.delegate = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * 实现事件委托，点击两个矩形，在控制台输出：\n   * * target\n   * * currentTarget\n   * * clientX/Y\n   * * composedPath() 事件传播路径\n   */\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    var ul = new _g.Group({\n      id: 'ul'\n    });\n    var li1 = new _g.Rect({\n      id: 'li1',\n      style: {\n        x: 200,\n        y: 100,\n        width: 300,\n        height: 100,\n        fill: '#1890FF'\n      }\n    });\n    var text = new _g.Text({\n      style: {\n        x: 150,\n        y: 50,\n        text: 'Click me!',\n        fontSize: 22,\n        fill: '#000',\n        textAlign: 'center',\n        textBaseline: 'middle'\n      }\n    });\n    li1.appendChild(text);\n    var li2 = new _g.Rect({\n      id: 'li2',\n      style: {\n        x: 200,\n        y: 300,\n        width: 300,\n        height: 100,\n        fill: '#1890FF'\n      }\n    });\n    canvas.appendChild(ul);\n    ul.appendChild(li1);\n    ul.appendChild(li2);\n    ul.addEventListener('click', function (e) {\n      console.log('currentTarget', e.currentTarget);\n      console.log('target', e.target);\n      console.log('clientX', e.clientX);\n      console.log('clientY', e.clientY);\n      console.log('x', e.x);\n      console.log('y', e.y);\n      console.log('path', e.composedPath());\n    });\n    canvas.addEventListener('click', function (e) {\n      console.log('currentTarget', e.currentTarget);\n    });\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n});"},{"relativePath":"ecosystem/demo/react-g.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/ecosystem/demo/react-g.js","order":9,"filename":"react-g.js","title":{"zh":"ReactG","en":"ReactG"},"source":"import { Renderer as CanvasRenderer } from '@antv/g-webgl';\nimport { Canvas, Circle } from '@antv/react-g';\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst renderer = new CanvasRenderer();\n\nconst App = () => {\n  const [size, setSize] = useState(50);\n  return (\n    <Canvas width={600} height={400} renderer={renderer}>\n      <Circle\n        cx={100}\n        cy={200}\n        r={size}\n        fill=\"#1890FF\"\n        stroke=\"#F04864\"\n        lineWidth={4}\n        onMouseenter={() => {\n          setSize(100);\n        }}\n        onMouseleave={() => {\n          setSize(50);\n        }}\n      />\n    </Canvas>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById('container'));\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g-webgl\", \"@antv/react-g\", \"react\", \"react-dom\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g-webgl\"), require(\"@antv/react-g\"), require(\"react\"), require(\"react-dom\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.gWebgl, global.reactG, global.react, global.reactDom);\n    global.reactG = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_gWebgl, _reactG, _react, _reactDom) {\n  \"use strict\";\n\n  _react = _interopRequireWildcard(_react);\n  _reactDom = _interopRequireDefault(_reactDom);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  var renderer = new _gWebgl.Renderer();\n\n  var App = function App() {\n    var _useState = (0, _react.useState)(50),\n        _useState2 = _slicedToArray(_useState, 2),\n        size = _useState2[0],\n        setSize = _useState2[1];\n\n    return /*#__PURE__*/_react.default.createElement(_reactG.Canvas, {\n      width: 600,\n      height: 400,\n      renderer: renderer\n    }, /*#__PURE__*/_react.default.createElement(_reactG.Circle, {\n      cx: 100,\n      cy: 200,\n      r: size,\n      fill: \"#1890FF\",\n      stroke: \"#F04864\",\n      lineWidth: 4,\n      onMouseenter: function onMouseenter() {\n        setSize(100);\n      },\n      onMouseleave: function onMouseleave() {\n        setSize(50);\n      }\n    }));\n  };\n\n  _reactDom.default.render( /*#__PURE__*/_react.default.createElement(App, null), document.getElementById('container'));\n});"},{"relativePath":"event/demo/drag.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/event/demo/drag.js","order":8,"filename":"drag.js","title":{"zh":"使用 PointerEvents 实现拖拽","en":"Drag with PointerEvents"},"source":"import { Canvas, CanvasEvent, Image } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n/**\n * Drag'n'Drop with PointerEvents\n * @see https://javascript.info/mouse-drag-and-drop\n */\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\nconst gate = new Image({\n  className: 'droppable',\n  style: {\n    width: 200,\n    height: 100,\n    src: 'https://en.js.cx/clipart/soccer-gate.svg',\n  },\n});\n\nconst ball = new Image({\n  style: {\n    x: 300,\n    y: 200,\n    width: 100,\n    height: 100,\n    src: 'https://en.js.cx/clipart/ball.svg',\n    cursor: 'pointer',\n  },\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  canvas.appendChild(gate);\n  canvas.appendChild(ball);\n\n  ball.addEventListener('pointerdown', function (event) {\n    let shiftX = event.clientX - ball.getBoundingClientRect().left;\n    let shiftY = event.clientY - ball.getBoundingClientRect().top;\n\n    moveAt(event.canvasX, event.canvasY);\n\n    function moveAt(canvasX, canvasY) {\n      ball.style.x = canvasX - shiftX + 'px';\n      ball.style.y = canvasY - shiftY + 'px';\n    }\n\n    async function onMouseMove(event) {\n      moveAt(event.canvasX, event.canvasY);\n    }\n\n    canvas.document.addEventListener('pointermove', onMouseMove);\n\n    ball.addEventListener(\n      'pointerup',\n      function () {\n        canvas.document.removeEventListener('pointermove', onMouseMove);\n      },\n      { once: true },\n    );\n  });\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.drag = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * Drag'n'Drop with PointerEvents\n   * @see https://javascript.info/mouse-drag-and-drop\n   */\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  var gate = new _g.Image({\n    className: 'droppable',\n    style: {\n      width: 200,\n      height: 100,\n      src: 'https://en.js.cx/clipart/soccer-gate.svg'\n    }\n  });\n  var ball = new _g.Image({\n    style: {\n      x: 300,\n      y: 200,\n      width: 100,\n      height: 100,\n      src: 'https://en.js.cx/clipart/ball.svg',\n      cursor: 'pointer'\n    }\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    canvas.appendChild(gate);\n    canvas.appendChild(ball);\n    ball.addEventListener('pointerdown', function (event) {\n      var shiftX = event.clientX - ball.getBoundingClientRect().left;\n      var shiftY = event.clientY - ball.getBoundingClientRect().top;\n      moveAt(event.canvasX, event.canvasY);\n\n      function moveAt(canvasX, canvasY) {\n        ball.style.x = canvasX - shiftX + 'px';\n        ball.style.y = canvasY - shiftY + 'px';\n      }\n\n      async function onMouseMove(event) {\n        moveAt(event.canvasX, event.canvasY);\n      }\n\n      canvas.document.addEventListener('pointermove', onMouseMove);\n      ball.addEventListener('pointerup', function () {\n        canvas.document.removeEventListener('pointermove', onMouseMove);\n      }, {\n        once: true\n      });\n    });\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n});"},{"relativePath":"ecosystem/demo/web-components.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/ecosystem/demo/web-components.js","order":0,"filename":"web-components.js","title":{"zh":"使用 Web Components","en":"Use Web Components"},"source":"import '@antv/g';\nimport '@antv/g-canvas';\nimport '@antv/g-web-components';\n\nconst $wrapper = document.getElementById('container');\n$wrapper.innerHTML = `\n<g-canvas renderer=\"canvas\" width=\"400\" height=\"400\">\n  <g-rect fill=\"#2f54eb\" radius=\"0 24px 24px\" x=\"12px\" y=\"24px\" width=\"200px\" height=\"50px\">\n    <g-circle fill=\"#adc6ff\" r=\"16px\" cx=\"25px\" cy=\"25px\"></g-circle>\n    <g-text fill=\"#fff\" x=\"50px\" y=\"20px\">我是一段文字</g-text>\n  </g-rect>\n  <g-ellipse fill=\"#adc6ff\" stroke=\"red\" stroke-width=\"4px\" rx=\"40px\" ry=\"20px\" cx=\"280px\" cy=\"40px\"></g-ellipse>\n  <g-image src=\"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ\" x=\"12px\" y=\"200px\" width=\"200px\" height=\"200px\" transform=\"scale(0.5)\"></g-image>\n  <g-line x1=\"360\" y1=\"20\" x2=\"360\" y2=\"120\" line-cap=\"round\" stroke=\"black\" stroke-width=\"10px\" stroke-dasharray=\"5 5\"></g-line>\n  <g-path\n    transform=\"translate(0, 100px)\"\n    stroke=\"#2f54eb\"\n    path=\"M 0,40 C 5.5555555555555545,40,22.222222222222218,44.44444444444445,33.33333333333333,40 C 44.444444444444436,35.55555555555556,55.55555555555554,14.66666666666667,66.66666666666666,13.333333333333336 C 77.77777777777777,12.000000000000002,88.88888888888887,32,100,32 C 111.11111111111113,32,122.22222222222221,14.66666666666667,133.33333333333331,13.333333333333336 C 144.44444444444443,12.000000000000002,155.55555555555557,24,166.66666666666669,24 C 177.7777777777778,24,188.8888888888889,11.111111111111114,200,13.333333333333336 C 211.1111111111111,15.555555555555557,222.22222222222226,35.111111111111114,233.33333333333334,37.333333333333336 C 244.44444444444443,39.55555555555555,255.55555555555551,31.22222222222223,266.66666666666663,26.66666666666667 C 277.77777777777777,22.111111111111114,294.4444444444444,12.777777777777779,300,10\"\n  ></g-path>\n  <g-html x=\"10\" y=\"200\" width=\"120\" height=\"400\">\n    <div>\n      <h2>hahahah</h2>\n      <hr />\n      <p>bsdkjfbkjsadbfkjabnjfnalsjkfnkja</p>\n    </div>\n  </g-html>\n</g-canvas>\n`;\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-web-components\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-web-components\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gWebComponents);\n    global.webComponents = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gWebComponents) {\n  \"use strict\";\n\n  var $wrapper = document.getElementById('container');\n  $wrapper.innerHTML = \"\\n<g-canvas renderer=\\\"canvas\\\" width=\\\"400\\\" height=\\\"400\\\">\\n  <g-rect fill=\\\"#2f54eb\\\" radius=\\\"0 24px 24px\\\" x=\\\"12px\\\" y=\\\"24px\\\" width=\\\"200px\\\" height=\\\"50px\\\">\\n    <g-circle fill=\\\"#adc6ff\\\" r=\\\"16px\\\" cx=\\\"25px\\\" cy=\\\"25px\\\"></g-circle>\\n    <g-text fill=\\\"#fff\\\" x=\\\"50px\\\" y=\\\"20px\\\">\\u6211\\u662F\\u4E00\\u6BB5\\u6587\\u5B57</g-text>\\n  </g-rect>\\n  <g-ellipse fill=\\\"#adc6ff\\\" stroke=\\\"red\\\" stroke-width=\\\"4px\\\" rx=\\\"40px\\\" ry=\\\"20px\\\" cx=\\\"280px\\\" cy=\\\"40px\\\"></g-ellipse>\\n  <g-image src=\\\"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ\\\" x=\\\"12px\\\" y=\\\"200px\\\" width=\\\"200px\\\" height=\\\"200px\\\" transform=\\\"scale(0.5)\\\"></g-image>\\n  <g-line x1=\\\"360\\\" y1=\\\"20\\\" x2=\\\"360\\\" y2=\\\"120\\\" line-cap=\\\"round\\\" stroke=\\\"black\\\" stroke-width=\\\"10px\\\" stroke-dasharray=\\\"5 5\\\"></g-line>\\n  <g-path\\n    transform=\\\"translate(0, 100px)\\\"\\n    stroke=\\\"#2f54eb\\\"\\n    path=\\\"M 0,40 C 5.5555555555555545,40,22.222222222222218,44.44444444444445,33.33333333333333,40 C 44.444444444444436,35.55555555555556,55.55555555555554,14.66666666666667,66.66666666666666,13.333333333333336 C 77.77777777777777,12.000000000000002,88.88888888888887,32,100,32 C 111.11111111111113,32,122.22222222222221,14.66666666666667,133.33333333333331,13.333333333333336 C 144.44444444444443,12.000000000000002,155.55555555555557,24,166.66666666666669,24 C 177.7777777777778,24,188.8888888888889,11.111111111111114,200,13.333333333333336 C 211.1111111111111,15.555555555555557,222.22222222222226,35.111111111111114,233.33333333333334,37.333333333333336 C 244.44444444444443,39.55555555555555,255.55555555555551,31.22222222222223,266.66666666666663,26.66666666666667 C 277.77777777777777,22.111111111111114,294.4444444444444,12.777777777777779,300,10\\\"\\n  ></g-path>\\n  <g-html x=\\\"10\\\" y=\\\"200\\\" width=\\\"120\\\" height=\\\"400\\\">\\n    <div>\\n      <h2>hahahah</h2>\\n      <hr />\\n      <p>bsdkjfbkjsadbfkjabnjfnalsjkfnkja</p>\\n    </div>\\n  </g-html>\\n</g-canvas>\\n\";\n});"},{"relativePath":"event/demo/hammer.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/event/demo/hammer.js","order":1,"filename":"hammer.js","title":{"zh":"使用 Hammer.js 手势库","en":"Gesture with Hammer.js"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*i7SaRaYw0YcAAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent, Circle, Text } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport Hammer from 'hammerjs';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\n// add a circle to canvas\nconst circle = new Circle({\n  id: 'circle',\n  style: {\n    fill: 'rgb(239, 244, 255)',\n    fillOpacity: 1,\n    lineWidth: 1,\n    opacity: 1,\n    r: 100,\n    stroke: 'rgb(95, 149, 255)',\n    strokeOpacity: 1,\n    cursor: 'pointer',\n  },\n});\n\nconst text = new Text({\n  id: 'text',\n  style: {\n    fill: '#000',\n    fillOpacity: 0.9,\n    font: `normal normal normal 12px Avenir, -apple-system, system-ui, \"Segoe UI\", \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei\", \"Helvetica Neue\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n    fontFamily: 'Avenir',\n    fontSize: 22,\n    fontStyle: 'normal',\n    fontVariant: 'normal',\n    fontWeight: 'normal',\n    lineWidth: 1,\n    opacity: 1,\n    strokeOpacity: 1,\n    text: 'Try to tap/press/pan me',\n    textAlign: 'center',\n    textBaseline: 'middle',\n  },\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  circle.appendChild(text);\n  canvas.appendChild(circle);\n  circle.setPosition(300, 200);\n\n  // use hammer.js\n  const hammer = new Hammer(circle, {\n    inputClass: Hammer.PointerEventInput,\n  });\n  hammer.on('panleft panright tap press', (ev) => {\n    text.attr('text', `${ev.type} gesture detected.`);\n  });\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"hammerjs\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"hammerjs\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.hammerjs, global.lilGui, global.stats);\n    global.hammer = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, _hammerjs, lil, _stats) {\n  \"use strict\";\n\n  _hammerjs = _interopRequireDefault(_hammerjs);\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  }); // add a circle to canvas\n\n  var circle = new _g.Circle({\n    id: 'circle',\n    style: {\n      fill: 'rgb(239, 244, 255)',\n      fillOpacity: 1,\n      lineWidth: 1,\n      opacity: 1,\n      r: 100,\n      stroke: 'rgb(95, 149, 255)',\n      strokeOpacity: 1,\n      cursor: 'pointer'\n    }\n  });\n  var text = new _g.Text({\n    id: 'text',\n    style: {\n      fill: '#000',\n      fillOpacity: 0.9,\n      font: \"normal normal normal 12px Avenir, -apple-system, system-ui, \\\"Segoe UI\\\", \\\"PingFang SC\\\", \\\"Hiragino Sans GB\\\", \\\"Microsoft YaHei\\\", \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\"\",\n      fontFamily: 'Avenir',\n      fontSize: 22,\n      fontStyle: 'normal',\n      fontVariant: 'normal',\n      fontWeight: 'normal',\n      lineWidth: 1,\n      opacity: 1,\n      strokeOpacity: 1,\n      text: 'Try to tap/press/pan me',\n      textAlign: 'center',\n      textBaseline: 'middle'\n    }\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    circle.appendChild(text);\n    canvas.appendChild(circle);\n    circle.setPosition(300, 200); // use hammer.js\n\n    var hammer = new _hammerjs.default(circle, {\n      inputClass: _hammerjs.default.PointerEventInput\n    });\n    hammer.on('panleft panright tap press', function (ev) {\n      text.attr('text', \"\".concat(ev.type, \" gesture detected.\"));\n    });\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n});"},{"relativePath":"ecosystem/demo/web-components-react.tsx","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/ecosystem/demo/web-components-react.tsx","order":1,"filename":"web-components-react.tsx","title":{"zh":"使用 Web Components 和 React","en":"Use Web Components and React"},"source":"import { Ellipse } from '@antv/g';\nimport '@antv/g-canvas';\nimport '@antv/g-web-components';\nimport React, { useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst App = () => {\n  const ellipseRef = useRef(null);\n\n  useEffect(() => {\n    const ellipse = ellipseRef.current.getElementInstance() as Ellipse;\n    // ellipse.animate([{ transform: 'scale(1)' }, { transform: 'scale(2)' }], {\n    //   duration: 1000,\n    //   fill: 'both',\n    //   iterations: Infinity,\n    // });\n\n    console.log(ellipse);\n\n    setTimeout(() => {\n      console.log(ellipse);\n      ellipse.style.ry = 100;\n    }, 500);\n  });\n\n  return (\n    <g-canvas renderer=\"canvas\" width=\"400\" height=\"400\">\n      <g-rect fill=\"#2f54eb\" radius=\"0 24px 24px\" x=\"12px\" y=\"24px\" width=\"200px\" height=\"50px\">\n        <g-circle fill=\"#adc6ff\" r=\"16px\" cx=\"25px\" cy=\"25px\"></g-circle>\n        <g-text fill=\"#fff\" x=\"50px\" y=\"20px\">\n          我是一段文字\n        </g-text>\n      </g-rect>\n      <g-ellipse\n        fill=\"#adc6ff\"\n        stroke=\"red\"\n        stroke-width=\"4px\"\n        rx=\"40px\"\n        ry=\"20px\"\n        cx=\"280px\"\n        cy=\"40px\"\n        ref={ellipseRef}\n      ></g-ellipse>\n      <g-image\n        src=\"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ\"\n        x=\"12px\"\n        y=\"200px\"\n        width=\"200px\"\n        height=\"200px\"\n        transform=\"scale(0.5)\"\n      ></g-image>\n      <g-line\n        x1=\"360\"\n        y1=\"20\"\n        x2=\"360\"\n        y2=\"120\"\n        line-cap=\"round\"\n        stroke=\"black\"\n        stroke-width=\"10px\"\n        stroke-dasharray=\"5 5\"\n      ></g-line>\n      <g-path\n        transform=\"translate(0, 100px)\"\n        stroke=\"#2f54eb\"\n        path=\"M 0,40 C 5.5555555555555545,40,22.222222222222218,44.44444444444445,33.33333333333333,40 C 44.444444444444436,35.55555555555556,55.55555555555554,14.66666666666667,66.66666666666666,13.333333333333336 C 77.77777777777777,12.000000000000002,88.88888888888887,32,100,32 C 111.11111111111113,32,122.22222222222221,14.66666666666667,133.33333333333331,13.333333333333336 C 144.44444444444443,12.000000000000002,155.55555555555557,24,166.66666666666669,24 C 177.7777777777778,24,188.8888888888889,11.111111111111114,200,13.333333333333336 C 211.1111111111111,15.555555555555557,222.22222222222226,35.111111111111114,233.33333333333334,37.333333333333336 C 244.44444444444443,39.55555555555555,255.55555555555551,31.22222222222223,266.66666666666663,26.66666666666667 C 277.77777777777777,22.111111111111114,294.4444444444444,12.777777777777779,300,10\"\n      ></g-path>\n      <g-html x=\"10\" y=\"200\" width=\"120\" height=\"400\">\n        <div>\n          <h2>hahahah</h2>\n          <hr />\n          <p>bsdkjfbkjsadbfkjabnjfnalsjkfnkja</p>\n        </div>\n      </g-html>\n    </g-canvas>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById('container'));\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g-canvas\", \"@antv/g-web-components\", \"react\", \"react-dom\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g-canvas\"), require(\"@antv/g-web-components\"), require(\"react\"), require(\"react-dom\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.gCanvas, global.gWebComponents, global.react, global.reactDom);\n    global.webComponentsReact = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_gCanvas, _gWebComponents, _react, _reactDom) {\n  \"use strict\";\n\n  _react = _interopRequireWildcard(_react);\n  _reactDom = _interopRequireDefault(_reactDom);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  var App = function App() {\n    var ellipseRef = (0, _react.useRef)(null);\n    (0, _react.useEffect)(function () {\n      var ellipse = ellipseRef.current.getElementInstance(); // ellipse.animate([{ transform: 'scale(1)' }, { transform: 'scale(2)' }], {\n      //   duration: 1000,\n      //   fill: 'both',\n      //   iterations: Infinity,\n      // });\n\n      console.log(ellipse);\n      setTimeout(function () {\n        console.log(ellipse);\n        ellipse.style.ry = 100;\n      }, 500);\n    });\n    return /*#__PURE__*/_react.default.createElement(\"g-canvas\", {\n      renderer: \"canvas\",\n      width: \"400\",\n      height: \"400\"\n    }, /*#__PURE__*/_react.default.createElement(\"g-rect\", {\n      fill: \"#2f54eb\",\n      radius: \"0 24px 24px\",\n      x: \"12px\",\n      y: \"24px\",\n      width: \"200px\",\n      height: \"50px\"\n    }, /*#__PURE__*/_react.default.createElement(\"g-circle\", {\n      fill: \"#adc6ff\",\n      r: \"16px\",\n      cx: \"25px\",\n      cy: \"25px\"\n    }), /*#__PURE__*/_react.default.createElement(\"g-text\", {\n      fill: \"#fff\",\n      x: \"50px\",\n      y: \"20px\"\n    }, \"\\u6211\\u662F\\u4E00\\u6BB5\\u6587\\u5B57\")), /*#__PURE__*/_react.default.createElement(\"g-ellipse\", {\n      fill: \"#adc6ff\",\n      stroke: \"red\",\n      \"stroke-width\": \"4px\",\n      rx: \"40px\",\n      ry: \"20px\",\n      cx: \"280px\",\n      cy: \"40px\",\n      ref: ellipseRef\n    }), /*#__PURE__*/_react.default.createElement(\"g-image\", {\n      src: \"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ\",\n      x: \"12px\",\n      y: \"200px\",\n      width: \"200px\",\n      height: \"200px\",\n      transform: \"scale(0.5)\"\n    }), /*#__PURE__*/_react.default.createElement(\"g-line\", {\n      x1: \"360\",\n      y1: \"20\",\n      x2: \"360\",\n      y2: \"120\",\n      \"line-cap\": \"round\",\n      stroke: \"black\",\n      \"stroke-width\": \"10px\",\n      \"stroke-dasharray\": \"5 5\"\n    }), /*#__PURE__*/_react.default.createElement(\"g-path\", {\n      transform: \"translate(0, 100px)\",\n      stroke: \"#2f54eb\",\n      path: \"M 0,40 C 5.5555555555555545,40,22.222222222222218,44.44444444444445,33.33333333333333,40 C 44.444444444444436,35.55555555555556,55.55555555555554,14.66666666666667,66.66666666666666,13.333333333333336 C 77.77777777777777,12.000000000000002,88.88888888888887,32,100,32 C 111.11111111111113,32,122.22222222222221,14.66666666666667,133.33333333333331,13.333333333333336 C 144.44444444444443,12.000000000000002,155.55555555555557,24,166.66666666666669,24 C 177.7777777777778,24,188.8888888888889,11.111111111111114,200,13.333333333333336 C 211.1111111111111,15.555555555555557,222.22222222222226,35.111111111111114,233.33333333333334,37.333333333333336 C 244.44444444444443,39.55555555555555,255.55555555555551,31.22222222222223,266.66666666666663,26.66666666666667 C 277.77777777777777,22.111111111111114,294.4444444444444,12.777777777777779,300,10\"\n    }), /*#__PURE__*/_react.default.createElement(\"g-html\", {\n      x: \"10\",\n      y: \"200\",\n      width: \"120\",\n      height: \"400\"\n    }, /*#__PURE__*/_react.default.createElement(\"div\", null, /*#__PURE__*/_react.default.createElement(\"h2\", null, \"hahahah\"), /*#__PURE__*/_react.default.createElement(\"hr\", null), /*#__PURE__*/_react.default.createElement(\"p\", null, \"bsdkjfbkjsadbfkjabnjfnalsjkfnkja\"))));\n  };\n\n  _reactDom.default.render( /*#__PURE__*/_react.default.createElement(App, null), document.getElementById('container'));\n});"},{"relativePath":"ecosystem/demo/d3-geo.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/ecosystem/demo/d3-geo.js","order":7,"filename":"d3-geo.js","title":{"zh":"D3 Geo","en":"D3 Geo"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*cG62RqGKMXsAAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Plugin as PluginRoughCanvasRenderer } from '@antv/g-plugin-rough-canvas-renderer';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as d3 from 'd3';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\nimport * as topojson from 'topojson';\nimport versor from 'versor';\n\n/**\n * @see https://observablehq.com/@d3/sketchy-earth?collection=@d3/d3-geo\n */\n\nfunction curveContext(curve) {\n  return {\n    moveTo(x, y) {\n      curve.lineStart();\n      curve.point(x, y);\n    },\n    lineTo(x, y) {\n      curve.point(x, y);\n    },\n    closePath() {\n      curve.lineEnd();\n    },\n  };\n}\n\nfunction geoCurvePath(curve, projection, context) {\n  return (object) => {\n    const pathContext = context === undefined ? d3.path() : context;\n    d3.geoPath(projection, curveContext(curve(pathContext)))(object);\n    return context === undefined ? pathContext + '' : undefined;\n  };\n}\n\nfunction zoom(\n  projection,\n  {\n    // Capture the projection’s original scale, before any zooming.\n    scale = projection._scale === undefined\n      ? (projection._scale = projection.scale())\n      : projection._scale,\n    scaleExtent = [0.8, 8],\n  } = {},\n) {\n  let v0, q0, r0, a0, tl;\n\n  const zoom = d3\n    .zoom()\n    .scaleExtent(scaleExtent.map((x) => x * scale))\n    .on('start', zoomstarted)\n    .on('zoom', zoomed);\n\n  function point(event, that) {\n    const t = d3.pointers(event, that);\n\n    if (t.length !== tl) {\n      tl = t.length;\n      if (tl > 1) a0 = Math.atan2(t[1][1] - t[0][1], t[1][0] - t[0][0]);\n      zoomstarted.call(that, event);\n    }\n\n    return tl > 1\n      ? [\n          d3.mean(t, (p) => p[0]),\n          d3.mean(t, (p) => p[1]),\n          Math.atan2(t[1][1] - t[0][1], t[1][0] - t[0][0]),\n        ]\n      : t[0];\n  }\n\n  function zoomstarted(event) {\n    v0 = versor.cartesian(projection.invert(point(event, this)));\n    q0 = versor((r0 = projection.rotate()));\n  }\n\n  function zoomed(event) {\n    projection.scale(event.transform.k);\n    const pt = point(event, this);\n    const v1 = versor.cartesian(projection.rotate(r0).invert(pt));\n    const delta = versor.delta(v0, v1);\n    let q1 = versor.multiply(q0, delta);\n\n    // For multitouch, compose with a rotation around the axis.\n    if (pt[2]) {\n      const d = (pt[2] - a0) / 2;\n      const s = -Math.sin(d);\n      const c = Math.sign(Math.cos(d));\n      q1 = versor.multiply([Math.sqrt(1 - s * s), 0, 0, c * s], q1);\n    }\n\n    projection.rotate(versor.rotation(q1));\n\n    // In vicinity of the antipode (unstable) of q0, restart.\n    if (delta[0] < 0.7) zoomstarted.call(this, event);\n  }\n\n  return Object.assign(\n    (selection) =>\n      selection.property('__zoom', d3.zoomIdentity.scale(projection.scale())).call(zoom),\n    {\n      on(type, ...options) {\n        return options.length ? (zoom.on(type, ...options), this) : zoom.on(type);\n      },\n    },\n  );\n}\n\n(async () => {\n  let world = await d3.json(\n    'https://gw.alipayobjects.com/os/bmw-prod/d518b501-e0f9-48e0-996f-f6662c04a439.json',\n  );\n\n  const width = 500;\n  const curve = d3.curveBasisClosed;\n  const projection = d3.geoOrthographic().precision(0.1);\n  const path = geoCurvePath(curve, projection);\n  const minArea = Math.pow(10, 2 - 1);\n  const sphere = { type: 'Sphere' };\n\n  const [[x0, y0], [x1, y1]] = d3.geoPath(projection.fitWidth(width, sphere)).bounds(sphere);\n  const dy = Math.ceil(y1 - y0),\n    l = Math.min(Math.ceil(x1 - x0), dy);\n  projection.scale((projection.scale() * (l - 1)) / l).precision(0.2);\n  const height = dy;\n\n  let topology = world;\n  topology = topojson.presimplify(topology);\n  topology = topojson.simplify(topology, minArea);\n  const land = topojson.feature(topology, topology.objects.land);\n\n  const canvasRenderer = new CanvasRenderer();\n  // sketchy with rough.js\n  canvasRenderer.registerPlugin(new PluginRoughCanvasRenderer());\n  const svgRenderer = new SVGRenderer();\n  const webglRenderer = new WebGLRenderer();\n  const webgpuRenderer = new WebGPURenderer();\n  const canvaskitRenderer = new CanvaskitRenderer({\n    wasmDir: '/',\n    fonts: [\n      {\n        name: 'Roboto',\n        url: '/Roboto-Regular.ttf',\n      },\n      {\n        name: 'sans-serif',\n        url: '/NotoSans-Regular.ttf',\n      },\n    ],\n  });\n  const canvas = new Canvas({\n    container: 'container',\n    width,\n    height,\n    renderer: canvasRenderer,\n  });\n\n  canvas.addEventListener(CanvasEvent.READY, () => {\n    const svg = d3.select(\n      canvas.document.documentElement, // use GCanvas' document element instead of a real DOM\n    );\n\n    const outline = svg.append('path').attr('stroke', 'black').attr('fill', 'white');\n    const feature = svg.append('path').attr('stroke', 'black').attr('fill', 'white');\n\n    function render() {\n      outline.attr('d', path(sphere));\n      feature.attr('d', path(land));\n    }\n\n    svg.call(zoom(projection).on('zoom.render end.render', render)).call(render);\n  });\n\n  // stats\n  const stats = new Stats();\n  stats.showPanel(0);\n  const $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  const $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n    if (stats) {\n      stats.update();\n    }\n  });\n\n  // GUI\n  const gui = new lil.GUI({ autoPlace: false });\n  $wrapper.appendChild(gui.domElement);\n  const rendererFolder = gui.addFolder('renderer');\n  const rendererConfig = {\n    renderer: 'canvas',\n  };\n  rendererFolder\n    .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n    .onChange((rendererName) => {\n      let renderer;\n      if (rendererName === 'canvas') {\n        renderer = canvasRenderer;\n      } else if (rendererName === 'svg') {\n        renderer = svgRenderer;\n      } else if (rendererName === 'webgl') {\n        renderer = webglRenderer;\n      } else if (rendererName === 'webgpu') {\n        renderer = webgpuRenderer;\n      } else if (rendererName === 'canvaskit') {\n        renderer = canvaskitRenderer;\n      }\n      canvas.setRenderer(renderer);\n    });\n  rendererFolder.open();\n})();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-plugin-rough-canvas-renderer\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"d3\", \"lil-gui\", \"stats.js\", \"topojson\", \"versor\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-plugin-rough-canvas-renderer\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"d3\"), require(\"lil-gui\"), require(\"stats.js\"), require(\"topojson\"), require(\"versor\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gPluginRoughCanvasRenderer, global.gSvg, global.gWebgl, global.gWebgpu, global.d3, global.lilGui, global.stats, global.topojson, global.versor);\n    global.d3Geo = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gPluginRoughCanvasRenderer, _gSvg, _gWebgl, _gWebgpu, d3, lil, _stats, topojson, _versor) {\n  \"use strict\";\n\n  d3 = _interopRequireWildcard(d3);\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n  topojson = _interopRequireWildcard(topojson);\n  _versor = _interopRequireDefault(_versor);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  /**\n   * @see https://observablehq.com/@d3/sketchy-earth?collection=@d3/d3-geo\n   */\n  function curveContext(curve) {\n    return {\n      moveTo: function moveTo(x, y) {\n        curve.lineStart();\n        curve.point(x, y);\n      },\n      lineTo: function lineTo(x, y) {\n        curve.point(x, y);\n      },\n      closePath: function closePath() {\n        curve.lineEnd();\n      }\n    };\n  }\n\n  function geoCurvePath(curve, projection, context) {\n    return function (object) {\n      var pathContext = context === undefined ? d3.path() : context;\n      d3.geoPath(projection, curveContext(curve(pathContext)))(object);\n      return context === undefined ? pathContext + '' : undefined;\n    };\n  }\n\n  function zoom(projection) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$scale = _ref.scale,\n        scale = _ref$scale === void 0 ? projection._scale === undefined ? projection._scale = projection.scale() : projection._scale : _ref$scale,\n        _ref$scaleExtent = _ref.scaleExtent,\n        scaleExtent = _ref$scaleExtent === void 0 ? [0.8, 8] : _ref$scaleExtent;\n\n    var v0, q0, r0, a0, tl;\n    var zoom = d3.zoom().scaleExtent(scaleExtent.map(function (x) {\n      return x * scale;\n    })).on('start', zoomstarted).on('zoom', zoomed);\n\n    function point(event, that) {\n      var t = d3.pointers(event, that);\n\n      if (t.length !== tl) {\n        tl = t.length;\n        if (tl > 1) a0 = Math.atan2(t[1][1] - t[0][1], t[1][0] - t[0][0]);\n        zoomstarted.call(that, event);\n      }\n\n      return tl > 1 ? [d3.mean(t, function (p) {\n        return p[0];\n      }), d3.mean(t, function (p) {\n        return p[1];\n      }), Math.atan2(t[1][1] - t[0][1], t[1][0] - t[0][0])] : t[0];\n    }\n\n    function zoomstarted(event) {\n      v0 = _versor.default.cartesian(projection.invert(point(event, this)));\n      q0 = (0, _versor.default)(r0 = projection.rotate());\n    }\n\n    function zoomed(event) {\n      projection.scale(event.transform.k);\n      var pt = point(event, this);\n\n      var v1 = _versor.default.cartesian(projection.rotate(r0).invert(pt));\n\n      var delta = _versor.default.delta(v0, v1);\n\n      var q1 = _versor.default.multiply(q0, delta); // For multitouch, compose with a rotation around the axis.\n\n\n      if (pt[2]) {\n        var d = (pt[2] - a0) / 2;\n        var s = -Math.sin(d);\n        var c = Math.sign(Math.cos(d));\n        q1 = _versor.default.multiply([Math.sqrt(1 - s * s), 0, 0, c * s], q1);\n      }\n\n      projection.rotate(_versor.default.rotation(q1)); // In vicinity of the antipode (unstable) of q0, restart.\n\n      if (delta[0] < 0.7) zoomstarted.call(this, event);\n    }\n\n    return Object.assign(function (selection) {\n      return selection.property('__zoom', d3.zoomIdentity.scale(projection.scale())).call(zoom);\n    }, {\n      on: function on(type) {\n        for (var _len = arguments.length, options = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          options[_key - 1] = arguments[_key];\n        }\n\n        return options.length ? (zoom.on.apply(zoom, [type].concat(options)), this) : zoom.on(type);\n      }\n    });\n  }\n\n  (async function () {\n    var world = await d3.json('https://gw.alipayobjects.com/os/bmw-prod/d518b501-e0f9-48e0-996f-f6662c04a439.json');\n    var width = 500;\n    var curve = d3.curveBasisClosed;\n    var projection = d3.geoOrthographic().precision(0.1);\n    var path = geoCurvePath(curve, projection);\n    var minArea = Math.pow(10, 2 - 1);\n    var sphere = {\n      type: 'Sphere'\n    };\n\n    var _d3$geoPath$bounds = d3.geoPath(projection.fitWidth(width, sphere)).bounds(sphere),\n        _d3$geoPath$bounds2 = _slicedToArray(_d3$geoPath$bounds, 2),\n        _d3$geoPath$bounds2$ = _slicedToArray(_d3$geoPath$bounds2[0], 2),\n        x0 = _d3$geoPath$bounds2$[0],\n        y0 = _d3$geoPath$bounds2$[1],\n        _d3$geoPath$bounds2$2 = _slicedToArray(_d3$geoPath$bounds2[1], 2),\n        x1 = _d3$geoPath$bounds2$2[0],\n        y1 = _d3$geoPath$bounds2$2[1];\n\n    var dy = Math.ceil(y1 - y0),\n        l = Math.min(Math.ceil(x1 - x0), dy);\n    projection.scale(projection.scale() * (l - 1) / l).precision(0.2);\n    var height = dy;\n    var topology = world;\n    topology = topojson.presimplify(topology);\n    topology = topojson.simplify(topology, minArea);\n    var land = topojson.feature(topology, topology.objects.land);\n    var canvasRenderer = new _gCanvas.Renderer(); // sketchy with rough.js\n\n    canvasRenderer.registerPlugin(new _gPluginRoughCanvasRenderer.Plugin());\n    var svgRenderer = new _gSvg.Renderer();\n    var webglRenderer = new _gWebgl.Renderer();\n    var webgpuRenderer = new _gWebgpu.Renderer();\n    var canvaskitRenderer = new _gCanvaskit.Renderer({\n      wasmDir: '/',\n      fonts: [{\n        name: 'Roboto',\n        url: '/Roboto-Regular.ttf'\n      }, {\n        name: 'sans-serif',\n        url: '/NotoSans-Regular.ttf'\n      }]\n    });\n    var canvas = new _g.Canvas({\n      container: 'container',\n      width: width,\n      height: height,\n      renderer: canvasRenderer\n    });\n    canvas.addEventListener(_g.CanvasEvent.READY, function () {\n      var svg = d3.select(canvas.document.documentElement // use GCanvas' document element instead of a real DOM\n      );\n      var outline = svg.append('path').attr('stroke', 'black').attr('fill', 'white');\n      var feature = svg.append('path').attr('stroke', 'black').attr('fill', 'white');\n\n      function render() {\n        outline.attr('d', path(sphere));\n        feature.attr('d', path(land));\n      }\n\n      svg.call(zoom(projection).on('zoom.render end.render', render)).call(render);\n    }); // stats\n\n    var stats = new _stats.default();\n    stats.showPanel(0);\n    var $stats = stats.dom;\n    $stats.style.position = 'absolute';\n    $stats.style.left = '0px';\n    $stats.style.top = '0px';\n    var $wrapper = document.getElementById('container');\n    $wrapper.appendChild($stats);\n    canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n      if (stats) {\n        stats.update();\n      }\n    }); // GUI\n\n    var gui = new lil.GUI({\n      autoPlace: false\n    });\n    $wrapper.appendChild(gui.domElement);\n    var rendererFolder = gui.addFolder('renderer');\n    var rendererConfig = {\n      renderer: 'canvas'\n    };\n    rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n      var renderer;\n\n      if (rendererName === 'canvas') {\n        renderer = canvasRenderer;\n      } else if (rendererName === 'svg') {\n        renderer = svgRenderer;\n      } else if (rendererName === 'webgl') {\n        renderer = webglRenderer;\n      } else if (rendererName === 'webgpu') {\n        renderer = webgpuRenderer;\n      } else if (rendererName === 'canvaskit') {\n        renderer = canvaskitRenderer;\n      }\n\n      canvas.setRenderer(renderer);\n    });\n    rendererFolder.open();\n  })();\n});"},{"relativePath":"canvas/demo/background.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/canvas/demo/background.js","order":0,"filename":"background.js","title":{"zh":"设置画布背景色","en":"Set background of Canvas"},"source":"import { Canvas, CanvasEvent, Circle } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// set container's background\nconst $wrapper = document.getElementById('container');\n$wrapper.style.background = 'grey';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst svgRenderer = new SVGRenderer();\nconst webglRenderer = new WebGLRenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n  background: 'rgba(255, 0, 0, 0.5)',\n});\n\n// create a circle\nconst circle = new Circle({\n  style: {\n    cx: 300,\n    cy: 200,\n    r: 100,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 4,\n    cursor: 'pointer',\n  },\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  // add a circle to canvas\n  canvas.appendChild(circle);\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n\nconst circleFolder = gui.addFolder('circle');\nconst circleConfig = {\n  r: 100,\n};\ncircleFolder.add(circleConfig, 'r', 50, 200).onChange((r) => {\n  circle.style.r = r;\n});\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-svg\", \"@antv/g-webgl\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gSvg, global.gWebgl, global.lilGui, global.stats);\n    global.background = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gSvg, _gWebgl, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // set container's background\n  var $wrapper = document.getElementById('container');\n  $wrapper.style.background = 'grey'; // create a renderer\n\n  var canvasRenderer = new _gCanvas.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var webglRenderer = new _gWebgl.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer,\n    background: 'rgba(255, 0, 0, 0.5)'\n  }); // create a circle\n\n  var circle = new _g.Circle({\n    style: {\n      cx: 300,\n      cy: 200,\n      r: 100,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n      cursor: 'pointer'\n    }\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    // add a circle to canvas\n    canvas.appendChild(circle);\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n  var circleFolder = gui.addFolder('circle');\n  var circleConfig = {\n    r: 100\n  };\n  circleFolder.add(circleConfig, 'r', 50, 200).onChange(function (r) {\n    circle.style.r = r;\n  });\n});"},{"relativePath":"canvas/demo/dom-canvas.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/canvas/demo/dom-canvas.js","order":4,"filename":"dom-canvas.js","title":{"zh":"canvas.container 使用 DOM 元素","en":"Use a DOM element for container"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*FfHBTr2ACAkAAAAAAAAAAABkARQnAQ","source":"import { Canvas, CanvasEvent, Circle } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\nconst $div1 = document.createElement('div');\ndocument.getElementById('container').appendChild($div1);\nconst $div2 = document.createElement('div');\ndocument.getElementById('container').appendChild($div2);\n\n// create a renderer\nconst canvasRenderer1 = new CanvasRenderer();\nconst webglRenderer1 = new WebGLRenderer();\nconst svgRenderer1 = new SVGRenderer();\nconst canvasRenderer2 = new CanvasRenderer();\n\n// create a canvas\nconst canvas1 = new Canvas({\n  container: $div1,\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer1,\n});\n\nconst canvas2 = new Canvas({\n  container: $div2,\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer2,\n});\n\ncanvas1.addEventListener(CanvasEvent.READY, () => {\n  // create a circle\n  const circle1 = new Circle({\n    id: 'circle1',\n    style: {\n      cx: 300,\n      cy: 200,\n      r: 100,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n    },\n  });\n  canvas1.appendChild(circle1);\n  circle1.addEventListener('mouseenter', () => {\n    circle1.attr('fill', '#2FC25B');\n  });\n\n  circle1.addEventListener('mouseleave', () => {\n    circle1.attr('fill', '#1890FF');\n  });\n});\n\ncanvas2.addEventListener(CanvasEvent.READY, () => {\n  const circle2 = new Circle({\n    id: 'circle2',\n    style: {\n      cx: 300,\n      cy: 200,\n      r: 100,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n    },\n  });\n  canvas2.appendChild(circle2);\n  circle2.addEventListener('mouseenter', () => {\n    circle2.attr('fill', '#2FC25B');\n  });\n\n  circle2.addEventListener('mouseleave', () => {\n    circle2.attr('fill', '#1890FF');\n  });\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas1.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder.add(rendererConfig, 'renderer', ['canvas', 'webgl', 'svg']).onChange((renderer) => {\n  canvas1.setRenderer(\n    renderer === 'canvas' ? canvasRenderer1 : renderer === 'webgl' ? webglRenderer1 : svgRenderer1,\n  );\n});\nrendererFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-svg\", \"@antv/g-webgl\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gSvg, global.gWebgl, global.lilGui, global.stats);\n    global.domCanvas = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gSvg, _gWebgl, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  var $div1 = document.createElement('div');\n  document.getElementById('container').appendChild($div1);\n  var $div2 = document.createElement('div');\n  document.getElementById('container').appendChild($div2); // create a renderer\n\n  var canvasRenderer1 = new _gCanvas.Renderer();\n  var webglRenderer1 = new _gWebgl.Renderer();\n  var svgRenderer1 = new _gSvg.Renderer();\n  var canvasRenderer2 = new _gCanvas.Renderer(); // create a canvas\n\n  var canvas1 = new _g.Canvas({\n    container: $div1,\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer1\n  });\n  var canvas2 = new _g.Canvas({\n    container: $div2,\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer2\n  });\n  canvas1.addEventListener(_g.CanvasEvent.READY, function () {\n    // create a circle\n    var circle1 = new _g.Circle({\n      id: 'circle1',\n      style: {\n        cx: 300,\n        cy: 200,\n        r: 100,\n        fill: '#1890FF',\n        stroke: '#F04864',\n        lineWidth: 4\n      }\n    });\n    canvas1.appendChild(circle1);\n    circle1.addEventListener('mouseenter', function () {\n      circle1.attr('fill', '#2FC25B');\n    });\n    circle1.addEventListener('mouseleave', function () {\n      circle1.attr('fill', '#1890FF');\n    });\n  });\n  canvas2.addEventListener(_g.CanvasEvent.READY, function () {\n    var circle2 = new _g.Circle({\n      id: 'circle2',\n      style: {\n        cx: 300,\n        cy: 200,\n        r: 100,\n        fill: '#1890FF',\n        stroke: '#F04864',\n        lineWidth: 4\n      }\n    });\n    canvas2.appendChild(circle2);\n    circle2.addEventListener('mouseenter', function () {\n      circle2.attr('fill', '#2FC25B');\n    });\n    circle2.addEventListener('mouseleave', function () {\n      circle2.attr('fill', '#1890FF');\n    });\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas1.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'webgl', 'svg']).onChange(function (renderer) {\n    canvas1.setRenderer(renderer === 'canvas' ? canvasRenderer1 : renderer === 'webgl' ? webglRenderer1 : svgRenderer1);\n  });\n  rendererFolder.open();\n});"},{"relativePath":"canvas/demo/offscreen-canvas.ts","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/canvas/demo/offscreen-canvas.ts","order":5,"filename":"offscreen-canvas.ts","title":{"zh":"OffscreenCanvas","en":"OffscreenCanvas"},"source":"// @ts-ignore\nimport { setupTransferableMethodsOnMain } from '@naoak/workerize-transferable';\nimport Worker from './main.worker.js';\n\nconst worker = new Worker();\n\n// create a canvas in main thread\nconst $canvas = document.createElement('canvas') as HTMLCanvasElement;\nconst dpr = window.devicePixelRatio;\n$canvas.height = dpr * 600;\n$canvas.width = dpr * 500;\n$canvas.style.height = '600px';\n$canvas.style.width = '500px';\ndocument.getElementById('container').appendChild($canvas);\n\nconst { left, top } = $canvas.getBoundingClientRect();\nconst clonePointerEvent = (e: PointerEvent) => {\n  return {\n    cancelable: e.cancelable,\n    pointerId: e.pointerId,\n    width: e.width,\n    height: e.height,\n    isPrimary: e.isPrimary,\n    pointerType: e.pointerType,\n    pressure: e.pressure,\n    tangentialPressure: e.tangentialPressure,\n    tiltX: e.tiltX,\n    tiltY: e.tiltY,\n    twist: e.twist,\n    isTrusted: e.isTrusted,\n    type: e.type,\n    altKey: e.altKey,\n    button: e.button,\n    buttons: e.buttons,\n    clientX: e.clientX - left, // account for $canvas' offset\n    clientY: e.clientY - top,\n    ctrlKey: e.ctrlKey,\n    metaKey: e.metaKey,\n    movementX: e.movementX,\n    movementY: e.movementY,\n    pageX: e.pageX,\n    pageY: e.pageY,\n    screenX: e.screenX,\n    screenY: e.screenY,\n  };\n};\n\n// listen to pointer events and transfer them to worker\ndocument.addEventListener(\n  'pointermove',\n  (e) => {\n    worker.triggerEvent('pointermove', clonePointerEvent(e));\n  },\n  true,\n);\n$canvas.addEventListener(\n  'pointerdown',\n  (e) => {\n    worker.triggerEvent('pointerdown', clonePointerEvent(e));\n  },\n  true,\n);\n$canvas.addEventListener(\n  'pointerleave',\n  (e) => {\n    worker.triggerEvent('pointerleave', clonePointerEvent(e));\n  },\n  true,\n);\n$canvas.addEventListener(\n  'pointerover',\n  (e) => {\n    worker.triggerEvent('pointerover', clonePointerEvent(e));\n  },\n  true,\n);\nwindow.addEventListener(\n  'pointerup',\n  (e) => {\n    worker.triggerEvent('pointerup', clonePointerEvent(e));\n  },\n  true,\n);\n\n// transfer canvas to worker\nconst offscreen = $canvas.transferControlToOffscreen();\n\nsetupTransferableMethodsOnMain(\n  // worker instance\n  worker,\n  // the name of method which use some transferables\n  {\n    render: {\n      // pick a transferable object from the method parameters\n      pickTransferablesFromParams: (params) => [params[0]],\n    },\n  },\n);\n\n(async () => {\n  // do rendering in WebWorker\n  await worker.render(offscreen, dpr);\n})();\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@naoak/workerize-transferable\", \"./main.worker.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@naoak/workerize-transferable\"), require(\"./main.worker.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.workerizeTransferable, global.mainWorker);\n    global.offscreenCanvas = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_workerizeTransferable, _mainWorker) {\n  \"use strict\";\n\n  _mainWorker = _interopRequireDefault(_mainWorker);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  // @ts-ignore\n  var worker = new _mainWorker.default(); // create a canvas in main thread\n\n  var $canvas = document.createElement('canvas');\n  var dpr = window.devicePixelRatio;\n  $canvas.height = dpr * 600;\n  $canvas.width = dpr * 500;\n  $canvas.style.height = '600px';\n  $canvas.style.width = '500px';\n  document.getElementById('container').appendChild($canvas);\n\n  var _$canvas$getBoundingC = $canvas.getBoundingClientRect(),\n      left = _$canvas$getBoundingC.left,\n      top = _$canvas$getBoundingC.top;\n\n  var clonePointerEvent = function clonePointerEvent(e) {\n    return {\n      cancelable: e.cancelable,\n      pointerId: e.pointerId,\n      width: e.width,\n      height: e.height,\n      isPrimary: e.isPrimary,\n      pointerType: e.pointerType,\n      pressure: e.pressure,\n      tangentialPressure: e.tangentialPressure,\n      tiltX: e.tiltX,\n      tiltY: e.tiltY,\n      twist: e.twist,\n      isTrusted: e.isTrusted,\n      type: e.type,\n      altKey: e.altKey,\n      button: e.button,\n      buttons: e.buttons,\n      clientX: e.clientX - left,\n      // account for $canvas' offset\n      clientY: e.clientY - top,\n      ctrlKey: e.ctrlKey,\n      metaKey: e.metaKey,\n      movementX: e.movementX,\n      movementY: e.movementY,\n      pageX: e.pageX,\n      pageY: e.pageY,\n      screenX: e.screenX,\n      screenY: e.screenY\n    };\n  }; // listen to pointer events and transfer them to worker\n\n\n  document.addEventListener('pointermove', function (e) {\n    worker.triggerEvent('pointermove', clonePointerEvent(e));\n  }, true);\n  $canvas.addEventListener('pointerdown', function (e) {\n    worker.triggerEvent('pointerdown', clonePointerEvent(e));\n  }, true);\n  $canvas.addEventListener('pointerleave', function (e) {\n    worker.triggerEvent('pointerleave', clonePointerEvent(e));\n  }, true);\n  $canvas.addEventListener('pointerover', function (e) {\n    worker.triggerEvent('pointerover', clonePointerEvent(e));\n  }, true);\n  window.addEventListener('pointerup', function (e) {\n    worker.triggerEvent('pointerup', clonePointerEvent(e));\n  }, true); // transfer canvas to worker\n\n  var offscreen = $canvas.transferControlToOffscreen();\n  (0, _workerizeTransferable.setupTransferableMethodsOnMain)( // worker instance\n  worker, // the name of method which use some transferables\n  {\n    render: {\n      // pick a transferable object from the method parameters\n      pickTransferablesFromParams: function pickTransferablesFromParams(params) {\n        return [params[0]];\n      }\n    }\n  });\n\n  (async function () {\n    // do rendering in WebWorker\n    await worker.render(offscreen, dpr);\n  })();\n});"},{"relativePath":"canvas/demo/multi-canvas.tsx","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/canvas/demo/multi-canvas.tsx","order":1,"filename":"multi-canvas.tsx","title":{"zh":"多个画布","en":"Multiple canvas"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*VSOLRbXqEeMAAAAAAAAAAAAAARQnAQ","source":"import React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport SplitPane from 'react-split-pane';\nimport Stats from 'stats.js';\nimport { Canvas, Group } from '@antv/g';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Mesh, CubeGeometry, MeshBasicMaterial, Plugin as Plugin3D } from '@antv/g-plugin-3d';\nimport { Plugin as PluginControl } from '@antv/g-plugin-control';\n\n// scene1 + scene2\nconst TOTAL_WIDTH = 600;\nconst SCENE_HEIGHT = 500;\n\nconst App = function MultiWorld() {\n  let canvas1;\n  let canvas2;\n  useEffect(() => {\n    const stats = new Stats();\n    stats.showPanel(0);\n    const $stats = stats.dom;\n    $stats.style.position = 'absolute';\n    $stats.style.left = '0px';\n    $stats.style.top = '0px';\n    const $wrapper = document.getElementById('container');\n    $wrapper.appendChild($stats);\n\n    // create a webgl renderer\n    const webglRenderer1 = new WebGLRenderer();\n    webglRenderer1.registerPlugin(new Plugin3D());\n    webglRenderer1.registerPlugin(new PluginControl());\n\n    const webglRenderer2 = new WebGLRenderer();\n    webglRenderer2.registerPlugin(new Plugin3D());\n    webglRenderer2.registerPlugin(new PluginControl());\n\n    // create a canvas\n    canvas1 = new Canvas({\n      container: 'container1',\n      width: TOTAL_WIDTH / 2,\n      height: SCENE_HEIGHT,\n      renderer: webglRenderer1,\n    });\n\n    canvas2 = new Canvas({\n      container: 'container2',\n      width: TOTAL_WIDTH / 2,\n      height: SCENE_HEIGHT,\n      renderer: webglRenderer2,\n    });\n\n    // scene 1\n    const camera1 = canvas1.getCamera();\n    camera1\n      .setPosition(150, 20, 500)\n      .setFocalPoint(150, 250, 0)\n      .setPerspective(0.1, 1000, 75, TOTAL_WIDTH / 2 / SCENE_HEIGHT);\n\n    (async () => {\n      await canvas1.ready;\n\n      const plugin1 = webglRenderer1.getPlugin('device-renderer');\n      const device1 = plugin1.getDevice();\n      const map = plugin1.loadTexture(\n        'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*_aqoS73Se3sAAAAAAAAAAAAAARQnAQ',\n      );\n\n      await canvas2.ready;\n      const plugin2 = webglRenderer2.getPlugin('device-renderer');\n      const device2 = plugin2.getDevice();\n\n      const group1 = new Group();\n      const cubeGeometry = new CubeGeometry(device1, {\n        width: 200,\n        height: 200,\n        depth: 200,\n      });\n      const basicMaterial = new MeshBasicMaterial(device1, {\n        map,\n      });\n\n      const cube1 = new Mesh({\n        style: {\n          fill: '#1890FF',\n          opacity: 1,\n          geometry: cubeGeometry,\n          material: basicMaterial,\n        },\n      });\n\n      group1.appendChild(cube1);\n      group1.setPosition(150, 250, 0);\n      canvas1.appendChild(group1);\n\n      // scene2\n      const camera2 = canvas2.getCamera();\n      camera2.setPosition(150, 20, 500).setFocalPoint(150, 250, 0);\n\n      const map2 = plugin2.loadTexture(\n        'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*_aqoS73Se3sAAAAAAAAAAAAAARQnAQ',\n      );\n\n      const cubeGeometry2 = new CubeGeometry(device2, {\n        width: 200,\n        height: 200,\n        depth: 200,\n      });\n      const basicMaterial2 = new MeshBasicMaterial(device2, {\n        map: map2,\n      });\n\n      const cube2 = new Mesh({\n        style: {\n          fill: '#1890FF',\n          opacity: 1,\n          geometry: cubeGeometry2,\n          material: basicMaterial2,\n        },\n      });\n\n      const group2 = new Group();\n      group2.appendChild(cube2);\n      group2.setPosition(150, 250, 0);\n      canvas2.appendChild(group2);\n    })();\n  });\n\n  return (\n    <>\n      <SplitPane\n        split=\"vertical\"\n        defaultSize={TOTAL_WIDTH / 2}\n        onChange={(width) => {\n          canvas1.resize(width, SCENE_HEIGHT);\n          canvas2.resize(TOTAL_WIDTH - width, SCENE_HEIGHT);\n        }}\n      >\n        <div\n          id=\"container1\"\n          style={{\n            width: '100%',\n            height: '100%',\n          }}\n        />\n        <div\n          id=\"container2\"\n          style={{\n            width: '100%',\n            height: '100%',\n          }}\n        />\n      </SplitPane>\n    </>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById('container'));\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"react\", \"react-dom\", \"react-split-pane\", \"stats.js\", \"@antv/g\", \"@antv/g-webgl\", \"@antv/g-plugin-3d\", \"@antv/g-plugin-control\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"react\"), require(\"react-dom\"), require(\"react-split-pane\"), require(\"stats.js\"), require(\"@antv/g\"), require(\"@antv/g-webgl\"), require(\"@antv/g-plugin-3d\"), require(\"@antv/g-plugin-control\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.react, global.reactDom, global.reactSplitPane, global.stats, global.g, global.gWebgl, global.gPlugin3d, global.gPluginControl);\n    global.multiCanvas = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_react, _reactDom, _reactSplitPane, _stats, _g, _gWebgl, _gPlugin3d, _gPluginControl) {\n  \"use strict\";\n\n  _react = _interopRequireWildcard(_react);\n  _reactDom = _interopRequireDefault(_reactDom);\n  _reactSplitPane = _interopRequireDefault(_reactSplitPane);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // scene1 + scene2\n  var TOTAL_WIDTH = 600;\n  var SCENE_HEIGHT = 500;\n\n  var App = function MultiWorld() {\n    var canvas1;\n    var canvas2;\n    (0, _react.useEffect)(function () {\n      var stats = new _stats.default();\n      stats.showPanel(0);\n      var $stats = stats.dom;\n      $stats.style.position = 'absolute';\n      $stats.style.left = '0px';\n      $stats.style.top = '0px';\n      var $wrapper = document.getElementById('container');\n      $wrapper.appendChild($stats); // create a webgl renderer\n\n      var webglRenderer1 = new _gWebgl.Renderer();\n      webglRenderer1.registerPlugin(new _gPlugin3d.Plugin());\n      webglRenderer1.registerPlugin(new _gPluginControl.Plugin());\n      var webglRenderer2 = new _gWebgl.Renderer();\n      webglRenderer2.registerPlugin(new _gPlugin3d.Plugin());\n      webglRenderer2.registerPlugin(new _gPluginControl.Plugin()); // create a canvas\n\n      canvas1 = new _g.Canvas({\n        container: 'container1',\n        width: TOTAL_WIDTH / 2,\n        height: SCENE_HEIGHT,\n        renderer: webglRenderer1\n      });\n      canvas2 = new _g.Canvas({\n        container: 'container2',\n        width: TOTAL_WIDTH / 2,\n        height: SCENE_HEIGHT,\n        renderer: webglRenderer2\n      }); // scene 1\n\n      var camera1 = canvas1.getCamera();\n      camera1.setPosition(150, 20, 500).setFocalPoint(150, 250, 0).setPerspective(0.1, 1000, 75, TOTAL_WIDTH / 2 / SCENE_HEIGHT);\n\n      (async function () {\n        await canvas1.ready;\n        var plugin1 = webglRenderer1.getPlugin('device-renderer');\n        var device1 = plugin1.getDevice();\n        var map = plugin1.loadTexture('https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*_aqoS73Se3sAAAAAAAAAAAAAARQnAQ');\n        await canvas2.ready;\n        var plugin2 = webglRenderer2.getPlugin('device-renderer');\n        var device2 = plugin2.getDevice();\n        var group1 = new _g.Group();\n        var cubeGeometry = new _gPlugin3d.CubeGeometry(device1, {\n          width: 200,\n          height: 200,\n          depth: 200\n        });\n        var basicMaterial = new _gPlugin3d.MeshBasicMaterial(device1, {\n          map: map\n        });\n        var cube1 = new _gPlugin3d.Mesh({\n          style: {\n            fill: '#1890FF',\n            opacity: 1,\n            geometry: cubeGeometry,\n            material: basicMaterial\n          }\n        });\n        group1.appendChild(cube1);\n        group1.setPosition(150, 250, 0);\n        canvas1.appendChild(group1); // scene2\n\n        var camera2 = canvas2.getCamera();\n        camera2.setPosition(150, 20, 500).setFocalPoint(150, 250, 0);\n        var map2 = plugin2.loadTexture('https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*_aqoS73Se3sAAAAAAAAAAAAAARQnAQ');\n        var cubeGeometry2 = new _gPlugin3d.CubeGeometry(device2, {\n          width: 200,\n          height: 200,\n          depth: 200\n        });\n        var basicMaterial2 = new _gPlugin3d.MeshBasicMaterial(device2, {\n          map: map2\n        });\n        var cube2 = new _gPlugin3d.Mesh({\n          style: {\n            fill: '#1890FF',\n            opacity: 1,\n            geometry: cubeGeometry2,\n            material: basicMaterial2\n          }\n        });\n        var group2 = new _g.Group();\n        group2.appendChild(cube2);\n        group2.setPosition(150, 250, 0);\n        canvas2.appendChild(group2);\n      })();\n    });\n    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_reactSplitPane.default, {\n      split: \"vertical\",\n      defaultSize: TOTAL_WIDTH / 2,\n      onChange: function onChange(width) {\n        canvas1.resize(width, SCENE_HEIGHT);\n        canvas2.resize(TOTAL_WIDTH - width, SCENE_HEIGHT);\n      }\n    }, /*#__PURE__*/_react.default.createElement(\"div\", {\n      id: \"container1\",\n      style: {\n        width: '100%',\n        height: '100%'\n      }\n    }), /*#__PURE__*/_react.default.createElement(\"div\", {\n      id: \"container2\",\n      style: {\n        width: '100%',\n        height: '100%'\n      }\n    })));\n  };\n\n  _reactDom.default.render( /*#__PURE__*/_react.default.createElement(App, null), document.getElementById('container'));\n});"},{"relativePath":"canvas/demo/main.worker.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/canvas/demo/main.worker.js","order":-1,"filename":"main.worker.js","source":"import { Canvas, CanvasEvent, Circle } from '@antv/g';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { setupTransferableMethodsOnWorker } from '@naoak/workerize-transferable';\n\nsetupTransferableMethodsOnWorker({\n  // the name of function which use some transferables\n  render: {\n    // specify an instance of the function\n    fn: render,\n  },\n  triggerEvent: {\n    fn: triggerEvent,\n  },\n});\n\nlet canvas;\n\nexport function render(offscreenCanvas, devicePixelRatio) {\n  // create a renderer\n  const renderer = new WebGLRenderer({\n    targets: ['webgl1'], // webgl2 seems not support transferable\n  });\n  const domInteractionPlugin = renderer.getPlugin('dom-interaction');\n  renderer.unregisterPlugin(domInteractionPlugin);\n\n  // create a canvas\n  canvas = new Canvas({\n    canvas: offscreenCanvas,\n    devicePixelRatio,\n    renderer,\n  });\n\n  // create a circle\n  const circle = new Circle({\n    style: {\n      cx: 300,\n      cy: 200,\n      r: 50,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n    },\n  });\n\n  canvas.addEventListener(CanvasEvent.READY, () => {\n    // add a circle to canvas\n    canvas.appendChild(circle);\n\n    circle.animate(\n      [\n        {\n          transform: 'scale(1)',\n          fill: '#1890FF',\n          stroke: '#F04864',\n          opacity: 1,\n          shadowColor: 'black',\n          shadowBlur: 30,\n        },\n        {\n          transform: 'scale(2)',\n          fill: 'red',\n          stroke: '#1890FF',\n          opacity: 0.8,\n          shadowColor: 'red',\n          shadowBlur: 0,\n        },\n      ],\n      {\n        duration: 1500,\n        iterations: Infinity,\n        easing: 'cubic-bezier(0.250, 0.460, 0.450, 0.940)',\n      },\n    );\n\n    circle.addEventListener('pointerenter', () => {\n      circle.style.lineWidth = 20;\n    });\n    circle.addEventListener('pointerleave', () => {\n      circle.style.lineWidth = 4;\n    });\n  });\n}\n\n/**\n * receive signals from main thread\n */\nexport function triggerEvent(event, ev) {\n  ev.target = canvas.getContextService().getDomElement();\n  ev.preventDefault = () => {};\n  ev.composedPath = () => {\n    return [canvas.getContextService().getDomElement()];\n  };\n\n  if (event === 'pointermove') {\n    canvas.getRenderingService().hooks.pointerMove.call(ev);\n  } else if (event === 'pointerdown') {\n    canvas.getRenderingService().hooks.pointerDown.call(ev);\n  } else if (event === 'pointerleave') {\n    canvas.getRenderingService().hooks.pointerOut.call(ev);\n  } else if (event === 'pointerover') {\n    canvas.getRenderingService().hooks.pointerOver.call(ev);\n  } else if (event === 'pointerup') {\n    canvas.getRenderingService().hooks.pointerUp.call(ev);\n  }\n}\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"exports\", \"@antv/g\", \"@antv/g-webgl\", \"@naoak/workerize-transferable\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require(\"@antv/g\"), require(\"@antv/g-webgl\"), require(\"@naoak/workerize-transferable\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.g, global.gWebgl, global.workerizeTransferable);\n    global.mainWorker = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_exports, _g, _gWebgl, _workerizeTransferable) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.render = render;\n  _exports.triggerEvent = triggerEvent;\n  (0, _workerizeTransferable.setupTransferableMethodsOnWorker)({\n    // the name of function which use some transferables\n    render: {\n      // specify an instance of the function\n      fn: render\n    },\n    triggerEvent: {\n      fn: triggerEvent\n    }\n  });\n  var canvas;\n\n  function render(offscreenCanvas, devicePixelRatio) {\n    // create a renderer\n    var renderer = new _gWebgl.Renderer({\n      targets: ['webgl1'] // webgl2 seems not support transferable\n\n    });\n    var domInteractionPlugin = renderer.getPlugin('dom-interaction');\n    renderer.unregisterPlugin(domInteractionPlugin); // create a canvas\n\n    canvas = new _g.Canvas({\n      canvas: offscreenCanvas,\n      devicePixelRatio: devicePixelRatio,\n      renderer: renderer\n    }); // create a circle\n\n    var circle = new _g.Circle({\n      style: {\n        cx: 300,\n        cy: 200,\n        r: 50,\n        fill: '#1890FF',\n        stroke: '#F04864',\n        lineWidth: 4\n      }\n    });\n    canvas.addEventListener(_g.CanvasEvent.READY, function () {\n      // add a circle to canvas\n      canvas.appendChild(circle);\n      circle.animate([{\n        transform: 'scale(1)',\n        fill: '#1890FF',\n        stroke: '#F04864',\n        opacity: 1,\n        shadowColor: 'black',\n        shadowBlur: 30\n      }, {\n        transform: 'scale(2)',\n        fill: 'red',\n        stroke: '#1890FF',\n        opacity: 0.8,\n        shadowColor: 'red',\n        shadowBlur: 0\n      }], {\n        duration: 1500,\n        iterations: Infinity,\n        easing: 'cubic-bezier(0.250, 0.460, 0.450, 0.940)'\n      });\n      circle.addEventListener('pointerenter', function () {\n        circle.style.lineWidth = 20;\n      });\n      circle.addEventListener('pointerleave', function () {\n        circle.style.lineWidth = 4;\n      });\n    });\n  }\n  /**\n   * receive signals from main thread\n   */\n\n\n  function triggerEvent(event, ev) {\n    ev.target = canvas.getContextService().getDomElement();\n\n    ev.preventDefault = function () {};\n\n    ev.composedPath = function () {\n      return [canvas.getContextService().getDomElement()];\n    };\n\n    if (event === 'pointermove') {\n      canvas.getRenderingService().hooks.pointerMove.call(ev);\n    } else if (event === 'pointerdown') {\n      canvas.getRenderingService().hooks.pointerDown.call(ev);\n    } else if (event === 'pointerleave') {\n      canvas.getRenderingService().hooks.pointerOut.call(ev);\n    } else if (event === 'pointerover') {\n      canvas.getRenderingService().hooks.pointerOver.call(ev);\n    } else if (event === 'pointerup') {\n      canvas.getRenderingService().hooks.pointerUp.call(ev);\n    }\n  }\n});"},{"relativePath":"canvas/demo/resize.tsx","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/canvas/demo/resize.tsx","order":2,"filename":"resize.tsx","title":{"zh":"改变画布大小","en":"Resize canvas"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*tJDfSaJOfmgAAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent, Circle } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport * as lil from 'lil-gui';\nimport React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport SplitPane from 'react-split-pane';\nimport Stats from 'stats.js';\n\n// scene1 + scene2\nconst TOTAL_WIDTH = 600;\nconst SCENE_HEIGHT = 500;\n\nconst App = function MultiWorld() {\n  let canvas1: Canvas;\n  let canvas2: Canvas;\n  useEffect(() => {\n    const stats = new Stats();\n    stats.showPanel(0);\n    const $stats = stats.dom;\n    $stats.style.position = 'absolute';\n    $stats.style.left = '0px';\n    $stats.style.top = '0px';\n    const $wrapper = document.getElementById('container');\n    $wrapper.appendChild($stats);\n\n    // create a canvas renderer\n    const canvasRenderer1 = new CanvasRenderer();\n    const canvasRenderer2 = new CanvasRenderer();\n    const svgRenderer1 = new SVGRenderer();\n    const svgRenderer2 = new SVGRenderer();\n    const webglRenderer1 = new WebGLRenderer();\n    const webglRenderer2 = new WebGLRenderer();\n\n    // create a canvas\n    canvas1 = new Canvas({\n      container: 'container1',\n      width: TOTAL_WIDTH / 2,\n      height: SCENE_HEIGHT,\n      renderer: canvasRenderer1,\n    });\n\n    canvas2 = new Canvas({\n      container: 'container2',\n      width: TOTAL_WIDTH / 2,\n      height: SCENE_HEIGHT,\n      renderer: canvasRenderer2,\n    });\n\n    canvas1.addEventListener(CanvasEvent.READY, () => {\n      const circle1 = new Circle({\n        style: {\n          cx: 100,\n          cy: 100,\n          r: 100,\n          fill: 'blue',\n        },\n      });\n      canvas1.appendChild(circle1);\n      circle1.on('mouseenter', () => {\n        circle1.attr('fill', 'yellow');\n      });\n      circle1.on('mouseleave', () => {\n        circle1.attr('fill', 'blue');\n      });\n    });\n\n    canvas2.addEventListener(CanvasEvent.READY, () => {\n      const circle2 = new Circle({\n        style: {\n          cx: 100,\n          cy: 100,\n          r: 100,\n          fill: 'red',\n        },\n      });\n      canvas2.appendChild(circle2);\n      circle2.on('mouseenter', () => {\n        circle2.attr('fill', 'green');\n      });\n      circle2.on('mouseleave', () => {\n        circle2.attr('fill', 'red');\n      });\n    });\n\n    // GUI\n    const gui = new lil.GUI({ autoPlace: false });\n    $wrapper.appendChild(gui.domElement);\n\n    const rendererFolder = gui.addFolder('renderer');\n    const rendererConfig = {\n      renderer: 'canvas',\n    };\n    rendererFolder\n      .add(rendererConfig, 'renderer', ['canvas', 'webgl', 'svg'])\n      .onChange((renderer) => {\n        canvas1.setRenderer(\n          renderer === 'canvas'\n            ? canvasRenderer1\n            : renderer === 'webgl'\n            ? webglRenderer1\n            : svgRenderer1,\n        );\n        canvas2.setRenderer(\n          renderer === 'canvas'\n            ? canvasRenderer2\n            : renderer === 'webgl'\n            ? webglRenderer2\n            : svgRenderer2,\n        );\n      });\n    rendererFolder.open();\n  });\n\n  return (\n    <>\n      <SplitPane\n        split=\"vertical\"\n        defaultSize={TOTAL_WIDTH / 2}\n        onChange={(width) => {\n          canvas1.resize(width, SCENE_HEIGHT);\n          canvas2.resize(TOTAL_WIDTH - width, SCENE_HEIGHT);\n        }}\n      >\n        <div\n          id=\"container1\"\n          style={{\n            width: '100%',\n            height: '100%',\n          }}\n        />\n        <div\n          id=\"container2\"\n          style={{\n            width: '100%',\n            height: '100%',\n          }}\n        />\n      </SplitPane>\n    </>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById('container'));\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-svg\", \"@antv/g-webgl\", \"lil-gui\", \"react\", \"react-dom\", \"react-split-pane\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"lil-gui\"), require(\"react\"), require(\"react-dom\"), require(\"react-split-pane\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gSvg, global.gWebgl, global.lilGui, global.react, global.reactDom, global.reactSplitPane, global.stats);\n    global.resize = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gSvg, _gWebgl, lil, _react, _reactDom, _reactSplitPane, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _react = _interopRequireWildcard(_react);\n  _reactDom = _interopRequireDefault(_reactDom);\n  _reactSplitPane = _interopRequireDefault(_reactSplitPane);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // scene1 + scene2\n  var TOTAL_WIDTH = 600;\n  var SCENE_HEIGHT = 500;\n\n  var App = function MultiWorld() {\n    var canvas1;\n    var canvas2;\n    (0, _react.useEffect)(function () {\n      var stats = new _stats.default();\n      stats.showPanel(0);\n      var $stats = stats.dom;\n      $stats.style.position = 'absolute';\n      $stats.style.left = '0px';\n      $stats.style.top = '0px';\n      var $wrapper = document.getElementById('container');\n      $wrapper.appendChild($stats); // create a canvas renderer\n\n      var canvasRenderer1 = new _gCanvas.Renderer();\n      var canvasRenderer2 = new _gCanvas.Renderer();\n      var svgRenderer1 = new _gSvg.Renderer();\n      var svgRenderer2 = new _gSvg.Renderer();\n      var webglRenderer1 = new _gWebgl.Renderer();\n      var webglRenderer2 = new _gWebgl.Renderer(); // create a canvas\n\n      canvas1 = new _g.Canvas({\n        container: 'container1',\n        width: TOTAL_WIDTH / 2,\n        height: SCENE_HEIGHT,\n        renderer: canvasRenderer1\n      });\n      canvas2 = new _g.Canvas({\n        container: 'container2',\n        width: TOTAL_WIDTH / 2,\n        height: SCENE_HEIGHT,\n        renderer: canvasRenderer2\n      });\n      canvas1.addEventListener(_g.CanvasEvent.READY, function () {\n        var circle1 = new _g.Circle({\n          style: {\n            cx: 100,\n            cy: 100,\n            r: 100,\n            fill: 'blue'\n          }\n        });\n        canvas1.appendChild(circle1);\n        circle1.on('mouseenter', function () {\n          circle1.attr('fill', 'yellow');\n        });\n        circle1.on('mouseleave', function () {\n          circle1.attr('fill', 'blue');\n        });\n      });\n      canvas2.addEventListener(_g.CanvasEvent.READY, function () {\n        var circle2 = new _g.Circle({\n          style: {\n            cx: 100,\n            cy: 100,\n            r: 100,\n            fill: 'red'\n          }\n        });\n        canvas2.appendChild(circle2);\n        circle2.on('mouseenter', function () {\n          circle2.attr('fill', 'green');\n        });\n        circle2.on('mouseleave', function () {\n          circle2.attr('fill', 'red');\n        });\n      }); // GUI\n\n      var gui = new lil.GUI({\n        autoPlace: false\n      });\n      $wrapper.appendChild(gui.domElement);\n      var rendererFolder = gui.addFolder('renderer');\n      var rendererConfig = {\n        renderer: 'canvas'\n      };\n      rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'webgl', 'svg']).onChange(function (renderer) {\n        canvas1.setRenderer(renderer === 'canvas' ? canvasRenderer1 : renderer === 'webgl' ? webglRenderer1 : svgRenderer1);\n        canvas2.setRenderer(renderer === 'canvas' ? canvasRenderer2 : renderer === 'webgl' ? webglRenderer2 : svgRenderer2);\n      });\n      rendererFolder.open();\n    });\n    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_reactSplitPane.default, {\n      split: \"vertical\",\n      defaultSize: TOTAL_WIDTH / 2,\n      onChange: function onChange(width) {\n        canvas1.resize(width, SCENE_HEIGHT);\n        canvas2.resize(TOTAL_WIDTH - width, SCENE_HEIGHT);\n      }\n    }, /*#__PURE__*/_react.default.createElement(\"div\", {\n      id: \"container1\",\n      style: {\n        width: '100%',\n        height: '100%'\n      }\n    }), /*#__PURE__*/_react.default.createElement(\"div\", {\n      id: \"container2\",\n      style: {\n        width: '100%',\n        height: '100%'\n      }\n    })));\n  };\n\n  _reactDom.default.render( /*#__PURE__*/_react.default.createElement(App, null), document.getElementById('container'));\n});"},{"relativePath":"canvas/demo/user-defined-canvas.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/canvas/demo/user-defined-canvas.js","order":6,"filename":"user-defined-canvas.js","title":{"zh":"使用用户创建的 <canvas>","en":"Use user-defined <canvas>"},"source":"import { Canvas, CanvasEvent, Circle } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport Stats from 'stats.js';\n\nconst $canvas = document.createElement('canvas');\nconst dpr = window.devicePixelRatio;\n$canvas.width = dpr * 600;\n$canvas.height = dpr * 500;\n$canvas.style.width = '600px';\n$canvas.style.height = '500px';\ndocument.getElementById('container').appendChild($canvas);\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  canvas: $canvas,\n  renderer: canvasRenderer,\n});\n\nconst circle = new Circle({\n  style: {\n    cx: 300,\n    cy: 200,\n    r: 100,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 4,\n  },\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  canvas.appendChild(circle);\n  circle.addEventListener('pointerenter', () => {\n    circle.attr('fill', '#2FC25B');\n  });\n\n  circle.addEventListener('pointerleave', () => {\n    circle.attr('fill', '#1890FF');\n  });\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.stats);\n    global.userDefinedCanvas = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _stats) {\n  \"use strict\";\n\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  var $canvas = document.createElement('canvas');\n  var dpr = window.devicePixelRatio;\n  $canvas.width = dpr * 600;\n  $canvas.height = dpr * 500;\n  $canvas.style.width = '600px';\n  $canvas.style.height = '500px';\n  document.getElementById('container').appendChild($canvas); // create a renderer\n\n  var canvasRenderer = new _gCanvas.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    canvas: $canvas,\n    renderer: canvasRenderer\n  });\n  var circle = new _g.Circle({\n    style: {\n      cx: 300,\n      cy: 200,\n      r: 100,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4\n    }\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    canvas.appendChild(circle);\n    circle.addEventListener('pointerenter', function () {\n      circle.attr('fill', '#2FC25B');\n    });\n    circle.addEventListener('pointerleave', function () {\n      circle.attr('fill', '#1890FF');\n    });\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  });\n});"},{"relativePath":"canvas/demo/rendering-on-demand.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/canvas/demo/rendering-on-demand.js","order":3,"filename":"rendering-on-demand.js","title":{"zh":"按需渲染","en":"Rendering on demand"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*FfHBTr2ACAkAAAAAAAAAAABkARQnAQ","source":"import { Canvas, CanvasEvent, Circle, Group } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n/**\nsolarSystem\n   |    |\n   |   sun\n   |\n earthOrbit\n   |    |\n   |  earth\n   |\n  moonOrbit\n      |\n     moon\n */\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer({\n  enableAutoRendering: false,\n});\nconst webglRenderer = new WebGLRenderer({\n  enableAutoRendering: false,\n});\nconst svgRenderer = new SVGRenderer({\n  enableAutoRendering: false,\n});\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  const solarSystem = new Group({\n    id: 'solarSystem',\n  });\n  const earthOrbit = new Group({\n    id: 'earthOrbit',\n  });\n  const moonOrbit = new Group({\n    id: 'moonOrbit',\n  });\n\n  const sun = new Circle({\n    id: 'sun',\n    style: {\n      r: 100,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n    },\n  });\n  const earth = new Circle({\n    id: 'earth',\n    style: {\n      r: 50,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n    },\n  });\n  const moon = new Circle({\n    id: 'moon',\n    style: {\n      r: 25,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n    },\n  });\n\n  solarSystem.appendChild(sun);\n  solarSystem.appendChild(earthOrbit);\n  earthOrbit.appendChild(earth);\n  earthOrbit.appendChild(moonOrbit);\n  moonOrbit.appendChild(moon);\n\n  solarSystem.setPosition(300, 250);\n  earthOrbit.translate(100, 0);\n  moonOrbit.translate(100, 0);\n\n  canvas.appendChild(solarSystem);\n\n  // stats\n  const stats = new Stats();\n  stats.showPanel(0);\n  const $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  const $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n\n  // GUI\n  const gui = new lil.GUI({ autoPlace: false });\n  $wrapper.appendChild(gui.domElement);\n  const rendererFolder = gui.addFolder('renderer');\n  const rendererConfig = {\n    renderer: 'canvas',\n  };\n  rendererFolder\n    .add(rendererConfig, 'renderer', ['canvas', 'webgl', 'svg'])\n    .onChange((renderer) => {\n      canvas.setRenderer(\n        renderer === 'canvas' ? canvasRenderer : renderer === 'webgl' ? webglRenderer : svgRenderer,\n      );\n    });\n  rendererFolder.open();\n\n  // create a main loop\n  const tick = () => {\n    if (stats) {\n      stats.update();\n    }\n\n    // call `render` in each frame\n    canvas.render();\n\n    solarSystem.rotateLocal(1);\n    earthOrbit.rotateLocal(2);\n\n    requestAnimationFrame(tick);\n  };\n  tick();\n});\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-svg\", \"@antv/g-webgl\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gSvg, global.gWebgl, global.lilGui, global.stats);\n    global.renderingOnDemand = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gSvg, _gWebgl, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n  solarSystem\n     |    |\n     |   sun\n     |\n   earthOrbit\n     |    |\n     |  earth\n     |\n    moonOrbit\n        |\n       moon\n   */\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer({\n    enableAutoRendering: false\n  });\n  var webglRenderer = new _gWebgl.Renderer({\n    enableAutoRendering: false\n  });\n  var svgRenderer = new _gSvg.Renderer({\n    enableAutoRendering: false\n  }); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    var solarSystem = new _g.Group({\n      id: 'solarSystem'\n    });\n    var earthOrbit = new _g.Group({\n      id: 'earthOrbit'\n    });\n    var moonOrbit = new _g.Group({\n      id: 'moonOrbit'\n    });\n    var sun = new _g.Circle({\n      id: 'sun',\n      style: {\n        r: 100,\n        fill: '#1890FF',\n        stroke: '#F04864',\n        lineWidth: 4\n      }\n    });\n    var earth = new _g.Circle({\n      id: 'earth',\n      style: {\n        r: 50,\n        fill: '#1890FF',\n        stroke: '#F04864',\n        lineWidth: 4\n      }\n    });\n    var moon = new _g.Circle({\n      id: 'moon',\n      style: {\n        r: 25,\n        fill: '#1890FF',\n        stroke: '#F04864',\n        lineWidth: 4\n      }\n    });\n    solarSystem.appendChild(sun);\n    solarSystem.appendChild(earthOrbit);\n    earthOrbit.appendChild(earth);\n    earthOrbit.appendChild(moonOrbit);\n    moonOrbit.appendChild(moon);\n    solarSystem.setPosition(300, 250);\n    earthOrbit.translate(100, 0);\n    moonOrbit.translate(100, 0);\n    canvas.appendChild(solarSystem); // stats\n\n    var stats = new _stats.default();\n    stats.showPanel(0);\n    var $stats = stats.dom;\n    $stats.style.position = 'absolute';\n    $stats.style.left = '0px';\n    $stats.style.top = '0px';\n    var $wrapper = document.getElementById('container');\n    $wrapper.appendChild($stats); // GUI\n\n    var gui = new lil.GUI({\n      autoPlace: false\n    });\n    $wrapper.appendChild(gui.domElement);\n    var rendererFolder = gui.addFolder('renderer');\n    var rendererConfig = {\n      renderer: 'canvas'\n    };\n    rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'webgl', 'svg']).onChange(function (renderer) {\n      canvas.setRenderer(renderer === 'canvas' ? canvasRenderer : renderer === 'webgl' ? webglRenderer : svgRenderer);\n    });\n    rendererFolder.open(); // create a main loop\n\n    var tick = function tick() {\n      if (stats) {\n        stats.update();\n      } // call `render` in each frame\n\n\n      canvas.render();\n      solarSystem.rotateLocal(1);\n      earthOrbit.rotateLocal(2);\n      requestAnimationFrame(tick);\n    };\n\n    tick();\n  });\n});"},{"relativePath":"camera/demo/landmark2.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/camera/demo/landmark2.js","order":3,"filename":"landmark2.js","title":{"zh":"2D 场景下的相机动画","en":"Landmark"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*EL2XSL5qSQ8AAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent, Circle } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\nconst camera = canvas.getCamera();\n\n// create landmarks\ncamera.createLandmark('reset', {\n  position: [300, 250],\n  focalPoint: [300, 250],\n  zoom: 1,\n});\ncamera.createLandmark('look at red circle', {\n  position: [200, 200],\n  focalPoint: [200, 200],\n  zoom: 2,\n  roll: 30,\n});\ncamera.createLandmark('look at green circle', {\n  position: [400, 400],\n  focalPoint: [400, 400],\n  zoom: 2,\n});\n\nconst circle1 = new Circle({\n  style: {\n    cx: 200,\n    cy: 200,\n    r: 50,\n    fill: 'red',\n  },\n});\nconst circle2 = circle1.cloneNode();\ncircle2.setPosition(400, 400);\ncircle2.style.fill = 'green';\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  canvas.appendChild(circle1);\n  canvas.appendChild(circle2);\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n\nconst cameraFolder = gui.addFolder('camera landmarks');\nconst cameraConfig = {\n  goToMark1: () => {\n    camera.gotoLandmark('reset', {\n      duration: 1000,\n      easing: 'ease-in',\n      onfinish: () => {\n        console.log('reset finished');\n      },\n    });\n  },\n  goToMark2: () => {\n    camera.gotoLandmark('look at red circle', {\n      duration: 300,\n      easing: 'linear',\n    });\n  },\n  goToMark3: () => {\n    camera.gotoLandmark('look at green circle', {\n      duration: 300,\n      easing: 'linear',\n    });\n  },\n};\ncameraFolder.add(cameraConfig, 'goToMark1').name('reset');\ncameraFolder.add(cameraConfig, 'goToMark2').name('look at red circle');\ncameraFolder.add(cameraConfig, 'goToMark3').name('look at green circle');\ncameraFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.landmark2 = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  var camera = canvas.getCamera(); // create landmarks\n\n  camera.createLandmark('reset', {\n    position: [300, 250],\n    focalPoint: [300, 250],\n    zoom: 1\n  });\n  camera.createLandmark('look at red circle', {\n    position: [200, 200],\n    focalPoint: [200, 200],\n    zoom: 2,\n    roll: 30\n  });\n  camera.createLandmark('look at green circle', {\n    position: [400, 400],\n    focalPoint: [400, 400],\n    zoom: 2\n  });\n  var circle1 = new _g.Circle({\n    style: {\n      cx: 200,\n      cy: 200,\n      r: 50,\n      fill: 'red'\n    }\n  });\n  var circle2 = circle1.cloneNode();\n  circle2.setPosition(400, 400);\n  circle2.style.fill = 'green';\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    canvas.appendChild(circle1);\n    canvas.appendChild(circle2);\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n  var cameraFolder = gui.addFolder('camera landmarks');\n  var cameraConfig = {\n    goToMark1: function goToMark1() {\n      camera.gotoLandmark('reset', {\n        duration: 1000,\n        easing: 'ease-in',\n        onfinish: function onfinish() {\n          console.log('reset finished');\n        }\n      });\n    },\n    goToMark2: function goToMark2() {\n      camera.gotoLandmark('look at red circle', {\n        duration: 300,\n        easing: 'linear'\n      });\n    },\n    goToMark3: function goToMark3() {\n      camera.gotoLandmark('look at green circle', {\n        duration: 300,\n        easing: 'linear'\n      });\n    }\n  };\n  cameraFolder.add(cameraConfig, 'goToMark1').name('reset');\n  cameraFolder.add(cameraConfig, 'goToMark2').name('look at red circle');\n  cameraFolder.add(cameraConfig, 'goToMark3').name('look at green circle');\n  cameraFolder.open();\n});"},{"relativePath":"camera/demo/perspective.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/camera/demo/perspective.js","order":1,"filename":"perspective.js","title":{"zh":"透视投影相机","en":"Perspective camera"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*wrMTSZeQGvsAAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent, Group } from '@antv/g';\nimport { CubeGeometry, Mesh, MeshBasicMaterial, Plugin as Plugin3D } from '@antv/g-plugin-3d';\nimport { Plugin as PluginControl } from '@antv/g-plugin-control';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a webgl renderer\nconst webglRenderer = new WebGLRenderer();\nwebglRenderer.registerPlugin(new Plugin3D());\nwebglRenderer.registerPlugin(new PluginControl());\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: webglRenderer,\n});\n\n// create a perspective camera\nconst camera = canvas.getCamera();\ncamera.setPerspective(0.1, 1000, 75, 600 / 500);\n\nconst group = new Group();\n\n(async () => {\n  await canvas.ready;\n  const plugin = webglRenderer.getPlugin('device-renderer');\n  const device = plugin.getDevice();\n  const map = plugin.loadTexture(\n    'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*8TlCRIsKeUkAAAAAAAAAAAAAARQnAQ',\n  );\n\n  const cubeGeometry = new CubeGeometry(device, {\n    width: 200,\n    height: 200,\n    depth: 200,\n  });\n  const basicMaterial = new MeshBasicMaterial(device, {\n    map,\n  });\n\n  const cube = new Mesh({\n    style: {\n      fill: '#1890FF',\n      opacity: 1,\n      geometry: cubeGeometry,\n      material: basicMaterial,\n    },\n  });\n  cube.setPosition(300, 250, 0);\n\n  canvas.appendChild(cube);\n})();\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n  group.rotate(0, 1, 0);\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\n\nconst cameraFolder = gui.addFolder('perspective');\nconst cameraConfig = {\n  fov: 75,\n  near: 0.1,\n  far: 1000,\n  zoom: 1,\n};\ncameraFolder.add(cameraConfig, 'fov', 0, 180).onChange((fov) => {\n  camera.setFov(fov);\n});\ncameraFolder.add(cameraConfig, 'near', 0, 600).onChange((near) => {\n  camera.setNear(near);\n});\ncameraFolder.add(cameraConfig, 'far', 0, 1000).onChange((far) => {\n  camera.setFar(far);\n});\ncameraFolder.add(cameraConfig, 'zoom', 0, 10).onChange((zoom) => {\n  camera.setZoom(zoom);\n});\ncameraFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-plugin-3d\", \"@antv/g-plugin-control\", \"@antv/g-webgl\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-plugin-3d\"), require(\"@antv/g-plugin-control\"), require(\"@antv/g-webgl\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gPlugin3d, global.gPluginControl, global.gWebgl, global.lilGui, global.stats);\n    global.perspective = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gPlugin3d, _gPluginControl, _gWebgl, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // create a webgl renderer\n  var webglRenderer = new _gWebgl.Renderer();\n  webglRenderer.registerPlugin(new _gPlugin3d.Plugin());\n  webglRenderer.registerPlugin(new _gPluginControl.Plugin()); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: webglRenderer\n  }); // create a perspective camera\n\n  var camera = canvas.getCamera();\n  camera.setPerspective(0.1, 1000, 75, 600 / 500);\n  var group = new _g.Group();\n\n  (async function () {\n    await canvas.ready;\n    var plugin = webglRenderer.getPlugin('device-renderer');\n    var device = plugin.getDevice();\n    var map = plugin.loadTexture('https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*8TlCRIsKeUkAAAAAAAAAAAAAARQnAQ');\n    var cubeGeometry = new _gPlugin3d.CubeGeometry(device, {\n      width: 200,\n      height: 200,\n      depth: 200\n    });\n    var basicMaterial = new _gPlugin3d.MeshBasicMaterial(device, {\n      map: map\n    });\n    var cube = new _gPlugin3d.Mesh({\n      style: {\n        fill: '#1890FF',\n        opacity: 1,\n        geometry: cubeGeometry,\n        material: basicMaterial\n      }\n    });\n    cube.setPosition(300, 250, 0);\n    canvas.appendChild(cube);\n  })(); // stats\n\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n\n    group.rotate(0, 1, 0);\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var cameraFolder = gui.addFolder('perspective');\n  var cameraConfig = {\n    fov: 75,\n    near: 0.1,\n    far: 1000,\n    zoom: 1\n  };\n  cameraFolder.add(cameraConfig, 'fov', 0, 180).onChange(function (fov) {\n    camera.setFov(fov);\n  });\n  cameraFolder.add(cameraConfig, 'near', 0, 600).onChange(function (near) {\n    camera.setNear(near);\n  });\n  cameraFolder.add(cameraConfig, 'far', 0, 1000).onChange(function (far) {\n    camera.setFar(far);\n  });\n  cameraFolder.add(cameraConfig, 'zoom', 0, 10).onChange(function (zoom) {\n    camera.setZoom(zoom);\n  });\n  cameraFolder.open();\n});"},{"relativePath":"camera/demo/action.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/camera/demo/action.js","order":4,"filename":"action.js","title":{"zh":"相机动作","en":"Camera actions"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*goX8QqgVSMEAAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent, Circle, Group, Text } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\n// get camera\nconst camera = canvas.getCamera();\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  const solarSystem = new Group({\n    id: 'solarSystem',\n  });\n  const earthOrbit = new Group({\n    id: 'earthOrbit',\n  });\n  const moonOrbit = new Group({\n    id: 'moonOrbit',\n  });\n\n  const sun = new Circle({\n    id: 'sun',\n    style: {\n      r: 100,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n    },\n  });\n  const sunLabel = new Text({\n    style: {\n      fontSize: 30,\n      text: 'Sun',\n      fill: 'white',\n      textAlign: 'center',\n      textBaseline: 'middle',\n    },\n  });\n  sun.appendChild(sunLabel);\n  const earth = new Circle({\n    id: 'earth',\n    style: {\n      r: 50,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n    },\n  });\n  const earthLabel = new Text({\n    style: {\n      fontSize: 20,\n      text: 'Earth',\n      fill: 'white',\n      textAlign: 'center',\n      textBaseline: 'middle',\n    },\n  });\n  earth.appendChild(earthLabel);\n  const moon = new Circle({\n    id: 'moon',\n    style: {\n      r: 25,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n    },\n  });\n  const moonLabel = new Text({\n    style: {\n      fontSize: 10,\n      text: 'Moon',\n      fill: 'white',\n      textAlign: 'center',\n      textBaseline: 'middle',\n    },\n  });\n  moon.appendChild(moonLabel);\n\n  solarSystem.appendChild(sun);\n  solarSystem.appendChild(earthOrbit);\n  earthOrbit.appendChild(earth);\n  earthOrbit.appendChild(moonOrbit);\n  moonOrbit.appendChild(moon);\n\n  solarSystem.setPosition(300, 250);\n  earthOrbit.translate(100, 0);\n  moonOrbit.translate(100, 0);\n\n  canvas.appendChild(solarSystem);\n\n  // stats\n  const stats = new Stats();\n  stats.showPanel(0);\n  const $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  const $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n    if (stats) {\n      stats.update();\n    }\n    solarSystem.rotateLocal(1);\n    earthOrbit.rotateLocal(2);\n  });\n\n  // GUI\n  const gui = new lil.GUI({ autoPlace: false });\n  $wrapper.appendChild(gui.domElement);\n  const rendererFolder = gui.addFolder('renderer');\n  const rendererConfig = {\n    renderer: 'canvas',\n  };\n  rendererFolder\n    .add(rendererConfig, 'renderer', ['canvas', 'webgl', 'svg'])\n    .onChange((renderer) => {\n      canvas.setRenderer(\n        renderer === 'canvas' ? canvasRenderer : renderer === 'webgl' ? webglRenderer : svgRenderer,\n      );\n    });\n  rendererFolder.open();\n\n  const cameraFolder = gui.addFolder('camera actions');\n  const cameraConfig = {\n    panX: 0,\n    panY: 0,\n    zoom: 1,\n    roll: 0,\n  };\n\n  const origin = camera.getPosition();\n  cameraFolder.add(cameraConfig, 'panX', -300, 300).onChange((panX) => {\n    const current = camera.getPosition();\n    camera.pan(origin[0] + panX - current[0], 0);\n  });\n  cameraFolder.add(cameraConfig, 'panY', -300, 300).onChange((panY) => {\n    const current = camera.getPosition();\n    camera.pan(0, origin[1] + panY - current[1]);\n  });\n  cameraFolder.add(cameraConfig, 'roll', -90, 90).onChange((roll) => {\n    camera.rotate(0, 0, roll);\n  });\n  cameraFolder.add(cameraConfig, 'zoom', 0, 10).onChange((zoom) => {\n    camera.setZoom(zoom);\n  });\n  cameraFolder.open();\n});\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.action = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  }); // get camera\n\n  var camera = canvas.getCamera();\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    var solarSystem = new _g.Group({\n      id: 'solarSystem'\n    });\n    var earthOrbit = new _g.Group({\n      id: 'earthOrbit'\n    });\n    var moonOrbit = new _g.Group({\n      id: 'moonOrbit'\n    });\n    var sun = new _g.Circle({\n      id: 'sun',\n      style: {\n        r: 100,\n        fill: '#1890FF',\n        stroke: '#F04864',\n        lineWidth: 4\n      }\n    });\n    var sunLabel = new _g.Text({\n      style: {\n        fontSize: 30,\n        text: 'Sun',\n        fill: 'white',\n        textAlign: 'center',\n        textBaseline: 'middle'\n      }\n    });\n    sun.appendChild(sunLabel);\n    var earth = new _g.Circle({\n      id: 'earth',\n      style: {\n        r: 50,\n        fill: '#1890FF',\n        stroke: '#F04864',\n        lineWidth: 4\n      }\n    });\n    var earthLabel = new _g.Text({\n      style: {\n        fontSize: 20,\n        text: 'Earth',\n        fill: 'white',\n        textAlign: 'center',\n        textBaseline: 'middle'\n      }\n    });\n    earth.appendChild(earthLabel);\n    var moon = new _g.Circle({\n      id: 'moon',\n      style: {\n        r: 25,\n        fill: '#1890FF',\n        stroke: '#F04864',\n        lineWidth: 4\n      }\n    });\n    var moonLabel = new _g.Text({\n      style: {\n        fontSize: 10,\n        text: 'Moon',\n        fill: 'white',\n        textAlign: 'center',\n        textBaseline: 'middle'\n      }\n    });\n    moon.appendChild(moonLabel);\n    solarSystem.appendChild(sun);\n    solarSystem.appendChild(earthOrbit);\n    earthOrbit.appendChild(earth);\n    earthOrbit.appendChild(moonOrbit);\n    moonOrbit.appendChild(moon);\n    solarSystem.setPosition(300, 250);\n    earthOrbit.translate(100, 0);\n    moonOrbit.translate(100, 0);\n    canvas.appendChild(solarSystem); // stats\n\n    var stats = new _stats.default();\n    stats.showPanel(0);\n    var $stats = stats.dom;\n    $stats.style.position = 'absolute';\n    $stats.style.left = '0px';\n    $stats.style.top = '0px';\n    var $wrapper = document.getElementById('container');\n    $wrapper.appendChild($stats);\n    canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n      if (stats) {\n        stats.update();\n      }\n\n      solarSystem.rotateLocal(1);\n      earthOrbit.rotateLocal(2);\n    }); // GUI\n\n    var gui = new lil.GUI({\n      autoPlace: false\n    });\n    $wrapper.appendChild(gui.domElement);\n    var rendererFolder = gui.addFolder('renderer');\n    var rendererConfig = {\n      renderer: 'canvas'\n    };\n    rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'webgl', 'svg']).onChange(function (renderer) {\n      canvas.setRenderer(renderer === 'canvas' ? canvasRenderer : renderer === 'webgl' ? webglRenderer : svgRenderer);\n    });\n    rendererFolder.open();\n    var cameraFolder = gui.addFolder('camera actions');\n    var cameraConfig = {\n      panX: 0,\n      panY: 0,\n      zoom: 1,\n      roll: 0\n    };\n    var origin = camera.getPosition();\n    cameraFolder.add(cameraConfig, 'panX', -300, 300).onChange(function (panX) {\n      var current = camera.getPosition();\n      camera.pan(origin[0] + panX - current[0], 0);\n    });\n    cameraFolder.add(cameraConfig, 'panY', -300, 300).onChange(function (panY) {\n      var current = camera.getPosition();\n      camera.pan(0, origin[1] + panY - current[1]);\n    });\n    cameraFolder.add(cameraConfig, 'roll', -90, 90).onChange(function (roll) {\n      camera.rotate(0, 0, roll);\n    });\n    cameraFolder.add(cameraConfig, 'zoom', 0, 10).onChange(function (zoom) {\n      camera.setZoom(zoom);\n    });\n    cameraFolder.open();\n  });\n});"},{"relativePath":"camera/demo/ortho.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/camera/demo/ortho.js","order":0,"filename":"ortho.js","title":{"zh":"正交投影相机","en":"Orthographic camera"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*5cbxQ5CF1GEAAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent, Group } from '@antv/g';\nimport { CubeGeometry, Mesh, MeshBasicMaterial, Plugin as Plugin3D } from '@antv/g-plugin-3d';\nimport { Plugin as PluginControl } from '@antv/g-plugin-control';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst webglRenderer = new WebGLRenderer();\nwebglRenderer.registerPlugin(new Plugin3D());\nwebglRenderer.registerPlugin(new PluginControl());\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: webglRenderer,\n});\n\n// create an orthographic camera\nconst camera = canvas.getCamera();\nconst group = new Group();\n\n(async () => {\n  await canvas.ready;\n\n  const plugin = webglRenderer.getPlugin('device-renderer');\n  const device = plugin.getDevice();\n\n  const map = plugin.loadTexture(\n    'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*8TlCRIsKeUkAAAAAAAAAAAAAARQnAQ',\n  );\n\n  const cubeGeometry = new CubeGeometry(device, {\n    width: 200,\n    height: 200,\n    depth: 200,\n  });\n  const basicMaterial = new MeshBasicMaterial(device, {\n    map,\n  });\n\n  const cube = new Mesh({\n    style: {\n      fill: '#1890FF',\n      opacity: 1,\n      geometry: cubeGeometry,\n      material: basicMaterial,\n    },\n  });\n  cube.setPosition(300, 250, 0);\n\n  canvas.appendChild(cube);\n})();\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n  group.rotate(0, 1, 0);\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst cameraFolder = gui.addFolder('orthographic projection');\nconst cameraConfig = {\n  near: 0.1,\n  far: 1000,\n  zoom: 1,\n};\ncameraFolder.add(cameraConfig, 'near', 0, 600).onChange((near) => {\n  camera.setNear(near);\n});\ncameraFolder.add(cameraConfig, 'far', 0, 1000).onChange((far) => {\n  camera.setFar(far);\n});\ncameraFolder.add(cameraConfig, 'zoom', 0, 10).onChange((zoom) => {\n  camera.setZoom(zoom);\n});\ncameraFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-plugin-3d\", \"@antv/g-plugin-control\", \"@antv/g-webgl\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-plugin-3d\"), require(\"@antv/g-plugin-control\"), require(\"@antv/g-webgl\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gPlugin3d, global.gPluginControl, global.gWebgl, global.lilGui, global.stats);\n    global.ortho = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gPlugin3d, _gPluginControl, _gWebgl, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // create a renderer\n  var webglRenderer = new _gWebgl.Renderer();\n  webglRenderer.registerPlugin(new _gPlugin3d.Plugin());\n  webglRenderer.registerPlugin(new _gPluginControl.Plugin()); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: webglRenderer\n  }); // create an orthographic camera\n\n  var camera = canvas.getCamera();\n  var group = new _g.Group();\n\n  (async function () {\n    await canvas.ready;\n    var plugin = webglRenderer.getPlugin('device-renderer');\n    var device = plugin.getDevice();\n    var map = plugin.loadTexture('https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*8TlCRIsKeUkAAAAAAAAAAAAAARQnAQ');\n    var cubeGeometry = new _gPlugin3d.CubeGeometry(device, {\n      width: 200,\n      height: 200,\n      depth: 200\n    });\n    var basicMaterial = new _gPlugin3d.MeshBasicMaterial(device, {\n      map: map\n    });\n    var cube = new _gPlugin3d.Mesh({\n      style: {\n        fill: '#1890FF',\n        opacity: 1,\n        geometry: cubeGeometry,\n        material: basicMaterial\n      }\n    });\n    cube.setPosition(300, 250, 0);\n    canvas.appendChild(cube);\n  })(); // stats\n\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n\n    group.rotate(0, 1, 0);\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var cameraFolder = gui.addFolder('orthographic projection');\n  var cameraConfig = {\n    near: 0.1,\n    far: 1000,\n    zoom: 1\n  };\n  cameraFolder.add(cameraConfig, 'near', 0, 600).onChange(function (near) {\n    camera.setNear(near);\n  });\n  cameraFolder.add(cameraConfig, 'far', 0, 1000).onChange(function (far) {\n    camera.setFar(far);\n  });\n  cameraFolder.add(cameraConfig, 'zoom', 0, 10).onChange(function (zoom) {\n    camera.setZoom(zoom);\n  });\n  cameraFolder.open();\n});"},{"relativePath":"camera/demo/view-offset.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/camera/demo/view-offset.js","order":5,"filename":"view-offset.js","title":{"zh":"View Offset","en":"View Offset"},"source":"import { Canvas, CanvasEvent, Group } from '@antv/g';\nimport { CubeGeometry, Mesh, MeshBasicMaterial, Plugin as Plugin3D } from '@antv/g-plugin-3d';\nimport { Plugin as PluginControl } from '@antv/g-plugin-control';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst webglRenderer = new WebGLRenderer();\nwebglRenderer.registerPlugin(new Plugin3D());\nwebglRenderer.registerPlugin(new PluginControl());\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: webglRenderer,\n});\n\n// create an orthographic camera\nconst camera = canvas.getCamera();\nconst group = new Group();\n\n(async () => {\n  await canvas.ready;\n  const plugin = webglRenderer.getPlugin('device-renderer');\n  const device = plugin.getDevice();\n  const map = plugin.loadTexture(\n    'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*8TlCRIsKeUkAAAAAAAAAAAAAARQnAQ',\n  );\n\n  const cubeGeometry = new CubeGeometry(device, {\n    width: 200,\n    height: 200,\n    depth: 200,\n  });\n  const basicMaterial = new MeshBasicMaterial(device, {\n    map,\n  });\n\n  const cube = new Mesh({\n    style: {\n      fill: '#1890FF',\n      opacity: 1,\n      geometry: cubeGeometry,\n      material: basicMaterial,\n    },\n  });\n  cube.setPosition(300, 250, 0);\n\n  canvas.appendChild(cube);\n})();\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n  group.rotate(0, 1, 0);\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst cameraFolder = gui.addFolder('set view offset');\nconst cameraConfig = {\n  fullWidth: 600,\n  fullHeight: 500,\n  x: 0,\n  y: 0,\n  width: 600,\n  height: 500,\n  clearViewOffset: () => {\n    camera.clearViewOffset();\n    cameraConfig.x = 0;\n    cameraConfig.y = 0;\n    cameraConfig.width = 600;\n    cameraConfig.height = 500;\n  },\n};\ncameraFolder\n  .add(cameraConfig, 'x', 0, 600)\n  .onChange((x) => {\n    camera.setViewOffset(\n      cameraConfig.fullWidth,\n      cameraConfig.fullHeight,\n      x,\n      cameraConfig.y,\n      cameraConfig.width,\n      cameraConfig.height,\n    );\n  })\n  .listen();\ncameraFolder\n  .add(cameraConfig, 'y', 0, 500)\n  .onChange((y) => {\n    camera.setViewOffset(\n      cameraConfig.fullWidth,\n      cameraConfig.fullHeight,\n      cameraConfig.x,\n      y,\n      cameraConfig.width,\n      cameraConfig.height,\n    );\n  })\n  .listen();\ncameraFolder\n  .add(cameraConfig, 'width', 0, 1200)\n  .onChange((width) => {\n    camera.setViewOffset(\n      cameraConfig.fullWidth,\n      cameraConfig.fullHeight,\n      cameraConfig.x,\n      cameraConfig.y,\n      width,\n      cameraConfig.height,\n    );\n  })\n  .listen();\ncameraFolder\n  .add(cameraConfig, 'height', 0, 1000)\n  .onChange((height) => {\n    camera.setViewOffset(\n      cameraConfig.fullWidth,\n      cameraConfig.fullHeight,\n      cameraConfig.x,\n      cameraConfig.y,\n      cameraConfig.width,\n      height,\n    );\n  })\n  .listen();\ncameraFolder.add(cameraConfig, 'clearViewOffset').name('clearViewOffset');\ncameraFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-plugin-3d\", \"@antv/g-plugin-control\", \"@antv/g-webgl\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-plugin-3d\"), require(\"@antv/g-plugin-control\"), require(\"@antv/g-webgl\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gPlugin3d, global.gPluginControl, global.gWebgl, global.lilGui, global.stats);\n    global.viewOffset = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gPlugin3d, _gPluginControl, _gWebgl, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // create a renderer\n  var webglRenderer = new _gWebgl.Renderer();\n  webglRenderer.registerPlugin(new _gPlugin3d.Plugin());\n  webglRenderer.registerPlugin(new _gPluginControl.Plugin()); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: webglRenderer\n  }); // create an orthographic camera\n\n  var camera = canvas.getCamera();\n  var group = new _g.Group();\n\n  (async function () {\n    await canvas.ready;\n    var plugin = webglRenderer.getPlugin('device-renderer');\n    var device = plugin.getDevice();\n    var map = plugin.loadTexture('https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*8TlCRIsKeUkAAAAAAAAAAAAAARQnAQ');\n    var cubeGeometry = new _gPlugin3d.CubeGeometry(device, {\n      width: 200,\n      height: 200,\n      depth: 200\n    });\n    var basicMaterial = new _gPlugin3d.MeshBasicMaterial(device, {\n      map: map\n    });\n    var cube = new _gPlugin3d.Mesh({\n      style: {\n        fill: '#1890FF',\n        opacity: 1,\n        geometry: cubeGeometry,\n        material: basicMaterial\n      }\n    });\n    cube.setPosition(300, 250, 0);\n    canvas.appendChild(cube);\n  })(); // stats\n\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n\n    group.rotate(0, 1, 0);\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var cameraFolder = gui.addFolder('set view offset');\n  var cameraConfig = {\n    fullWidth: 600,\n    fullHeight: 500,\n    x: 0,\n    y: 0,\n    width: 600,\n    height: 500,\n    clearViewOffset: function clearViewOffset() {\n      camera.clearViewOffset();\n      cameraConfig.x = 0;\n      cameraConfig.y = 0;\n      cameraConfig.width = 600;\n      cameraConfig.height = 500;\n    }\n  };\n  cameraFolder.add(cameraConfig, 'x', 0, 600).onChange(function (x) {\n    camera.setViewOffset(cameraConfig.fullWidth, cameraConfig.fullHeight, x, cameraConfig.y, cameraConfig.width, cameraConfig.height);\n  }).listen();\n  cameraFolder.add(cameraConfig, 'y', 0, 500).onChange(function (y) {\n    camera.setViewOffset(cameraConfig.fullWidth, cameraConfig.fullHeight, cameraConfig.x, y, cameraConfig.width, cameraConfig.height);\n  }).listen();\n  cameraFolder.add(cameraConfig, 'width', 0, 1200).onChange(function (width) {\n    camera.setViewOffset(cameraConfig.fullWidth, cameraConfig.fullHeight, cameraConfig.x, cameraConfig.y, width, cameraConfig.height);\n  }).listen();\n  cameraFolder.add(cameraConfig, 'height', 0, 1000).onChange(function (height) {\n    camera.setViewOffset(cameraConfig.fullWidth, cameraConfig.fullHeight, cameraConfig.x, cameraConfig.y, cameraConfig.width, height);\n  }).listen();\n  cameraFolder.add(cameraConfig, 'clearViewOffset').name('clearViewOffset');\n  cameraFolder.open();\n});"},{"relativePath":"camera/demo/landmark.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/camera/demo/landmark.js","order":2,"filename":"landmark.js","title":{"zh":"3D 场景下的相机动画","en":"Landmark"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*o4eKT4ZQfJcAAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent, Line, CameraType } from '@antv/g';\nimport { Renderer } from '@antv/g-webgl';\nimport {\n  MeshPhongMaterial,\n  SphereGeometry,\n  DirectionalLight,\n  Mesh,\n  Plugin as Plugin3D,\n} from '@antv/g-plugin-3d';\nimport { Plugin as PluginControl } from '@antv/g-plugin-control';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\nimport { forceLink, forceSimulation, forceManyBody, forceCenter } from 'd3-force-3d';\n\n// https://bl.ocks.org/vasturiano/f59675656258d3f490e9faa40828c0e7\nconst dataset = {\n  nodes: [\n    {\n      id: 'Myriel',\n      group: 1,\n    },\n    {\n      id: 'Napoleon',\n      group: 1,\n    },\n    {\n      id: 'Mlle.Baptistine',\n      group: 1,\n    },\n    {\n      id: 'Mme.Magloire',\n      group: 1,\n    },\n    {\n      id: 'CountessdeLo',\n      group: 1,\n    },\n    {\n      id: 'Geborand',\n      group: 1,\n    },\n    {\n      id: 'Champtercier',\n      group: 1,\n    },\n    {\n      id: 'Cravatte',\n      group: 1,\n    },\n    {\n      id: 'Count',\n      group: 1,\n    },\n    {\n      id: 'OldMan',\n      group: 1,\n    },\n    {\n      id: 'Labarre',\n      group: 2,\n    },\n    {\n      id: 'Valjean',\n      group: 2,\n    },\n    {\n      id: 'Marguerite',\n      group: 3,\n    },\n    {\n      id: 'Mme.deR',\n      group: 2,\n    },\n    {\n      id: 'Isabeau',\n      group: 2,\n    },\n    {\n      id: 'Gervais',\n      group: 2,\n    },\n    {\n      id: 'Tholomyes',\n      group: 3,\n    },\n    {\n      id: 'Listolier',\n      group: 3,\n    },\n    {\n      id: 'Fameuil',\n      group: 3,\n    },\n    {\n      id: 'Blacheville',\n      group: 3,\n    },\n    {\n      id: 'Favourite',\n      group: 3,\n    },\n    {\n      id: 'Dahlia',\n      group: 3,\n    },\n    {\n      id: 'Zephine',\n      group: 3,\n    },\n    {\n      id: 'Fantine',\n      group: 3,\n    },\n    {\n      id: 'Mme.Thenardier',\n      group: 4,\n    },\n    {\n      id: 'Thenardier',\n      group: 4,\n    },\n    {\n      id: 'Cosette',\n      group: 5,\n    },\n    {\n      id: 'Javert',\n      group: 4,\n    },\n    {\n      id: 'Fauchelevent',\n      group: 0,\n    },\n    {\n      id: 'Bamatabois',\n      group: 2,\n    },\n    {\n      id: 'Perpetue',\n      group: 3,\n    },\n    {\n      id: 'Simplice',\n      group: 2,\n    },\n    {\n      id: 'Scaufflaire',\n      group: 2,\n    },\n    {\n      id: 'Woman1',\n      group: 2,\n    },\n    {\n      id: 'Judge',\n      group: 2,\n    },\n    {\n      id: 'Champmathieu',\n      group: 2,\n    },\n    {\n      id: 'Brevet',\n      group: 2,\n    },\n    {\n      id: 'Chenildieu',\n      group: 2,\n    },\n    {\n      id: 'Cochepaille',\n      group: 2,\n    },\n    {\n      id: 'Pontmercy',\n      group: 4,\n    },\n    {\n      id: 'Boulatruelle',\n      group: 6,\n    },\n    {\n      id: 'Eponine',\n      group: 4,\n    },\n    {\n      id: 'Anzelma',\n      group: 4,\n    },\n    {\n      id: 'Woman2',\n      group: 5,\n    },\n    {\n      id: 'MotherInnocent',\n      group: 0,\n    },\n    {\n      id: 'Gribier',\n      group: 0,\n    },\n    {\n      id: 'Jondrette',\n      group: 7,\n    },\n    {\n      id: 'Mme.Burgon',\n      group: 7,\n    },\n    {\n      id: 'Gavroche',\n      group: 8,\n    },\n    {\n      id: 'Gillenormand',\n      group: 5,\n    },\n    {\n      id: 'Magnon',\n      group: 5,\n    },\n    {\n      id: 'Mlle.Gillenormand',\n      group: 5,\n    },\n    {\n      id: 'Mme.Pontmercy',\n      group: 5,\n    },\n    {\n      id: 'Mlle.Vaubois',\n      group: 5,\n    },\n    {\n      id: 'Lt.Gillenormand',\n      group: 5,\n    },\n    {\n      id: 'Marius',\n      group: 8,\n    },\n    {\n      id: 'BaronessT',\n      group: 5,\n    },\n    {\n      id: 'Mabeuf',\n      group: 8,\n    },\n    {\n      id: 'Enjolras',\n      group: 8,\n    },\n    {\n      id: 'Combeferre',\n      group: 8,\n    },\n    {\n      id: 'Prouvaire',\n      group: 8,\n    },\n    {\n      id: 'Feuilly',\n      group: 8,\n    },\n    {\n      id: 'Courfeyrac',\n      group: 8,\n    },\n    {\n      id: 'Bahorel',\n      group: 8,\n    },\n    {\n      id: 'Bossuet',\n      group: 8,\n    },\n    {\n      id: 'Joly',\n      group: 8,\n    },\n    {\n      id: 'Grantaire',\n      group: 8,\n    },\n    {\n      id: 'MotherPlutarch',\n      group: 9,\n    },\n    {\n      id: 'Gueulemer',\n      group: 4,\n    },\n    {\n      id: 'Babet',\n      group: 4,\n    },\n    {\n      id: 'Claquesous',\n      group: 4,\n    },\n    {\n      id: 'Montparnasse',\n      group: 4,\n    },\n    {\n      id: 'Toussaint',\n      group: 5,\n    },\n    {\n      id: 'Child1',\n      group: 10,\n    },\n    {\n      id: 'Child2',\n      group: 10,\n    },\n    {\n      id: 'Brujon',\n      group: 4,\n    },\n    {\n      id: 'Mme.Hucheloup',\n      group: 8,\n    },\n  ],\n  links: [\n    {\n      source: 'Napoleon',\n      target: 'Myriel',\n      value: 1,\n    },\n    {\n      source: 'Mlle.Baptistine',\n      target: 'Myriel',\n      value: 8,\n    },\n    {\n      source: 'Mme.Magloire',\n      target: 'Myriel',\n      value: 10,\n    },\n    {\n      source: 'Mme.Magloire',\n      target: 'Mlle.Baptistine',\n      value: 6,\n    },\n    {\n      source: 'CountessdeLo',\n      target: 'Myriel',\n      value: 1,\n    },\n    {\n      source: 'Geborand',\n      target: 'Myriel',\n      value: 1,\n    },\n    {\n      source: 'Champtercier',\n      target: 'Myriel',\n      value: 1,\n    },\n    {\n      source: 'Cravatte',\n      target: 'Myriel',\n      value: 1,\n    },\n    {\n      source: 'Count',\n      target: 'Myriel',\n      value: 2,\n    },\n    {\n      source: 'OldMan',\n      target: 'Myriel',\n      value: 1,\n    },\n    {\n      source: 'Valjean',\n      target: 'Labarre',\n      value: 1,\n    },\n    {\n      source: 'Valjean',\n      target: 'Mme.Magloire',\n      value: 3,\n    },\n    {\n      source: 'Valjean',\n      target: 'Mlle.Baptistine',\n      value: 3,\n    },\n    {\n      source: 'Valjean',\n      target: 'Myriel',\n      value: 5,\n    },\n    {\n      source: 'Marguerite',\n      target: 'Valjean',\n      value: 1,\n    },\n    {\n      source: 'Mme.deR',\n      target: 'Valjean',\n      value: 1,\n    },\n    {\n      source: 'Isabeau',\n      target: 'Valjean',\n      value: 1,\n    },\n    {\n      source: 'Gervais',\n      target: 'Valjean',\n      value: 1,\n    },\n    {\n      source: 'Listolier',\n      target: 'Tholomyes',\n      value: 4,\n    },\n    {\n      source: 'Fameuil',\n      target: 'Tholomyes',\n      value: 4,\n    },\n    {\n      source: 'Fameuil',\n      target: 'Listolier',\n      value: 4,\n    },\n    {\n      source: 'Blacheville',\n      target: 'Tholomyes',\n      value: 4,\n    },\n    {\n      source: 'Blacheville',\n      target: 'Listolier',\n      value: 4,\n    },\n    {\n      source: 'Blacheville',\n      target: 'Fameuil',\n      value: 4,\n    },\n    {\n      source: 'Favourite',\n      target: 'Tholomyes',\n      value: 3,\n    },\n    {\n      source: 'Favourite',\n      target: 'Listolier',\n      value: 3,\n    },\n    {\n      source: 'Favourite',\n      target: 'Fameuil',\n      value: 3,\n    },\n    {\n      source: 'Favourite',\n      target: 'Blacheville',\n      value: 4,\n    },\n    {\n      source: 'Dahlia',\n      target: 'Tholomyes',\n      value: 3,\n    },\n    {\n      source: 'Dahlia',\n      target: 'Listolier',\n      value: 3,\n    },\n    {\n      source: 'Dahlia',\n      target: 'Fameuil',\n      value: 3,\n    },\n    {\n      source: 'Dahlia',\n      target: 'Blacheville',\n      value: 3,\n    },\n    {\n      source: 'Dahlia',\n      target: 'Favourite',\n      value: 5,\n    },\n    {\n      source: 'Zephine',\n      target: 'Tholomyes',\n      value: 3,\n    },\n    {\n      source: 'Zephine',\n      target: 'Listolier',\n      value: 3,\n    },\n    {\n      source: 'Zephine',\n      target: 'Fameuil',\n      value: 3,\n    },\n    {\n      source: 'Zephine',\n      target: 'Blacheville',\n      value: 3,\n    },\n    {\n      source: 'Zephine',\n      target: 'Favourite',\n      value: 4,\n    },\n    {\n      source: 'Zephine',\n      target: 'Dahlia',\n      value: 4,\n    },\n    {\n      source: 'Fantine',\n      target: 'Tholomyes',\n      value: 3,\n    },\n    {\n      source: 'Fantine',\n      target: 'Listolier',\n      value: 3,\n    },\n    {\n      source: 'Fantine',\n      target: 'Fameuil',\n      value: 3,\n    },\n    {\n      source: 'Fantine',\n      target: 'Blacheville',\n      value: 3,\n    },\n    {\n      source: 'Fantine',\n      target: 'Favourite',\n      value: 4,\n    },\n    {\n      source: 'Fantine',\n      target: 'Dahlia',\n      value: 4,\n    },\n    {\n      source: 'Fantine',\n      target: 'Zephine',\n      value: 4,\n    },\n    {\n      source: 'Fantine',\n      target: 'Marguerite',\n      value: 2,\n    },\n    {\n      source: 'Fantine',\n      target: 'Valjean',\n      value: 9,\n    },\n    {\n      source: 'Mme.Thenardier',\n      target: 'Fantine',\n      value: 2,\n    },\n    {\n      source: 'Mme.Thenardier',\n      target: 'Valjean',\n      value: 7,\n    },\n    {\n      source: 'Thenardier',\n      target: 'Mme.Thenardier',\n      value: 13,\n    },\n    {\n      source: 'Thenardier',\n      target: 'Fantine',\n      value: 1,\n    },\n    {\n      source: 'Thenardier',\n      target: 'Valjean',\n      value: 12,\n    },\n    {\n      source: 'Cosette',\n      target: 'Mme.Thenardier',\n      value: 4,\n    },\n    {\n      source: 'Cosette',\n      target: 'Valjean',\n      value: 31,\n    },\n    {\n      source: 'Cosette',\n      target: 'Tholomyes',\n      value: 1,\n    },\n    {\n      source: 'Cosette',\n      target: 'Thenardier',\n      value: 1,\n    },\n    {\n      source: 'Javert',\n      target: 'Valjean',\n      value: 17,\n    },\n    {\n      source: 'Javert',\n      target: 'Fantine',\n      value: 5,\n    },\n    {\n      source: 'Javert',\n      target: 'Thenardier',\n      value: 5,\n    },\n    {\n      source: 'Javert',\n      target: 'Mme.Thenardier',\n      value: 1,\n    },\n    {\n      source: 'Javert',\n      target: 'Cosette',\n      value: 1,\n    },\n    {\n      source: 'Fauchelevent',\n      target: 'Valjean',\n      value: 8,\n    },\n    {\n      source: 'Fauchelevent',\n      target: 'Javert',\n      value: 1,\n    },\n    {\n      source: 'Bamatabois',\n      target: 'Fantine',\n      value: 1,\n    },\n    {\n      source: 'Bamatabois',\n      target: 'Javert',\n      value: 1,\n    },\n    {\n      source: 'Bamatabois',\n      target: 'Valjean',\n      value: 2,\n    },\n    {\n      source: 'Perpetue',\n      target: 'Fantine',\n      value: 1,\n    },\n    {\n      source: 'Simplice',\n      target: 'Perpetue',\n      value: 2,\n    },\n    {\n      source: 'Simplice',\n      target: 'Valjean',\n      value: 3,\n    },\n    {\n      source: 'Simplice',\n      target: 'Fantine',\n      value: 2,\n    },\n    {\n      source: 'Simplice',\n      target: 'Javert',\n      value: 1,\n    },\n    {\n      source: 'Scaufflaire',\n      target: 'Valjean',\n      value: 1,\n    },\n    {\n      source: 'Woman1',\n      target: 'Valjean',\n      value: 2,\n    },\n    {\n      source: 'Woman1',\n      target: 'Javert',\n      value: 1,\n    },\n    {\n      source: 'Judge',\n      target: 'Valjean',\n      value: 3,\n    },\n    {\n      source: 'Judge',\n      target: 'Bamatabois',\n      value: 2,\n    },\n    {\n      source: 'Champmathieu',\n      target: 'Valjean',\n      value: 3,\n    },\n    {\n      source: 'Champmathieu',\n      target: 'Judge',\n      value: 3,\n    },\n    {\n      source: 'Champmathieu',\n      target: 'Bamatabois',\n      value: 2,\n    },\n    {\n      source: 'Brevet',\n      target: 'Judge',\n      value: 2,\n    },\n    {\n      source: 'Brevet',\n      target: 'Champmathieu',\n      value: 2,\n    },\n    {\n      source: 'Brevet',\n      target: 'Valjean',\n      value: 2,\n    },\n    {\n      source: 'Brevet',\n      target: 'Bamatabois',\n      value: 1,\n    },\n    {\n      source: 'Chenildieu',\n      target: 'Judge',\n      value: 2,\n    },\n    {\n      source: 'Chenildieu',\n      target: 'Champmathieu',\n      value: 2,\n    },\n    {\n      source: 'Chenildieu',\n      target: 'Brevet',\n      value: 2,\n    },\n    {\n      source: 'Chenildieu',\n      target: 'Valjean',\n      value: 2,\n    },\n    {\n      source: 'Chenildieu',\n      target: 'Bamatabois',\n      value: 1,\n    },\n    {\n      source: 'Cochepaille',\n      target: 'Judge',\n      value: 2,\n    },\n    {\n      source: 'Cochepaille',\n      target: 'Champmathieu',\n      value: 2,\n    },\n    {\n      source: 'Cochepaille',\n      target: 'Brevet',\n      value: 2,\n    },\n    {\n      source: 'Cochepaille',\n      target: 'Chenildieu',\n      value: 2,\n    },\n    {\n      source: 'Cochepaille',\n      target: 'Valjean',\n      value: 2,\n    },\n    {\n      source: 'Cochepaille',\n      target: 'Bamatabois',\n      value: 1,\n    },\n    {\n      source: 'Pontmercy',\n      target: 'Thenardier',\n      value: 1,\n    },\n    {\n      source: 'Boulatruelle',\n      target: 'Thenardier',\n      value: 1,\n    },\n    {\n      source: 'Eponine',\n      target: 'Mme.Thenardier',\n      value: 2,\n    },\n    {\n      source: 'Eponine',\n      target: 'Thenardier',\n      value: 3,\n    },\n    {\n      source: 'Anzelma',\n      target: 'Eponine',\n      value: 2,\n    },\n    {\n      source: 'Anzelma',\n      target: 'Thenardier',\n      value: 2,\n    },\n    {\n      source: 'Anzelma',\n      target: 'Mme.Thenardier',\n      value: 1,\n    },\n    {\n      source: 'Woman2',\n      target: 'Valjean',\n      value: 3,\n    },\n    {\n      source: 'Woman2',\n      target: 'Cosette',\n      value: 1,\n    },\n    {\n      source: 'Woman2',\n      target: 'Javert',\n      value: 1,\n    },\n    {\n      source: 'MotherInnocent',\n      target: 'Fauchelevent',\n      value: 3,\n    },\n    {\n      source: 'MotherInnocent',\n      target: 'Valjean',\n      value: 1,\n    },\n    {\n      source: 'Gribier',\n      target: 'Fauchelevent',\n      value: 2,\n    },\n    {\n      source: 'Mme.Burgon',\n      target: 'Jondrette',\n      value: 1,\n    },\n    {\n      source: 'Gavroche',\n      target: 'Mme.Burgon',\n      value: 2,\n    },\n    {\n      source: 'Gavroche',\n      target: 'Thenardier',\n      value: 1,\n    },\n    {\n      source: 'Gavroche',\n      target: 'Javert',\n      value: 1,\n    },\n    {\n      source: 'Gavroche',\n      target: 'Valjean',\n      value: 1,\n    },\n    {\n      source: 'Gillenormand',\n      target: 'Cosette',\n      value: 3,\n    },\n    {\n      source: 'Gillenormand',\n      target: 'Valjean',\n      value: 2,\n    },\n    {\n      source: 'Magnon',\n      target: 'Gillenormand',\n      value: 1,\n    },\n    {\n      source: 'Magnon',\n      target: 'Mme.Thenardier',\n      value: 1,\n    },\n    {\n      source: 'Mlle.Gillenormand',\n      target: 'Gillenormand',\n      value: 9,\n    },\n    {\n      source: 'Mlle.Gillenormand',\n      target: 'Cosette',\n      value: 2,\n    },\n    {\n      source: 'Mlle.Gillenormand',\n      target: 'Valjean',\n      value: 2,\n    },\n    {\n      source: 'Mme.Pontmercy',\n      target: 'Mlle.Gillenormand',\n      value: 1,\n    },\n    {\n      source: 'Mme.Pontmercy',\n      target: 'Pontmercy',\n      value: 1,\n    },\n    {\n      source: 'Mlle.Vaubois',\n      target: 'Mlle.Gillenormand',\n      value: 1,\n    },\n    {\n      source: 'Lt.Gillenormand',\n      target: 'Mlle.Gillenormand',\n      value: 2,\n    },\n    {\n      source: 'Lt.Gillenormand',\n      target: 'Gillenormand',\n      value: 1,\n    },\n    {\n      source: 'Lt.Gillenormand',\n      target: 'Cosette',\n      value: 1,\n    },\n    {\n      source: 'Marius',\n      target: 'Mlle.Gillenormand',\n      value: 6,\n    },\n    {\n      source: 'Marius',\n      target: 'Gillenormand',\n      value: 12,\n    },\n    {\n      source: 'Marius',\n      target: 'Pontmercy',\n      value: 1,\n    },\n    {\n      source: 'Marius',\n      target: 'Lt.Gillenormand',\n      value: 1,\n    },\n    {\n      source: 'Marius',\n      target: 'Cosette',\n      value: 21,\n    },\n    {\n      source: 'Marius',\n      target: 'Valjean',\n      value: 19,\n    },\n    {\n      source: 'Marius',\n      target: 'Tholomyes',\n      value: 1,\n    },\n    {\n      source: 'Marius',\n      target: 'Thenardier',\n      value: 2,\n    },\n    {\n      source: 'Marius',\n      target: 'Eponine',\n      value: 5,\n    },\n    {\n      source: 'Marius',\n      target: 'Gavroche',\n      value: 4,\n    },\n    {\n      source: 'BaronessT',\n      target: 'Gillenormand',\n      value: 1,\n    },\n    {\n      source: 'BaronessT',\n      target: 'Marius',\n      value: 1,\n    },\n    {\n      source: 'Mabeuf',\n      target: 'Marius',\n      value: 1,\n    },\n    {\n      source: 'Mabeuf',\n      target: 'Eponine',\n      value: 1,\n    },\n    {\n      source: 'Mabeuf',\n      target: 'Gavroche',\n      value: 1,\n    },\n    {\n      source: 'Enjolras',\n      target: 'Marius',\n      value: 7,\n    },\n    {\n      source: 'Enjolras',\n      target: 'Gavroche',\n      value: 7,\n    },\n    {\n      source: 'Enjolras',\n      target: 'Javert',\n      value: 6,\n    },\n    {\n      source: 'Enjolras',\n      target: 'Mabeuf',\n      value: 1,\n    },\n    {\n      source: 'Enjolras',\n      target: 'Valjean',\n      value: 4,\n    },\n    {\n      source: 'Combeferre',\n      target: 'Enjolras',\n      value: 15,\n    },\n    {\n      source: 'Combeferre',\n      target: 'Marius',\n      value: 5,\n    },\n    {\n      source: 'Combeferre',\n      target: 'Gavroche',\n      value: 6,\n    },\n    {\n      source: 'Combeferre',\n      target: 'Mabeuf',\n      value: 2,\n    },\n    {\n      source: 'Prouvaire',\n      target: 'Gavroche',\n      value: 1,\n    },\n    {\n      source: 'Prouvaire',\n      target: 'Enjolras',\n      value: 4,\n    },\n    {\n      source: 'Prouvaire',\n      target: 'Combeferre',\n      value: 2,\n    },\n    {\n      source: 'Feuilly',\n      target: 'Gavroche',\n      value: 2,\n    },\n    {\n      source: 'Feuilly',\n      target: 'Enjolras',\n      value: 6,\n    },\n    {\n      source: 'Feuilly',\n      target: 'Prouvaire',\n      value: 2,\n    },\n    {\n      source: 'Feuilly',\n      target: 'Combeferre',\n      value: 5,\n    },\n    {\n      source: 'Feuilly',\n      target: 'Mabeuf',\n      value: 1,\n    },\n    {\n      source: 'Feuilly',\n      target: 'Marius',\n      value: 1,\n    },\n    {\n      source: 'Courfeyrac',\n      target: 'Marius',\n      value: 9,\n    },\n    {\n      source: 'Courfeyrac',\n      target: 'Enjolras',\n      value: 17,\n    },\n    {\n      source: 'Courfeyrac',\n      target: 'Combeferre',\n      value: 13,\n    },\n    {\n      source: 'Courfeyrac',\n      target: 'Gavroche',\n      value: 7,\n    },\n    {\n      source: 'Courfeyrac',\n      target: 'Mabeuf',\n      value: 2,\n    },\n    {\n      source: 'Courfeyrac',\n      target: 'Eponine',\n      value: 1,\n    },\n    {\n      source: 'Courfeyrac',\n      target: 'Feuilly',\n      value: 6,\n    },\n    {\n      source: 'Courfeyrac',\n      target: 'Prouvaire',\n      value: 3,\n    },\n    {\n      source: 'Bahorel',\n      target: 'Combeferre',\n      value: 5,\n    },\n    {\n      source: 'Bahorel',\n      target: 'Gavroche',\n      value: 5,\n    },\n    {\n      source: 'Bahorel',\n      target: 'Courfeyrac',\n      value: 6,\n    },\n    {\n      source: 'Bahorel',\n      target: 'Mabeuf',\n      value: 2,\n    },\n    {\n      source: 'Bahorel',\n      target: 'Enjolras',\n      value: 4,\n    },\n    {\n      source: 'Bahorel',\n      target: 'Feuilly',\n      value: 3,\n    },\n    {\n      source: 'Bahorel',\n      target: 'Prouvaire',\n      value: 2,\n    },\n    {\n      source: 'Bahorel',\n      target: 'Marius',\n      value: 1,\n    },\n    {\n      source: 'Bossuet',\n      target: 'Marius',\n      value: 5,\n    },\n    {\n      source: 'Bossuet',\n      target: 'Courfeyrac',\n      value: 12,\n    },\n    {\n      source: 'Bossuet',\n      target: 'Gavroche',\n      value: 5,\n    },\n    {\n      source: 'Bossuet',\n      target: 'Bahorel',\n      value: 4,\n    },\n    {\n      source: 'Bossuet',\n      target: 'Enjolras',\n      value: 10,\n    },\n    {\n      source: 'Bossuet',\n      target: 'Feuilly',\n      value: 6,\n    },\n    {\n      source: 'Bossuet',\n      target: 'Prouvaire',\n      value: 2,\n    },\n    {\n      source: 'Bossuet',\n      target: 'Combeferre',\n      value: 9,\n    },\n    {\n      source: 'Bossuet',\n      target: 'Mabeuf',\n      value: 1,\n    },\n    {\n      source: 'Bossuet',\n      target: 'Valjean',\n      value: 1,\n    },\n    {\n      source: 'Joly',\n      target: 'Bahorel',\n      value: 5,\n    },\n    {\n      source: 'Joly',\n      target: 'Bossuet',\n      value: 7,\n    },\n    {\n      source: 'Joly',\n      target: 'Gavroche',\n      value: 3,\n    },\n    {\n      source: 'Joly',\n      target: 'Courfeyrac',\n      value: 5,\n    },\n    {\n      source: 'Joly',\n      target: 'Enjolras',\n      value: 5,\n    },\n    {\n      source: 'Joly',\n      target: 'Feuilly',\n      value: 5,\n    },\n    {\n      source: 'Joly',\n      target: 'Prouvaire',\n      value: 2,\n    },\n    {\n      source: 'Joly',\n      target: 'Combeferre',\n      value: 5,\n    },\n    {\n      source: 'Joly',\n      target: 'Mabeuf',\n      value: 1,\n    },\n    {\n      source: 'Joly',\n      target: 'Marius',\n      value: 2,\n    },\n    {\n      source: 'Grantaire',\n      target: 'Bossuet',\n      value: 3,\n    },\n    {\n      source: 'Grantaire',\n      target: 'Enjolras',\n      value: 3,\n    },\n    {\n      source: 'Grantaire',\n      target: 'Combeferre',\n      value: 1,\n    },\n    {\n      source: 'Grantaire',\n      target: 'Courfeyrac',\n      value: 2,\n    },\n    {\n      source: 'Grantaire',\n      target: 'Joly',\n      value: 2,\n    },\n    {\n      source: 'Grantaire',\n      target: 'Gavroche',\n      value: 1,\n    },\n    {\n      source: 'Grantaire',\n      target: 'Bahorel',\n      value: 1,\n    },\n    {\n      source: 'Grantaire',\n      target: 'Feuilly',\n      value: 1,\n    },\n    {\n      source: 'Grantaire',\n      target: 'Prouvaire',\n      value: 1,\n    },\n    {\n      source: 'MotherPlutarch',\n      target: 'Mabeuf',\n      value: 3,\n    },\n    {\n      source: 'Gueulemer',\n      target: 'Thenardier',\n      value: 5,\n    },\n    {\n      source: 'Gueulemer',\n      target: 'Valjean',\n      value: 1,\n    },\n    {\n      source: 'Gueulemer',\n      target: 'Mme.Thenardier',\n      value: 1,\n    },\n    {\n      source: 'Gueulemer',\n      target: 'Javert',\n      value: 1,\n    },\n    {\n      source: 'Gueulemer',\n      target: 'Gavroche',\n      value: 1,\n    },\n    {\n      source: 'Gueulemer',\n      target: 'Eponine',\n      value: 1,\n    },\n    {\n      source: 'Babet',\n      target: 'Thenardier',\n      value: 6,\n    },\n    {\n      source: 'Babet',\n      target: 'Gueulemer',\n      value: 6,\n    },\n    {\n      source: 'Babet',\n      target: 'Valjean',\n      value: 1,\n    },\n    {\n      source: 'Babet',\n      target: 'Mme.Thenardier',\n      value: 1,\n    },\n    {\n      source: 'Babet',\n      target: 'Javert',\n      value: 2,\n    },\n    {\n      source: 'Babet',\n      target: 'Gavroche',\n      value: 1,\n    },\n    {\n      source: 'Babet',\n      target: 'Eponine',\n      value: 1,\n    },\n    {\n      source: 'Claquesous',\n      target: 'Thenardier',\n      value: 4,\n    },\n    {\n      source: 'Claquesous',\n      target: 'Babet',\n      value: 4,\n    },\n    {\n      source: 'Claquesous',\n      target: 'Gueulemer',\n      value: 4,\n    },\n    {\n      source: 'Claquesous',\n      target: 'Valjean',\n      value: 1,\n    },\n    {\n      source: 'Claquesous',\n      target: 'Mme.Thenardier',\n      value: 1,\n    },\n    {\n      source: 'Claquesous',\n      target: 'Javert',\n      value: 1,\n    },\n    {\n      source: 'Claquesous',\n      target: 'Eponine',\n      value: 1,\n    },\n    {\n      source: 'Claquesous',\n      target: 'Enjolras',\n      value: 1,\n    },\n    {\n      source: 'Montparnasse',\n      target: 'Javert',\n      value: 1,\n    },\n    {\n      source: 'Montparnasse',\n      target: 'Babet',\n      value: 2,\n    },\n    {\n      source: 'Montparnasse',\n      target: 'Gueulemer',\n      value: 2,\n    },\n    {\n      source: 'Montparnasse',\n      target: 'Claquesous',\n      value: 2,\n    },\n    {\n      source: 'Montparnasse',\n      target: 'Valjean',\n      value: 1,\n    },\n    {\n      source: 'Montparnasse',\n      target: 'Gavroche',\n      value: 1,\n    },\n    {\n      source: 'Montparnasse',\n      target: 'Eponine',\n      value: 1,\n    },\n    {\n      source: 'Montparnasse',\n      target: 'Thenardier',\n      value: 1,\n    },\n    {\n      source: 'Toussaint',\n      target: 'Cosette',\n      value: 2,\n    },\n    {\n      source: 'Toussaint',\n      target: 'Javert',\n      value: 1,\n    },\n    {\n      source: 'Toussaint',\n      target: 'Valjean',\n      value: 1,\n    },\n    {\n      source: 'Child1',\n      target: 'Gavroche',\n      value: 2,\n    },\n    {\n      source: 'Child2',\n      target: 'Gavroche',\n      value: 2,\n    },\n    {\n      source: 'Child2',\n      target: 'Child1',\n      value: 3,\n    },\n    {\n      source: 'Brujon',\n      target: 'Babet',\n      value: 3,\n    },\n    {\n      source: 'Brujon',\n      target: 'Gueulemer',\n      value: 3,\n    },\n    {\n      source: 'Brujon',\n      target: 'Thenardier',\n      value: 3,\n    },\n    {\n      source: 'Brujon',\n      target: 'Gavroche',\n      value: 1,\n    },\n    {\n      source: 'Brujon',\n      target: 'Eponine',\n      value: 1,\n    },\n    {\n      source: 'Brujon',\n      target: 'Claquesous',\n      value: 1,\n    },\n    {\n      source: 'Brujon',\n      target: 'Montparnasse',\n      value: 1,\n    },\n    {\n      source: 'Mme.Hucheloup',\n      target: 'Bossuet',\n      value: 1,\n    },\n    {\n      source: 'Mme.Hucheloup',\n      target: 'Joly',\n      value: 1,\n    },\n    {\n      source: 'Mme.Hucheloup',\n      target: 'Grantaire',\n      value: 1,\n    },\n    {\n      source: 'Mme.Hucheloup',\n      target: 'Bahorel',\n      value: 1,\n    },\n    {\n      source: 'Mme.Hucheloup',\n      target: 'Courfeyrac',\n      value: 1,\n    },\n    {\n      source: 'Mme.Hucheloup',\n      target: 'Gavroche',\n      value: 1,\n    },\n    {\n      source: 'Mme.Hucheloup',\n      target: 'Enjolras',\n      value: 1,\n    },\n  ],\n};\n\n// start 3d force simulation\nconst simulation = forceSimulation(dataset.nodes, 3)\n  .force(\n    'link',\n    forceLink().id(function (d) {\n      return d.id;\n    }),\n  )\n  .force('charge', forceManyBody())\n  .force('center', forceCenter(0, 0));\nsimulation.nodes(dataset.nodes);\nsimulation.force('link').links(dataset.links);\nsimulation.tick(1000);\n\n// create a renderer\nconst renderer = new Renderer();\nrenderer.registerPlugin(new Plugin3D());\nrenderer.registerPlugin(new PluginControl());\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer,\n});\n\n(async () => {\n  // wait for canvas' initialization complete\n  await canvas.ready;\n  // use GPU device\n  const plugin = renderer.getPlugin('device-renderer');\n  const device = plugin.getDevice();\n\n  // create a sphere geometry\n  const sphereGeometry = new SphereGeometry(device, {\n    radius: 10,\n    latitudeBands: 32,\n    longitudeBands: 32,\n  });\n  // create a material with Phong lighting model\n  const material = new MeshPhongMaterial(device, {\n    shininess: 30,\n  });\n\n  // @see https://antv.vision/en/docs/specification/language/palette#%E5%88%86%E7%B1%BB%E8%89%B2%E6%9D%BF\n  const colorPalette = [\n    '#5B8FF9',\n    '#CDDDFD',\n    '#61DDAA',\n    '#CDF3E4',\n    '#65789B',\n    '#F6BD16',\n    '#7262fd',\n    '#78D3F8',\n    '#9661BC',\n    '#F6903D',\n    '#008685',\n    '#F08BB4',\n  ];\n  dataset.nodes.forEach((node) => {\n    const fill = colorPalette[node.group];\n    // create a mesh\n    const sphere = new Mesh({\n      id: node.id,\n      style: {\n        fill,\n        opacity: 1,\n        geometry: sphereGeometry,\n        material,\n        cursor: 'pointer',\n      },\n    });\n    sphere.setPosition(node.x + 300, node.y + 250, node.z);\n    canvas.appendChild(sphere);\n\n    sphere.addEventListener('mouseenter', () => {\n      sphere.style.fill = 'red';\n    });\n    sphere.addEventListener('mouseleave', () => {\n      sphere.style.fill = fill;\n    });\n  });\n\n  dataset.links.forEach((edge) => {\n    const { source, target } = edge;\n    const line = new Line({\n      style: {\n        x1: source.x + 300,\n        y1: source.y + 250,\n        z1: source.z,\n        x2: target.x + 300,\n        y2: target.y + 250,\n        z2: target.z,\n        stroke: 'black',\n        lineWidth: 2,\n        opacity: 0.5,\n        isBillboard: true, // 始终面向屏幕\n      },\n    });\n    canvas.appendChild(line);\n  });\n\n  // add a directional light into scene\n  const light = new DirectionalLight({\n    style: {\n      fill: 'white',\n      direction: [-1, 0, 1],\n    },\n  });\n  canvas.appendChild(light);\n\n  // adjust camera's position\n  const camera = canvas.getCamera();\n  camera.setPerspective(0.1, 1000, 45, 600 / 500);\n\n  // create landmarks\n  camera.createLandmark('reset', {\n    position: [300, 250, 500],\n    focalPoint: [300, 250, 0],\n    zoom: 1,\n  });\n  camera.createLandmark('landmark1', {\n    position: [200, 200, 300],\n    focalPoint: [200, 200, 0],\n    zoom: 1,\n    roll: 30,\n  });\n  camera.createLandmark('landmark2', {\n    position: [400, 400, 200],\n    focalPoint: [400, 400, 0],\n    zoom: 0.75,\n  });\n\n  // stats\n  const stats = new Stats();\n  stats.showPanel(0);\n  const $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  const $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n    if (stats) {\n      stats.update();\n    }\n  });\n\n  // GUI\n  const gui = new lil.GUI({ autoPlace: false });\n  $wrapper.appendChild(gui.domElement);\n\n  const cameraFolder = gui.addFolder('camera landmarks');\n  const cameraConfig = {\n    type: 'Exploring',\n    goToMark1: () => {\n      camera.gotoLandmark('reset', {\n        duration: 1000,\n        easing: 'ease-in',\n        onfinish: () => {\n          console.log('reset finished');\n        },\n      });\n    },\n    goToMark2: () => {\n      camera.gotoLandmark('landmark1', {\n        duration: 300,\n        easing: 'linear',\n      });\n    },\n    goToMark3: () => {\n      camera.gotoLandmark('landmark2', {\n        duration: 1000,\n        easing: 'linear',\n      });\n    },\n    // shot1: () => {\n    //   const sphere1 = canvas.document.getElementById('Valjean');\n    //   camera.shot(sphere1);\n    // },\n    // shot2: () => {\n    //   const sphere2 = canvas.document.getElementById('Bahorel');\n    //   camera.shot(sphere2);\n    // },\n  };\n  cameraFolder.add(cameraConfig, 'goToMark1').name('reset');\n  cameraFolder.add(cameraConfig, 'goToMark2').name('landmark1');\n  cameraFolder.add(cameraConfig, 'goToMark3').name('landmark2');\n  const types = ['Orbiting', 'Exploring', 'Tracking'];\n  const enums = [CameraType.ORBITING, CameraType.EXPLORING, CameraType.TRACKING];\n  cameraFolder.add(cameraConfig, 'type', types).onChange((type) => {\n    const index = types.indexOf(type);\n    camera.setType(enums[index]);\n  });\n  // cameraFolder.add(cameraConfig, 'shot1').name('shot1');\n  // cameraFolder.add(cameraConfig, 'shot2').name('shot2');\n  cameraFolder.open();\n})();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-webgl\", \"@antv/g-plugin-3d\", \"@antv/g-plugin-control\", \"lil-gui\", \"stats.js\", \"d3-force-3d\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-webgl\"), require(\"@antv/g-plugin-3d\"), require(\"@antv/g-plugin-control\"), require(\"lil-gui\"), require(\"stats.js\"), require(\"d3-force-3d\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gWebgl, global.gPlugin3d, global.gPluginControl, global.lilGui, global.stats, global.d3Force3d);\n    global.landmark = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gWebgl, _gPlugin3d, _gPluginControl, lil, _stats, _d3Force3d) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // https://bl.ocks.org/vasturiano/f59675656258d3f490e9faa40828c0e7\n  var dataset = {\n    nodes: [{\n      id: 'Myriel',\n      group: 1\n    }, {\n      id: 'Napoleon',\n      group: 1\n    }, {\n      id: 'Mlle.Baptistine',\n      group: 1\n    }, {\n      id: 'Mme.Magloire',\n      group: 1\n    }, {\n      id: 'CountessdeLo',\n      group: 1\n    }, {\n      id: 'Geborand',\n      group: 1\n    }, {\n      id: 'Champtercier',\n      group: 1\n    }, {\n      id: 'Cravatte',\n      group: 1\n    }, {\n      id: 'Count',\n      group: 1\n    }, {\n      id: 'OldMan',\n      group: 1\n    }, {\n      id: 'Labarre',\n      group: 2\n    }, {\n      id: 'Valjean',\n      group: 2\n    }, {\n      id: 'Marguerite',\n      group: 3\n    }, {\n      id: 'Mme.deR',\n      group: 2\n    }, {\n      id: 'Isabeau',\n      group: 2\n    }, {\n      id: 'Gervais',\n      group: 2\n    }, {\n      id: 'Tholomyes',\n      group: 3\n    }, {\n      id: 'Listolier',\n      group: 3\n    }, {\n      id: 'Fameuil',\n      group: 3\n    }, {\n      id: 'Blacheville',\n      group: 3\n    }, {\n      id: 'Favourite',\n      group: 3\n    }, {\n      id: 'Dahlia',\n      group: 3\n    }, {\n      id: 'Zephine',\n      group: 3\n    }, {\n      id: 'Fantine',\n      group: 3\n    }, {\n      id: 'Mme.Thenardier',\n      group: 4\n    }, {\n      id: 'Thenardier',\n      group: 4\n    }, {\n      id: 'Cosette',\n      group: 5\n    }, {\n      id: 'Javert',\n      group: 4\n    }, {\n      id: 'Fauchelevent',\n      group: 0\n    }, {\n      id: 'Bamatabois',\n      group: 2\n    }, {\n      id: 'Perpetue',\n      group: 3\n    }, {\n      id: 'Simplice',\n      group: 2\n    }, {\n      id: 'Scaufflaire',\n      group: 2\n    }, {\n      id: 'Woman1',\n      group: 2\n    }, {\n      id: 'Judge',\n      group: 2\n    }, {\n      id: 'Champmathieu',\n      group: 2\n    }, {\n      id: 'Brevet',\n      group: 2\n    }, {\n      id: 'Chenildieu',\n      group: 2\n    }, {\n      id: 'Cochepaille',\n      group: 2\n    }, {\n      id: 'Pontmercy',\n      group: 4\n    }, {\n      id: 'Boulatruelle',\n      group: 6\n    }, {\n      id: 'Eponine',\n      group: 4\n    }, {\n      id: 'Anzelma',\n      group: 4\n    }, {\n      id: 'Woman2',\n      group: 5\n    }, {\n      id: 'MotherInnocent',\n      group: 0\n    }, {\n      id: 'Gribier',\n      group: 0\n    }, {\n      id: 'Jondrette',\n      group: 7\n    }, {\n      id: 'Mme.Burgon',\n      group: 7\n    }, {\n      id: 'Gavroche',\n      group: 8\n    }, {\n      id: 'Gillenormand',\n      group: 5\n    }, {\n      id: 'Magnon',\n      group: 5\n    }, {\n      id: 'Mlle.Gillenormand',\n      group: 5\n    }, {\n      id: 'Mme.Pontmercy',\n      group: 5\n    }, {\n      id: 'Mlle.Vaubois',\n      group: 5\n    }, {\n      id: 'Lt.Gillenormand',\n      group: 5\n    }, {\n      id: 'Marius',\n      group: 8\n    }, {\n      id: 'BaronessT',\n      group: 5\n    }, {\n      id: 'Mabeuf',\n      group: 8\n    }, {\n      id: 'Enjolras',\n      group: 8\n    }, {\n      id: 'Combeferre',\n      group: 8\n    }, {\n      id: 'Prouvaire',\n      group: 8\n    }, {\n      id: 'Feuilly',\n      group: 8\n    }, {\n      id: 'Courfeyrac',\n      group: 8\n    }, {\n      id: 'Bahorel',\n      group: 8\n    }, {\n      id: 'Bossuet',\n      group: 8\n    }, {\n      id: 'Joly',\n      group: 8\n    }, {\n      id: 'Grantaire',\n      group: 8\n    }, {\n      id: 'MotherPlutarch',\n      group: 9\n    }, {\n      id: 'Gueulemer',\n      group: 4\n    }, {\n      id: 'Babet',\n      group: 4\n    }, {\n      id: 'Claquesous',\n      group: 4\n    }, {\n      id: 'Montparnasse',\n      group: 4\n    }, {\n      id: 'Toussaint',\n      group: 5\n    }, {\n      id: 'Child1',\n      group: 10\n    }, {\n      id: 'Child2',\n      group: 10\n    }, {\n      id: 'Brujon',\n      group: 4\n    }, {\n      id: 'Mme.Hucheloup',\n      group: 8\n    }],\n    links: [{\n      source: 'Napoleon',\n      target: 'Myriel',\n      value: 1\n    }, {\n      source: 'Mlle.Baptistine',\n      target: 'Myriel',\n      value: 8\n    }, {\n      source: 'Mme.Magloire',\n      target: 'Myriel',\n      value: 10\n    }, {\n      source: 'Mme.Magloire',\n      target: 'Mlle.Baptistine',\n      value: 6\n    }, {\n      source: 'CountessdeLo',\n      target: 'Myriel',\n      value: 1\n    }, {\n      source: 'Geborand',\n      target: 'Myriel',\n      value: 1\n    }, {\n      source: 'Champtercier',\n      target: 'Myriel',\n      value: 1\n    }, {\n      source: 'Cravatte',\n      target: 'Myriel',\n      value: 1\n    }, {\n      source: 'Count',\n      target: 'Myriel',\n      value: 2\n    }, {\n      source: 'OldMan',\n      target: 'Myriel',\n      value: 1\n    }, {\n      source: 'Valjean',\n      target: 'Labarre',\n      value: 1\n    }, {\n      source: 'Valjean',\n      target: 'Mme.Magloire',\n      value: 3\n    }, {\n      source: 'Valjean',\n      target: 'Mlle.Baptistine',\n      value: 3\n    }, {\n      source: 'Valjean',\n      target: 'Myriel',\n      value: 5\n    }, {\n      source: 'Marguerite',\n      target: 'Valjean',\n      value: 1\n    }, {\n      source: 'Mme.deR',\n      target: 'Valjean',\n      value: 1\n    }, {\n      source: 'Isabeau',\n      target: 'Valjean',\n      value: 1\n    }, {\n      source: 'Gervais',\n      target: 'Valjean',\n      value: 1\n    }, {\n      source: 'Listolier',\n      target: 'Tholomyes',\n      value: 4\n    }, {\n      source: 'Fameuil',\n      target: 'Tholomyes',\n      value: 4\n    }, {\n      source: 'Fameuil',\n      target: 'Listolier',\n      value: 4\n    }, {\n      source: 'Blacheville',\n      target: 'Tholomyes',\n      value: 4\n    }, {\n      source: 'Blacheville',\n      target: 'Listolier',\n      value: 4\n    }, {\n      source: 'Blacheville',\n      target: 'Fameuil',\n      value: 4\n    }, {\n      source: 'Favourite',\n      target: 'Tholomyes',\n      value: 3\n    }, {\n      source: 'Favourite',\n      target: 'Listolier',\n      value: 3\n    }, {\n      source: 'Favourite',\n      target: 'Fameuil',\n      value: 3\n    }, {\n      source: 'Favourite',\n      target: 'Blacheville',\n      value: 4\n    }, {\n      source: 'Dahlia',\n      target: 'Tholomyes',\n      value: 3\n    }, {\n      source: 'Dahlia',\n      target: 'Listolier',\n      value: 3\n    }, {\n      source: 'Dahlia',\n      target: 'Fameuil',\n      value: 3\n    }, {\n      source: 'Dahlia',\n      target: 'Blacheville',\n      value: 3\n    }, {\n      source: 'Dahlia',\n      target: 'Favourite',\n      value: 5\n    }, {\n      source: 'Zephine',\n      target: 'Tholomyes',\n      value: 3\n    }, {\n      source: 'Zephine',\n      target: 'Listolier',\n      value: 3\n    }, {\n      source: 'Zephine',\n      target: 'Fameuil',\n      value: 3\n    }, {\n      source: 'Zephine',\n      target: 'Blacheville',\n      value: 3\n    }, {\n      source: 'Zephine',\n      target: 'Favourite',\n      value: 4\n    }, {\n      source: 'Zephine',\n      target: 'Dahlia',\n      value: 4\n    }, {\n      source: 'Fantine',\n      target: 'Tholomyes',\n      value: 3\n    }, {\n      source: 'Fantine',\n      target: 'Listolier',\n      value: 3\n    }, {\n      source: 'Fantine',\n      target: 'Fameuil',\n      value: 3\n    }, {\n      source: 'Fantine',\n      target: 'Blacheville',\n      value: 3\n    }, {\n      source: 'Fantine',\n      target: 'Favourite',\n      value: 4\n    }, {\n      source: 'Fantine',\n      target: 'Dahlia',\n      value: 4\n    }, {\n      source: 'Fantine',\n      target: 'Zephine',\n      value: 4\n    }, {\n      source: 'Fantine',\n      target: 'Marguerite',\n      value: 2\n    }, {\n      source: 'Fantine',\n      target: 'Valjean',\n      value: 9\n    }, {\n      source: 'Mme.Thenardier',\n      target: 'Fantine',\n      value: 2\n    }, {\n      source: 'Mme.Thenardier',\n      target: 'Valjean',\n      value: 7\n    }, {\n      source: 'Thenardier',\n      target: 'Mme.Thenardier',\n      value: 13\n    }, {\n      source: 'Thenardier',\n      target: 'Fantine',\n      value: 1\n    }, {\n      source: 'Thenardier',\n      target: 'Valjean',\n      value: 12\n    }, {\n      source: 'Cosette',\n      target: 'Mme.Thenardier',\n      value: 4\n    }, {\n      source: 'Cosette',\n      target: 'Valjean',\n      value: 31\n    }, {\n      source: 'Cosette',\n      target: 'Tholomyes',\n      value: 1\n    }, {\n      source: 'Cosette',\n      target: 'Thenardier',\n      value: 1\n    }, {\n      source: 'Javert',\n      target: 'Valjean',\n      value: 17\n    }, {\n      source: 'Javert',\n      target: 'Fantine',\n      value: 5\n    }, {\n      source: 'Javert',\n      target: 'Thenardier',\n      value: 5\n    }, {\n      source: 'Javert',\n      target: 'Mme.Thenardier',\n      value: 1\n    }, {\n      source: 'Javert',\n      target: 'Cosette',\n      value: 1\n    }, {\n      source: 'Fauchelevent',\n      target: 'Valjean',\n      value: 8\n    }, {\n      source: 'Fauchelevent',\n      target: 'Javert',\n      value: 1\n    }, {\n      source: 'Bamatabois',\n      target: 'Fantine',\n      value: 1\n    }, {\n      source: 'Bamatabois',\n      target: 'Javert',\n      value: 1\n    }, {\n      source: 'Bamatabois',\n      target: 'Valjean',\n      value: 2\n    }, {\n      source: 'Perpetue',\n      target: 'Fantine',\n      value: 1\n    }, {\n      source: 'Simplice',\n      target: 'Perpetue',\n      value: 2\n    }, {\n      source: 'Simplice',\n      target: 'Valjean',\n      value: 3\n    }, {\n      source: 'Simplice',\n      target: 'Fantine',\n      value: 2\n    }, {\n      source: 'Simplice',\n      target: 'Javert',\n      value: 1\n    }, {\n      source: 'Scaufflaire',\n      target: 'Valjean',\n      value: 1\n    }, {\n      source: 'Woman1',\n      target: 'Valjean',\n      value: 2\n    }, {\n      source: 'Woman1',\n      target: 'Javert',\n      value: 1\n    }, {\n      source: 'Judge',\n      target: 'Valjean',\n      value: 3\n    }, {\n      source: 'Judge',\n      target: 'Bamatabois',\n      value: 2\n    }, {\n      source: 'Champmathieu',\n      target: 'Valjean',\n      value: 3\n    }, {\n      source: 'Champmathieu',\n      target: 'Judge',\n      value: 3\n    }, {\n      source: 'Champmathieu',\n      target: 'Bamatabois',\n      value: 2\n    }, {\n      source: 'Brevet',\n      target: 'Judge',\n      value: 2\n    }, {\n      source: 'Brevet',\n      target: 'Champmathieu',\n      value: 2\n    }, {\n      source: 'Brevet',\n      target: 'Valjean',\n      value: 2\n    }, {\n      source: 'Brevet',\n      target: 'Bamatabois',\n      value: 1\n    }, {\n      source: 'Chenildieu',\n      target: 'Judge',\n      value: 2\n    }, {\n      source: 'Chenildieu',\n      target: 'Champmathieu',\n      value: 2\n    }, {\n      source: 'Chenildieu',\n      target: 'Brevet',\n      value: 2\n    }, {\n      source: 'Chenildieu',\n      target: 'Valjean',\n      value: 2\n    }, {\n      source: 'Chenildieu',\n      target: 'Bamatabois',\n      value: 1\n    }, {\n      source: 'Cochepaille',\n      target: 'Judge',\n      value: 2\n    }, {\n      source: 'Cochepaille',\n      target: 'Champmathieu',\n      value: 2\n    }, {\n      source: 'Cochepaille',\n      target: 'Brevet',\n      value: 2\n    }, {\n      source: 'Cochepaille',\n      target: 'Chenildieu',\n      value: 2\n    }, {\n      source: 'Cochepaille',\n      target: 'Valjean',\n      value: 2\n    }, {\n      source: 'Cochepaille',\n      target: 'Bamatabois',\n      value: 1\n    }, {\n      source: 'Pontmercy',\n      target: 'Thenardier',\n      value: 1\n    }, {\n      source: 'Boulatruelle',\n      target: 'Thenardier',\n      value: 1\n    }, {\n      source: 'Eponine',\n      target: 'Mme.Thenardier',\n      value: 2\n    }, {\n      source: 'Eponine',\n      target: 'Thenardier',\n      value: 3\n    }, {\n      source: 'Anzelma',\n      target: 'Eponine',\n      value: 2\n    }, {\n      source: 'Anzelma',\n      target: 'Thenardier',\n      value: 2\n    }, {\n      source: 'Anzelma',\n      target: 'Mme.Thenardier',\n      value: 1\n    }, {\n      source: 'Woman2',\n      target: 'Valjean',\n      value: 3\n    }, {\n      source: 'Woman2',\n      target: 'Cosette',\n      value: 1\n    }, {\n      source: 'Woman2',\n      target: 'Javert',\n      value: 1\n    }, {\n      source: 'MotherInnocent',\n      target: 'Fauchelevent',\n      value: 3\n    }, {\n      source: 'MotherInnocent',\n      target: 'Valjean',\n      value: 1\n    }, {\n      source: 'Gribier',\n      target: 'Fauchelevent',\n      value: 2\n    }, {\n      source: 'Mme.Burgon',\n      target: 'Jondrette',\n      value: 1\n    }, {\n      source: 'Gavroche',\n      target: 'Mme.Burgon',\n      value: 2\n    }, {\n      source: 'Gavroche',\n      target: 'Thenardier',\n      value: 1\n    }, {\n      source: 'Gavroche',\n      target: 'Javert',\n      value: 1\n    }, {\n      source: 'Gavroche',\n      target: 'Valjean',\n      value: 1\n    }, {\n      source: 'Gillenormand',\n      target: 'Cosette',\n      value: 3\n    }, {\n      source: 'Gillenormand',\n      target: 'Valjean',\n      value: 2\n    }, {\n      source: 'Magnon',\n      target: 'Gillenormand',\n      value: 1\n    }, {\n      source: 'Magnon',\n      target: 'Mme.Thenardier',\n      value: 1\n    }, {\n      source: 'Mlle.Gillenormand',\n      target: 'Gillenormand',\n      value: 9\n    }, {\n      source: 'Mlle.Gillenormand',\n      target: 'Cosette',\n      value: 2\n    }, {\n      source: 'Mlle.Gillenormand',\n      target: 'Valjean',\n      value: 2\n    }, {\n      source: 'Mme.Pontmercy',\n      target: 'Mlle.Gillenormand',\n      value: 1\n    }, {\n      source: 'Mme.Pontmercy',\n      target: 'Pontmercy',\n      value: 1\n    }, {\n      source: 'Mlle.Vaubois',\n      target: 'Mlle.Gillenormand',\n      value: 1\n    }, {\n      source: 'Lt.Gillenormand',\n      target: 'Mlle.Gillenormand',\n      value: 2\n    }, {\n      source: 'Lt.Gillenormand',\n      target: 'Gillenormand',\n      value: 1\n    }, {\n      source: 'Lt.Gillenormand',\n      target: 'Cosette',\n      value: 1\n    }, {\n      source: 'Marius',\n      target: 'Mlle.Gillenormand',\n      value: 6\n    }, {\n      source: 'Marius',\n      target: 'Gillenormand',\n      value: 12\n    }, {\n      source: 'Marius',\n      target: 'Pontmercy',\n      value: 1\n    }, {\n      source: 'Marius',\n      target: 'Lt.Gillenormand',\n      value: 1\n    }, {\n      source: 'Marius',\n      target: 'Cosette',\n      value: 21\n    }, {\n      source: 'Marius',\n      target: 'Valjean',\n      value: 19\n    }, {\n      source: 'Marius',\n      target: 'Tholomyes',\n      value: 1\n    }, {\n      source: 'Marius',\n      target: 'Thenardier',\n      value: 2\n    }, {\n      source: 'Marius',\n      target: 'Eponine',\n      value: 5\n    }, {\n      source: 'Marius',\n      target: 'Gavroche',\n      value: 4\n    }, {\n      source: 'BaronessT',\n      target: 'Gillenormand',\n      value: 1\n    }, {\n      source: 'BaronessT',\n      target: 'Marius',\n      value: 1\n    }, {\n      source: 'Mabeuf',\n      target: 'Marius',\n      value: 1\n    }, {\n      source: 'Mabeuf',\n      target: 'Eponine',\n      value: 1\n    }, {\n      source: 'Mabeuf',\n      target: 'Gavroche',\n      value: 1\n    }, {\n      source: 'Enjolras',\n      target: 'Marius',\n      value: 7\n    }, {\n      source: 'Enjolras',\n      target: 'Gavroche',\n      value: 7\n    }, {\n      source: 'Enjolras',\n      target: 'Javert',\n      value: 6\n    }, {\n      source: 'Enjolras',\n      target: 'Mabeuf',\n      value: 1\n    }, {\n      source: 'Enjolras',\n      target: 'Valjean',\n      value: 4\n    }, {\n      source: 'Combeferre',\n      target: 'Enjolras',\n      value: 15\n    }, {\n      source: 'Combeferre',\n      target: 'Marius',\n      value: 5\n    }, {\n      source: 'Combeferre',\n      target: 'Gavroche',\n      value: 6\n    }, {\n      source: 'Combeferre',\n      target: 'Mabeuf',\n      value: 2\n    }, {\n      source: 'Prouvaire',\n      target: 'Gavroche',\n      value: 1\n    }, {\n      source: 'Prouvaire',\n      target: 'Enjolras',\n      value: 4\n    }, {\n      source: 'Prouvaire',\n      target: 'Combeferre',\n      value: 2\n    }, {\n      source: 'Feuilly',\n      target: 'Gavroche',\n      value: 2\n    }, {\n      source: 'Feuilly',\n      target: 'Enjolras',\n      value: 6\n    }, {\n      source: 'Feuilly',\n      target: 'Prouvaire',\n      value: 2\n    }, {\n      source: 'Feuilly',\n      target: 'Combeferre',\n      value: 5\n    }, {\n      source: 'Feuilly',\n      target: 'Mabeuf',\n      value: 1\n    }, {\n      source: 'Feuilly',\n      target: 'Marius',\n      value: 1\n    }, {\n      source: 'Courfeyrac',\n      target: 'Marius',\n      value: 9\n    }, {\n      source: 'Courfeyrac',\n      target: 'Enjolras',\n      value: 17\n    }, {\n      source: 'Courfeyrac',\n      target: 'Combeferre',\n      value: 13\n    }, {\n      source: 'Courfeyrac',\n      target: 'Gavroche',\n      value: 7\n    }, {\n      source: 'Courfeyrac',\n      target: 'Mabeuf',\n      value: 2\n    }, {\n      source: 'Courfeyrac',\n      target: 'Eponine',\n      value: 1\n    }, {\n      source: 'Courfeyrac',\n      target: 'Feuilly',\n      value: 6\n    }, {\n      source: 'Courfeyrac',\n      target: 'Prouvaire',\n      value: 3\n    }, {\n      source: 'Bahorel',\n      target: 'Combeferre',\n      value: 5\n    }, {\n      source: 'Bahorel',\n      target: 'Gavroche',\n      value: 5\n    }, {\n      source: 'Bahorel',\n      target: 'Courfeyrac',\n      value: 6\n    }, {\n      source: 'Bahorel',\n      target: 'Mabeuf',\n      value: 2\n    }, {\n      source: 'Bahorel',\n      target: 'Enjolras',\n      value: 4\n    }, {\n      source: 'Bahorel',\n      target: 'Feuilly',\n      value: 3\n    }, {\n      source: 'Bahorel',\n      target: 'Prouvaire',\n      value: 2\n    }, {\n      source: 'Bahorel',\n      target: 'Marius',\n      value: 1\n    }, {\n      source: 'Bossuet',\n      target: 'Marius',\n      value: 5\n    }, {\n      source: 'Bossuet',\n      target: 'Courfeyrac',\n      value: 12\n    }, {\n      source: 'Bossuet',\n      target: 'Gavroche',\n      value: 5\n    }, {\n      source: 'Bossuet',\n      target: 'Bahorel',\n      value: 4\n    }, {\n      source: 'Bossuet',\n      target: 'Enjolras',\n      value: 10\n    }, {\n      source: 'Bossuet',\n      target: 'Feuilly',\n      value: 6\n    }, {\n      source: 'Bossuet',\n      target: 'Prouvaire',\n      value: 2\n    }, {\n      source: 'Bossuet',\n      target: 'Combeferre',\n      value: 9\n    }, {\n      source: 'Bossuet',\n      target: 'Mabeuf',\n      value: 1\n    }, {\n      source: 'Bossuet',\n      target: 'Valjean',\n      value: 1\n    }, {\n      source: 'Joly',\n      target: 'Bahorel',\n      value: 5\n    }, {\n      source: 'Joly',\n      target: 'Bossuet',\n      value: 7\n    }, {\n      source: 'Joly',\n      target: 'Gavroche',\n      value: 3\n    }, {\n      source: 'Joly',\n      target: 'Courfeyrac',\n      value: 5\n    }, {\n      source: 'Joly',\n      target: 'Enjolras',\n      value: 5\n    }, {\n      source: 'Joly',\n      target: 'Feuilly',\n      value: 5\n    }, {\n      source: 'Joly',\n      target: 'Prouvaire',\n      value: 2\n    }, {\n      source: 'Joly',\n      target: 'Combeferre',\n      value: 5\n    }, {\n      source: 'Joly',\n      target: 'Mabeuf',\n      value: 1\n    }, {\n      source: 'Joly',\n      target: 'Marius',\n      value: 2\n    }, {\n      source: 'Grantaire',\n      target: 'Bossuet',\n      value: 3\n    }, {\n      source: 'Grantaire',\n      target: 'Enjolras',\n      value: 3\n    }, {\n      source: 'Grantaire',\n      target: 'Combeferre',\n      value: 1\n    }, {\n      source: 'Grantaire',\n      target: 'Courfeyrac',\n      value: 2\n    }, {\n      source: 'Grantaire',\n      target: 'Joly',\n      value: 2\n    }, {\n      source: 'Grantaire',\n      target: 'Gavroche',\n      value: 1\n    }, {\n      source: 'Grantaire',\n      target: 'Bahorel',\n      value: 1\n    }, {\n      source: 'Grantaire',\n      target: 'Feuilly',\n      value: 1\n    }, {\n      source: 'Grantaire',\n      target: 'Prouvaire',\n      value: 1\n    }, {\n      source: 'MotherPlutarch',\n      target: 'Mabeuf',\n      value: 3\n    }, {\n      source: 'Gueulemer',\n      target: 'Thenardier',\n      value: 5\n    }, {\n      source: 'Gueulemer',\n      target: 'Valjean',\n      value: 1\n    }, {\n      source: 'Gueulemer',\n      target: 'Mme.Thenardier',\n      value: 1\n    }, {\n      source: 'Gueulemer',\n      target: 'Javert',\n      value: 1\n    }, {\n      source: 'Gueulemer',\n      target: 'Gavroche',\n      value: 1\n    }, {\n      source: 'Gueulemer',\n      target: 'Eponine',\n      value: 1\n    }, {\n      source: 'Babet',\n      target: 'Thenardier',\n      value: 6\n    }, {\n      source: 'Babet',\n      target: 'Gueulemer',\n      value: 6\n    }, {\n      source: 'Babet',\n      target: 'Valjean',\n      value: 1\n    }, {\n      source: 'Babet',\n      target: 'Mme.Thenardier',\n      value: 1\n    }, {\n      source: 'Babet',\n      target: 'Javert',\n      value: 2\n    }, {\n      source: 'Babet',\n      target: 'Gavroche',\n      value: 1\n    }, {\n      source: 'Babet',\n      target: 'Eponine',\n      value: 1\n    }, {\n      source: 'Claquesous',\n      target: 'Thenardier',\n      value: 4\n    }, {\n      source: 'Claquesous',\n      target: 'Babet',\n      value: 4\n    }, {\n      source: 'Claquesous',\n      target: 'Gueulemer',\n      value: 4\n    }, {\n      source: 'Claquesous',\n      target: 'Valjean',\n      value: 1\n    }, {\n      source: 'Claquesous',\n      target: 'Mme.Thenardier',\n      value: 1\n    }, {\n      source: 'Claquesous',\n      target: 'Javert',\n      value: 1\n    }, {\n      source: 'Claquesous',\n      target: 'Eponine',\n      value: 1\n    }, {\n      source: 'Claquesous',\n      target: 'Enjolras',\n      value: 1\n    }, {\n      source: 'Montparnasse',\n      target: 'Javert',\n      value: 1\n    }, {\n      source: 'Montparnasse',\n      target: 'Babet',\n      value: 2\n    }, {\n      source: 'Montparnasse',\n      target: 'Gueulemer',\n      value: 2\n    }, {\n      source: 'Montparnasse',\n      target: 'Claquesous',\n      value: 2\n    }, {\n      source: 'Montparnasse',\n      target: 'Valjean',\n      value: 1\n    }, {\n      source: 'Montparnasse',\n      target: 'Gavroche',\n      value: 1\n    }, {\n      source: 'Montparnasse',\n      target: 'Eponine',\n      value: 1\n    }, {\n      source: 'Montparnasse',\n      target: 'Thenardier',\n      value: 1\n    }, {\n      source: 'Toussaint',\n      target: 'Cosette',\n      value: 2\n    }, {\n      source: 'Toussaint',\n      target: 'Javert',\n      value: 1\n    }, {\n      source: 'Toussaint',\n      target: 'Valjean',\n      value: 1\n    }, {\n      source: 'Child1',\n      target: 'Gavroche',\n      value: 2\n    }, {\n      source: 'Child2',\n      target: 'Gavroche',\n      value: 2\n    }, {\n      source: 'Child2',\n      target: 'Child1',\n      value: 3\n    }, {\n      source: 'Brujon',\n      target: 'Babet',\n      value: 3\n    }, {\n      source: 'Brujon',\n      target: 'Gueulemer',\n      value: 3\n    }, {\n      source: 'Brujon',\n      target: 'Thenardier',\n      value: 3\n    }, {\n      source: 'Brujon',\n      target: 'Gavroche',\n      value: 1\n    }, {\n      source: 'Brujon',\n      target: 'Eponine',\n      value: 1\n    }, {\n      source: 'Brujon',\n      target: 'Claquesous',\n      value: 1\n    }, {\n      source: 'Brujon',\n      target: 'Montparnasse',\n      value: 1\n    }, {\n      source: 'Mme.Hucheloup',\n      target: 'Bossuet',\n      value: 1\n    }, {\n      source: 'Mme.Hucheloup',\n      target: 'Joly',\n      value: 1\n    }, {\n      source: 'Mme.Hucheloup',\n      target: 'Grantaire',\n      value: 1\n    }, {\n      source: 'Mme.Hucheloup',\n      target: 'Bahorel',\n      value: 1\n    }, {\n      source: 'Mme.Hucheloup',\n      target: 'Courfeyrac',\n      value: 1\n    }, {\n      source: 'Mme.Hucheloup',\n      target: 'Gavroche',\n      value: 1\n    }, {\n      source: 'Mme.Hucheloup',\n      target: 'Enjolras',\n      value: 1\n    }]\n  }; // start 3d force simulation\n\n  var simulation = (0, _d3Force3d.forceSimulation)(dataset.nodes, 3).force('link', (0, _d3Force3d.forceLink)().id(function (d) {\n    return d.id;\n  })).force('charge', (0, _d3Force3d.forceManyBody)()).force('center', (0, _d3Force3d.forceCenter)(0, 0));\n  simulation.nodes(dataset.nodes);\n  simulation.force('link').links(dataset.links);\n  simulation.tick(1000); // create a renderer\n\n  var renderer = new _gWebgl.Renderer();\n  renderer.registerPlugin(new _gPlugin3d.Plugin());\n  renderer.registerPlugin(new _gPluginControl.Plugin()); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: renderer\n  });\n\n  (async function () {\n    // wait for canvas' initialization complete\n    await canvas.ready; // use GPU device\n\n    var plugin = renderer.getPlugin('device-renderer');\n    var device = plugin.getDevice(); // create a sphere geometry\n\n    var sphereGeometry = new _gPlugin3d.SphereGeometry(device, {\n      radius: 10,\n      latitudeBands: 32,\n      longitudeBands: 32\n    }); // create a material with Phong lighting model\n\n    var material = new _gPlugin3d.MeshPhongMaterial(device, {\n      shininess: 30\n    }); // @see https://antv.vision/en/docs/specification/language/palette#%E5%88%86%E7%B1%BB%E8%89%B2%E6%9D%BF\n\n    var colorPalette = ['#5B8FF9', '#CDDDFD', '#61DDAA', '#CDF3E4', '#65789B', '#F6BD16', '#7262fd', '#78D3F8', '#9661BC', '#F6903D', '#008685', '#F08BB4'];\n    dataset.nodes.forEach(function (node) {\n      var fill = colorPalette[node.group]; // create a mesh\n\n      var sphere = new _gPlugin3d.Mesh({\n        id: node.id,\n        style: {\n          fill: fill,\n          opacity: 1,\n          geometry: sphereGeometry,\n          material: material,\n          cursor: 'pointer'\n        }\n      });\n      sphere.setPosition(node.x + 300, node.y + 250, node.z);\n      canvas.appendChild(sphere);\n      sphere.addEventListener('mouseenter', function () {\n        sphere.style.fill = 'red';\n      });\n      sphere.addEventListener('mouseleave', function () {\n        sphere.style.fill = fill;\n      });\n    });\n    dataset.links.forEach(function (edge) {\n      var source = edge.source,\n          target = edge.target;\n      var line = new _g.Line({\n        style: {\n          x1: source.x + 300,\n          y1: source.y + 250,\n          z1: source.z,\n          x2: target.x + 300,\n          y2: target.y + 250,\n          z2: target.z,\n          stroke: 'black',\n          lineWidth: 2,\n          opacity: 0.5,\n          isBillboard: true // 始终面向屏幕\n\n        }\n      });\n      canvas.appendChild(line);\n    }); // add a directional light into scene\n\n    var light = new _gPlugin3d.DirectionalLight({\n      style: {\n        fill: 'white',\n        direction: [-1, 0, 1]\n      }\n    });\n    canvas.appendChild(light); // adjust camera's position\n\n    var camera = canvas.getCamera();\n    camera.setPerspective(0.1, 1000, 45, 600 / 500); // create landmarks\n\n    camera.createLandmark('reset', {\n      position: [300, 250, 500],\n      focalPoint: [300, 250, 0],\n      zoom: 1\n    });\n    camera.createLandmark('landmark1', {\n      position: [200, 200, 300],\n      focalPoint: [200, 200, 0],\n      zoom: 1,\n      roll: 30\n    });\n    camera.createLandmark('landmark2', {\n      position: [400, 400, 200],\n      focalPoint: [400, 400, 0],\n      zoom: 0.75\n    }); // stats\n\n    var stats = new _stats.default();\n    stats.showPanel(0);\n    var $stats = stats.dom;\n    $stats.style.position = 'absolute';\n    $stats.style.left = '0px';\n    $stats.style.top = '0px';\n    var $wrapper = document.getElementById('container');\n    $wrapper.appendChild($stats);\n    canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n      if (stats) {\n        stats.update();\n      }\n    }); // GUI\n\n    var gui = new lil.GUI({\n      autoPlace: false\n    });\n    $wrapper.appendChild(gui.domElement);\n    var cameraFolder = gui.addFolder('camera landmarks');\n    var cameraConfig = {\n      type: 'Exploring',\n      goToMark1: function goToMark1() {\n        camera.gotoLandmark('reset', {\n          duration: 1000,\n          easing: 'ease-in',\n          onfinish: function onfinish() {\n            console.log('reset finished');\n          }\n        });\n      },\n      goToMark2: function goToMark2() {\n        camera.gotoLandmark('landmark1', {\n          duration: 300,\n          easing: 'linear'\n        });\n      },\n      goToMark3: function goToMark3() {\n        camera.gotoLandmark('landmark2', {\n          duration: 1000,\n          easing: 'linear'\n        });\n      } // shot1: () => {\n      //   const sphere1 = canvas.document.getElementById('Valjean');\n      //   camera.shot(sphere1);\n      // },\n      // shot2: () => {\n      //   const sphere2 = canvas.document.getElementById('Bahorel');\n      //   camera.shot(sphere2);\n      // },\n\n    };\n    cameraFolder.add(cameraConfig, 'goToMark1').name('reset');\n    cameraFolder.add(cameraConfig, 'goToMark2').name('landmark1');\n    cameraFolder.add(cameraConfig, 'goToMark3').name('landmark2');\n    var types = ['Orbiting', 'Exploring', 'Tracking'];\n    var enums = [_g.CameraType.ORBITING, _g.CameraType.EXPLORING, _g.CameraType.TRACKING];\n    cameraFolder.add(cameraConfig, 'type', types).onChange(function (type) {\n      var index = types.indexOf(type);\n      camera.setType(enums[index]);\n    }); // cameraFolder.add(cameraConfig, 'shot1').name('shot1');\n    // cameraFolder.add(cameraConfig, 'shot2').name('shot2');\n\n    cameraFolder.open();\n  })();\n});"},{"relativePath":"canvas/demo/element-from-point.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/canvas/demo/element-from-point.js","order":7,"filename":"element-from-point.js","title":{"zh":"通过 API 方式完成拾取","en":"Use picking API"},"source":"import { Canvas, CanvasEvent, Circle, Text } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n/**\n * Pick target by calling API instead of interactive events.\n * DisplayObject's `interactive` & `visibility` will affect picking but not `opacity`.\n *\n * You can move the red picking point with mouse click or lil-gui.\n *\n * more informations @see /zh/docs/api/builtin-objects/document#elementsfrompoint\n */\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  // create a circle\n  const circle1 = new Circle({\n    id: 'circle1',\n    style: {\n      cx: 100,\n      cy: 100,\n      r: 100,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n    },\n  });\n  canvas.appendChild(circle1);\n\n  // clone another circle\n  const circle2 = circle1.cloneNode();\n  circle2.id = 'circle2';\n  circle2.translate(50, 50);\n  canvas.appendChild(circle2);\n\n  const result = new Text({\n    interactive: false, // we don't want picking itself\n    style: {\n      x: 50,\n      y: 300,\n      fontSize: 32,\n      fill: 'black',\n    },\n  });\n  canvas.appendChild(result);\n\n  // represent the picking point\n  const pickingPoint = new Circle({\n    interactive: false, // we don't want picking itself\n    style: {\n      cx: 150,\n      cy: 150,\n      r: 20,\n      fill: '#F04864',\n    },\n  });\n  canvas.appendChild(pickingPoint);\n\n  canvas.addEventListener('click', (e) => {\n    pickingPoint.setLocalPosition(e.canvasX, e.canvasY);\n\n    pickingConfig.x = e.canvasX;\n    pickingConfig.y = e.canvasY;\n  });\n\n  // stats\n  const stats = new Stats();\n  stats.showPanel(0);\n  const $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  const $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n    if (stats) {\n      stats.update();\n    }\n  });\n\n  // GUI\n  const gui = new lil.GUI({ autoPlace: false });\n  $wrapper.appendChild(gui.domElement);\n  const rendererFolder = gui.addFolder('renderer');\n  const rendererConfig = {\n    renderer: 'canvas',\n  };\n  rendererFolder\n    .add(rendererConfig, 'renderer', ['canvas', 'webgl', 'svg'])\n    .onChange((renderer) => {\n      canvas.setRenderer(\n        renderer === 'canvas' ? canvasRenderer : renderer === 'webgl' ? webglRenderer : svgRenderer,\n      );\n    });\n  rendererFolder.open();\n\n  const pickingFolder = gui.addFolder('point for picking');\n  const pickingConfig = {\n    x: 150,\n    y: 150,\n    elementFromPoint: async () => {\n      const target = await canvas.document.elementFromPoint(pickingConfig.x, pickingConfig.y);\n\n      result.style.text = (target && target.id) || 'null';\n    },\n    elementsFromPoint: async () => {\n      const targets = await canvas.document.elementsFromPoint(pickingConfig.x, pickingConfig.y);\n\n      result.style.text = '[' + targets.map((target) => target.id).join(', ') + ']';\n    },\n  };\n  pickingFolder\n    .add(pickingConfig, 'x', -100, 400)\n    .onChange((x) => {\n      const [_, y] = pickingPoint.getLocalPosition();\n      pickingPoint.setLocalPosition(x, y);\n    })\n    .listen();\n  pickingFolder\n    .add(pickingConfig, 'y', -100, 400)\n    .onChange((y) => {\n      const [x, _] = pickingPoint.getLocalPosition();\n      pickingPoint.setLocalPosition(x, y);\n    })\n    .listen();\n  pickingFolder.add(pickingConfig, 'elementFromPoint').name('elementFromPoint');\n  pickingFolder.add(pickingConfig, 'elementsFromPoint').name('elementsFromPoint');\n  pickingFolder.open();\n\n  const circle1Folder = gui.addFolder('circle1');\n  const circle1Config = {\n    interactive: true,\n    visibility: 'visible',\n    opacity: 1,\n  };\n  circle1Folder.add(circle1Config, 'interactive').onChange((interactive) => {\n    circle1.interactive = interactive;\n  });\n  circle1Folder.add(circle1Config, 'visibility', ['visible', 'hidden']).onChange((visibility) => {\n    circle1.style.visibility = visibility;\n  });\n  circle1Folder.add(circle1Config, 'opacity', 0, 1).onChange((opacity) => {\n    circle1.style.opacity = opacity;\n  });\n  const circle2Folder = gui.addFolder('circle2');\n  const circle2Config = {\n    interactive: true,\n    visibility: 'visible',\n    opacity: 1,\n  };\n  circle2Folder.add(circle2Config, 'interactive').onChange((interactive) => {\n    circle2.interactive = interactive;\n  });\n  circle2Folder.add(circle2Config, 'visibility', ['visible', 'hidden']).onChange((visibility) => {\n    circle2.style.visibility = visibility;\n  });\n  circle2Folder.add(circle2Config, 'opacity', 0, 1).onChange((opacity) => {\n    circle2.style.opacity = opacity;\n  });\n});\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.elementFromPoint = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  /**\n   * Pick target by calling API instead of interactive events.\n   * DisplayObject's `interactive` & `visibility` will affect picking but not `opacity`.\n   *\n   * You can move the red picking point with mouse click or lil-gui.\n   *\n   * more informations @see /zh/docs/api/builtin-objects/document#elementsfrompoint\n   */\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    // create a circle\n    var circle1 = new _g.Circle({\n      id: 'circle1',\n      style: {\n        cx: 100,\n        cy: 100,\n        r: 100,\n        fill: '#1890FF',\n        stroke: '#F04864',\n        lineWidth: 4\n      }\n    });\n    canvas.appendChild(circle1); // clone another circle\n\n    var circle2 = circle1.cloneNode();\n    circle2.id = 'circle2';\n    circle2.translate(50, 50);\n    canvas.appendChild(circle2);\n    var result = new _g.Text({\n      interactive: false,\n      // we don't want picking itself\n      style: {\n        x: 50,\n        y: 300,\n        fontSize: 32,\n        fill: 'black'\n      }\n    });\n    canvas.appendChild(result); // represent the picking point\n\n    var pickingPoint = new _g.Circle({\n      interactive: false,\n      // we don't want picking itself\n      style: {\n        cx: 150,\n        cy: 150,\n        r: 20,\n        fill: '#F04864'\n      }\n    });\n    canvas.appendChild(pickingPoint);\n    canvas.addEventListener('click', function (e) {\n      pickingPoint.setLocalPosition(e.canvasX, e.canvasY);\n      pickingConfig.x = e.canvasX;\n      pickingConfig.y = e.canvasY;\n    }); // stats\n\n    var stats = new _stats.default();\n    stats.showPanel(0);\n    var $stats = stats.dom;\n    $stats.style.position = 'absolute';\n    $stats.style.left = '0px';\n    $stats.style.top = '0px';\n    var $wrapper = document.getElementById('container');\n    $wrapper.appendChild($stats);\n    canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n      if (stats) {\n        stats.update();\n      }\n    }); // GUI\n\n    var gui = new lil.GUI({\n      autoPlace: false\n    });\n    $wrapper.appendChild(gui.domElement);\n    var rendererFolder = gui.addFolder('renderer');\n    var rendererConfig = {\n      renderer: 'canvas'\n    };\n    rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'webgl', 'svg']).onChange(function (renderer) {\n      canvas.setRenderer(renderer === 'canvas' ? canvasRenderer : renderer === 'webgl' ? webglRenderer : svgRenderer);\n    });\n    rendererFolder.open();\n    var pickingFolder = gui.addFolder('point for picking');\n    var pickingConfig = {\n      x: 150,\n      y: 150,\n      elementFromPoint: async function elementFromPoint() {\n        var target = await canvas.document.elementFromPoint(pickingConfig.x, pickingConfig.y);\n        result.style.text = target && target.id || 'null';\n      },\n      elementsFromPoint: async function elementsFromPoint() {\n        var targets = await canvas.document.elementsFromPoint(pickingConfig.x, pickingConfig.y);\n        result.style.text = '[' + targets.map(function (target) {\n          return target.id;\n        }).join(', ') + ']';\n      }\n    };\n    pickingFolder.add(pickingConfig, 'x', -100, 400).onChange(function (x) {\n      var _pickingPoint$getLoca = pickingPoint.getLocalPosition(),\n          _pickingPoint$getLoca2 = _slicedToArray(_pickingPoint$getLoca, 2),\n          _ = _pickingPoint$getLoca2[0],\n          y = _pickingPoint$getLoca2[1];\n\n      pickingPoint.setLocalPosition(x, y);\n    }).listen();\n    pickingFolder.add(pickingConfig, 'y', -100, 400).onChange(function (y) {\n      var _pickingPoint$getLoca3 = pickingPoint.getLocalPosition(),\n          _pickingPoint$getLoca4 = _slicedToArray(_pickingPoint$getLoca3, 2),\n          x = _pickingPoint$getLoca4[0],\n          _ = _pickingPoint$getLoca4[1];\n\n      pickingPoint.setLocalPosition(x, y);\n    }).listen();\n    pickingFolder.add(pickingConfig, 'elementFromPoint').name('elementFromPoint');\n    pickingFolder.add(pickingConfig, 'elementsFromPoint').name('elementsFromPoint');\n    pickingFolder.open();\n    var circle1Folder = gui.addFolder('circle1');\n    var circle1Config = {\n      interactive: true,\n      visibility: 'visible',\n      opacity: 1\n    };\n    circle1Folder.add(circle1Config, 'interactive').onChange(function (interactive) {\n      circle1.interactive = interactive;\n    });\n    circle1Folder.add(circle1Config, 'visibility', ['visible', 'hidden']).onChange(function (visibility) {\n      circle1.style.visibility = visibility;\n    });\n    circle1Folder.add(circle1Config, 'opacity', 0, 1).onChange(function (opacity) {\n      circle1.style.opacity = opacity;\n    });\n    var circle2Folder = gui.addFolder('circle2');\n    var circle2Config = {\n      interactive: true,\n      visibility: 'visible',\n      opacity: 1\n    };\n    circle2Folder.add(circle2Config, 'interactive').onChange(function (interactive) {\n      circle2.interactive = interactive;\n    });\n    circle2Folder.add(circle2Config, 'visibility', ['visible', 'hidden']).onChange(function (visibility) {\n      circle2.style.visibility = visibility;\n    });\n    circle2Folder.add(circle2Config, 'opacity', 0, 1).onChange(function (opacity) {\n      circle2.style.opacity = opacity;\n    });\n  });\n});"},{"relativePath":"animation/demo/animations.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/animation/demo/animations.js","order":12,"filename":"animations.js","title":{"zh":"常见的动画效果","en":"Useful animations"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*WRp0SbVfgjUAAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent, Circle, Group, Text } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\n/**\n * ported from https://github.com/wellyshen/use-web-animations/tree/master/src/animations\n */\nconst transformOrigin = 'center bottom';\nconst effects = [\n  () => ({\n    name: 'backInDown',\n    keyframes: [\n      { transform: 'translateY(-1200px) scale(0.7)', opacity: 0.7, offset: 0 },\n      { transform: 'translateY(0px) scale(0.7)', opacity: 0.7, offset: 0.8 },\n      { transform: 'translateY(0px)', opacity: 1, offset: 1 },\n    ],\n    animationOptions: { duration: 1000, fill: 'both' },\n  }),\n  () => ({\n    name: 'fadeIn',\n    keyframes: [{ opacity: 0 }, { opacity: 1 }],\n    animationOptions: { duration: 1000, fill: 'both' },\n  }),\n  () => ({\n    name: 'fadeInBottomLeft',\n    keyframes: [\n      { transform: 'translate3d(-100%, 100%, 0)', opacity: 0 },\n      { transform: 'translate3d(0, 0, 0)', opacity: 1 },\n    ],\n    animationOptions: { duration: 1000, fill: 'both' },\n  }),\n  () => ({\n    name: 'fadeInBottomRight',\n    keyframes: [\n      { transform: 'translate3d(100%, 100%, 0)', opacity: 0 },\n      { transform: 'translate3d(0, 0, 0)', opacity: 1 },\n    ],\n    animationOptions: { duration: 1000, fill: 'both' },\n  }),\n  () => ({\n    name: 'fadeOutTopRight',\n    keyframes: [\n      { transform: 'translate3d(0, 0, 0)', opacity: 1 },\n      { transform: 'translate3d(100%, -100%, 0)', opacity: 0 },\n    ],\n    animationOptions: { duration: 1000, fill: 'both' },\n  }),\n  () => {\n    const easing1 = 'cubic-bezier(0.215, 0.61, 0.355, 1)';\n    const easing2 = 'cubic-bezier(0.755, 0.05, 0.855, 0.06)';\n    const frame1 = {\n      transform: 'translate3d(0, 0, 0) scaleY(1)',\n      easing: easing1,\n      transformOrigin,\n    };\n    const frame2 = {\n      transform: 'translate3d(0, -30px, 0) scaleY(1.1)',\n      easing: easing2,\n      transformOrigin,\n    };\n    return {\n      name: 'bounce',\n      keyframes: [\n        { ...frame1, offset: 0 },\n        { ...frame1, offset: 0.2 },\n        { ...frame2, offset: 0.4 },\n        { ...frame2, offset: 0.43 },\n        { ...frame1, offset: 0.53 },\n        {\n          transform: 'translate3d(0, -15px, 0) scaleY(1.05)',\n          easing: easing2,\n          transformOrigin,\n          offset: 0.7,\n        },\n        {\n          transform: 'translate3d(0, 0, 0) scaleY(0.95)',\n          easing: easing1,\n          transformOrigin,\n          offset: 0.8,\n        },\n        {\n          transform: 'translate3d(0, -4px, 0) scaleY(1.02)',\n          transformOrigin,\n          offset: 0.9,\n        },\n        { ...frame1, offset: 1 },\n      ],\n      animationOptions: { duration: 1000, fill: 'both' },\n    };\n  },\n  () => {\n    const easing = 'cubic-bezier(0.215, 0.61, 0.355, 1)';\n    return {\n      name: 'bounceIn',\n      keyframes: [\n        { transform: 'scale3d(0.3, 0.3, 0.3)', opacity: 0, easing, offset: 0 },\n        { transform: 'scale3d(1.1, 1.1, 1.1)', easing, offset: 0.2 },\n        { transform: 'scale3d(0.9, 0.9, 0.9)', easing, offset: 0.4 },\n        { transform: 'scale3d(1.03, 1.03, 1.03)', opacity: 1, easing, offset: 0.6 },\n        { transform: 'scale3d(0.97, 0.97, 0.97)', easing, offset: 0.8 },\n        { transform: 'scale3d(1, 1, 1)', opacity: 1, easing, offset: 1 },\n      ],\n      animationOptions: { duration: 750, fill: 'both' },\n    };\n  },\n  () => {\n    const frame = { transform: 'scale3d(1.1, 1.1, 1.1)', opacity: 1 };\n    return {\n      name: 'bounceOut',\n      keyframes: [\n        { transform: 'none', opacity: 1, offset: 0 },\n        { transform: 'scale3d(0.9, 0.9, 0.9)', offset: 0.2 },\n        { ...frame, offset: 0.5 },\n        { ...frame, offset: 0.55 },\n        { transform: 'scale3d(0.3, 0.3, 0.3)', opacity: 0, offset: 1 },\n      ],\n      animationOptions: { duration: 750, fill: 'both' },\n    };\n  },\n  () => {\n    const frame1 = { opacity: 1 };\n    const frame2 = { opacity: 0 };\n    return {\n      name: 'flash',\n      keyframes: [\n        { ...frame1, offset: 0 },\n        { ...frame2, offset: 0.25 },\n        { ...frame1, offset: 0.5 },\n        { ...frame2, offset: 0.75 },\n        { ...frame1, offset: 1 },\n      ],\n      animationOptions: { duration: 1000, fill: 'both' },\n    };\n  },\n  () => ({\n    name: 'headShake',\n    keyframes: [\n      { transform: 'translateX(0)', offset: 0 },\n      { transform: 'translateX(-6px) rotateY(-9deg)', offset: 0.065 },\n      { transform: 'translateX(5px) rotateY(7deg)', offset: 0.185 },\n      { transform: 'translateX(-3px) rotateY(-5deg)', offset: 0.315 },\n      { transform: 'translateX(2px) rotateY(3deg)', offset: 0.435 },\n      { transform: 'translateX(0)', offset: 0.5 },\n      { transform: 'none', offset: 1 },\n    ],\n    animationOptions: { duration: 1000, fill: 'both', easing: 'ease-in-out' },\n  }),\n  () => {\n    const frame1 = { transform: 'scale(1)' };\n    const frame2 = { transform: 'scale(1.3)' };\n    return {\n      name: 'heartBeat',\n      keyframes: [\n        { ...frame1, offset: 0 },\n        { ...frame2, offset: 0.14 },\n        { ...frame1, offset: 0.28 },\n        { ...frame2, offset: 0.42 },\n        { ...frame1, offset: 0.7 },\n        { transform: 'none', offset: 1 },\n      ],\n      animationOptions: { duration: 1300, fill: 'both', easing: 'ease-in-out' },\n    };\n  },\n  () => ({\n    name: 'swing',\n    keyframes: [\n      { transform: 'rotateZ(0deg)', transformOrigin, offset: 0 },\n      { transform: 'rotateZ(15deg)', transformOrigin, offset: 0.2 },\n      { transform: 'rotateZ(-10deg)', transformOrigin, offset: 0.4 },\n      { transform: 'rotateZ(5deg)', transformOrigin, offset: 0.6 },\n      { transform: 'rotateZ(-5deg)', transformOrigin, offset: 0.8 },\n      { transform: 'rotateZ(0deg)', transformOrigin, offset: 1 },\n    ],\n    animationOptions: { duration: 1000, fill: 'both' },\n  }),\n  () => ({\n    name: 'skewX',\n    keyframes: [\n      { transform: 'skewX(0deg)', transformOrigin, offset: 0 },\n      { transform: 'skewX(30deg)', transformOrigin, offset: 0.25 },\n      { transform: 'skewX(-30deg)', transformOrigin, offset: 0.75 },\n      { transform: 'skewX(0deg)', transformOrigin, offset: 1 },\n    ],\n    animationOptions: { duration: 1000, fill: 'both' },\n  }),\n  () => ({\n    name: 'skewY',\n    keyframes: [\n      { transform: 'skewY(0deg)', transformOrigin, offset: 0 },\n      { transform: 'skewY(30deg)', transformOrigin, offset: 0.25 },\n      { transform: 'skewY(-30deg)', transformOrigin, offset: 0.75 },\n      { transform: 'skewY(0deg)', transformOrigin, offset: 1 },\n    ],\n    animationOptions: { duration: 1000, fill: 'both' },\n  }),\n  () => ({\n    name: 'flipX',\n    keyframes: [\n      { transform: 'scaleX(1)', transformOrigin },\n      { transform: 'scaleX(-1)', transformOrigin },\n      { transform: 'scaleX(1)', transformOrigin },\n    ],\n    animationOptions: { duration: 1000, fill: 'both' },\n  }),\n  () => ({\n    name: 'flipY',\n    keyframes: [\n      { transform: 'scaleY(1)', transformOrigin: 'center' },\n      { transform: 'scaleY(-1)', transformOrigin: 'center' },\n      { transform: 'scaleY(1)', transformOrigin: 'center' },\n    ],\n    animationOptions: { duration: 1000, fill: 'both' },\n  }),\n  () => ({\n    name: 'matrix interpolation',\n    keyframes: [\n      { transform: 'skewY(30deg)', transformOrigin: 'center' },\n      { transform: 'matrix(0.2,0,0,0.2,-50,0)', transformOrigin: 'center' },\n    ],\n    animationOptions: { duration: 1000, fill: 'both' },\n  }),\n];\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  effects.forEach((f, i) => {\n    const { name, keyframes, animationOptions } = f();\n    const row = Math.floor(i / 4);\n    const group = new Group();\n    const circle = new Circle({\n      style: {\n        r: 50,\n        fill: '#1890FF',\n        stroke: '#F04864',\n        lineWidth: 4,\n      },\n    });\n    const text = new Text({\n      style: {\n        text: name,\n        fontSize: 10,\n        fill: '#000',\n        textAlign: 'center',\n        textBaseline: 'middle',\n      },\n    });\n    circle.appendChild(text);\n    group.appendChild(circle);\n    canvas.appendChild(group);\n\n    group.setPosition(50 + 150 * (i % 4), 50 + 120 * row);\n\n    circle.animate(keyframes, {\n      ...animationOptions,\n      iterations: Infinity,\n    });\n  });\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.animations = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  /**\n   * ported from https://github.com/wellyshen/use-web-animations/tree/master/src/animations\n   */\n\n  var transformOrigin = 'center bottom';\n  var effects = [function () {\n    return {\n      name: 'backInDown',\n      keyframes: [{\n        transform: 'translateY(-1200px) scale(0.7)',\n        opacity: 0.7,\n        offset: 0\n      }, {\n        transform: 'translateY(0px) scale(0.7)',\n        opacity: 0.7,\n        offset: 0.8\n      }, {\n        transform: 'translateY(0px)',\n        opacity: 1,\n        offset: 1\n      }],\n      animationOptions: {\n        duration: 1000,\n        fill: 'both'\n      }\n    };\n  }, function () {\n    return {\n      name: 'fadeIn',\n      keyframes: [{\n        opacity: 0\n      }, {\n        opacity: 1\n      }],\n      animationOptions: {\n        duration: 1000,\n        fill: 'both'\n      }\n    };\n  }, function () {\n    return {\n      name: 'fadeInBottomLeft',\n      keyframes: [{\n        transform: 'translate3d(-100%, 100%, 0)',\n        opacity: 0\n      }, {\n        transform: 'translate3d(0, 0, 0)',\n        opacity: 1\n      }],\n      animationOptions: {\n        duration: 1000,\n        fill: 'both'\n      }\n    };\n  }, function () {\n    return {\n      name: 'fadeInBottomRight',\n      keyframes: [{\n        transform: 'translate3d(100%, 100%, 0)',\n        opacity: 0\n      }, {\n        transform: 'translate3d(0, 0, 0)',\n        opacity: 1\n      }],\n      animationOptions: {\n        duration: 1000,\n        fill: 'both'\n      }\n    };\n  }, function () {\n    return {\n      name: 'fadeOutTopRight',\n      keyframes: [{\n        transform: 'translate3d(0, 0, 0)',\n        opacity: 1\n      }, {\n        transform: 'translate3d(100%, -100%, 0)',\n        opacity: 0\n      }],\n      animationOptions: {\n        duration: 1000,\n        fill: 'both'\n      }\n    };\n  }, function () {\n    var easing1 = 'cubic-bezier(0.215, 0.61, 0.355, 1)';\n    var easing2 = 'cubic-bezier(0.755, 0.05, 0.855, 0.06)';\n    var frame1 = {\n      transform: 'translate3d(0, 0, 0) scaleY(1)',\n      easing: easing1,\n      transformOrigin: transformOrigin\n    };\n    var frame2 = {\n      transform: 'translate3d(0, -30px, 0) scaleY(1.1)',\n      easing: easing2,\n      transformOrigin: transformOrigin\n    };\n    return {\n      name: 'bounce',\n      keyframes: [{ ...frame1,\n        offset: 0\n      }, { ...frame1,\n        offset: 0.2\n      }, { ...frame2,\n        offset: 0.4\n      }, { ...frame2,\n        offset: 0.43\n      }, { ...frame1,\n        offset: 0.53\n      }, {\n        transform: 'translate3d(0, -15px, 0) scaleY(1.05)',\n        easing: easing2,\n        transformOrigin: transformOrigin,\n        offset: 0.7\n      }, {\n        transform: 'translate3d(0, 0, 0) scaleY(0.95)',\n        easing: easing1,\n        transformOrigin: transformOrigin,\n        offset: 0.8\n      }, {\n        transform: 'translate3d(0, -4px, 0) scaleY(1.02)',\n        transformOrigin: transformOrigin,\n        offset: 0.9\n      }, { ...frame1,\n        offset: 1\n      }],\n      animationOptions: {\n        duration: 1000,\n        fill: 'both'\n      }\n    };\n  }, function () {\n    var easing = 'cubic-bezier(0.215, 0.61, 0.355, 1)';\n    return {\n      name: 'bounceIn',\n      keyframes: [{\n        transform: 'scale3d(0.3, 0.3, 0.3)',\n        opacity: 0,\n        easing: easing,\n        offset: 0\n      }, {\n        transform: 'scale3d(1.1, 1.1, 1.1)',\n        easing: easing,\n        offset: 0.2\n      }, {\n        transform: 'scale3d(0.9, 0.9, 0.9)',\n        easing: easing,\n        offset: 0.4\n      }, {\n        transform: 'scale3d(1.03, 1.03, 1.03)',\n        opacity: 1,\n        easing: easing,\n        offset: 0.6\n      }, {\n        transform: 'scale3d(0.97, 0.97, 0.97)',\n        easing: easing,\n        offset: 0.8\n      }, {\n        transform: 'scale3d(1, 1, 1)',\n        opacity: 1,\n        easing: easing,\n        offset: 1\n      }],\n      animationOptions: {\n        duration: 750,\n        fill: 'both'\n      }\n    };\n  }, function () {\n    var frame = {\n      transform: 'scale3d(1.1, 1.1, 1.1)',\n      opacity: 1\n    };\n    return {\n      name: 'bounceOut',\n      keyframes: [{\n        transform: 'none',\n        opacity: 1,\n        offset: 0\n      }, {\n        transform: 'scale3d(0.9, 0.9, 0.9)',\n        offset: 0.2\n      }, { ...frame,\n        offset: 0.5\n      }, { ...frame,\n        offset: 0.55\n      }, {\n        transform: 'scale3d(0.3, 0.3, 0.3)',\n        opacity: 0,\n        offset: 1\n      }],\n      animationOptions: {\n        duration: 750,\n        fill: 'both'\n      }\n    };\n  }, function () {\n    var frame1 = {\n      opacity: 1\n    };\n    var frame2 = {\n      opacity: 0\n    };\n    return {\n      name: 'flash',\n      keyframes: [{ ...frame1,\n        offset: 0\n      }, { ...frame2,\n        offset: 0.25\n      }, { ...frame1,\n        offset: 0.5\n      }, { ...frame2,\n        offset: 0.75\n      }, { ...frame1,\n        offset: 1\n      }],\n      animationOptions: {\n        duration: 1000,\n        fill: 'both'\n      }\n    };\n  }, function () {\n    return {\n      name: 'headShake',\n      keyframes: [{\n        transform: 'translateX(0)',\n        offset: 0\n      }, {\n        transform: 'translateX(-6px) rotateY(-9deg)',\n        offset: 0.065\n      }, {\n        transform: 'translateX(5px) rotateY(7deg)',\n        offset: 0.185\n      }, {\n        transform: 'translateX(-3px) rotateY(-5deg)',\n        offset: 0.315\n      }, {\n        transform: 'translateX(2px) rotateY(3deg)',\n        offset: 0.435\n      }, {\n        transform: 'translateX(0)',\n        offset: 0.5\n      }, {\n        transform: 'none',\n        offset: 1\n      }],\n      animationOptions: {\n        duration: 1000,\n        fill: 'both',\n        easing: 'ease-in-out'\n      }\n    };\n  }, function () {\n    var frame1 = {\n      transform: 'scale(1)'\n    };\n    var frame2 = {\n      transform: 'scale(1.3)'\n    };\n    return {\n      name: 'heartBeat',\n      keyframes: [{ ...frame1,\n        offset: 0\n      }, { ...frame2,\n        offset: 0.14\n      }, { ...frame1,\n        offset: 0.28\n      }, { ...frame2,\n        offset: 0.42\n      }, { ...frame1,\n        offset: 0.7\n      }, {\n        transform: 'none',\n        offset: 1\n      }],\n      animationOptions: {\n        duration: 1300,\n        fill: 'both',\n        easing: 'ease-in-out'\n      }\n    };\n  }, function () {\n    return {\n      name: 'swing',\n      keyframes: [{\n        transform: 'rotateZ(0deg)',\n        transformOrigin: transformOrigin,\n        offset: 0\n      }, {\n        transform: 'rotateZ(15deg)',\n        transformOrigin: transformOrigin,\n        offset: 0.2\n      }, {\n        transform: 'rotateZ(-10deg)',\n        transformOrigin: transformOrigin,\n        offset: 0.4\n      }, {\n        transform: 'rotateZ(5deg)',\n        transformOrigin: transformOrigin,\n        offset: 0.6\n      }, {\n        transform: 'rotateZ(-5deg)',\n        transformOrigin: transformOrigin,\n        offset: 0.8\n      }, {\n        transform: 'rotateZ(0deg)',\n        transformOrigin: transformOrigin,\n        offset: 1\n      }],\n      animationOptions: {\n        duration: 1000,\n        fill: 'both'\n      }\n    };\n  }, function () {\n    return {\n      name: 'skewX',\n      keyframes: [{\n        transform: 'skewX(0deg)',\n        transformOrigin: transformOrigin,\n        offset: 0\n      }, {\n        transform: 'skewX(30deg)',\n        transformOrigin: transformOrigin,\n        offset: 0.25\n      }, {\n        transform: 'skewX(-30deg)',\n        transformOrigin: transformOrigin,\n        offset: 0.75\n      }, {\n        transform: 'skewX(0deg)',\n        transformOrigin: transformOrigin,\n        offset: 1\n      }],\n      animationOptions: {\n        duration: 1000,\n        fill: 'both'\n      }\n    };\n  }, function () {\n    return {\n      name: 'skewY',\n      keyframes: [{\n        transform: 'skewY(0deg)',\n        transformOrigin: transformOrigin,\n        offset: 0\n      }, {\n        transform: 'skewY(30deg)',\n        transformOrigin: transformOrigin,\n        offset: 0.25\n      }, {\n        transform: 'skewY(-30deg)',\n        transformOrigin: transformOrigin,\n        offset: 0.75\n      }, {\n        transform: 'skewY(0deg)',\n        transformOrigin: transformOrigin,\n        offset: 1\n      }],\n      animationOptions: {\n        duration: 1000,\n        fill: 'both'\n      }\n    };\n  }, function () {\n    return {\n      name: 'flipX',\n      keyframes: [{\n        transform: 'scaleX(1)',\n        transformOrigin: transformOrigin\n      }, {\n        transform: 'scaleX(-1)',\n        transformOrigin: transformOrigin\n      }, {\n        transform: 'scaleX(1)',\n        transformOrigin: transformOrigin\n      }],\n      animationOptions: {\n        duration: 1000,\n        fill: 'both'\n      }\n    };\n  }, function () {\n    return {\n      name: 'flipY',\n      keyframes: [{\n        transform: 'scaleY(1)',\n        transformOrigin: 'center'\n      }, {\n        transform: 'scaleY(-1)',\n        transformOrigin: 'center'\n      }, {\n        transform: 'scaleY(1)',\n        transformOrigin: 'center'\n      }],\n      animationOptions: {\n        duration: 1000,\n        fill: 'both'\n      }\n    };\n  }, function () {\n    return {\n      name: 'matrix interpolation',\n      keyframes: [{\n        transform: 'skewY(30deg)',\n        transformOrigin: 'center'\n      }, {\n        transform: 'matrix(0.2,0,0,0.2,-50,0)',\n        transformOrigin: 'center'\n      }],\n      animationOptions: {\n        duration: 1000,\n        fill: 'both'\n      }\n    };\n  }];\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    effects.forEach(function (f, i) {\n      var _f = f(),\n          name = _f.name,\n          keyframes = _f.keyframes,\n          animationOptions = _f.animationOptions;\n\n      var row = Math.floor(i / 4);\n      var group = new _g.Group();\n      var circle = new _g.Circle({\n        style: {\n          r: 50,\n          fill: '#1890FF',\n          stroke: '#F04864',\n          lineWidth: 4\n        }\n      });\n      var text = new _g.Text({\n        style: {\n          text: name,\n          fontSize: 10,\n          fill: '#000',\n          textAlign: 'center',\n          textBaseline: 'middle'\n        }\n      });\n      circle.appendChild(text);\n      group.appendChild(circle);\n      canvas.appendChild(group);\n      group.setPosition(50 + 150 * (i % 4), 50 + 120 * row);\n      circle.animate(keyframes, { ...animationOptions,\n        iterations: Infinity\n      });\n    });\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n});"},{"relativePath":"animation/demo/delay.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/animation/demo/delay.js","order":2,"filename":"delay.js","title":{"zh":"使用 delay 属性","en":"Use delay"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*u4RCSrwBbogAAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent, Rect } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\nconst rect = new Rect({\n  style: {\n    x: 100,\n    y: 200,\n    width: 50,\n    height: 100,\n    fill: '#1890FF',\n  },\n});\nconst rect2 = new Rect({\n  style: {\n    x: 200,\n    y: 200,\n    width: 50,\n    height: 100,\n    fill: '#1890FF',\n  },\n});\nconst rect3 = new Rect({\n  style: {\n    x: 300,\n    y: 200,\n    width: 50,\n    height: 100,\n    fill: '#1890FF',\n  },\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  canvas.appendChild(rect);\n  canvas.appendChild(rect2);\n  canvas.appendChild(rect3);\n\n  rect.animate([{ transform: 'scale(0.0001, 1)' }, { transform: 'scale(1, 1)' }], {\n    duration: 1000,\n    //   delay: 0,\n    fill: 'both',\n  });\n  rect2.animate([{ transform: 'scale(0.0001, 1)' }, { transform: 'scaleY(1)' }], {\n    duration: 1000,\n    delay: 1000,\n    fill: 'both',\n  });\n  rect3.animate([{ transform: 'scale(0.0001, 1)' }, { transform: 'scale(1, 1)' }], {\n    duration: 1000,\n    delay: 2000,\n    fill: 'both',\n  });\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.delay = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  var rect = new _g.Rect({\n    style: {\n      x: 100,\n      y: 200,\n      width: 50,\n      height: 100,\n      fill: '#1890FF'\n    }\n  });\n  var rect2 = new _g.Rect({\n    style: {\n      x: 200,\n      y: 200,\n      width: 50,\n      height: 100,\n      fill: '#1890FF'\n    }\n  });\n  var rect3 = new _g.Rect({\n    style: {\n      x: 300,\n      y: 200,\n      width: 50,\n      height: 100,\n      fill: '#1890FF'\n    }\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    canvas.appendChild(rect);\n    canvas.appendChild(rect2);\n    canvas.appendChild(rect3);\n    rect.animate([{\n      transform: 'scale(0.0001, 1)'\n    }, {\n      transform: 'scale(1, 1)'\n    }], {\n      duration: 1000,\n      //   delay: 0,\n      fill: 'both'\n    });\n    rect2.animate([{\n      transform: 'scale(0.0001, 1)'\n    }, {\n      transform: 'scaleY(1)'\n    }], {\n      duration: 1000,\n      delay: 1000,\n      fill: 'both'\n    });\n    rect3.animate([{\n      transform: 'scale(0.0001, 1)'\n    }, {\n      transform: 'scale(1, 1)'\n    }], {\n      duration: 1000,\n      delay: 2000,\n      fill: 'both'\n    });\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n});"},{"relativePath":"animation/demo/current-time.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/animation/demo/current-time.js","order":3,"filename":"current-time.js","title":{"zh":"使用 currentTime 属性","en":"Use currentTime"},"source":"import { Canvas, CanvasEvent, Circle } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\nconst circle = new Circle({\n  style: {\n    cx: 200,\n    cy: 200,\n    r: 60,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 4,\n  },\n});\n\nlet animation;\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  canvas.appendChild(circle);\n\n  animation = circle.animate([{ transform: 'translateX(0)' }, { transform: 'translateX(200px)' }], {\n    duration: 2500,\n    easing: 'cubic-bezier(0.250, 0.460, 0.450, 0.940)',\n    iterations: Infinity,\n    direction: 'alternate',\n  });\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n  currentTime: 0,\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.add(rendererConfig, 'currentTime', 0, 2500).onChange((currentTime) => {\n  animation.currentTime = currentTime;\n});\nrendererFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.currentTime = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  var circle = new _g.Circle({\n    style: {\n      cx: 200,\n      cy: 200,\n      r: 60,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4\n    }\n  });\n  var animation;\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    canvas.appendChild(circle);\n    animation = circle.animate([{\n      transform: 'translateX(0)'\n    }, {\n      transform: 'translateX(200px)'\n    }], {\n      duration: 2500,\n      easing: 'cubic-bezier(0.250, 0.460, 0.450, 0.940)',\n      iterations: Infinity,\n      direction: 'alternate'\n    });\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas',\n    currentTime: 0\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.add(rendererConfig, 'currentTime', 0, 2500).onChange(function (currentTime) {\n    animation.currentTime = currentTime;\n  });\n  rendererFolder.open();\n});"},{"relativePath":"animation/demo/line-dash.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/animation/demo/line-dash.js","order":7,"filename":"line-dash.js","title":{"zh":"笔迹动画","en":"Line dash"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*8NOsQoWLm2IAAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent, Path } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\nconst path = new Path({\n  style: {\n    stroke: 'black',\n    path:\n      'M 100,300' +\n      'l 50,-25' +\n      'a25,25 -30 0,1 50,-25' +\n      'l 50,-25' +\n      'a25,50 -30 0,1 50,-25' +\n      'l 50,-25' +\n      'a25,75 -30 0,1 50,-25' +\n      'l 50,-25' +\n      'a25,100 -30 0,1 50,-25' +\n      'l 50,-25' +\n      'l 0, 200,' +\n      'z',\n  },\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  canvas.appendChild(path);\n\n  const length = path.getTotalLength();\n  path.animate([{ lineDash: [0, length] }, { lineDash: [length, 0] }], {\n    duration: 3500,\n    easing: 'cubic-bezier(0.250, 0.460, 0.450, 0.940)',\n    iterations: Infinity,\n    direction: 'alternate',\n  });\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.lineDash = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  var path = new _g.Path({\n    style: {\n      stroke: 'black',\n      path: 'M 100,300' + 'l 50,-25' + 'a25,25 -30 0,1 50,-25' + 'l 50,-25' + 'a25,50 -30 0,1 50,-25' + 'l 50,-25' + 'a25,75 -30 0,1 50,-25' + 'l 50,-25' + 'a25,100 -30 0,1 50,-25' + 'l 50,-25' + 'l 0, 200,' + 'z'\n    }\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    canvas.appendChild(path);\n    var length = path.getTotalLength();\n    path.animate([{\n      lineDash: [0, length]\n    }, {\n      lineDash: [length, 0]\n    }], {\n      duration: 3500,\n      easing: 'cubic-bezier(0.250, 0.460, 0.450, 0.940)',\n      iterations: Infinity,\n      direction: 'alternate'\n    });\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n});"},{"relativePath":"animation/demo/easing.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/animation/demo/easing.js","order":0,"filename":"easing.js","title":{"zh":"缓动函数","en":"Easing"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*9y3_TIoOUPMAAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent, Image } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n/**\n * ported from https://animista.net/play/entrances/scale-in\n */\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\nconst image = new Image({\n  style: {\n    x: 200,\n    y: 100,\n    width: 200,\n    height: 200,\n    transformOrigin: 'center',\n    img: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ',\n  },\n});\n\nlet animation;\nlet timing;\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  canvas.appendChild(image);\n\n  animation = image.animate([{ transform: 'rotate(0)' }, { transform: 'rotate(360deg)' }], {\n    duration: 1500,\n    iterations: Infinity,\n    // delay: 3000,\n    // direction: 'alternate',\n  });\n  timing = animation.effect.getTiming();\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n\nconst animationFolder = gui.addFolder('animation');\nconst animationConfig = {\n  easing: 'linear',\n  playbackRate: 1,\n};\nanimationFolder\n  .add(animationConfig, 'easing', [\n    'linear',\n    'ease',\n    'ease-in',\n    'ease-out',\n    'ease-in-out',\n    'ease-out-in',\n    'ease-in-quad',\n    'ease-out-quad',\n    'ease-in-out-quad',\n    'ease-out-in-quad',\n\n    'ease-in-cubic',\n    'ease-out-cubic',\n    'ease-in-out-cubic',\n    'ease-out-in-cubic',\n\n    'ease-in-quart',\n    'ease-out-quart',\n    'ease-in-out-quart',\n    'ease-out-in-quart',\n\n    'ease-in-quint',\n    'ease-out-quint',\n    'ease-in-out-quint',\n    'ease-out-in-quint',\n\n    'ease-in-expo',\n    'ease-out-expo',\n    'ease-in-out-expo',\n    'ease-out-in-expo',\n\n    'ease-in-sine',\n    'ease-out-sine',\n    'ease-in-out-sine',\n    'ease-out-in-sine',\n\n    'ease-in-circ',\n    'ease-out-circ',\n    'ease-in-out-circ',\n    'ease-out-in-circ',\n\n    'ease-in-back',\n    'ease-out-back',\n    'ease-in-out-back',\n    'ease-out-in-back',\n\n    'ease-in-bounce',\n    'ease-out-bounce',\n    'ease-in-out-bounce',\n    'ease-out-in-bounce',\n\n    'ease-in-elastic',\n    'ease-out-elastic',\n    'ease-in-out-elastic',\n    'ease-out-in-elastic',\n\n    'cubic-bezier(0.47, 0, 0.745, 0.715)',\n\n    'spring',\n    'spring-in',\n    'spring-out',\n    'spring-in-out',\n    'spring-out-in',\n\n    'custom',\n  ])\n  .onChange((type) => {\n    if (type !== 'custom') {\n      timing.easing = type;\n    } else {\n      const count = 4;\n      const pos = 0;\n      timing.easingFunction = (x) => {\n        if (x >= 1) {\n          return 1;\n        }\n        const stepSize = 1 / count;\n        x += pos * stepSize;\n        return x - (x % stepSize);\n      };\n    }\n  });\nanimationFolder.add(animationConfig, 'playbackRate', 0, 5).onChange((playbackRate) => {\n  animation.updatePlaybackRate(playbackRate);\n});\nanimationFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.easing = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * ported from https://animista.net/play/entrances/scale-in\n   */\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  var image = new _g.Image({\n    style: {\n      x: 200,\n      y: 100,\n      width: 200,\n      height: 200,\n      transformOrigin: 'center',\n      img: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ'\n    }\n  });\n  var animation;\n  var timing;\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    canvas.appendChild(image);\n    animation = image.animate([{\n      transform: 'rotate(0)'\n    }, {\n      transform: 'rotate(360deg)'\n    }], {\n      duration: 1500,\n      iterations: Infinity // delay: 3000,\n      // direction: 'alternate',\n\n    });\n    timing = animation.effect.getTiming();\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n  var animationFolder = gui.addFolder('animation');\n  var animationConfig = {\n    easing: 'linear',\n    playbackRate: 1\n  };\n  animationFolder.add(animationConfig, 'easing', ['linear', 'ease', 'ease-in', 'ease-out', 'ease-in-out', 'ease-out-in', 'ease-in-quad', 'ease-out-quad', 'ease-in-out-quad', 'ease-out-in-quad', 'ease-in-cubic', 'ease-out-cubic', 'ease-in-out-cubic', 'ease-out-in-cubic', 'ease-in-quart', 'ease-out-quart', 'ease-in-out-quart', 'ease-out-in-quart', 'ease-in-quint', 'ease-out-quint', 'ease-in-out-quint', 'ease-out-in-quint', 'ease-in-expo', 'ease-out-expo', 'ease-in-out-expo', 'ease-out-in-expo', 'ease-in-sine', 'ease-out-sine', 'ease-in-out-sine', 'ease-out-in-sine', 'ease-in-circ', 'ease-out-circ', 'ease-in-out-circ', 'ease-out-in-circ', 'ease-in-back', 'ease-out-back', 'ease-in-out-back', 'ease-out-in-back', 'ease-in-bounce', 'ease-out-bounce', 'ease-in-out-bounce', 'ease-out-in-bounce', 'ease-in-elastic', 'ease-out-elastic', 'ease-in-out-elastic', 'ease-out-in-elastic', 'cubic-bezier(0.47, 0, 0.745, 0.715)', 'spring', 'spring-in', 'spring-out', 'spring-in-out', 'spring-out-in', 'custom']).onChange(function (type) {\n    if (type !== 'custom') {\n      timing.easing = type;\n    } else {\n      var count = 4;\n      var pos = 0;\n\n      timing.easingFunction = function (x) {\n        if (x >= 1) {\n          return 1;\n        }\n\n        var stepSize = 1 / count;\n        x += pos * stepSize;\n        return x - x % stepSize;\n      };\n    }\n  });\n  animationFolder.add(animationConfig, 'playbackRate', 0, 5).onChange(function (playbackRate) {\n    animation.updatePlaybackRate(playbackRate);\n  });\n  animationFolder.open();\n});"},{"relativePath":"animation/demo/marching-ants.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/animation/demo/marching-ants.js","order":6,"filename":"marching-ants.js","title":{"zh":"蚂蚁线","en":"Marching ants"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*TTyTTISXlKAAAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent, Circle, Rect } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\nconst circle = new Circle({\n  style: {\n    cx: 200,\n    cy: 200,\n    r: 60,\n    stroke: '#F04864',\n    lineWidth: 4,\n    lineDash: [10, 10],\n  },\n});\n\nconst rect = new Rect({\n  style: {\n    x: 300,\n    y: 100,\n    width: 200,\n    height: 200,\n    stroke: '#F04864',\n    lineWidth: 4,\n    radius: 8,\n    lineDash: [10, 10],\n  },\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  canvas.appendChild(circle);\n  circle.animate([{ lineDashOffset: -20 }, { lineDashOffset: 0 }], {\n    duration: 500,\n    iterations: Infinity,\n  });\n\n  canvas.appendChild(rect);\n  rect.animate([{ lineDashOffset: -20 }, { lineDashOffset: 0 }], {\n    duration: 500,\n    iterations: Infinity,\n  });\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.marchingAnts = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  var circle = new _g.Circle({\n    style: {\n      cx: 200,\n      cy: 200,\n      r: 60,\n      stroke: '#F04864',\n      lineWidth: 4,\n      lineDash: [10, 10]\n    }\n  });\n  var rect = new _g.Rect({\n    style: {\n      x: 300,\n      y: 100,\n      width: 200,\n      height: 200,\n      stroke: '#F04864',\n      lineWidth: 4,\n      radius: 8,\n      lineDash: [10, 10]\n    }\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    canvas.appendChild(circle);\n    circle.animate([{\n      lineDashOffset: -20\n    }, {\n      lineDashOffset: 0\n    }], {\n      duration: 500,\n      iterations: Infinity\n    });\n    canvas.appendChild(rect);\n    rect.animate([{\n      lineDashOffset: -20\n    }, {\n      lineDashOffset: 0\n    }], {\n      duration: 500,\n      iterations: Infinity\n    });\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n});"},{"relativePath":"animation/demo/lifecycle.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/animation/demo/lifecycle.js","order":1,"filename":"lifecycle.js","title":{"zh":"动画生命周期控制方法","en":"Lifecycle of animation"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*hafUTp9MrfYAAAAAAAAAAABkARQnAQ","source":"import { Canvas, CanvasEvent, Circle } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n/**\n * ported from https://animista.net/play/entrances/scale-in\n */\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\nconst circle = new Circle({\n  style: {\n    cx: 200,\n    cy: 200,\n    r: 60,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 4,\n  },\n});\n\nlet animation;\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  canvas.appendChild(circle);\n\n  animation = circle.animate([{ transform: 'scale(1)' }, { transform: 'scale(2)' }], {\n    duration: 500,\n    easing: 'cubic-bezier(0.250, 0.460, 0.450, 0.940)',\n  });\n\n  // get triggered when animation finished\n  animation.onfinish = (e) => {\n    console.log('finish!', e.target, e.target.playState);\n  };\n  animation.finished.then(() => {\n    console.log('finish promise resolved');\n  });\n  // get triggered at the end of each frame in a running animation\n  animation.onframe = (e) => {\n    console.log(e.target.effect.getComputedTiming().progress);\n    console.log('frame ended!', e.target, e.target.playState);\n  };\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n\nconst animationFolder = gui.addFolder('animation');\nconst animationConfig = {\n  play: () => {\n    animation.play();\n  },\n  pause: () => {\n    animation.pause();\n  },\n  reverse: () => {\n    animation.reverse();\n  },\n  finish: () => {\n    animation.finish();\n  },\n};\nanimationFolder.add(animationConfig, 'play').name('Play');\nanimationFolder.add(animationConfig, 'pause').name('Pause');\nanimationFolder.add(animationConfig, 'reverse').name('Reverse');\nanimationFolder.add(animationConfig, 'finish').name('Finish');\nanimationFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.lifecycle = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * ported from https://animista.net/play/entrances/scale-in\n   */\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  var circle = new _g.Circle({\n    style: {\n      cx: 200,\n      cy: 200,\n      r: 60,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4\n    }\n  });\n  var animation;\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    canvas.appendChild(circle);\n    animation = circle.animate([{\n      transform: 'scale(1)'\n    }, {\n      transform: 'scale(2)'\n    }], {\n      duration: 500,\n      easing: 'cubic-bezier(0.250, 0.460, 0.450, 0.940)'\n    }); // get triggered when animation finished\n\n    animation.onfinish = function (e) {\n      console.log('finish!', e.target, e.target.playState);\n    };\n\n    animation.finished.then(function () {\n      console.log('finish promise resolved');\n    }); // get triggered at the end of each frame in a running animation\n\n    animation.onframe = function (e) {\n      console.log(e.target.effect.getComputedTiming().progress);\n      console.log('frame ended!', e.target, e.target.playState);\n    };\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n  var animationFolder = gui.addFolder('animation');\n  var animationConfig = {\n    play: function play() {\n      animation.play();\n    },\n    pause: function pause() {\n      animation.pause();\n    },\n    reverse: function reverse() {\n      animation.reverse();\n    },\n    finish: function finish() {\n      animation.finish();\n    }\n  };\n  animationFolder.add(animationConfig, 'play').name('Play');\n  animationFolder.add(animationConfig, 'pause').name('Pause');\n  animationFolder.add(animationConfig, 'reverse').name('Reverse');\n  animationFolder.add(animationConfig, 'finish').name('Finish');\n  animationFolder.open();\n});"},{"relativePath":"animation/demo/multiple-attributes.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/animation/demo/multiple-attributes.js","order":11,"filename":"multiple-attributes.js","title":{"zh":"可应用动画的属性","en":"Animatable attributes"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*dZ03S7gEjz8AAAAAAAAAAABkARQnAQ","source":"import { Canvas, CanvasEvent, Circle } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n/**\n * ported from https://animista.net/play/entrances/scale-in\n */\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\nconst circle = new Circle({\n  style: {\n    cx: 200,\n    cy: 200,\n    r: 60,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 4,\n    shadowColor: 'black',\n    shadowBlur: 30,\n  },\n});\n\nlet animation;\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  canvas.appendChild(circle);\n\n  animation = circle.animate(\n    [\n      {\n        transform: 'scale(1)',\n        fill: '#1890FF',\n        stroke: '#F04864',\n        opacity: 1,\n        shadowColor: 'black',\n        shadowBlur: 30,\n        x: 200,\n      },\n      {\n        transform: 'scale(2)',\n        fill: 'red',\n        stroke: '#1890FF',\n        opacity: 0.8,\n        shadowColor: 'red',\n        shadowBlur: 0,\n        x: 400,\n      },\n    ],\n    {\n      duration: 1500,\n      iterations: Infinity,\n      easing: 'cubic-bezier(0.250, 0.460, 0.450, 0.940)',\n    },\n  );\n\n  // get triggerred when animation finished\n  animation.onfinish = (e) => {\n    console.log('finish!', e.target, e.target.playState);\n  };\n  animation.finished.then(() => {\n    console.log('finish promise resolved');\n  });\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n\nconst animationFolder = gui.addFolder('animation');\nconst animationConfig = {\n  play: () => {\n    animation.play();\n  },\n  pause: () => {\n    animation.pause();\n  },\n  reverse: () => {\n    animation.reverse();\n  },\n  finish: () => {\n    animation.finish();\n  },\n};\nanimationFolder.add(animationConfig, 'play').name('Play');\nanimationFolder.add(animationConfig, 'pause').name('Pause');\nanimationFolder.add(animationConfig, 'reverse').name('Reverse');\nanimationFolder.add(animationConfig, 'finish').name('Finish');\nanimationFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.multipleAttributes = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * ported from https://animista.net/play/entrances/scale-in\n   */\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  var circle = new _g.Circle({\n    style: {\n      cx: 200,\n      cy: 200,\n      r: 60,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n      shadowColor: 'black',\n      shadowBlur: 30\n    }\n  });\n  var animation;\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    canvas.appendChild(circle);\n    animation = circle.animate([{\n      transform: 'scale(1)',\n      fill: '#1890FF',\n      stroke: '#F04864',\n      opacity: 1,\n      shadowColor: 'black',\n      shadowBlur: 30,\n      x: 200\n    }, {\n      transform: 'scale(2)',\n      fill: 'red',\n      stroke: '#1890FF',\n      opacity: 0.8,\n      shadowColor: 'red',\n      shadowBlur: 0,\n      x: 400\n    }], {\n      duration: 1500,\n      iterations: Infinity,\n      easing: 'cubic-bezier(0.250, 0.460, 0.450, 0.940)'\n    }); // get triggerred when animation finished\n\n    animation.onfinish = function (e) {\n      console.log('finish!', e.target, e.target.playState);\n    };\n\n    animation.finished.then(function () {\n      console.log('finish promise resolved');\n    });\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n  var animationFolder = gui.addFolder('animation');\n  var animationConfig = {\n    play: function play() {\n      animation.play();\n    },\n    pause: function pause() {\n      animation.pause();\n    },\n    reverse: function reverse() {\n      animation.reverse();\n    },\n    finish: function finish() {\n      animation.finish();\n    }\n  };\n  animationFolder.add(animationConfig, 'play').name('Play');\n  animationFolder.add(animationConfig, 'pause').name('Pause');\n  animationFolder.add(animationConfig, 'reverse').name('Reverse');\n  animationFolder.add(animationConfig, 'finish').name('Finish');\n  animationFolder.open();\n});"},{"relativePath":"animation/demo/offset-path.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/animation/demo/offset-path.js","order":5,"filename":"offset-path.js","title":{"zh":"路径动画","en":"Offset path"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*nk1YSrbkQPMAAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent, Circle, Line, Path, Polyline } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n/**\n * ported from https://animista.net/play/entrances/scale-in\n */\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\nconst offsetPathLine = new Line({\n  style: {\n    x1: 100,\n    y1: 100,\n    x2: 300,\n    y2: 100,\n  },\n});\nconst offsetPathPolyline = new Polyline({\n  style: {\n    stroke: 'black',\n    points: [\n      [50, 50],\n      [100, 50],\n      [100, 100],\n      [150, 100],\n      [150, 150],\n      [200, 150],\n      [200, 200],\n      [250, 200],\n      [250, 250],\n      [300, 250],\n      [300, 300],\n      [350, 300],\n      [350, 350],\n      [400, 350],\n      [400, 400],\n      [450, 400],\n    ],\n  },\n});\n\nconst offsetPathPath = new Path({\n  style: {\n    path:\n      'M 100,300' +\n      'l 50,-25' +\n      'a25,25 -30 0,1 50,-25' +\n      'l 50,-25' +\n      'a25,50 -30 0,1 50,-25' +\n      'l 50,-25' +\n      'a25,75 -30 0,1 50,-25' +\n      'l 50,-25' +\n      'a25,100 -30 0,1 50,-25' +\n      'l 50,-25' +\n      'l 0, 200,' +\n      'z',\n  },\n});\n\nconst circle1 = new Circle({\n  style: {\n    cx: 200,\n    cy: 200,\n    r: 60,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 4,\n    offsetPath: offsetPathLine,\n  },\n});\nconst circle2 = new Circle({\n  style: {\n    cx: 200,\n    cy: 200,\n    r: 10,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 4,\n    offsetPath: offsetPathPolyline,\n  },\n});\nconst circle3 = new Circle({\n  style: {\n    cx: 200,\n    cy: 300,\n    r: 60,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 4,\n    offsetPath: offsetPathPath,\n  },\n});\n\nlet animation;\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  canvas.appendChild(offsetPathPolyline);\n  canvas.appendChild(circle1);\n  canvas.appendChild(circle2);\n  canvas.appendChild(circle3);\n\n  circle1.animate([{ offsetDistance: 0 }, { offsetDistance: 1 }], {\n    duration: 2500,\n    easing: 'cubic-bezier(0.250, 0.460, 0.450, 0.940)',\n    iterations: Infinity,\n    direction: 'alternate',\n  });\n  animation = circle2.animate([{ offsetDistance: 0 }, { offsetDistance: 1 }], {\n    duration: 3500,\n    easing: 'linear',\n    iterations: Infinity,\n    direction: 'alternate',\n  });\n\n  circle3.animate([{ offsetDistance: 0 }, { offsetDistance: 1 }], {\n    duration: 4500,\n    easing: 'cubic-bezier(0.250, 0.460, 0.450, 0.940)',\n    iterations: Infinity,\n    direction: 'alternate',\n  });\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n  currentTime: 0,\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.add(rendererConfig, 'currentTime', 0, 3500).onChange((currentTime) => {\n  animation.currentTime = currentTime;\n});\nrendererFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.offsetPath = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * ported from https://animista.net/play/entrances/scale-in\n   */\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  var offsetPathLine = new _g.Line({\n    style: {\n      x1: 100,\n      y1: 100,\n      x2: 300,\n      y2: 100\n    }\n  });\n  var offsetPathPolyline = new _g.Polyline({\n    style: {\n      stroke: 'black',\n      points: [[50, 50], [100, 50], [100, 100], [150, 100], [150, 150], [200, 150], [200, 200], [250, 200], [250, 250], [300, 250], [300, 300], [350, 300], [350, 350], [400, 350], [400, 400], [450, 400]]\n    }\n  });\n  var offsetPathPath = new _g.Path({\n    style: {\n      path: 'M 100,300' + 'l 50,-25' + 'a25,25 -30 0,1 50,-25' + 'l 50,-25' + 'a25,50 -30 0,1 50,-25' + 'l 50,-25' + 'a25,75 -30 0,1 50,-25' + 'l 50,-25' + 'a25,100 -30 0,1 50,-25' + 'l 50,-25' + 'l 0, 200,' + 'z'\n    }\n  });\n  var circle1 = new _g.Circle({\n    style: {\n      cx: 200,\n      cy: 200,\n      r: 60,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n      offsetPath: offsetPathLine\n    }\n  });\n  var circle2 = new _g.Circle({\n    style: {\n      cx: 200,\n      cy: 200,\n      r: 10,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n      offsetPath: offsetPathPolyline\n    }\n  });\n  var circle3 = new _g.Circle({\n    style: {\n      cx: 200,\n      cy: 300,\n      r: 60,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n      offsetPath: offsetPathPath\n    }\n  });\n  var animation;\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    canvas.appendChild(offsetPathPolyline);\n    canvas.appendChild(circle1);\n    canvas.appendChild(circle2);\n    canvas.appendChild(circle3);\n    circle1.animate([{\n      offsetDistance: 0\n    }, {\n      offsetDistance: 1\n    }], {\n      duration: 2500,\n      easing: 'cubic-bezier(0.250, 0.460, 0.450, 0.940)',\n      iterations: Infinity,\n      direction: 'alternate'\n    });\n    animation = circle2.animate([{\n      offsetDistance: 0\n    }, {\n      offsetDistance: 1\n    }], {\n      duration: 3500,\n      easing: 'linear',\n      iterations: Infinity,\n      direction: 'alternate'\n    });\n    circle3.animate([{\n      offsetDistance: 0\n    }, {\n      offsetDistance: 1\n    }], {\n      duration: 4500,\n      easing: 'cubic-bezier(0.250, 0.460, 0.450, 0.940)',\n      iterations: Infinity,\n      direction: 'alternate'\n    });\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas',\n    currentTime: 0\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.add(rendererConfig, 'currentTime', 0, 3500).onChange(function (currentTime) {\n    animation.currentTime = currentTime;\n  });\n  rendererFolder.open();\n});"},{"relativePath":"animation/demo/convert-to-path.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/animation/demo/convert-to-path.js","order":10,"filename":"convert-to-path.js","title":{"zh":"转换基础图形到路径定义","en":"Convert DisplayObject to CubicBezier Path string"},"source":"import {\n  Canvas,\n  CanvasEvent,\n  Circle,\n  convertToPath,\n  Ellipse,\n  Line,\n  Path,\n  Polygon,\n  Polyline,\n  Rect,\n} from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\n/**\n * show converted path in blue\n */\nconst showConvertedPath = (object) => {\n  const pathStr = convertToPath(object);\n  const objectPath = new Path({\n    style: {\n      d: pathStr,\n      fill: 'none',\n      stroke: 'blue',\n      lineWidth: 10,\n    },\n  });\n  canvas.appendChild(objectPath);\n};\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  /**\n   * Circle -> Path\n   */\n  const circle = new Circle({\n    style: {\n      cx: 0,\n      cy: 0,\n      r: 100,\n      transform: 'translate(100, 100)',\n      fill: 'red',\n      opacity: 0.5,\n    },\n  });\n  canvas.appendChild(circle);\n  circle.scale(0.5);\n  showConvertedPath(circle);\n\n  /**\n   * Ellipse -> Path\n   */\n  const ellipse = new Ellipse({\n    style: {\n      cx: 0,\n      cy: 0,\n      rx: 100,\n      ry: 60,\n      fill: 'red',\n      opacity: 0.5,\n    },\n  });\n  ellipse.setPosition(300, 100);\n  ellipse.setLocalScale(0.6);\n  canvas.appendChild(ellipse);\n  showConvertedPath(ellipse);\n\n  /**\n   * Rect -> Path\n   */\n  const rect = new Rect({\n    style: {\n      x: 200,\n      y: 100,\n      width: 100,\n      height: 100,\n      fill: 'red',\n      opacity: 0.5,\n    },\n  });\n  canvas.appendChild(rect);\n  rect.rotateLocal(30);\n  showConvertedPath(rect);\n\n  /**\n   * Line -> Path\n   */\n  const line = new Line({\n    style: {\n      x1: 100,\n      y1: 200,\n      x2: 100,\n      y2: 300,\n      lineWidth: 30,\n      stroke: 'red',\n      opacity: 0.5,\n    },\n  });\n  canvas.appendChild(line);\n  showConvertedPath(line);\n\n  /**\n   * Polyline -> Path\n   */\n  const polyline = new Polyline({\n    style: {\n      points: '100,360 100,400, 50,400',\n      lineWidth: 30,\n      stroke: 'red',\n      opacity: 0.5,\n      transformOrigin: 'center',\n    },\n  });\n  canvas.appendChild(polyline);\n  polyline.rotateLocal(90);\n  showConvertedPath(polyline);\n\n  /**\n   * Polyline -> Path\n   */\n  const polygon = new Polygon({\n    style: {\n      points: '200,360 200,400, 250,400',\n      fill: 'red',\n      transform: 'scale(2)',\n      opacity: 0.5,\n    },\n  });\n  canvas.appendChild(polygon);\n  showConvertedPath(polygon);\n\n  /**\n   * Path -> Path\n   */\n  const path = new Path({\n    style: {\n      d: 'M301.113,12.011l99.25,179.996l201.864,38.778L461.706,380.808l25.508,203.958l-186.101-87.287L115.01,584.766l25.507-203.958L0,230.785l201.86-38.778L301.113,12.011Z',\n      fill: 'red',\n      opacity: 0.5,\n    },\n  });\n  path.translate(300, 250);\n  path.scale(0.2);\n  canvas.appendChild(path);\n  showConvertedPath(path);\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.convertToPath = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  /**\n   * show converted path in blue\n   */\n\n  var showConvertedPath = function showConvertedPath(object) {\n    var pathStr = (0, _g.convertToPath)(object);\n    var objectPath = new _g.Path({\n      style: {\n        d: pathStr,\n        fill: 'none',\n        stroke: 'blue',\n        lineWidth: 10\n      }\n    });\n    canvas.appendChild(objectPath);\n  };\n\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    /**\n     * Circle -> Path\n     */\n    var circle = new _g.Circle({\n      style: {\n        cx: 0,\n        cy: 0,\n        r: 100,\n        transform: 'translate(100, 100)',\n        fill: 'red',\n        opacity: 0.5\n      }\n    });\n    canvas.appendChild(circle);\n    circle.scale(0.5);\n    showConvertedPath(circle);\n    /**\n     * Ellipse -> Path\n     */\n\n    var ellipse = new _g.Ellipse({\n      style: {\n        cx: 0,\n        cy: 0,\n        rx: 100,\n        ry: 60,\n        fill: 'red',\n        opacity: 0.5\n      }\n    });\n    ellipse.setPosition(300, 100);\n    ellipse.setLocalScale(0.6);\n    canvas.appendChild(ellipse);\n    showConvertedPath(ellipse);\n    /**\n     * Rect -> Path\n     */\n\n    var rect = new _g.Rect({\n      style: {\n        x: 200,\n        y: 100,\n        width: 100,\n        height: 100,\n        fill: 'red',\n        opacity: 0.5\n      }\n    });\n    canvas.appendChild(rect);\n    rect.rotateLocal(30);\n    showConvertedPath(rect);\n    /**\n     * Line -> Path\n     */\n\n    var line = new _g.Line({\n      style: {\n        x1: 100,\n        y1: 200,\n        x2: 100,\n        y2: 300,\n        lineWidth: 30,\n        stroke: 'red',\n        opacity: 0.5\n      }\n    });\n    canvas.appendChild(line);\n    showConvertedPath(line);\n    /**\n     * Polyline -> Path\n     */\n\n    var polyline = new _g.Polyline({\n      style: {\n        points: '100,360 100,400, 50,400',\n        lineWidth: 30,\n        stroke: 'red',\n        opacity: 0.5,\n        transformOrigin: 'center'\n      }\n    });\n    canvas.appendChild(polyline);\n    polyline.rotateLocal(90);\n    showConvertedPath(polyline);\n    /**\n     * Polyline -> Path\n     */\n\n    var polygon = new _g.Polygon({\n      style: {\n        points: '200,360 200,400, 250,400',\n        fill: 'red',\n        transform: 'scale(2)',\n        opacity: 0.5\n      }\n    });\n    canvas.appendChild(polygon);\n    showConvertedPath(polygon);\n    /**\n     * Path -> Path\n     */\n\n    var path = new _g.Path({\n      style: {\n        d: 'M301.113,12.011l99.25,179.996l201.864,38.778L461.706,380.808l25.508,203.958l-186.101-87.287L115.01,584.766l25.507-203.958L0,230.785l201.86-38.778L301.113,12.011Z',\n        fill: 'red',\n        opacity: 0.5\n      }\n    });\n    path.translate(300, 250);\n    path.scale(0.2);\n    canvas.appendChild(path);\n    showConvertedPath(path);\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n});"},{"relativePath":"animation/demo/onframe.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/animation/demo/onframe.js","order":13,"filename":"onframe.js","title":{"zh":"onframe 回调函数","en":"Use onframe callback"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*vatoRoHF64MAAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent, Circle, Rect } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\nconst rect = new Rect({\n  style: {\n    width: 100,\n    height: 40,\n    fill: 'red',\n  },\n});\n\nconst circle1 = new Circle({\n  style: {\n    cy: 20,\n    r: 20,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 4,\n  },\n});\nconst circle2 = new Circle({\n  style: {\n    cx: 100,\n    cy: 20,\n    r: 20,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 4,\n  },\n});\n\nrect.setPosition(100, 100);\nrect.appendChild(circle1);\nrect.appendChild(circle2);\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  canvas.appendChild(rect);\n\n  const animation = rect.animate(\n    [\n      {\n        width: 100,\n      },\n      {\n        width: 400,\n      },\n    ],\n    {\n      duration: 1500,\n      iterations: Infinity,\n    },\n  );\n  animation.onframe = () => {\n    // use parsed value here\n    circle2.setLocalPosition(rect.parsedStyle.width, 20);\n    // circle2.setLocalPosition(Number(`${rect.style.width}`.replace('px', '')), 20);\n  };\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.onframe = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  var rect = new _g.Rect({\n    style: {\n      width: 100,\n      height: 40,\n      fill: 'red'\n    }\n  });\n  var circle1 = new _g.Circle({\n    style: {\n      cy: 20,\n      r: 20,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4\n    }\n  });\n  var circle2 = new _g.Circle({\n    style: {\n      cx: 100,\n      cy: 20,\n      r: 20,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4\n    }\n  });\n  rect.setPosition(100, 100);\n  rect.appendChild(circle1);\n  rect.appendChild(circle2);\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    canvas.appendChild(rect);\n    var animation = rect.animate([{\n      width: 100\n    }, {\n      width: 400\n    }], {\n      duration: 1500,\n      iterations: Infinity\n    });\n\n    animation.onframe = function () {\n      // use parsed value here\n      circle2.setLocalPosition(rect.parsedStyle.width, 20); // circle2.setLocalPosition(Number(`${rect.style.width}`.replace('px', '')), 20);\n    };\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n});"},{"relativePath":"animation/demo/opacity.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/animation/demo/opacity.js","order":-1,"filename":"opacity.js","source":"import { Canvas, CanvasEvent, Path } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\nconst path = new Path({\n  style: {\n    fill: '#5B8FF9',\n    // fillOpacity: 0,\n    stroke: '#5B8FF9',\n    // strokeOpacity: 0,\n    // opacity: 0,\n    path: 'M11.078431372405001,86.78571428571429L110.78431372534617,86.78571428571429L110.78431372534617,405L11.078431372405001,405Z',\n  },\n});\n\n// const path2 = new Path({\n//   style: {\n//     fill: '#5B8FF9',\n//     stroke: '#5B8FF9',\n//     path: 'M232.64705882332998,266.14285714285717L332.3529411762712,266.14285714285717L332.3529411762712,405L232.64705882332998,405Z',\n//   },\n// });\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  canvas.appendChild(path);\n  // canvas.appendChild(path2);\n\n  const transformOrigin = [0, 318.21429443359375];\n  path.setOrigin(transformOrigin);\n  const animation = path.animate(\n    [\n      {\n        // transform: 'scale(1, 0.0001)',\n        fillOpacity: 0,\n        strokeOpacity: 0,\n        opacity: 0,\n      },\n      {\n        // transform: 'scale(1, 0.0001)',\n        fillOpacity: '',\n        strokeOpacity: '',\n        opacity: '',\n        // offset: 0.01,\n      },\n      // {\n      //   transform: 'scale(1, 1)',\n      // },\n    ],\n    {\n      duration: 1200,\n      fill: 'both',\n      delay: 0,\n      iterations: Infinity,\n    },\n  );\n\n  animation.finished.then(() => path.setOrigin(0, 0));\n\n  animation.onframe = () => {\n    // @ts-ignore\n    console.log('frame...', path.style.opacity);\n  };\n\n  // path2.animate(\n  //   [\n  //     {\n  //       transform: 'scale(1, 0.0001)',\n  //       fillOpacity: 0,\n  //       strokeOpacity: 0,\n  //       opacity: 0,\n  //     },\n  //     {\n  //       transform: 'scale(1, 0.0001)',\n  //       fillOpacity: 1,\n  //       strokeOpacity: 1,\n  //       opacity: 1,\n  //       offset: 0.01,\n  //     },\n  //     {\n  //       transform: 'scale(1, 1)',\n  //     },\n  //   ],\n  //   {\n  //     duration: 1200,\n  //     fill: 'both',\n  //     delay: 0,\n  //   },\n  // );\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.opacity = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  var path = new _g.Path({\n    style: {\n      fill: '#5B8FF9',\n      // fillOpacity: 0,\n      stroke: '#5B8FF9',\n      // strokeOpacity: 0,\n      // opacity: 0,\n      path: 'M11.078431372405001,86.78571428571429L110.78431372534617,86.78571428571429L110.78431372534617,405L11.078431372405001,405Z'\n    }\n  }); // const path2 = new Path({\n  //   style: {\n  //     fill: '#5B8FF9',\n  //     stroke: '#5B8FF9',\n  //     path: 'M232.64705882332998,266.14285714285717L332.3529411762712,266.14285714285717L332.3529411762712,405L232.64705882332998,405Z',\n  //   },\n  // });\n\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    canvas.appendChild(path); // canvas.appendChild(path2);\n\n    var transformOrigin = [0, 318.21429443359375];\n    path.setOrigin(transformOrigin);\n    var animation = path.animate([{\n      // transform: 'scale(1, 0.0001)',\n      fillOpacity: 0,\n      strokeOpacity: 0,\n      opacity: 0\n    }, {\n      // transform: 'scale(1, 0.0001)',\n      fillOpacity: '',\n      strokeOpacity: '',\n      opacity: '' // offset: 0.01,\n\n    } // {\n    //   transform: 'scale(1, 1)',\n    // },\n    ], {\n      duration: 1200,\n      fill: 'both',\n      delay: 0,\n      iterations: Infinity\n    });\n    animation.finished.then(function () {\n      return path.setOrigin(0, 0);\n    });\n\n    animation.onframe = function () {\n      // @ts-ignore\n      console.log('frame...', path.style.opacity);\n    }; // path2.animate(\n    //   [\n    //     {\n    //       transform: 'scale(1, 0.0001)',\n    //       fillOpacity: 0,\n    //       strokeOpacity: 0,\n    //       opacity: 0,\n    //     },\n    //     {\n    //       transform: 'scale(1, 0.0001)',\n    //       fillOpacity: 1,\n    //       strokeOpacity: 1,\n    //       opacity: 1,\n    //       offset: 0.01,\n    //     },\n    //     {\n    //       transform: 'scale(1, 1)',\n    //     },\n    //   ],\n    //   {\n    //     duration: 1200,\n    //     fill: 'both',\n    //     delay: 0,\n    //   },\n    // );\n\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n});"},{"relativePath":"animation/demo/ripple-effect.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/animation/demo/ripple-effect.js","order":9,"filename":"ripple-effect.js","title":{"zh":"涟漪效果","en":"Ripple Effect"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*DuMkRr0AaecAAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent, Group, Image, Path, Rect } from '@antv/g';\nimport { Renderer } from '@antv/g-canvas';\n\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: new Renderer(),\n  background: 'rgb(16, 22, 29)',\n});\n\nconst gradient =\n  'linear-gradient(-90deg, rgba(178, 230, 181, 0), rgba(178, 230, 181, 0.6) 14%, rgba(166, 221, 179, 0.82) 23%, rgba(101, 171, 170, 0.9) 67%, rgb(23, 80, 157))';\n// 'l(270) 0:rgba(178, 230, 181, 0) 0.14:rgba(178, 230, 181, 0.6) 0.23:rgba(166, 221, 179, 0.82) 0.67:rgba(101, 171, 170, 0.9) 1:rgb(23, 80, 157)';\n\nconst rippleData = [\n  {\n    top: 'M46.33 48.5C46.33 48.5 46.33 48.5 46.33 48.5C46.41 47.25 51.01 46.24 56.67 46.24C62.33 46.24 66.93 47.24 67.02 48.5L67.02 48.5C67.02 47.24 62.39 46.21 56.67 46.21C50.95 46.21 46.33 47.24 46.33 48.5Z',\n    bottom:\n      'M56.68 51C51 51 46.42 50 46.34 48.74C46.34 48.74 46.34 48.74 46.34 48.74C46.34 50.01 50.98 51.03 56.69 51.03C62.4 51.03 67 50 67 48.77L67 48.77C66.94 50 62.35 51 56.68 51Z',\n    stroke: '#b0dacc',\n    strokeOpacity: 1,\n    scale: 3,\n    durationMultiplier: 2,\n  },\n  {\n    top: 'M32 48.31C32 48.31 32 48.37 32 48.39C32.21 45.39 43.19 43.01 56.72 43.01C70.25 43.01 81.24 45.41 81.44 48.39C81.44 48.39 81.44 48.39 81.44 48.31C81.44 45.31 70.37 42.84 56.71 42.84C43.05 42.84 32 45.29 32 48.31Z',\n    bottom:\n      'M56.68 54.26C43.15 54.26 32.17 51.86 31.96 48.88C31.96 48.88 31.96 48.94 31.96 48.97C31.96 51.97 43.04 54.43 56.69 54.43C70.34 54.43 81.41 52 81.41 49C81.41 49 81.41 48.94 81.41 48.91C81.2 51.86 70.21 54.26 56.68 54.26Z',\n    stroke: '#b0dacc',\n    strokeOpacity: 1,\n    scale: 1.8,\n  },\n  {\n    top: 'M23.62 48.2C23.62 48.2 23.62 48.27 23.62 48.31C23.89 44.31 38.62 41.11 56.67 41.11C74.72 41.11 89.45 44.33 89.72 48.31A0.43 0.43 0 0 0 89.72 48.2C89.72 44.2 74.91 40.89 56.65 40.89C38.39 40.89 23.62 44.16 23.62 48.2Z',\n    bottom:\n      'M56.68 56.16C38.59 56.16 23.9 52.95 23.68 48.96C23.68 48.96 23.68 49.04 23.68 49.08C23.68 53.08 38.48 56.39 56.74 56.39C75 56.39 89.81 53.11 89.81 49.08A0.5 0.5 0 0 0 89.81 48.96C89.46 53 74.77 56.16 56.68 56.16Z',\n    stroke: '#b0dacc',\n    strokeOpacity: 0.8,\n    scale: 1.5,\n  },\n  {\n    top: 'M19 48.14A0.69 0.69 0 0 0 19 48.27C19.3 43.73 36 40.07 56.62 40.07C77.24 40.07 94 43.73 94.31 48.27C94.31 48.22 94.31 48.18 94.31 48.14C94.31 43.54 77.45 39.82 56.66 39.82C35.87 39.82 19 43.54 19 48.14Z',\n    bottom:\n      'M56.68,57.2c-20.59,0-37.32-3.65-37.62-8.19a.51.51,0,0,0,0,.13c0,4.59,16.85,8.32,37.64,8.32s37.65-3.73,37.65-8.32c0,0,0-.09,0-.13C94,53.55,77.28,57.2,56.68,57.2Z',\n    stroke: '#b0dacc',\n    strokeOpacity: 0.57,\n    scale: 1.2,\n  },\n  {\n    top: 'M14.24 48.07C14.24 48.07 14.24 48.17 14.24 48.22C14.6 43.1 33.46 39 56.68 39C79.9 39 98.76 43.12 99.11 48.24A0.77 0.77 0 0 0 99.11 48.09C99.11 42.91 80.11 38.71 56.66 38.71C33.21 38.71 14.24 42.89 14.24 48.07Z',\n    bottom:\n      'M56.68 58.3C33.46 58.3 14.6 54.17 14.25 49.06C14.25 49.06 14.25 49.15 14.25 49.2C14.25 54.38 33.25 58.58 56.69 58.58C80.13 58.58 99.14 54.38 99.14 49.2A0.59 0.59 0 0 0 99.14 49.06C98.76 54.17 79.91 58.3 56.68 58.3Z',\n    stroke: '#b0dacc',\n    strokeOpacity: 0.5,\n    scale: 1.3,\n  },\n  {\n    top: 'M7.12 48.24A1.11 1.11 0 0 0 7.12 48.41C7.52 42.41 29.54 37.62 56.66 37.62C83.78 37.62 105.8 42.43 106.21 48.41C106.21 48.35 106.21 48.29 106.21 48.24C106.21 42.19 84.02 37.24 56.64 37.24C29.26 37.24 7.12 42.19 7.12 48.24Z',\n    bottom:\n      'M56.68 60.17C29.56 60.17 7.54 55.36 7.14 49.38A1.11 1.11 0 0 0 7.14 49.55C7.14 55.6 29.33 60.55 56.7 60.55C84.07 60.55 106.27 55.64 106.27 49.55C106.27 49.55 106.27 49.44 106.27 49.38C105.82 55.36 83.8 60.17 56.68 60.17Z',\n    stroke: '#b0dacc',\n    strokeOpacity: 0.23,\n    scale: 1.2,\n  },\n];\n\nconst group = new Group();\nconst mountain1 = new Path({\n  // @see https://g-next.antv.vision/zh/docs/api/basic/display-object#classname\n  className: 'mountain',\n  style: {\n    d: 'M33.6,51S44.36,31.65,48.15,18,64.38,7.42,66.62,18s10.6,33.6,13.15,33.1Z',\n    fill: gradient,\n    stroke: '#efcb84',\n    strokeWidth: 0.5,\n    miterLimit: 10,\n    shadowColor: 'rgba(124,94,44,0.5)',\n    shadowBlur: 50,\n    // @see https://g-next.antv.vision/zh/docs/api/basic/display-object#%E8%A3%81%E5%89%AA\n    clipPath: new Rect({\n      style: {\n        y: -10,\n        x: -10,\n        width: 60,\n        height: 51,\n      },\n    }),\n  },\n});\n\nconst mountain2 = mountain1.cloneNode();\nmountain2.translateLocal(20, 10);\nmountain2.scale(0.8);\n\ngroup.appendChild(mountain2);\ngroup.appendChild(mountain1);\n\n// @see https://g-next.antv.vision/zh/docs/api/basic/display-object#%E9%AB%98%E7%BA%A7%E6%9F%A5%E8%AF%A2\nconst mountains = group.querySelectorAll('.mountain');\nmountains.forEach((mountain) => {\n  mountain.addEventListener('click', () => {\n    mountains.forEach((m) => {\n      m.style.strokeWidth = 0.5;\n    });\n    mountain.style.strokeWidth = 2;\n  });\n});\n\nconst rippleGroups = rippleData.map(({ top, bottom, stroke, strokeOpacity }) => {\n  const rippleGroup = new Group({\n    style: {\n      strokeOpacity,\n      // @see https://g-next.antv.vision/zh/docs/api/basic/display-object#pointerevents\n      pointerEvents: 'none',\n    },\n  });\n  const topRipple = new Path({\n    style: {\n      d: top,\n      stroke,\n      strokeWidth: 0.5,\n      miterLimit: 10,\n    },\n  });\n  const bottomRipple = new Path({\n    style: {\n      d: bottom,\n      stroke,\n      strokeWidth: 0.5,\n      miterLimit: 10,\n    },\n  });\n  rippleGroup.appendChild(topRipple);\n  rippleGroup.appendChild(bottomRipple);\n  group.appendChild(rippleGroup);\n\n  return rippleGroup;\n});\n\nconst boat = new Image({\n  style: {\n    width: 100,\n    height: 100,\n    opacity: 0,\n    anchor: '0.5 0.5',\n    src: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*qdRtSanFh_4AAAAAAAAAAAAAARQnAQ',\n  },\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  canvas.appendChild(group);\n  canvas.appendChild(boat);\n\n  rippleGroups.forEach((rippleGroup, i) => {\n    const { center } = rippleGroup.getBounds();\n    rippleGroup.style.transformOrigin = `${center[0]}px ${center[1]}px`;\n    rippleGroup.animate(\n      [\n        {\n          transform: 'scale(0.001)',\n          strokeOpacity: rippleData[i].strokeOpacity,\n        },\n        {\n          transform: `scale(${rippleData[i].scale})`,\n          strokeOpacity: 0,\n        },\n      ],\n      {\n        duration: 1500 * (rippleData[i].durationMultiplier || 1),\n        iterations: Infinity,\n        delay: i * 150,\n      },\n    );\n  });\n\n  group.scale(4);\n});\n\n// canvas.addEventListener(\"click\", function (e) {\n//   // @see https://g-next.antv.vision/zh/docs/api/event#canvasxy\n//   boat.style.x = e.canvasX;\n//   boat.style.y = e.canvasY;\n//   boat.animate([{ opacity: 0 }, { opacity: 1 }], {\n//     duration: 500,\n//     // @see https://g-next.antv.vision/zh/docs/api/animation#fill\n//     fill: \"both\"\n//   });\n// });\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas);\n    global.rippleEffect = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas) {\n  \"use strict\";\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: new _gCanvas.Renderer(),\n    background: 'rgb(16, 22, 29)'\n  });\n  var gradient = 'linear-gradient(-90deg, rgba(178, 230, 181, 0), rgba(178, 230, 181, 0.6) 14%, rgba(166, 221, 179, 0.82) 23%, rgba(101, 171, 170, 0.9) 67%, rgb(23, 80, 157))'; // 'l(270) 0:rgba(178, 230, 181, 0) 0.14:rgba(178, 230, 181, 0.6) 0.23:rgba(166, 221, 179, 0.82) 0.67:rgba(101, 171, 170, 0.9) 1:rgb(23, 80, 157)';\n\n  var rippleData = [{\n    top: 'M46.33 48.5C46.33 48.5 46.33 48.5 46.33 48.5C46.41 47.25 51.01 46.24 56.67 46.24C62.33 46.24 66.93 47.24 67.02 48.5L67.02 48.5C67.02 47.24 62.39 46.21 56.67 46.21C50.95 46.21 46.33 47.24 46.33 48.5Z',\n    bottom: 'M56.68 51C51 51 46.42 50 46.34 48.74C46.34 48.74 46.34 48.74 46.34 48.74C46.34 50.01 50.98 51.03 56.69 51.03C62.4 51.03 67 50 67 48.77L67 48.77C66.94 50 62.35 51 56.68 51Z',\n    stroke: '#b0dacc',\n    strokeOpacity: 1,\n    scale: 3,\n    durationMultiplier: 2\n  }, {\n    top: 'M32 48.31C32 48.31 32 48.37 32 48.39C32.21 45.39 43.19 43.01 56.72 43.01C70.25 43.01 81.24 45.41 81.44 48.39C81.44 48.39 81.44 48.39 81.44 48.31C81.44 45.31 70.37 42.84 56.71 42.84C43.05 42.84 32 45.29 32 48.31Z',\n    bottom: 'M56.68 54.26C43.15 54.26 32.17 51.86 31.96 48.88C31.96 48.88 31.96 48.94 31.96 48.97C31.96 51.97 43.04 54.43 56.69 54.43C70.34 54.43 81.41 52 81.41 49C81.41 49 81.41 48.94 81.41 48.91C81.2 51.86 70.21 54.26 56.68 54.26Z',\n    stroke: '#b0dacc',\n    strokeOpacity: 1,\n    scale: 1.8\n  }, {\n    top: 'M23.62 48.2C23.62 48.2 23.62 48.27 23.62 48.31C23.89 44.31 38.62 41.11 56.67 41.11C74.72 41.11 89.45 44.33 89.72 48.31A0.43 0.43 0 0 0 89.72 48.2C89.72 44.2 74.91 40.89 56.65 40.89C38.39 40.89 23.62 44.16 23.62 48.2Z',\n    bottom: 'M56.68 56.16C38.59 56.16 23.9 52.95 23.68 48.96C23.68 48.96 23.68 49.04 23.68 49.08C23.68 53.08 38.48 56.39 56.74 56.39C75 56.39 89.81 53.11 89.81 49.08A0.5 0.5 0 0 0 89.81 48.96C89.46 53 74.77 56.16 56.68 56.16Z',\n    stroke: '#b0dacc',\n    strokeOpacity: 0.8,\n    scale: 1.5\n  }, {\n    top: 'M19 48.14A0.69 0.69 0 0 0 19 48.27C19.3 43.73 36 40.07 56.62 40.07C77.24 40.07 94 43.73 94.31 48.27C94.31 48.22 94.31 48.18 94.31 48.14C94.31 43.54 77.45 39.82 56.66 39.82C35.87 39.82 19 43.54 19 48.14Z',\n    bottom: 'M56.68,57.2c-20.59,0-37.32-3.65-37.62-8.19a.51.51,0,0,0,0,.13c0,4.59,16.85,8.32,37.64,8.32s37.65-3.73,37.65-8.32c0,0,0-.09,0-.13C94,53.55,77.28,57.2,56.68,57.2Z',\n    stroke: '#b0dacc',\n    strokeOpacity: 0.57,\n    scale: 1.2\n  }, {\n    top: 'M14.24 48.07C14.24 48.07 14.24 48.17 14.24 48.22C14.6 43.1 33.46 39 56.68 39C79.9 39 98.76 43.12 99.11 48.24A0.77 0.77 0 0 0 99.11 48.09C99.11 42.91 80.11 38.71 56.66 38.71C33.21 38.71 14.24 42.89 14.24 48.07Z',\n    bottom: 'M56.68 58.3C33.46 58.3 14.6 54.17 14.25 49.06C14.25 49.06 14.25 49.15 14.25 49.2C14.25 54.38 33.25 58.58 56.69 58.58C80.13 58.58 99.14 54.38 99.14 49.2A0.59 0.59 0 0 0 99.14 49.06C98.76 54.17 79.91 58.3 56.68 58.3Z',\n    stroke: '#b0dacc',\n    strokeOpacity: 0.5,\n    scale: 1.3\n  }, {\n    top: 'M7.12 48.24A1.11 1.11 0 0 0 7.12 48.41C7.52 42.41 29.54 37.62 56.66 37.62C83.78 37.62 105.8 42.43 106.21 48.41C106.21 48.35 106.21 48.29 106.21 48.24C106.21 42.19 84.02 37.24 56.64 37.24C29.26 37.24 7.12 42.19 7.12 48.24Z',\n    bottom: 'M56.68 60.17C29.56 60.17 7.54 55.36 7.14 49.38A1.11 1.11 0 0 0 7.14 49.55C7.14 55.6 29.33 60.55 56.7 60.55C84.07 60.55 106.27 55.64 106.27 49.55C106.27 49.55 106.27 49.44 106.27 49.38C105.82 55.36 83.8 60.17 56.68 60.17Z',\n    stroke: '#b0dacc',\n    strokeOpacity: 0.23,\n    scale: 1.2\n  }];\n  var group = new _g.Group();\n  var mountain1 = new _g.Path({\n    // @see https://g-next.antv.vision/zh/docs/api/basic/display-object#classname\n    className: 'mountain',\n    style: {\n      d: 'M33.6,51S44.36,31.65,48.15,18,64.38,7.42,66.62,18s10.6,33.6,13.15,33.1Z',\n      fill: gradient,\n      stroke: '#efcb84',\n      strokeWidth: 0.5,\n      miterLimit: 10,\n      shadowColor: 'rgba(124,94,44,0.5)',\n      shadowBlur: 50,\n      // @see https://g-next.antv.vision/zh/docs/api/basic/display-object#%E8%A3%81%E5%89%AA\n      clipPath: new _g.Rect({\n        style: {\n          y: -10,\n          x: -10,\n          width: 60,\n          height: 51\n        }\n      })\n    }\n  });\n  var mountain2 = mountain1.cloneNode();\n  mountain2.translateLocal(20, 10);\n  mountain2.scale(0.8);\n  group.appendChild(mountain2);\n  group.appendChild(mountain1); // @see https://g-next.antv.vision/zh/docs/api/basic/display-object#%E9%AB%98%E7%BA%A7%E6%9F%A5%E8%AF%A2\n\n  var mountains = group.querySelectorAll('.mountain');\n  mountains.forEach(function (mountain) {\n    mountain.addEventListener('click', function () {\n      mountains.forEach(function (m) {\n        m.style.strokeWidth = 0.5;\n      });\n      mountain.style.strokeWidth = 2;\n    });\n  });\n  var rippleGroups = rippleData.map(function (_ref) {\n    var top = _ref.top,\n        bottom = _ref.bottom,\n        stroke = _ref.stroke,\n        strokeOpacity = _ref.strokeOpacity;\n    var rippleGroup = new _g.Group({\n      style: {\n        strokeOpacity: strokeOpacity,\n        // @see https://g-next.antv.vision/zh/docs/api/basic/display-object#pointerevents\n        pointerEvents: 'none'\n      }\n    });\n    var topRipple = new _g.Path({\n      style: {\n        d: top,\n        stroke: stroke,\n        strokeWidth: 0.5,\n        miterLimit: 10\n      }\n    });\n    var bottomRipple = new _g.Path({\n      style: {\n        d: bottom,\n        stroke: stroke,\n        strokeWidth: 0.5,\n        miterLimit: 10\n      }\n    });\n    rippleGroup.appendChild(topRipple);\n    rippleGroup.appendChild(bottomRipple);\n    group.appendChild(rippleGroup);\n    return rippleGroup;\n  });\n  var boat = new _g.Image({\n    style: {\n      width: 100,\n      height: 100,\n      opacity: 0,\n      anchor: '0.5 0.5',\n      src: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*qdRtSanFh_4AAAAAAAAAAAAAARQnAQ'\n    }\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    canvas.appendChild(group);\n    canvas.appendChild(boat);\n    rippleGroups.forEach(function (rippleGroup, i) {\n      var _rippleGroup$getBound = rippleGroup.getBounds(),\n          center = _rippleGroup$getBound.center;\n\n      rippleGroup.style.transformOrigin = \"\".concat(center[0], \"px \").concat(center[1], \"px\");\n      rippleGroup.animate([{\n        transform: 'scale(0.001)',\n        strokeOpacity: rippleData[i].strokeOpacity\n      }, {\n        transform: \"scale(\".concat(rippleData[i].scale, \")\"),\n        strokeOpacity: 0\n      }], {\n        duration: 1500 * (rippleData[i].durationMultiplier || 1),\n        iterations: Infinity,\n        delay: i * 150\n      });\n    });\n    group.scale(4);\n  }); // canvas.addEventListener(\"click\", function (e) {\n  //   // @see https://g-next.antv.vision/zh/docs/api/event#canvasxy\n  //   boat.style.x = e.canvasX;\n  //   boat.style.y = e.canvasY;\n  //   boat.animate([{ opacity: 0 }, { opacity: 1 }], {\n  //     duration: 500,\n  //     // @see https://g-next.antv.vision/zh/docs/api/animation#fill\n  //     fill: \"both\"\n  //   });\n  // });\n});"},{"relativePath":"animation/demo/morph.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/animation/demo/morph.js","order":8,"filename":"morph.js","title":{"zh":"形变动画","en":"Morph"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*qCHaTJUg_aEAAAAAAAAAAAAAARQnAQ","source":"import {\n  Canvas,\n  CanvasEvent,\n  Circle,\n  convertToPath,\n  Line,\n  Path,\n  Polygon,\n  Polyline,\n  Rect,\n} from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  const path1 = new Path({\n    style: {\n      d: 'M 0,40 C 5.5555555555555545,40,22.222222222222218,44.44444444444445,33.33333333333333,40 C 44.444444444444436,35.55555555555556,55.55555555555554,14.66666666666667,66.66666666666666,13.333333333333336 C 77.77777777777777,12.000000000000002,88.88888888888887,32,100,32 C 111.11111111111113,32,122.22222222222221,14.66666666666667,133.33333333333331,13.333333333333336 C 144.44444444444443,12.000000000000002,155.55555555555557,24,166.66666666666669,24 C 177.7777777777778,24,188.8888888888889,11.111111111111114,200,13.333333333333336 C 211.1111111111111,15.555555555555557,222.22222222222226,35.111111111111114,233.33333333333334,37.333333333333336 C 244.44444444444443,39.55555555555555,255.55555555555551,31.22222222222223,266.66666666666663,26.66666666666667 C 277.77777777777777,22.111111111111114,294.4444444444444,12.777777777777779,300,10',\n    },\n  });\n  const path2 = new Path({\n    style: {\n      d: [\n        ['M', 0, 0],\n        ['L', 200, 0],\n      ],\n    },\n  });\n\n  path1.translate(100, 100);\n  path2.translate(100, 100);\n\n  /**\n   * Path -> Path\n   */\n  const path1Str = convertToPath(path1);\n  const path2Str = convertToPath(path2);\n  const pathA = new Path({\n    style: {\n      path: path1Str,\n      stroke: '#F04864',\n    },\n  });\n  canvas.appendChild(pathA);\n  pathA.animate([{ d: path1Str }, { d: path2Str }], {\n    duration: 2500,\n    easing: 'ease',\n    iterations: Infinity,\n    direction: 'alternate',\n  });\n\n  /**\n   * Path -> Line\n   */\n  const line = new Line({\n    style: {\n      x1: 100,\n      y1: 0,\n      x2: 100,\n      y2: 100,\n      transform: 'translate(0, 100px)',\n    },\n  });\n  const linePathStr = convertToPath(line);\n  const pathB = new Path({\n    style: {\n      path: path1Str,\n      stroke: '#F04864',\n    },\n  });\n  canvas.appendChild(pathB);\n  pathB.animate([{ path: path1Str }, { path: linePathStr }], {\n    duration: 2500,\n    easing: 'ease',\n    iterations: Infinity,\n    direction: 'alternate',\n  });\n\n  /**\n   * Path -> Circle\n   */\n  const circle = new Circle({\n    style: {\n      cx: 100,\n      cy: 100,\n      r: 50,\n    },\n  });\n  circle.scale(2);\n  const circlePathStr = convertToPath(circle);\n  const pathC = new Path({\n    style: {\n      path: path1Str,\n      stroke: '#F04864',\n    },\n  });\n  canvas.appendChild(pathC);\n  pathC.animate([{ d: path1Str }, { d: circlePathStr }], {\n    duration: 2500,\n    easing: 'ease',\n    iterations: Infinity,\n    direction: 'alternate',\n  });\n\n  /**\n   * Circle -> Polyline\n   */\n  const polylinePathStr = convertToPath(\n    new Polyline({\n      style: {\n        points: [\n          [50, 50],\n          [100, 50],\n          [100, 100],\n          [150, 100],\n          [150, 150],\n          [200, 150],\n        ],\n        transform: 'translate(0, 200)',\n      },\n    }),\n  );\n  const pathD = new Path({\n    style: {\n      path: circlePathStr,\n      stroke: '#F04864',\n    },\n  });\n  canvas.appendChild(pathD);\n  pathD.animate([{ path: circlePathStr }, { path: polylinePathStr }], {\n    duration: 2500,\n    easing: 'ease',\n    iterations: Infinity,\n    direction: 'alternate',\n  });\n\n  /**\n   * Path -> Polygon\n   */\n  const polygonPathStr = convertToPath(\n    new Polygon({\n      style: {\n        points: [\n          [0, 0],\n          [50, 50],\n          [50, 100],\n        ],\n        transform: 'translate(0, 300px)',\n      },\n    }),\n  );\n  const pathE = new Path({\n    style: {\n      path: path1Str,\n      stroke: '#F04864',\n    },\n  });\n  canvas.appendChild(pathE);\n  pathE.animate([{ path: path1Str }, { path: polygonPathStr }], {\n    duration: 2500,\n    easing: 'ease',\n    iterations: Infinity,\n    direction: 'alternate',\n  });\n\n  /**\n   * Rect -> Circle\n   */\n  const rectPathStr = convertToPath(\n    new Rect({\n      style: {\n        x: 300,\n        y: 200,\n        width: 200,\n        height: 100,\n        transformOrigin: 'center',\n      },\n    }),\n  );\n  const pathF = new Path({\n    style: {\n      path: rectPathStr,\n      stroke: '#F04864',\n      fill: '',\n      opacity: 0.5,\n      lineWidth: 10,\n    },\n  });\n  canvas.appendChild(pathF);\n  pathF.animate(\n    [\n      { path: rectPathStr, stroke: '#F04864', fill: 'blue' },\n      { path: circlePathStr, stroke: 'blue', fill: '#F04864' },\n    ],\n    {\n      duration: 2500,\n      easing: 'ease',\n      iterations: Infinity,\n      direction: 'alternate',\n    },\n  );\n\n  /**\n   * Rect -> Path\n   */\n  const starPath = new Path({\n    style: {\n      path: 'M301.113,12.011l99.25,179.996l201.864,38.778L461.706,380.808l25.508,203.958l-186.101-87.287L115.01,584.766l25.507-203.958L0,230.785l201.86-38.778L301.113,12.011',\n    },\n  });\n  starPath.scale(0.2);\n  starPath.translate(200, 200);\n  const pathG = new Path({\n    style: {\n      path: rectPathStr,\n      lineWidth: 2,\n    },\n  });\n  canvas.appendChild(pathG);\n  pathG.animate(\n    [\n      { path: rectPathStr, stroke: '#F04864', fill: 'blue' },\n      { path: convertToPath(starPath), stroke: 'blue', fill: '#F04864' },\n    ],\n    {\n      duration: 2500,\n      easing: 'ease',\n      iterations: Infinity,\n      direction: 'alternate',\n    },\n  );\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.morph = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    var path1 = new _g.Path({\n      style: {\n        d: 'M 0,40 C 5.5555555555555545,40,22.222222222222218,44.44444444444445,33.33333333333333,40 C 44.444444444444436,35.55555555555556,55.55555555555554,14.66666666666667,66.66666666666666,13.333333333333336 C 77.77777777777777,12.000000000000002,88.88888888888887,32,100,32 C 111.11111111111113,32,122.22222222222221,14.66666666666667,133.33333333333331,13.333333333333336 C 144.44444444444443,12.000000000000002,155.55555555555557,24,166.66666666666669,24 C 177.7777777777778,24,188.8888888888889,11.111111111111114,200,13.333333333333336 C 211.1111111111111,15.555555555555557,222.22222222222226,35.111111111111114,233.33333333333334,37.333333333333336 C 244.44444444444443,39.55555555555555,255.55555555555551,31.22222222222223,266.66666666666663,26.66666666666667 C 277.77777777777777,22.111111111111114,294.4444444444444,12.777777777777779,300,10'\n      }\n    });\n    var path2 = new _g.Path({\n      style: {\n        d: [['M', 0, 0], ['L', 200, 0]]\n      }\n    });\n    path1.translate(100, 100);\n    path2.translate(100, 100);\n    /**\n     * Path -> Path\n     */\n\n    var path1Str = (0, _g.convertToPath)(path1);\n    var path2Str = (0, _g.convertToPath)(path2);\n    var pathA = new _g.Path({\n      style: {\n        path: path1Str,\n        stroke: '#F04864'\n      }\n    });\n    canvas.appendChild(pathA);\n    pathA.animate([{\n      d: path1Str\n    }, {\n      d: path2Str\n    }], {\n      duration: 2500,\n      easing: 'ease',\n      iterations: Infinity,\n      direction: 'alternate'\n    });\n    /**\n     * Path -> Line\n     */\n\n    var line = new _g.Line({\n      style: {\n        x1: 100,\n        y1: 0,\n        x2: 100,\n        y2: 100,\n        transform: 'translate(0, 100px)'\n      }\n    });\n    var linePathStr = (0, _g.convertToPath)(line);\n    var pathB = new _g.Path({\n      style: {\n        path: path1Str,\n        stroke: '#F04864'\n      }\n    });\n    canvas.appendChild(pathB);\n    pathB.animate([{\n      path: path1Str\n    }, {\n      path: linePathStr\n    }], {\n      duration: 2500,\n      easing: 'ease',\n      iterations: Infinity,\n      direction: 'alternate'\n    });\n    /**\n     * Path -> Circle\n     */\n\n    var circle = new _g.Circle({\n      style: {\n        cx: 100,\n        cy: 100,\n        r: 50\n      }\n    });\n    circle.scale(2);\n    var circlePathStr = (0, _g.convertToPath)(circle);\n    var pathC = new _g.Path({\n      style: {\n        path: path1Str,\n        stroke: '#F04864'\n      }\n    });\n    canvas.appendChild(pathC);\n    pathC.animate([{\n      d: path1Str\n    }, {\n      d: circlePathStr\n    }], {\n      duration: 2500,\n      easing: 'ease',\n      iterations: Infinity,\n      direction: 'alternate'\n    });\n    /**\n     * Circle -> Polyline\n     */\n\n    var polylinePathStr = (0, _g.convertToPath)(new _g.Polyline({\n      style: {\n        points: [[50, 50], [100, 50], [100, 100], [150, 100], [150, 150], [200, 150]],\n        transform: 'translate(0, 200)'\n      }\n    }));\n    var pathD = new _g.Path({\n      style: {\n        path: circlePathStr,\n        stroke: '#F04864'\n      }\n    });\n    canvas.appendChild(pathD);\n    pathD.animate([{\n      path: circlePathStr\n    }, {\n      path: polylinePathStr\n    }], {\n      duration: 2500,\n      easing: 'ease',\n      iterations: Infinity,\n      direction: 'alternate'\n    });\n    /**\n     * Path -> Polygon\n     */\n\n    var polygonPathStr = (0, _g.convertToPath)(new _g.Polygon({\n      style: {\n        points: [[0, 0], [50, 50], [50, 100]],\n        transform: 'translate(0, 300px)'\n      }\n    }));\n    var pathE = new _g.Path({\n      style: {\n        path: path1Str,\n        stroke: '#F04864'\n      }\n    });\n    canvas.appendChild(pathE);\n    pathE.animate([{\n      path: path1Str\n    }, {\n      path: polygonPathStr\n    }], {\n      duration: 2500,\n      easing: 'ease',\n      iterations: Infinity,\n      direction: 'alternate'\n    });\n    /**\n     * Rect -> Circle\n     */\n\n    var rectPathStr = (0, _g.convertToPath)(new _g.Rect({\n      style: {\n        x: 300,\n        y: 200,\n        width: 200,\n        height: 100,\n        transformOrigin: 'center'\n      }\n    }));\n    var pathF = new _g.Path({\n      style: {\n        path: rectPathStr,\n        stroke: '#F04864',\n        fill: '',\n        opacity: 0.5,\n        lineWidth: 10\n      }\n    });\n    canvas.appendChild(pathF);\n    pathF.animate([{\n      path: rectPathStr,\n      stroke: '#F04864',\n      fill: 'blue'\n    }, {\n      path: circlePathStr,\n      stroke: 'blue',\n      fill: '#F04864'\n    }], {\n      duration: 2500,\n      easing: 'ease',\n      iterations: Infinity,\n      direction: 'alternate'\n    });\n    /**\n     * Rect -> Path\n     */\n\n    var starPath = new _g.Path({\n      style: {\n        path: 'M301.113,12.011l99.25,179.996l201.864,38.778L461.706,380.808l25.508,203.958l-186.101-87.287L115.01,584.766l25.507-203.958L0,230.785l201.86-38.778L301.113,12.011'\n      }\n    });\n    starPath.scale(0.2);\n    starPath.translate(200, 200);\n    var pathG = new _g.Path({\n      style: {\n        path: rectPathStr,\n        lineWidth: 2\n      }\n    });\n    canvas.appendChild(pathG);\n    pathG.animate([{\n      path: rectPathStr,\n      stroke: '#F04864',\n      fill: 'blue'\n    }, {\n      path: (0, _g.convertToPath)(starPath),\n      stroke: 'blue',\n      fill: '#F04864'\n    }], {\n      duration: 2500,\n      easing: 'ease',\n      iterations: Infinity,\n      direction: 'alternate'\n    });\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n});"},{"relativePath":"animation/demo/sequence.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/animation/demo/sequence.js","order":4,"filename":"sequence.js","title":{"zh":"连续动画","en":"Sequence of animations"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*hafUTp9MrfYAAAAAAAAAAABkARQnAQ","source":"import { Canvas, CanvasEvent, Circle } from '@antv/g';\nimport { Renderer as CanvasRenderer } from '@antv/g-canvas';\nimport { Renderer as CanvaskitRenderer } from '@antv/g-canvaskit';\nimport { Renderer as SVGRenderer } from '@antv/g-svg';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport { Renderer as WebGPURenderer } from '@antv/g-webgpu';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst canvasRenderer = new CanvasRenderer();\nconst webglRenderer = new WebGLRenderer();\nconst svgRenderer = new SVGRenderer();\nconst canvaskitRenderer = new CanvaskitRenderer({\n  wasmDir: '/',\n  fonts: [\n    {\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf',\n    },\n  ],\n});\nconst webgpuRenderer = new WebGPURenderer();\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer: canvasRenderer,\n});\n\nconst circle = new Circle({\n  style: {\n    cx: 200,\n    cy: 200,\n    r: 60,\n    fill: '#1890FF',\n    stroke: '#F04864',\n    lineWidth: 4,\n    shadowColor: 'black',\n    shadowBlur: 30,\n  },\n});\n\ncanvas.addEventListener(CanvasEvent.READY, () => {\n  canvas.appendChild(circle);\n\n  (async () => {\n    const moveRight = circle.animate(\n      [\n        {\n          transform: 'translate(0)',\n        },\n        {\n          transform: 'translate(100px)',\n        },\n      ],\n      {\n        duration: 1000,\n        easing: 'cubic-bezier(0.250, 0.460, 0.450, 0.940)',\n        fill: 'both',\n      },\n    );\n    await moveRight.finished;\n\n    const moveDown = circle.animate(\n      [\n        {\n          transform: 'translate(100px)',\n        },\n        {\n          transform: 'translate(100px, 100px)',\n        },\n      ],\n      {\n        duration: 1000,\n        easing: 'cubic-bezier(0.250, 0.460, 0.450, 0.940)',\n        fill: 'both',\n      },\n    );\n    await moveDown.finished;\n\n    const moveLeft = circle.animate(\n      [\n        {\n          transform: 'translate(100px, 100px)',\n        },\n        {\n          transform: 'translate(0, 100px)',\n        },\n      ],\n      {\n        duration: 1000,\n        easing: 'cubic-bezier(0.250, 0.460, 0.450, 0.940)',\n        fill: 'both',\n      },\n    );\n    await moveLeft.finished;\n\n    const moveUp = circle.animate(\n      [\n        {\n          transform: 'translate(0, 100px)',\n        },\n        {\n          transform: 'translate(0, 0)',\n        },\n      ],\n      {\n        duration: 1000,\n        easing: 'cubic-bezier(0.250, 0.460, 0.450, 0.940)',\n        fill: 'both',\n      },\n    );\n    await moveUp.finished;\n  })();\n});\n\n// stats\nconst stats = new Stats();\nstats.showPanel(0);\nconst $stats = stats.dom;\n$stats.style.position = 'absolute';\n$stats.style.left = '0px';\n$stats.style.top = '0px';\nconst $wrapper = document.getElementById('container');\n$wrapper.appendChild($stats);\ncanvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n  if (stats) {\n    stats.update();\n  }\n});\n\n// GUI\nconst gui = new lil.GUI({ autoPlace: false });\n$wrapper.appendChild(gui.domElement);\nconst rendererFolder = gui.addFolder('renderer');\nconst rendererConfig = {\n  renderer: 'canvas',\n};\nrendererFolder\n  .add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit'])\n  .onChange((rendererName) => {\n    let renderer;\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n    canvas.setRenderer(renderer);\n  });\nrendererFolder.open();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-canvas\", \"@antv/g-canvaskit\", \"@antv/g-svg\", \"@antv/g-webgl\", \"@antv/g-webgpu\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-canvas\"), require(\"@antv/g-canvaskit\"), require(\"@antv/g-svg\"), require(\"@antv/g-webgl\"), require(\"@antv/g-webgpu\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gCanvas, global.gCanvaskit, global.gSvg, global.gWebgl, global.gWebgpu, global.lilGui, global.stats);\n    global.sequence = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gCanvas, _gCanvaskit, _gSvg, _gWebgl, _gWebgpu, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // create a renderer\n  var canvasRenderer = new _gCanvas.Renderer();\n  var webglRenderer = new _gWebgl.Renderer();\n  var svgRenderer = new _gSvg.Renderer();\n  var canvaskitRenderer = new _gCanvaskit.Renderer({\n    wasmDir: '/',\n    fonts: [{\n      name: 'sans-serif',\n      url: '/NotoSans-Regular.ttf'\n    }]\n  });\n  var webgpuRenderer = new _gWebgpu.Renderer(); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: canvasRenderer\n  });\n  var circle = new _g.Circle({\n    style: {\n      cx: 200,\n      cy: 200,\n      r: 60,\n      fill: '#1890FF',\n      stroke: '#F04864',\n      lineWidth: 4,\n      shadowColor: 'black',\n      shadowBlur: 30\n    }\n  });\n  canvas.addEventListener(_g.CanvasEvent.READY, function () {\n    canvas.appendChild(circle);\n\n    (async function () {\n      var moveRight = circle.animate([{\n        transform: 'translate(0)'\n      }, {\n        transform: 'translate(100px)'\n      }], {\n        duration: 1000,\n        easing: 'cubic-bezier(0.250, 0.460, 0.450, 0.940)',\n        fill: 'both'\n      });\n      await moveRight.finished;\n      var moveDown = circle.animate([{\n        transform: 'translate(100px)'\n      }, {\n        transform: 'translate(100px, 100px)'\n      }], {\n        duration: 1000,\n        easing: 'cubic-bezier(0.250, 0.460, 0.450, 0.940)',\n        fill: 'both'\n      });\n      await moveDown.finished;\n      var moveLeft = circle.animate([{\n        transform: 'translate(100px, 100px)'\n      }, {\n        transform: 'translate(0, 100px)'\n      }], {\n        duration: 1000,\n        easing: 'cubic-bezier(0.250, 0.460, 0.450, 0.940)',\n        fill: 'both'\n      });\n      await moveLeft.finished;\n      var moveUp = circle.animate([{\n        transform: 'translate(0, 100px)'\n      }, {\n        transform: 'translate(0, 0)'\n      }], {\n        duration: 1000,\n        easing: 'cubic-bezier(0.250, 0.460, 0.450, 0.940)',\n        fill: 'both'\n      });\n      await moveUp.finished;\n    })();\n  }); // stats\n\n  var stats = new _stats.default();\n  stats.showPanel(0);\n  var $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  var $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n    if (stats) {\n      stats.update();\n    }\n  }); // GUI\n\n  var gui = new lil.GUI({\n    autoPlace: false\n  });\n  $wrapper.appendChild(gui.domElement);\n  var rendererFolder = gui.addFolder('renderer');\n  var rendererConfig = {\n    renderer: 'canvas'\n  };\n  rendererFolder.add(rendererConfig, 'renderer', ['canvas', 'svg', 'webgl', 'webgpu', 'canvaskit']).onChange(function (rendererName) {\n    var renderer;\n\n    if (rendererName === 'canvas') {\n      renderer = canvasRenderer;\n    } else if (rendererName === 'svg') {\n      renderer = svgRenderer;\n    } else if (rendererName === 'webgl') {\n      renderer = webglRenderer;\n    } else if (rendererName === 'webgpu') {\n      renderer = webgpuRenderer;\n    } else if (rendererName === 'canvaskit') {\n      renderer = canvaskitRenderer;\n    }\n\n    canvas.setRenderer(renderer);\n  });\n  rendererFolder.open();\n});"},{"relativePath":"3d/demo/buffer-geometry.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/3d/demo/buffer-geometry.js","order":8,"filename":"buffer-geometry.js","title":{"zh":"自定义 Geometry","en":"Use BufferGeometry"},"source":"import { Canvas, CanvasEvent } from '@antv/g';\nimport { Renderer } from '@antv/g-webgl';\nimport {\n  MeshBasicMaterial,\n  BufferGeometry,\n  Mesh,\n  VertexBufferFrequency,\n  Format,\n  VertexAttributeBufferIndex,\n  VertexAttributeLocation,\n  Plugin as Plugin3D,\n} from '@antv/g-plugin-3d';\nimport { Plugin as PluginControl } from '@antv/g-plugin-control';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst renderer = new Renderer();\nrenderer.registerPlugin(new Plugin3D());\nrenderer.registerPlugin(new PluginControl());\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer,\n});\n\n(async () => {\n  // wait for canvas' initialization complete\n  await canvas.ready;\n\n  // use GPU device\n  const plugin = renderer.getPlugin('device-renderer');\n  const device = plugin.getDevice();\n\n  // create buffer geometry\n  const bufferGeometry = new BufferGeometry(device);\n  bufferGeometry.setVertexBuffer({\n    bufferIndex: VertexAttributeBufferIndex.POSITION,\n    byteStride: 4 * 3,\n    frequency: VertexBufferFrequency.PerVertex,\n    attributes: [\n      {\n        format: Format.F32_RGB,\n        bufferByteOffset: 4 * 0,\n        location: VertexAttributeLocation.POSITION,\n      },\n    ],\n    // use 6 vertices\n    data: Float32Array.from([\n      -100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, -100.0, 100.0, 100.0, -100.0, 100.0, -100.0,\n      -100.0, 100.0, -100.0, 100.0, 100.0,\n    ]),\n  });\n  // draw 6 vertices\n  bufferGeometry.vertexCount = 6;\n  // start from...\n  // bufferGeometry.primitiveStart = 0;\n\n  const basicMaterial = new MeshBasicMaterial(device);\n\n  const mesh = new Mesh({\n    style: {\n      fill: '#1890FF',\n      opacity: 1,\n      geometry: bufferGeometry,\n      material: basicMaterial,\n    },\n  });\n  mesh.setPosition(300, 250, 0);\n  canvas.appendChild(mesh);\n\n  // stats\n  const stats = new Stats();\n  stats.showPanel(0);\n  const $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  const $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n    if (stats) {\n      stats.update();\n    }\n  });\n})();\n","babeledSource":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-webgl\", \"@antv/g-plugin-3d\", \"@antv/g-plugin-control\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-webgl\"), require(\"@antv/g-plugin-3d\"), require(\"@antv/g-plugin-control\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gWebgl, global.gPlugin3d, global.gPluginControl, global.stats);\n    global.bufferGeometry = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gWebgl, _gPlugin3d, _gPluginControl, _stats) {\n  \"use strict\";\n\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  // create a renderer\n  var renderer = new _gWebgl.Renderer();\n  renderer.registerPlugin(new _gPlugin3d.Plugin());\n  renderer.registerPlugin(new _gPluginControl.Plugin()); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: renderer\n  });\n\n  (async function () {\n    // wait for canvas' initialization complete\n    await canvas.ready; // use GPU device\n\n    var plugin = renderer.getPlugin('device-renderer');\n    var device = plugin.getDevice(); // create buffer geometry\n\n    var bufferGeometry = new _gPlugin3d.BufferGeometry(device);\n    bufferGeometry.setVertexBuffer({\n      bufferIndex: _gPlugin3d.VertexAttributeBufferIndex.POSITION,\n      byteStride: 4 * 3,\n      frequency: _gPlugin3d.VertexBufferFrequency.PerVertex,\n      attributes: [{\n        format: _gPlugin3d.Format.F32_RGB,\n        bufferByteOffset: 4 * 0,\n        location: _gPlugin3d.VertexAttributeLocation.POSITION\n      }],\n      // use 6 vertices\n      data: Float32Array.from([-100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, -100.0, 100.0, 100.0, -100.0, 100.0, -100.0, -100.0, 100.0, -100.0, 100.0, 100.0])\n    }); // draw 6 vertices\n\n    bufferGeometry.vertexCount = 6; // start from...\n    // bufferGeometry.primitiveStart = 0;\n\n    var basicMaterial = new _gPlugin3d.MeshBasicMaterial(device);\n    var mesh = new _gPlugin3d.Mesh({\n      style: {\n        fill: '#1890FF',\n        opacity: 1,\n        geometry: bufferGeometry,\n        material: basicMaterial\n      }\n    });\n    mesh.setPosition(300, 250, 0);\n    canvas.appendChild(mesh); // stats\n\n    var stats = new _stats.default();\n    stats.showPanel(0);\n    var $stats = stats.dom;\n    $stats.style.position = 'absolute';\n    $stats.style.left = '0px';\n    $stats.style.top = '0px';\n    var $wrapper = document.getElementById('container');\n    $wrapper.appendChild($stats);\n    canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n      if (stats) {\n        stats.update();\n      }\n    });\n  })();\n});"},{"relativePath":"3d/demo/cube.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/3d/demo/cube.js","order":2,"filename":"cube.js","title":{"zh":"立方体","en":"Cube"},"source":"import { Canvas, CanvasEvent } from '@antv/g';\nimport { Renderer } from '@antv/g-webgl';\nimport {\n  MeshBasicMaterial,\n  CubeGeometry,\n  Mesh,\n  Format,\n  TextureDimension,\n  TextureUsage,\n  Plugin as Plugin3D,\n} from '@antv/g-plugin-3d';\nimport { Plugin as PluginControl } from '@antv/g-plugin-control';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst renderer = new Renderer();\nrenderer.registerPlugin(new Plugin3D());\nrenderer.registerPlugin(new PluginControl());\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer,\n});\n\n(async () => {\n  // wait for canvas' initialization complete\n  await canvas.ready;\n\n  // use GPU device\n  const plugin = renderer.getPlugin('device-renderer');\n  const device = plugin.getDevice();\n\n  // 1. load texture with URL\n  const map = plugin.loadTexture(\n    'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*_aqoS73Se3sAAAAAAAAAAAAAARQnAQ',\n  );\n\n  // 2. or create texture from scratch\n  // const map = device.createTexture({\n  //   pixelFormat: Format.U8_RGBA_NORM,\n  //   width: 1,\n  //   height: 1,\n  //   depth: 1,\n  //   numLevels: 1,\n  //   dimension: TextureDimension.n2D,\n  //   usage: TextureUsage.Sampled,\n  // });\n  // // load image\n  // const image = new window.Image();\n  // image.onload = () => {\n  //   map.setImageData(image);\n  //   canvas.getRenderingService().dirtify();\n  // };\n  // image.onerror = () => {};\n  // image.crossOrigin = 'Anonymous';\n  // image.src =\n  //   'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*_aqoS73Se3sAAAAAAAAAAAAAARQnAQ';\n\n  const cubeGeometry = new CubeGeometry(device, {\n    width: 200,\n    height: 200,\n    depth: 200,\n  });\n  const basicMaterial = new MeshBasicMaterial(device, {\n    // wireframe: true,\n    map,\n  });\n\n  const cube = new Mesh({\n    style: {\n      fill: '#1890FF',\n      opacity: 1,\n      geometry: cubeGeometry,\n      material: basicMaterial,\n    },\n  });\n\n  cube.setPosition(300, 250, 0);\n\n  canvas.appendChild(cube);\n\n  // stats\n  const stats = new Stats();\n  stats.showPanel(0);\n  const $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  const $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n    if (stats) {\n      stats.update();\n    }\n    // cube.rotate(0, 1, 0);\n  });\n\n  // GUI\n  const gui = new lil.GUI({ autoPlace: false });\n  $wrapper.appendChild(gui.domElement);\n\n  const cubeFolder = gui.addFolder('cube');\n  const cubeConfig = {\n    opacity: 1,\n    fill: '#1890FF',\n  };\n  cubeFolder.add(cubeConfig, 'opacity', 0, 1, 0.1).onChange((opacity) => {\n    cube.style.opacity = opacity;\n  });\n  cubeFolder.addColor(cubeConfig, 'fill').onChange((color) => {\n    cube.style.fill = color;\n  });\n  cubeFolder.open();\n\n  const geometryFolder = gui.addFolder('geometry');\n  const geometryConfig = {\n    width: 200,\n    height: 200,\n    depth: 200,\n    widthSegments: 1,\n    heightSegments: 1,\n    depthSegments: 1,\n  };\n  geometryFolder.add(geometryConfig, 'width', 50, 300).onChange((width) => {\n    cubeGeometry.width = width;\n  });\n  geometryFolder.add(geometryConfig, 'height', 50, 300).onChange((height) => {\n    cubeGeometry.height = height;\n  });\n  geometryFolder.add(geometryConfig, 'depth', 50, 300).onChange((depth) => {\n    cubeGeometry.depth = depth;\n  });\n  geometryFolder.add(geometryConfig, 'widthSegments', 1, 10, 1).onChange((widthSegments) => {\n    cubeGeometry.widthSegments = widthSegments;\n  });\n  geometryFolder.add(geometryConfig, 'heightSegments', 1, 10, 1).onChange((heightSegments) => {\n    cubeGeometry.heightSegments = heightSegments;\n  });\n  geometryFolder.add(geometryConfig, 'depthSegments', 1, 10, 1).onChange((depthSegments) => {\n    cubeGeometry.depthSegments = depthSegments;\n  });\n  geometryFolder.open();\n\n  const materialFolder = gui.addFolder('material');\n  const materialConfig = {\n    wireframe: false,\n    map: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*_aqoS73Se3sAAAAAAAAAAAAAARQnAQ',\n  };\n  materialFolder.add(materialConfig, 'wireframe').onChange((wireframe) => {\n    cube.style.material.wireframe = !!wireframe;\n  });\n  materialFolder\n    .add(materialConfig, 'map', [\n      'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*_aqoS73Se3sAAAAAAAAAAAAAARQnAQ',\n      'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*8TlCRIsKeUkAAAAAAAAAAAAAARQnAQ',\n      'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ',\n      'none',\n    ])\n    .onChange((mapURL) => {\n      if (mapURL === 'none') {\n        cube.style.material.map = null;\n      } else {\n        cube.style.material.map = plugin.loadTexture(mapURL);\n      }\n    });\n  materialFolder.open();\n})();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-webgl\", \"@antv/g-plugin-3d\", \"@antv/g-plugin-control\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-webgl\"), require(\"@antv/g-plugin-3d\"), require(\"@antv/g-plugin-control\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gWebgl, global.gPlugin3d, global.gPluginControl, global.lilGui, global.stats);\n    global.cube = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gWebgl, _gPlugin3d, _gPluginControl, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // create a renderer\n  var renderer = new _gWebgl.Renderer();\n  renderer.registerPlugin(new _gPlugin3d.Plugin());\n  renderer.registerPlugin(new _gPluginControl.Plugin()); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: renderer\n  });\n\n  (async function () {\n    // wait for canvas' initialization complete\n    await canvas.ready; // use GPU device\n\n    var plugin = renderer.getPlugin('device-renderer');\n    var device = plugin.getDevice(); // 1. load texture with URL\n\n    var map = plugin.loadTexture('https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*_aqoS73Se3sAAAAAAAAAAAAAARQnAQ'); // 2. or create texture from scratch\n    // const map = device.createTexture({\n    //   pixelFormat: Format.U8_RGBA_NORM,\n    //   width: 1,\n    //   height: 1,\n    //   depth: 1,\n    //   numLevels: 1,\n    //   dimension: TextureDimension.n2D,\n    //   usage: TextureUsage.Sampled,\n    // });\n    // // load image\n    // const image = new window.Image();\n    // image.onload = () => {\n    //   map.setImageData(image);\n    //   canvas.getRenderingService().dirtify();\n    // };\n    // image.onerror = () => {};\n    // image.crossOrigin = 'Anonymous';\n    // image.src =\n    //   'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*_aqoS73Se3sAAAAAAAAAAAAAARQnAQ';\n\n    var cubeGeometry = new _gPlugin3d.CubeGeometry(device, {\n      width: 200,\n      height: 200,\n      depth: 200\n    });\n    var basicMaterial = new _gPlugin3d.MeshBasicMaterial(device, {\n      // wireframe: true,\n      map: map\n    });\n    var cube = new _gPlugin3d.Mesh({\n      style: {\n        fill: '#1890FF',\n        opacity: 1,\n        geometry: cubeGeometry,\n        material: basicMaterial\n      }\n    });\n    cube.setPosition(300, 250, 0);\n    canvas.appendChild(cube); // stats\n\n    var stats = new _stats.default();\n    stats.showPanel(0);\n    var $stats = stats.dom;\n    $stats.style.position = 'absolute';\n    $stats.style.left = '0px';\n    $stats.style.top = '0px';\n    var $wrapper = document.getElementById('container');\n    $wrapper.appendChild($stats);\n    canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n      if (stats) {\n        stats.update();\n      } // cube.rotate(0, 1, 0);\n\n    }); // GUI\n\n    var gui = new lil.GUI({\n      autoPlace: false\n    });\n    $wrapper.appendChild(gui.domElement);\n    var cubeFolder = gui.addFolder('cube');\n    var cubeConfig = {\n      opacity: 1,\n      fill: '#1890FF'\n    };\n    cubeFolder.add(cubeConfig, 'opacity', 0, 1, 0.1).onChange(function (opacity) {\n      cube.style.opacity = opacity;\n    });\n    cubeFolder.addColor(cubeConfig, 'fill').onChange(function (color) {\n      cube.style.fill = color;\n    });\n    cubeFolder.open();\n    var geometryFolder = gui.addFolder('geometry');\n    var geometryConfig = {\n      width: 200,\n      height: 200,\n      depth: 200,\n      widthSegments: 1,\n      heightSegments: 1,\n      depthSegments: 1\n    };\n    geometryFolder.add(geometryConfig, 'width', 50, 300).onChange(function (width) {\n      cubeGeometry.width = width;\n    });\n    geometryFolder.add(geometryConfig, 'height', 50, 300).onChange(function (height) {\n      cubeGeometry.height = height;\n    });\n    geometryFolder.add(geometryConfig, 'depth', 50, 300).onChange(function (depth) {\n      cubeGeometry.depth = depth;\n    });\n    geometryFolder.add(geometryConfig, 'widthSegments', 1, 10, 1).onChange(function (widthSegments) {\n      cubeGeometry.widthSegments = widthSegments;\n    });\n    geometryFolder.add(geometryConfig, 'heightSegments', 1, 10, 1).onChange(function (heightSegments) {\n      cubeGeometry.heightSegments = heightSegments;\n    });\n    geometryFolder.add(geometryConfig, 'depthSegments', 1, 10, 1).onChange(function (depthSegments) {\n      cubeGeometry.depthSegments = depthSegments;\n    });\n    geometryFolder.open();\n    var materialFolder = gui.addFolder('material');\n    var materialConfig = {\n      wireframe: false,\n      map: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*_aqoS73Se3sAAAAAAAAAAAAAARQnAQ'\n    };\n    materialFolder.add(materialConfig, 'wireframe').onChange(function (wireframe) {\n      cube.style.material.wireframe = !!wireframe;\n    });\n    materialFolder.add(materialConfig, 'map', ['https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*_aqoS73Se3sAAAAAAAAAAAAAARQnAQ', 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*8TlCRIsKeUkAAAAAAAAAAAAAARQnAQ', 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ', 'none']).onChange(function (mapURL) {\n      if (mapURL === 'none') {\n        cube.style.material.map = null;\n      } else {\n        cube.style.material.map = plugin.loadTexture(mapURL);\n      }\n    });\n    materialFolder.open();\n  })();\n});"},{"relativePath":"3d/demo/force-3d.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/3d/demo/force-3d.js","order":6,"filename":"force-3d.js","title":{"zh":"3D 力导布局","en":"Force 3D"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*3XFxQKWOeKoAAAAAAAAAAAAAARQnAQ","source":"import { Canvas, CanvasEvent, Line } from '@antv/g';\nimport { Renderer } from '@antv/g-webgl';\nimport {\n  MeshPhongMaterial,\n  SphereGeometry,\n  DirectionalLight,\n  Mesh,\n  Plugin as Plugin3D,\n} from '@antv/g-plugin-3d';\nimport { Plugin as PluginControl } from '@antv/g-plugin-control';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\nimport { forceLink, forceSimulation, forceManyBody, forceCenter } from 'd3-force-3d';\n\n// https://bl.ocks.org/vasturiano/f59675656258d3f490e9faa40828c0e7\nconst dataset = {\n  nodes: [\n    {\n      id: 'Myriel',\n      group: 1,\n    },\n    {\n      id: 'Napoleon',\n      group: 1,\n    },\n    {\n      id: 'Mlle.Baptistine',\n      group: 1,\n    },\n    {\n      id: 'Mme.Magloire',\n      group: 1,\n    },\n    {\n      id: 'CountessdeLo',\n      group: 1,\n    },\n    {\n      id: 'Geborand',\n      group: 1,\n    },\n    {\n      id: 'Champtercier',\n      group: 1,\n    },\n    {\n      id: 'Cravatte',\n      group: 1,\n    },\n    {\n      id: 'Count',\n      group: 1,\n    },\n    {\n      id: 'OldMan',\n      group: 1,\n    },\n    {\n      id: 'Labarre',\n      group: 2,\n    },\n    {\n      id: 'Valjean',\n      group: 2,\n    },\n    {\n      id: 'Marguerite',\n      group: 3,\n    },\n    {\n      id: 'Mme.deR',\n      group: 2,\n    },\n    {\n      id: 'Isabeau',\n      group: 2,\n    },\n    {\n      id: 'Gervais',\n      group: 2,\n    },\n    {\n      id: 'Tholomyes',\n      group: 3,\n    },\n    {\n      id: 'Listolier',\n      group: 3,\n    },\n    {\n      id: 'Fameuil',\n      group: 3,\n    },\n    {\n      id: 'Blacheville',\n      group: 3,\n    },\n    {\n      id: 'Favourite',\n      group: 3,\n    },\n    {\n      id: 'Dahlia',\n      group: 3,\n    },\n    {\n      id: 'Zephine',\n      group: 3,\n    },\n    {\n      id: 'Fantine',\n      group: 3,\n    },\n    {\n      id: 'Mme.Thenardier',\n      group: 4,\n    },\n    {\n      id: 'Thenardier',\n      group: 4,\n    },\n    {\n      id: 'Cosette',\n      group: 5,\n    },\n    {\n      id: 'Javert',\n      group: 4,\n    },\n    {\n      id: 'Fauchelevent',\n      group: 0,\n    },\n    {\n      id: 'Bamatabois',\n      group: 2,\n    },\n    {\n      id: 'Perpetue',\n      group: 3,\n    },\n    {\n      id: 'Simplice',\n      group: 2,\n    },\n    {\n      id: 'Scaufflaire',\n      group: 2,\n    },\n    {\n      id: 'Woman1',\n      group: 2,\n    },\n    {\n      id: 'Judge',\n      group: 2,\n    },\n    {\n      id: 'Champmathieu',\n      group: 2,\n    },\n    {\n      id: 'Brevet',\n      group: 2,\n    },\n    {\n      id: 'Chenildieu',\n      group: 2,\n    },\n    {\n      id: 'Cochepaille',\n      group: 2,\n    },\n    {\n      id: 'Pontmercy',\n      group: 4,\n    },\n    {\n      id: 'Boulatruelle',\n      group: 6,\n    },\n    {\n      id: 'Eponine',\n      group: 4,\n    },\n    {\n      id: 'Anzelma',\n      group: 4,\n    },\n    {\n      id: 'Woman2',\n      group: 5,\n    },\n    {\n      id: 'MotherInnocent',\n      group: 0,\n    },\n    {\n      id: 'Gribier',\n      group: 0,\n    },\n    {\n      id: 'Jondrette',\n      group: 7,\n    },\n    {\n      id: 'Mme.Burgon',\n      group: 7,\n    },\n    {\n      id: 'Gavroche',\n      group: 8,\n    },\n    {\n      id: 'Gillenormand',\n      group: 5,\n    },\n    {\n      id: 'Magnon',\n      group: 5,\n    },\n    {\n      id: 'Mlle.Gillenormand',\n      group: 5,\n    },\n    {\n      id: 'Mme.Pontmercy',\n      group: 5,\n    },\n    {\n      id: 'Mlle.Vaubois',\n      group: 5,\n    },\n    {\n      id: 'Lt.Gillenormand',\n      group: 5,\n    },\n    {\n      id: 'Marius',\n      group: 8,\n    },\n    {\n      id: 'BaronessT',\n      group: 5,\n    },\n    {\n      id: 'Mabeuf',\n      group: 8,\n    },\n    {\n      id: 'Enjolras',\n      group: 8,\n    },\n    {\n      id: 'Combeferre',\n      group: 8,\n    },\n    {\n      id: 'Prouvaire',\n      group: 8,\n    },\n    {\n      id: 'Feuilly',\n      group: 8,\n    },\n    {\n      id: 'Courfeyrac',\n      group: 8,\n    },\n    {\n      id: 'Bahorel',\n      group: 8,\n    },\n    {\n      id: 'Bossuet',\n      group: 8,\n    },\n    {\n      id: 'Joly',\n      group: 8,\n    },\n    {\n      id: 'Grantaire',\n      group: 8,\n    },\n    {\n      id: 'MotherPlutarch',\n      group: 9,\n    },\n    {\n      id: 'Gueulemer',\n      group: 4,\n    },\n    {\n      id: 'Babet',\n      group: 4,\n    },\n    {\n      id: 'Claquesous',\n      group: 4,\n    },\n    {\n      id: 'Montparnasse',\n      group: 4,\n    },\n    {\n      id: 'Toussaint',\n      group: 5,\n    },\n    {\n      id: 'Child1',\n      group: 10,\n    },\n    {\n      id: 'Child2',\n      group: 10,\n    },\n    {\n      id: 'Brujon',\n      group: 4,\n    },\n    {\n      id: 'Mme.Hucheloup',\n      group: 8,\n    },\n  ],\n  links: [\n    {\n      source: 'Napoleon',\n      target: 'Myriel',\n      value: 1,\n    },\n    {\n      source: 'Mlle.Baptistine',\n      target: 'Myriel',\n      value: 8,\n    },\n    {\n      source: 'Mme.Magloire',\n      target: 'Myriel',\n      value: 10,\n    },\n    {\n      source: 'Mme.Magloire',\n      target: 'Mlle.Baptistine',\n      value: 6,\n    },\n    {\n      source: 'CountessdeLo',\n      target: 'Myriel',\n      value: 1,\n    },\n    {\n      source: 'Geborand',\n      target: 'Myriel',\n      value: 1,\n    },\n    {\n      source: 'Champtercier',\n      target: 'Myriel',\n      value: 1,\n    },\n    {\n      source: 'Cravatte',\n      target: 'Myriel',\n      value: 1,\n    },\n    {\n      source: 'Count',\n      target: 'Myriel',\n      value: 2,\n    },\n    {\n      source: 'OldMan',\n      target: 'Myriel',\n      value: 1,\n    },\n    {\n      source: 'Valjean',\n      target: 'Labarre',\n      value: 1,\n    },\n    {\n      source: 'Valjean',\n      target: 'Mme.Magloire',\n      value: 3,\n    },\n    {\n      source: 'Valjean',\n      target: 'Mlle.Baptistine',\n      value: 3,\n    },\n    {\n      source: 'Valjean',\n      target: 'Myriel',\n      value: 5,\n    },\n    {\n      source: 'Marguerite',\n      target: 'Valjean',\n      value: 1,\n    },\n    {\n      source: 'Mme.deR',\n      target: 'Valjean',\n      value: 1,\n    },\n    {\n      source: 'Isabeau',\n      target: 'Valjean',\n      value: 1,\n    },\n    {\n      source: 'Gervais',\n      target: 'Valjean',\n      value: 1,\n    },\n    {\n      source: 'Listolier',\n      target: 'Tholomyes',\n      value: 4,\n    },\n    {\n      source: 'Fameuil',\n      target: 'Tholomyes',\n      value: 4,\n    },\n    {\n      source: 'Fameuil',\n      target: 'Listolier',\n      value: 4,\n    },\n    {\n      source: 'Blacheville',\n      target: 'Tholomyes',\n      value: 4,\n    },\n    {\n      source: 'Blacheville',\n      target: 'Listolier',\n      value: 4,\n    },\n    {\n      source: 'Blacheville',\n      target: 'Fameuil',\n      value: 4,\n    },\n    {\n      source: 'Favourite',\n      target: 'Tholomyes',\n      value: 3,\n    },\n    {\n      source: 'Favourite',\n      target: 'Listolier',\n      value: 3,\n    },\n    {\n      source: 'Favourite',\n      target: 'Fameuil',\n      value: 3,\n    },\n    {\n      source: 'Favourite',\n      target: 'Blacheville',\n      value: 4,\n    },\n    {\n      source: 'Dahlia',\n      target: 'Tholomyes',\n      value: 3,\n    },\n    {\n      source: 'Dahlia',\n      target: 'Listolier',\n      value: 3,\n    },\n    {\n      source: 'Dahlia',\n      target: 'Fameuil',\n      value: 3,\n    },\n    {\n      source: 'Dahlia',\n      target: 'Blacheville',\n      value: 3,\n    },\n    {\n      source: 'Dahlia',\n      target: 'Favourite',\n      value: 5,\n    },\n    {\n      source: 'Zephine',\n      target: 'Tholomyes',\n      value: 3,\n    },\n    {\n      source: 'Zephine',\n      target: 'Listolier',\n      value: 3,\n    },\n    {\n      source: 'Zephine',\n      target: 'Fameuil',\n      value: 3,\n    },\n    {\n      source: 'Zephine',\n      target: 'Blacheville',\n      value: 3,\n    },\n    {\n      source: 'Zephine',\n      target: 'Favourite',\n      value: 4,\n    },\n    {\n      source: 'Zephine',\n      target: 'Dahlia',\n      value: 4,\n    },\n    {\n      source: 'Fantine',\n      target: 'Tholomyes',\n      value: 3,\n    },\n    {\n      source: 'Fantine',\n      target: 'Listolier',\n      value: 3,\n    },\n    {\n      source: 'Fantine',\n      target: 'Fameuil',\n      value: 3,\n    },\n    {\n      source: 'Fantine',\n      target: 'Blacheville',\n      value: 3,\n    },\n    {\n      source: 'Fantine',\n      target: 'Favourite',\n      value: 4,\n    },\n    {\n      source: 'Fantine',\n      target: 'Dahlia',\n      value: 4,\n    },\n    {\n      source: 'Fantine',\n      target: 'Zephine',\n      value: 4,\n    },\n    {\n      source: 'Fantine',\n      target: 'Marguerite',\n      value: 2,\n    },\n    {\n      source: 'Fantine',\n      target: 'Valjean',\n      value: 9,\n    },\n    {\n      source: 'Mme.Thenardier',\n      target: 'Fantine',\n      value: 2,\n    },\n    {\n      source: 'Mme.Thenardier',\n      target: 'Valjean',\n      value: 7,\n    },\n    {\n      source: 'Thenardier',\n      target: 'Mme.Thenardier',\n      value: 13,\n    },\n    {\n      source: 'Thenardier',\n      target: 'Fantine',\n      value: 1,\n    },\n    {\n      source: 'Thenardier',\n      target: 'Valjean',\n      value: 12,\n    },\n    {\n      source: 'Cosette',\n      target: 'Mme.Thenardier',\n      value: 4,\n    },\n    {\n      source: 'Cosette',\n      target: 'Valjean',\n      value: 31,\n    },\n    {\n      source: 'Cosette',\n      target: 'Tholomyes',\n      value: 1,\n    },\n    {\n      source: 'Cosette',\n      target: 'Thenardier',\n      value: 1,\n    },\n    {\n      source: 'Javert',\n      target: 'Valjean',\n      value: 17,\n    },\n    {\n      source: 'Javert',\n      target: 'Fantine',\n      value: 5,\n    },\n    {\n      source: 'Javert',\n      target: 'Thenardier',\n      value: 5,\n    },\n    {\n      source: 'Javert',\n      target: 'Mme.Thenardier',\n      value: 1,\n    },\n    {\n      source: 'Javert',\n      target: 'Cosette',\n      value: 1,\n    },\n    {\n      source: 'Fauchelevent',\n      target: 'Valjean',\n      value: 8,\n    },\n    {\n      source: 'Fauchelevent',\n      target: 'Javert',\n      value: 1,\n    },\n    {\n      source: 'Bamatabois',\n      target: 'Fantine',\n      value: 1,\n    },\n    {\n      source: 'Bamatabois',\n      target: 'Javert',\n      value: 1,\n    },\n    {\n      source: 'Bamatabois',\n      target: 'Valjean',\n      value: 2,\n    },\n    {\n      source: 'Perpetue',\n      target: 'Fantine',\n      value: 1,\n    },\n    {\n      source: 'Simplice',\n      target: 'Perpetue',\n      value: 2,\n    },\n    {\n      source: 'Simplice',\n      target: 'Valjean',\n      value: 3,\n    },\n    {\n      source: 'Simplice',\n      target: 'Fantine',\n      value: 2,\n    },\n    {\n      source: 'Simplice',\n      target: 'Javert',\n      value: 1,\n    },\n    {\n      source: 'Scaufflaire',\n      target: 'Valjean',\n      value: 1,\n    },\n    {\n      source: 'Woman1',\n      target: 'Valjean',\n      value: 2,\n    },\n    {\n      source: 'Woman1',\n      target: 'Javert',\n      value: 1,\n    },\n    {\n      source: 'Judge',\n      target: 'Valjean',\n      value: 3,\n    },\n    {\n      source: 'Judge',\n      target: 'Bamatabois',\n      value: 2,\n    },\n    {\n      source: 'Champmathieu',\n      target: 'Valjean',\n      value: 3,\n    },\n    {\n      source: 'Champmathieu',\n      target: 'Judge',\n      value: 3,\n    },\n    {\n      source: 'Champmathieu',\n      target: 'Bamatabois',\n      value: 2,\n    },\n    {\n      source: 'Brevet',\n      target: 'Judge',\n      value: 2,\n    },\n    {\n      source: 'Brevet',\n      target: 'Champmathieu',\n      value: 2,\n    },\n    {\n      source: 'Brevet',\n      target: 'Valjean',\n      value: 2,\n    },\n    {\n      source: 'Brevet',\n      target: 'Bamatabois',\n      value: 1,\n    },\n    {\n      source: 'Chenildieu',\n      target: 'Judge',\n      value: 2,\n    },\n    {\n      source: 'Chenildieu',\n      target: 'Champmathieu',\n      value: 2,\n    },\n    {\n      source: 'Chenildieu',\n      target: 'Brevet',\n      value: 2,\n    },\n    {\n      source: 'Chenildieu',\n      target: 'Valjean',\n      value: 2,\n    },\n    {\n      source: 'Chenildieu',\n      target: 'Bamatabois',\n      value: 1,\n    },\n    {\n      source: 'Cochepaille',\n      target: 'Judge',\n      value: 2,\n    },\n    {\n      source: 'Cochepaille',\n      target: 'Champmathieu',\n      value: 2,\n    },\n    {\n      source: 'Cochepaille',\n      target: 'Brevet',\n      value: 2,\n    },\n    {\n      source: 'Cochepaille',\n      target: 'Chenildieu',\n      value: 2,\n    },\n    {\n      source: 'Cochepaille',\n      target: 'Valjean',\n      value: 2,\n    },\n    {\n      source: 'Cochepaille',\n      target: 'Bamatabois',\n      value: 1,\n    },\n    {\n      source: 'Pontmercy',\n      target: 'Thenardier',\n      value: 1,\n    },\n    {\n      source: 'Boulatruelle',\n      target: 'Thenardier',\n      value: 1,\n    },\n    {\n      source: 'Eponine',\n      target: 'Mme.Thenardier',\n      value: 2,\n    },\n    {\n      source: 'Eponine',\n      target: 'Thenardier',\n      value: 3,\n    },\n    {\n      source: 'Anzelma',\n      target: 'Eponine',\n      value: 2,\n    },\n    {\n      source: 'Anzelma',\n      target: 'Thenardier',\n      value: 2,\n    },\n    {\n      source: 'Anzelma',\n      target: 'Mme.Thenardier',\n      value: 1,\n    },\n    {\n      source: 'Woman2',\n      target: 'Valjean',\n      value: 3,\n    },\n    {\n      source: 'Woman2',\n      target: 'Cosette',\n      value: 1,\n    },\n    {\n      source: 'Woman2',\n      target: 'Javert',\n      value: 1,\n    },\n    {\n      source: 'MotherInnocent',\n      target: 'Fauchelevent',\n      value: 3,\n    },\n    {\n      source: 'MotherInnocent',\n      target: 'Valjean',\n      value: 1,\n    },\n    {\n      source: 'Gribier',\n      target: 'Fauchelevent',\n      value: 2,\n    },\n    {\n      source: 'Mme.Burgon',\n      target: 'Jondrette',\n      value: 1,\n    },\n    {\n      source: 'Gavroche',\n      target: 'Mme.Burgon',\n      value: 2,\n    },\n    {\n      source: 'Gavroche',\n      target: 'Thenardier',\n      value: 1,\n    },\n    {\n      source: 'Gavroche',\n      target: 'Javert',\n      value: 1,\n    },\n    {\n      source: 'Gavroche',\n      target: 'Valjean',\n      value: 1,\n    },\n    {\n      source: 'Gillenormand',\n      target: 'Cosette',\n      value: 3,\n    },\n    {\n      source: 'Gillenormand',\n      target: 'Valjean',\n      value: 2,\n    },\n    {\n      source: 'Magnon',\n      target: 'Gillenormand',\n      value: 1,\n    },\n    {\n      source: 'Magnon',\n      target: 'Mme.Thenardier',\n      value: 1,\n    },\n    {\n      source: 'Mlle.Gillenormand',\n      target: 'Gillenormand',\n      value: 9,\n    },\n    {\n      source: 'Mlle.Gillenormand',\n      target: 'Cosette',\n      value: 2,\n    },\n    {\n      source: 'Mlle.Gillenormand',\n      target: 'Valjean',\n      value: 2,\n    },\n    {\n      source: 'Mme.Pontmercy',\n      target: 'Mlle.Gillenormand',\n      value: 1,\n    },\n    {\n      source: 'Mme.Pontmercy',\n      target: 'Pontmercy',\n      value: 1,\n    },\n    {\n      source: 'Mlle.Vaubois',\n      target: 'Mlle.Gillenormand',\n      value: 1,\n    },\n    {\n      source: 'Lt.Gillenormand',\n      target: 'Mlle.Gillenormand',\n      value: 2,\n    },\n    {\n      source: 'Lt.Gillenormand',\n      target: 'Gillenormand',\n      value: 1,\n    },\n    {\n      source: 'Lt.Gillenormand',\n      target: 'Cosette',\n      value: 1,\n    },\n    {\n      source: 'Marius',\n      target: 'Mlle.Gillenormand',\n      value: 6,\n    },\n    {\n      source: 'Marius',\n      target: 'Gillenormand',\n      value: 12,\n    },\n    {\n      source: 'Marius',\n      target: 'Pontmercy',\n      value: 1,\n    },\n    {\n      source: 'Marius',\n      target: 'Lt.Gillenormand',\n      value: 1,\n    },\n    {\n      source: 'Marius',\n      target: 'Cosette',\n      value: 21,\n    },\n    {\n      source: 'Marius',\n      target: 'Valjean',\n      value: 19,\n    },\n    {\n      source: 'Marius',\n      target: 'Tholomyes',\n      value: 1,\n    },\n    {\n      source: 'Marius',\n      target: 'Thenardier',\n      value: 2,\n    },\n    {\n      source: 'Marius',\n      target: 'Eponine',\n      value: 5,\n    },\n    {\n      source: 'Marius',\n      target: 'Gavroche',\n      value: 4,\n    },\n    {\n      source: 'BaronessT',\n      target: 'Gillenormand',\n      value: 1,\n    },\n    {\n      source: 'BaronessT',\n      target: 'Marius',\n      value: 1,\n    },\n    {\n      source: 'Mabeuf',\n      target: 'Marius',\n      value: 1,\n    },\n    {\n      source: 'Mabeuf',\n      target: 'Eponine',\n      value: 1,\n    },\n    {\n      source: 'Mabeuf',\n      target: 'Gavroche',\n      value: 1,\n    },\n    {\n      source: 'Enjolras',\n      target: 'Marius',\n      value: 7,\n    },\n    {\n      source: 'Enjolras',\n      target: 'Gavroche',\n      value: 7,\n    },\n    {\n      source: 'Enjolras',\n      target: 'Javert',\n      value: 6,\n    },\n    {\n      source: 'Enjolras',\n      target: 'Mabeuf',\n      value: 1,\n    },\n    {\n      source: 'Enjolras',\n      target: 'Valjean',\n      value: 4,\n    },\n    {\n      source: 'Combeferre',\n      target: 'Enjolras',\n      value: 15,\n    },\n    {\n      source: 'Combeferre',\n      target: 'Marius',\n      value: 5,\n    },\n    {\n      source: 'Combeferre',\n      target: 'Gavroche',\n      value: 6,\n    },\n    {\n      source: 'Combeferre',\n      target: 'Mabeuf',\n      value: 2,\n    },\n    {\n      source: 'Prouvaire',\n      target: 'Gavroche',\n      value: 1,\n    },\n    {\n      source: 'Prouvaire',\n      target: 'Enjolras',\n      value: 4,\n    },\n    {\n      source: 'Prouvaire',\n      target: 'Combeferre',\n      value: 2,\n    },\n    {\n      source: 'Feuilly',\n      target: 'Gavroche',\n      value: 2,\n    },\n    {\n      source: 'Feuilly',\n      target: 'Enjolras',\n      value: 6,\n    },\n    {\n      source: 'Feuilly',\n      target: 'Prouvaire',\n      value: 2,\n    },\n    {\n      source: 'Feuilly',\n      target: 'Combeferre',\n      value: 5,\n    },\n    {\n      source: 'Feuilly',\n      target: 'Mabeuf',\n      value: 1,\n    },\n    {\n      source: 'Feuilly',\n      target: 'Marius',\n      value: 1,\n    },\n    {\n      source: 'Courfeyrac',\n      target: 'Marius',\n      value: 9,\n    },\n    {\n      source: 'Courfeyrac',\n      target: 'Enjolras',\n      value: 17,\n    },\n    {\n      source: 'Courfeyrac',\n      target: 'Combeferre',\n      value: 13,\n    },\n    {\n      source: 'Courfeyrac',\n      target: 'Gavroche',\n      value: 7,\n    },\n    {\n      source: 'Courfeyrac',\n      target: 'Mabeuf',\n      value: 2,\n    },\n    {\n      source: 'Courfeyrac',\n      target: 'Eponine',\n      value: 1,\n    },\n    {\n      source: 'Courfeyrac',\n      target: 'Feuilly',\n      value: 6,\n    },\n    {\n      source: 'Courfeyrac',\n      target: 'Prouvaire',\n      value: 3,\n    },\n    {\n      source: 'Bahorel',\n      target: 'Combeferre',\n      value: 5,\n    },\n    {\n      source: 'Bahorel',\n      target: 'Gavroche',\n      value: 5,\n    },\n    {\n      source: 'Bahorel',\n      target: 'Courfeyrac',\n      value: 6,\n    },\n    {\n      source: 'Bahorel',\n      target: 'Mabeuf',\n      value: 2,\n    },\n    {\n      source: 'Bahorel',\n      target: 'Enjolras',\n      value: 4,\n    },\n    {\n      source: 'Bahorel',\n      target: 'Feuilly',\n      value: 3,\n    },\n    {\n      source: 'Bahorel',\n      target: 'Prouvaire',\n      value: 2,\n    },\n    {\n      source: 'Bahorel',\n      target: 'Marius',\n      value: 1,\n    },\n    {\n      source: 'Bossuet',\n      target: 'Marius',\n      value: 5,\n    },\n    {\n      source: 'Bossuet',\n      target: 'Courfeyrac',\n      value: 12,\n    },\n    {\n      source: 'Bossuet',\n      target: 'Gavroche',\n      value: 5,\n    },\n    {\n      source: 'Bossuet',\n      target: 'Bahorel',\n      value: 4,\n    },\n    {\n      source: 'Bossuet',\n      target: 'Enjolras',\n      value: 10,\n    },\n    {\n      source: 'Bossuet',\n      target: 'Feuilly',\n      value: 6,\n    },\n    {\n      source: 'Bossuet',\n      target: 'Prouvaire',\n      value: 2,\n    },\n    {\n      source: 'Bossuet',\n      target: 'Combeferre',\n      value: 9,\n    },\n    {\n      source: 'Bossuet',\n      target: 'Mabeuf',\n      value: 1,\n    },\n    {\n      source: 'Bossuet',\n      target: 'Valjean',\n      value: 1,\n    },\n    {\n      source: 'Joly',\n      target: 'Bahorel',\n      value: 5,\n    },\n    {\n      source: 'Joly',\n      target: 'Bossuet',\n      value: 7,\n    },\n    {\n      source: 'Joly',\n      target: 'Gavroche',\n      value: 3,\n    },\n    {\n      source: 'Joly',\n      target: 'Courfeyrac',\n      value: 5,\n    },\n    {\n      source: 'Joly',\n      target: 'Enjolras',\n      value: 5,\n    },\n    {\n      source: 'Joly',\n      target: 'Feuilly',\n      value: 5,\n    },\n    {\n      source: 'Joly',\n      target: 'Prouvaire',\n      value: 2,\n    },\n    {\n      source: 'Joly',\n      target: 'Combeferre',\n      value: 5,\n    },\n    {\n      source: 'Joly',\n      target: 'Mabeuf',\n      value: 1,\n    },\n    {\n      source: 'Joly',\n      target: 'Marius',\n      value: 2,\n    },\n    {\n      source: 'Grantaire',\n      target: 'Bossuet',\n      value: 3,\n    },\n    {\n      source: 'Grantaire',\n      target: 'Enjolras',\n      value: 3,\n    },\n    {\n      source: 'Grantaire',\n      target: 'Combeferre',\n      value: 1,\n    },\n    {\n      source: 'Grantaire',\n      target: 'Courfeyrac',\n      value: 2,\n    },\n    {\n      source: 'Grantaire',\n      target: 'Joly',\n      value: 2,\n    },\n    {\n      source: 'Grantaire',\n      target: 'Gavroche',\n      value: 1,\n    },\n    {\n      source: 'Grantaire',\n      target: 'Bahorel',\n      value: 1,\n    },\n    {\n      source: 'Grantaire',\n      target: 'Feuilly',\n      value: 1,\n    },\n    {\n      source: 'Grantaire',\n      target: 'Prouvaire',\n      value: 1,\n    },\n    {\n      source: 'MotherPlutarch',\n      target: 'Mabeuf',\n      value: 3,\n    },\n    {\n      source: 'Gueulemer',\n      target: 'Thenardier',\n      value: 5,\n    },\n    {\n      source: 'Gueulemer',\n      target: 'Valjean',\n      value: 1,\n    },\n    {\n      source: 'Gueulemer',\n      target: 'Mme.Thenardier',\n      value: 1,\n    },\n    {\n      source: 'Gueulemer',\n      target: 'Javert',\n      value: 1,\n    },\n    {\n      source: 'Gueulemer',\n      target: 'Gavroche',\n      value: 1,\n    },\n    {\n      source: 'Gueulemer',\n      target: 'Eponine',\n      value: 1,\n    },\n    {\n      source: 'Babet',\n      target: 'Thenardier',\n      value: 6,\n    },\n    {\n      source: 'Babet',\n      target: 'Gueulemer',\n      value: 6,\n    },\n    {\n      source: 'Babet',\n      target: 'Valjean',\n      value: 1,\n    },\n    {\n      source: 'Babet',\n      target: 'Mme.Thenardier',\n      value: 1,\n    },\n    {\n      source: 'Babet',\n      target: 'Javert',\n      value: 2,\n    },\n    {\n      source: 'Babet',\n      target: 'Gavroche',\n      value: 1,\n    },\n    {\n      source: 'Babet',\n      target: 'Eponine',\n      value: 1,\n    },\n    {\n      source: 'Claquesous',\n      target: 'Thenardier',\n      value: 4,\n    },\n    {\n      source: 'Claquesous',\n      target: 'Babet',\n      value: 4,\n    },\n    {\n      source: 'Claquesous',\n      target: 'Gueulemer',\n      value: 4,\n    },\n    {\n      source: 'Claquesous',\n      target: 'Valjean',\n      value: 1,\n    },\n    {\n      source: 'Claquesous',\n      target: 'Mme.Thenardier',\n      value: 1,\n    },\n    {\n      source: 'Claquesous',\n      target: 'Javert',\n      value: 1,\n    },\n    {\n      source: 'Claquesous',\n      target: 'Eponine',\n      value: 1,\n    },\n    {\n      source: 'Claquesous',\n      target: 'Enjolras',\n      value: 1,\n    },\n    {\n      source: 'Montparnasse',\n      target: 'Javert',\n      value: 1,\n    },\n    {\n      source: 'Montparnasse',\n      target: 'Babet',\n      value: 2,\n    },\n    {\n      source: 'Montparnasse',\n      target: 'Gueulemer',\n      value: 2,\n    },\n    {\n      source: 'Montparnasse',\n      target: 'Claquesous',\n      value: 2,\n    },\n    {\n      source: 'Montparnasse',\n      target: 'Valjean',\n      value: 1,\n    },\n    {\n      source: 'Montparnasse',\n      target: 'Gavroche',\n      value: 1,\n    },\n    {\n      source: 'Montparnasse',\n      target: 'Eponine',\n      value: 1,\n    },\n    {\n      source: 'Montparnasse',\n      target: 'Thenardier',\n      value: 1,\n    },\n    {\n      source: 'Toussaint',\n      target: 'Cosette',\n      value: 2,\n    },\n    {\n      source: 'Toussaint',\n      target: 'Javert',\n      value: 1,\n    },\n    {\n      source: 'Toussaint',\n      target: 'Valjean',\n      value: 1,\n    },\n    {\n      source: 'Child1',\n      target: 'Gavroche',\n      value: 2,\n    },\n    {\n      source: 'Child2',\n      target: 'Gavroche',\n      value: 2,\n    },\n    {\n      source: 'Child2',\n      target: 'Child1',\n      value: 3,\n    },\n    {\n      source: 'Brujon',\n      target: 'Babet',\n      value: 3,\n    },\n    {\n      source: 'Brujon',\n      target: 'Gueulemer',\n      value: 3,\n    },\n    {\n      source: 'Brujon',\n      target: 'Thenardier',\n      value: 3,\n    },\n    {\n      source: 'Brujon',\n      target: 'Gavroche',\n      value: 1,\n    },\n    {\n      source: 'Brujon',\n      target: 'Eponine',\n      value: 1,\n    },\n    {\n      source: 'Brujon',\n      target: 'Claquesous',\n      value: 1,\n    },\n    {\n      source: 'Brujon',\n      target: 'Montparnasse',\n      value: 1,\n    },\n    {\n      source: 'Mme.Hucheloup',\n      target: 'Bossuet',\n      value: 1,\n    },\n    {\n      source: 'Mme.Hucheloup',\n      target: 'Joly',\n      value: 1,\n    },\n    {\n      source: 'Mme.Hucheloup',\n      target: 'Grantaire',\n      value: 1,\n    },\n    {\n      source: 'Mme.Hucheloup',\n      target: 'Bahorel',\n      value: 1,\n    },\n    {\n      source: 'Mme.Hucheloup',\n      target: 'Courfeyrac',\n      value: 1,\n    },\n    {\n      source: 'Mme.Hucheloup',\n      target: 'Gavroche',\n      value: 1,\n    },\n    {\n      source: 'Mme.Hucheloup',\n      target: 'Enjolras',\n      value: 1,\n    },\n  ],\n};\n\n// start 3d force simulation\nconst simulation = forceSimulation(dataset.nodes, 3)\n  .force(\n    'link',\n    forceLink().id(function (d) {\n      return d.id;\n    }),\n  )\n  .force('charge', forceManyBody())\n  .force('center', forceCenter(0, 0));\nsimulation.nodes(dataset.nodes);\nsimulation.force('link').links(dataset.links);\nsimulation.tick(1000);\n\n// create a renderer\nconst renderer = new Renderer();\nrenderer.registerPlugin(new Plugin3D());\nrenderer.registerPlugin(new PluginControl());\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer,\n});\n\n(async () => {\n  // wait for canvas' initialization complete\n  await canvas.ready;\n  // use GPU device\n  const plugin = renderer.getPlugin('device-renderer');\n  const device = plugin.getDevice();\n\n  // create a sphere geometry\n  const sphereGeometry = new SphereGeometry(device, {\n    radius: 10,\n    latitudeBands: 32,\n    longitudeBands: 32,\n  });\n  // create a material with Phong lighting model\n  const material = new MeshPhongMaterial(device, {\n    shininess: 30,\n  });\n\n  // @see https://antv.vision/en/docs/specification/language/palette#%E5%88%86%E7%B1%BB%E8%89%B2%E6%9D%BF\n  const colorPalette = [\n    '#5B8FF9',\n    '#CDDDFD',\n    '#61DDAA',\n    '#CDF3E4',\n    '#65789B',\n    '#F6BD16',\n    '#7262fd',\n    '#78D3F8',\n    '#9661BC',\n    '#F6903D',\n    '#008685',\n    '#F08BB4',\n  ];\n  dataset.nodes.forEach((node) => {\n    const fill = colorPalette[node.group];\n    // create a mesh\n    const sphere = new Mesh({\n      style: {\n        fill,\n        opacity: 1,\n        geometry: sphereGeometry,\n        material,\n        cursor: 'pointer',\n      },\n    });\n    sphere.setPosition(node.x + 300, node.y + 250, node.z);\n    canvas.appendChild(sphere);\n\n    sphere.addEventListener('mouseenter', () => {\n      sphere.style.fill = 'red';\n    });\n    sphere.addEventListener('mouseleave', () => {\n      sphere.style.fill = fill;\n    });\n  });\n\n  dataset.links.forEach((edge) => {\n    const { source, target } = edge;\n    const line = new Line({\n      style: {\n        x1: source.x + 300,\n        y1: source.y + 250,\n        z1: source.z,\n        x2: target.x + 300,\n        y2: target.y + 250,\n        z2: target.z,\n        stroke: 'black',\n        lineWidth: 2,\n        opacity: 0.5,\n        isBillboard: true, // 始终面向屏幕\n      },\n    });\n    canvas.appendChild(line);\n  });\n\n  // add a directional light into scene\n  const light = new DirectionalLight({\n    style: {\n      fill: 'white',\n      direction: [-1, 0, 1],\n    },\n  });\n  canvas.appendChild(light);\n\n  // adjust camera's position\n  const camera = canvas.getCamera();\n  camera.setPerspective(0.1, 1000, 45, 600 / 500);\n\n  // stats\n  const stats = new Stats();\n  stats.showPanel(0);\n  const $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  const $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n    if (stats) {\n      stats.update();\n    }\n  });\n\n  // GUI\n  const gui = new lil.GUI({ autoPlace: false });\n  $wrapper.appendChild(gui.domElement);\n})();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-webgl\", \"@antv/g-plugin-3d\", \"@antv/g-plugin-control\", \"lil-gui\", \"stats.js\", \"d3-force-3d\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-webgl\"), require(\"@antv/g-plugin-3d\"), require(\"@antv/g-plugin-control\"), require(\"lil-gui\"), require(\"stats.js\"), require(\"d3-force-3d\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gWebgl, global.gPlugin3d, global.gPluginControl, global.lilGui, global.stats, global.d3Force3d);\n    global.force3d = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gWebgl, _gPlugin3d, _gPluginControl, lil, _stats, _d3Force3d) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // https://bl.ocks.org/vasturiano/f59675656258d3f490e9faa40828c0e7\n  var dataset = {\n    nodes: [{\n      id: 'Myriel',\n      group: 1\n    }, {\n      id: 'Napoleon',\n      group: 1\n    }, {\n      id: 'Mlle.Baptistine',\n      group: 1\n    }, {\n      id: 'Mme.Magloire',\n      group: 1\n    }, {\n      id: 'CountessdeLo',\n      group: 1\n    }, {\n      id: 'Geborand',\n      group: 1\n    }, {\n      id: 'Champtercier',\n      group: 1\n    }, {\n      id: 'Cravatte',\n      group: 1\n    }, {\n      id: 'Count',\n      group: 1\n    }, {\n      id: 'OldMan',\n      group: 1\n    }, {\n      id: 'Labarre',\n      group: 2\n    }, {\n      id: 'Valjean',\n      group: 2\n    }, {\n      id: 'Marguerite',\n      group: 3\n    }, {\n      id: 'Mme.deR',\n      group: 2\n    }, {\n      id: 'Isabeau',\n      group: 2\n    }, {\n      id: 'Gervais',\n      group: 2\n    }, {\n      id: 'Tholomyes',\n      group: 3\n    }, {\n      id: 'Listolier',\n      group: 3\n    }, {\n      id: 'Fameuil',\n      group: 3\n    }, {\n      id: 'Blacheville',\n      group: 3\n    }, {\n      id: 'Favourite',\n      group: 3\n    }, {\n      id: 'Dahlia',\n      group: 3\n    }, {\n      id: 'Zephine',\n      group: 3\n    }, {\n      id: 'Fantine',\n      group: 3\n    }, {\n      id: 'Mme.Thenardier',\n      group: 4\n    }, {\n      id: 'Thenardier',\n      group: 4\n    }, {\n      id: 'Cosette',\n      group: 5\n    }, {\n      id: 'Javert',\n      group: 4\n    }, {\n      id: 'Fauchelevent',\n      group: 0\n    }, {\n      id: 'Bamatabois',\n      group: 2\n    }, {\n      id: 'Perpetue',\n      group: 3\n    }, {\n      id: 'Simplice',\n      group: 2\n    }, {\n      id: 'Scaufflaire',\n      group: 2\n    }, {\n      id: 'Woman1',\n      group: 2\n    }, {\n      id: 'Judge',\n      group: 2\n    }, {\n      id: 'Champmathieu',\n      group: 2\n    }, {\n      id: 'Brevet',\n      group: 2\n    }, {\n      id: 'Chenildieu',\n      group: 2\n    }, {\n      id: 'Cochepaille',\n      group: 2\n    }, {\n      id: 'Pontmercy',\n      group: 4\n    }, {\n      id: 'Boulatruelle',\n      group: 6\n    }, {\n      id: 'Eponine',\n      group: 4\n    }, {\n      id: 'Anzelma',\n      group: 4\n    }, {\n      id: 'Woman2',\n      group: 5\n    }, {\n      id: 'MotherInnocent',\n      group: 0\n    }, {\n      id: 'Gribier',\n      group: 0\n    }, {\n      id: 'Jondrette',\n      group: 7\n    }, {\n      id: 'Mme.Burgon',\n      group: 7\n    }, {\n      id: 'Gavroche',\n      group: 8\n    }, {\n      id: 'Gillenormand',\n      group: 5\n    }, {\n      id: 'Magnon',\n      group: 5\n    }, {\n      id: 'Mlle.Gillenormand',\n      group: 5\n    }, {\n      id: 'Mme.Pontmercy',\n      group: 5\n    }, {\n      id: 'Mlle.Vaubois',\n      group: 5\n    }, {\n      id: 'Lt.Gillenormand',\n      group: 5\n    }, {\n      id: 'Marius',\n      group: 8\n    }, {\n      id: 'BaronessT',\n      group: 5\n    }, {\n      id: 'Mabeuf',\n      group: 8\n    }, {\n      id: 'Enjolras',\n      group: 8\n    }, {\n      id: 'Combeferre',\n      group: 8\n    }, {\n      id: 'Prouvaire',\n      group: 8\n    }, {\n      id: 'Feuilly',\n      group: 8\n    }, {\n      id: 'Courfeyrac',\n      group: 8\n    }, {\n      id: 'Bahorel',\n      group: 8\n    }, {\n      id: 'Bossuet',\n      group: 8\n    }, {\n      id: 'Joly',\n      group: 8\n    }, {\n      id: 'Grantaire',\n      group: 8\n    }, {\n      id: 'MotherPlutarch',\n      group: 9\n    }, {\n      id: 'Gueulemer',\n      group: 4\n    }, {\n      id: 'Babet',\n      group: 4\n    }, {\n      id: 'Claquesous',\n      group: 4\n    }, {\n      id: 'Montparnasse',\n      group: 4\n    }, {\n      id: 'Toussaint',\n      group: 5\n    }, {\n      id: 'Child1',\n      group: 10\n    }, {\n      id: 'Child2',\n      group: 10\n    }, {\n      id: 'Brujon',\n      group: 4\n    }, {\n      id: 'Mme.Hucheloup',\n      group: 8\n    }],\n    links: [{\n      source: 'Napoleon',\n      target: 'Myriel',\n      value: 1\n    }, {\n      source: 'Mlle.Baptistine',\n      target: 'Myriel',\n      value: 8\n    }, {\n      source: 'Mme.Magloire',\n      target: 'Myriel',\n      value: 10\n    }, {\n      source: 'Mme.Magloire',\n      target: 'Mlle.Baptistine',\n      value: 6\n    }, {\n      source: 'CountessdeLo',\n      target: 'Myriel',\n      value: 1\n    }, {\n      source: 'Geborand',\n      target: 'Myriel',\n      value: 1\n    }, {\n      source: 'Champtercier',\n      target: 'Myriel',\n      value: 1\n    }, {\n      source: 'Cravatte',\n      target: 'Myriel',\n      value: 1\n    }, {\n      source: 'Count',\n      target: 'Myriel',\n      value: 2\n    }, {\n      source: 'OldMan',\n      target: 'Myriel',\n      value: 1\n    }, {\n      source: 'Valjean',\n      target: 'Labarre',\n      value: 1\n    }, {\n      source: 'Valjean',\n      target: 'Mme.Magloire',\n      value: 3\n    }, {\n      source: 'Valjean',\n      target: 'Mlle.Baptistine',\n      value: 3\n    }, {\n      source: 'Valjean',\n      target: 'Myriel',\n      value: 5\n    }, {\n      source: 'Marguerite',\n      target: 'Valjean',\n      value: 1\n    }, {\n      source: 'Mme.deR',\n      target: 'Valjean',\n      value: 1\n    }, {\n      source: 'Isabeau',\n      target: 'Valjean',\n      value: 1\n    }, {\n      source: 'Gervais',\n      target: 'Valjean',\n      value: 1\n    }, {\n      source: 'Listolier',\n      target: 'Tholomyes',\n      value: 4\n    }, {\n      source: 'Fameuil',\n      target: 'Tholomyes',\n      value: 4\n    }, {\n      source: 'Fameuil',\n      target: 'Listolier',\n      value: 4\n    }, {\n      source: 'Blacheville',\n      target: 'Tholomyes',\n      value: 4\n    }, {\n      source: 'Blacheville',\n      target: 'Listolier',\n      value: 4\n    }, {\n      source: 'Blacheville',\n      target: 'Fameuil',\n      value: 4\n    }, {\n      source: 'Favourite',\n      target: 'Tholomyes',\n      value: 3\n    }, {\n      source: 'Favourite',\n      target: 'Listolier',\n      value: 3\n    }, {\n      source: 'Favourite',\n      target: 'Fameuil',\n      value: 3\n    }, {\n      source: 'Favourite',\n      target: 'Blacheville',\n      value: 4\n    }, {\n      source: 'Dahlia',\n      target: 'Tholomyes',\n      value: 3\n    }, {\n      source: 'Dahlia',\n      target: 'Listolier',\n      value: 3\n    }, {\n      source: 'Dahlia',\n      target: 'Fameuil',\n      value: 3\n    }, {\n      source: 'Dahlia',\n      target: 'Blacheville',\n      value: 3\n    }, {\n      source: 'Dahlia',\n      target: 'Favourite',\n      value: 5\n    }, {\n      source: 'Zephine',\n      target: 'Tholomyes',\n      value: 3\n    }, {\n      source: 'Zephine',\n      target: 'Listolier',\n      value: 3\n    }, {\n      source: 'Zephine',\n      target: 'Fameuil',\n      value: 3\n    }, {\n      source: 'Zephine',\n      target: 'Blacheville',\n      value: 3\n    }, {\n      source: 'Zephine',\n      target: 'Favourite',\n      value: 4\n    }, {\n      source: 'Zephine',\n      target: 'Dahlia',\n      value: 4\n    }, {\n      source: 'Fantine',\n      target: 'Tholomyes',\n      value: 3\n    }, {\n      source: 'Fantine',\n      target: 'Listolier',\n      value: 3\n    }, {\n      source: 'Fantine',\n      target: 'Fameuil',\n      value: 3\n    }, {\n      source: 'Fantine',\n      target: 'Blacheville',\n      value: 3\n    }, {\n      source: 'Fantine',\n      target: 'Favourite',\n      value: 4\n    }, {\n      source: 'Fantine',\n      target: 'Dahlia',\n      value: 4\n    }, {\n      source: 'Fantine',\n      target: 'Zephine',\n      value: 4\n    }, {\n      source: 'Fantine',\n      target: 'Marguerite',\n      value: 2\n    }, {\n      source: 'Fantine',\n      target: 'Valjean',\n      value: 9\n    }, {\n      source: 'Mme.Thenardier',\n      target: 'Fantine',\n      value: 2\n    }, {\n      source: 'Mme.Thenardier',\n      target: 'Valjean',\n      value: 7\n    }, {\n      source: 'Thenardier',\n      target: 'Mme.Thenardier',\n      value: 13\n    }, {\n      source: 'Thenardier',\n      target: 'Fantine',\n      value: 1\n    }, {\n      source: 'Thenardier',\n      target: 'Valjean',\n      value: 12\n    }, {\n      source: 'Cosette',\n      target: 'Mme.Thenardier',\n      value: 4\n    }, {\n      source: 'Cosette',\n      target: 'Valjean',\n      value: 31\n    }, {\n      source: 'Cosette',\n      target: 'Tholomyes',\n      value: 1\n    }, {\n      source: 'Cosette',\n      target: 'Thenardier',\n      value: 1\n    }, {\n      source: 'Javert',\n      target: 'Valjean',\n      value: 17\n    }, {\n      source: 'Javert',\n      target: 'Fantine',\n      value: 5\n    }, {\n      source: 'Javert',\n      target: 'Thenardier',\n      value: 5\n    }, {\n      source: 'Javert',\n      target: 'Mme.Thenardier',\n      value: 1\n    }, {\n      source: 'Javert',\n      target: 'Cosette',\n      value: 1\n    }, {\n      source: 'Fauchelevent',\n      target: 'Valjean',\n      value: 8\n    }, {\n      source: 'Fauchelevent',\n      target: 'Javert',\n      value: 1\n    }, {\n      source: 'Bamatabois',\n      target: 'Fantine',\n      value: 1\n    }, {\n      source: 'Bamatabois',\n      target: 'Javert',\n      value: 1\n    }, {\n      source: 'Bamatabois',\n      target: 'Valjean',\n      value: 2\n    }, {\n      source: 'Perpetue',\n      target: 'Fantine',\n      value: 1\n    }, {\n      source: 'Simplice',\n      target: 'Perpetue',\n      value: 2\n    }, {\n      source: 'Simplice',\n      target: 'Valjean',\n      value: 3\n    }, {\n      source: 'Simplice',\n      target: 'Fantine',\n      value: 2\n    }, {\n      source: 'Simplice',\n      target: 'Javert',\n      value: 1\n    }, {\n      source: 'Scaufflaire',\n      target: 'Valjean',\n      value: 1\n    }, {\n      source: 'Woman1',\n      target: 'Valjean',\n      value: 2\n    }, {\n      source: 'Woman1',\n      target: 'Javert',\n      value: 1\n    }, {\n      source: 'Judge',\n      target: 'Valjean',\n      value: 3\n    }, {\n      source: 'Judge',\n      target: 'Bamatabois',\n      value: 2\n    }, {\n      source: 'Champmathieu',\n      target: 'Valjean',\n      value: 3\n    }, {\n      source: 'Champmathieu',\n      target: 'Judge',\n      value: 3\n    }, {\n      source: 'Champmathieu',\n      target: 'Bamatabois',\n      value: 2\n    }, {\n      source: 'Brevet',\n      target: 'Judge',\n      value: 2\n    }, {\n      source: 'Brevet',\n      target: 'Champmathieu',\n      value: 2\n    }, {\n      source: 'Brevet',\n      target: 'Valjean',\n      value: 2\n    }, {\n      source: 'Brevet',\n      target: 'Bamatabois',\n      value: 1\n    }, {\n      source: 'Chenildieu',\n      target: 'Judge',\n      value: 2\n    }, {\n      source: 'Chenildieu',\n      target: 'Champmathieu',\n      value: 2\n    }, {\n      source: 'Chenildieu',\n      target: 'Brevet',\n      value: 2\n    }, {\n      source: 'Chenildieu',\n      target: 'Valjean',\n      value: 2\n    }, {\n      source: 'Chenildieu',\n      target: 'Bamatabois',\n      value: 1\n    }, {\n      source: 'Cochepaille',\n      target: 'Judge',\n      value: 2\n    }, {\n      source: 'Cochepaille',\n      target: 'Champmathieu',\n      value: 2\n    }, {\n      source: 'Cochepaille',\n      target: 'Brevet',\n      value: 2\n    }, {\n      source: 'Cochepaille',\n      target: 'Chenildieu',\n      value: 2\n    }, {\n      source: 'Cochepaille',\n      target: 'Valjean',\n      value: 2\n    }, {\n      source: 'Cochepaille',\n      target: 'Bamatabois',\n      value: 1\n    }, {\n      source: 'Pontmercy',\n      target: 'Thenardier',\n      value: 1\n    }, {\n      source: 'Boulatruelle',\n      target: 'Thenardier',\n      value: 1\n    }, {\n      source: 'Eponine',\n      target: 'Mme.Thenardier',\n      value: 2\n    }, {\n      source: 'Eponine',\n      target: 'Thenardier',\n      value: 3\n    }, {\n      source: 'Anzelma',\n      target: 'Eponine',\n      value: 2\n    }, {\n      source: 'Anzelma',\n      target: 'Thenardier',\n      value: 2\n    }, {\n      source: 'Anzelma',\n      target: 'Mme.Thenardier',\n      value: 1\n    }, {\n      source: 'Woman2',\n      target: 'Valjean',\n      value: 3\n    }, {\n      source: 'Woman2',\n      target: 'Cosette',\n      value: 1\n    }, {\n      source: 'Woman2',\n      target: 'Javert',\n      value: 1\n    }, {\n      source: 'MotherInnocent',\n      target: 'Fauchelevent',\n      value: 3\n    }, {\n      source: 'MotherInnocent',\n      target: 'Valjean',\n      value: 1\n    }, {\n      source: 'Gribier',\n      target: 'Fauchelevent',\n      value: 2\n    }, {\n      source: 'Mme.Burgon',\n      target: 'Jondrette',\n      value: 1\n    }, {\n      source: 'Gavroche',\n      target: 'Mme.Burgon',\n      value: 2\n    }, {\n      source: 'Gavroche',\n      target: 'Thenardier',\n      value: 1\n    }, {\n      source: 'Gavroche',\n      target: 'Javert',\n      value: 1\n    }, {\n      source: 'Gavroche',\n      target: 'Valjean',\n      value: 1\n    }, {\n      source: 'Gillenormand',\n      target: 'Cosette',\n      value: 3\n    }, {\n      source: 'Gillenormand',\n      target: 'Valjean',\n      value: 2\n    }, {\n      source: 'Magnon',\n      target: 'Gillenormand',\n      value: 1\n    }, {\n      source: 'Magnon',\n      target: 'Mme.Thenardier',\n      value: 1\n    }, {\n      source: 'Mlle.Gillenormand',\n      target: 'Gillenormand',\n      value: 9\n    }, {\n      source: 'Mlle.Gillenormand',\n      target: 'Cosette',\n      value: 2\n    }, {\n      source: 'Mlle.Gillenormand',\n      target: 'Valjean',\n      value: 2\n    }, {\n      source: 'Mme.Pontmercy',\n      target: 'Mlle.Gillenormand',\n      value: 1\n    }, {\n      source: 'Mme.Pontmercy',\n      target: 'Pontmercy',\n      value: 1\n    }, {\n      source: 'Mlle.Vaubois',\n      target: 'Mlle.Gillenormand',\n      value: 1\n    }, {\n      source: 'Lt.Gillenormand',\n      target: 'Mlle.Gillenormand',\n      value: 2\n    }, {\n      source: 'Lt.Gillenormand',\n      target: 'Gillenormand',\n      value: 1\n    }, {\n      source: 'Lt.Gillenormand',\n      target: 'Cosette',\n      value: 1\n    }, {\n      source: 'Marius',\n      target: 'Mlle.Gillenormand',\n      value: 6\n    }, {\n      source: 'Marius',\n      target: 'Gillenormand',\n      value: 12\n    }, {\n      source: 'Marius',\n      target: 'Pontmercy',\n      value: 1\n    }, {\n      source: 'Marius',\n      target: 'Lt.Gillenormand',\n      value: 1\n    }, {\n      source: 'Marius',\n      target: 'Cosette',\n      value: 21\n    }, {\n      source: 'Marius',\n      target: 'Valjean',\n      value: 19\n    }, {\n      source: 'Marius',\n      target: 'Tholomyes',\n      value: 1\n    }, {\n      source: 'Marius',\n      target: 'Thenardier',\n      value: 2\n    }, {\n      source: 'Marius',\n      target: 'Eponine',\n      value: 5\n    }, {\n      source: 'Marius',\n      target: 'Gavroche',\n      value: 4\n    }, {\n      source: 'BaronessT',\n      target: 'Gillenormand',\n      value: 1\n    }, {\n      source: 'BaronessT',\n      target: 'Marius',\n      value: 1\n    }, {\n      source: 'Mabeuf',\n      target: 'Marius',\n      value: 1\n    }, {\n      source: 'Mabeuf',\n      target: 'Eponine',\n      value: 1\n    }, {\n      source: 'Mabeuf',\n      target: 'Gavroche',\n      value: 1\n    }, {\n      source: 'Enjolras',\n      target: 'Marius',\n      value: 7\n    }, {\n      source: 'Enjolras',\n      target: 'Gavroche',\n      value: 7\n    }, {\n      source: 'Enjolras',\n      target: 'Javert',\n      value: 6\n    }, {\n      source: 'Enjolras',\n      target: 'Mabeuf',\n      value: 1\n    }, {\n      source: 'Enjolras',\n      target: 'Valjean',\n      value: 4\n    }, {\n      source: 'Combeferre',\n      target: 'Enjolras',\n      value: 15\n    }, {\n      source: 'Combeferre',\n      target: 'Marius',\n      value: 5\n    }, {\n      source: 'Combeferre',\n      target: 'Gavroche',\n      value: 6\n    }, {\n      source: 'Combeferre',\n      target: 'Mabeuf',\n      value: 2\n    }, {\n      source: 'Prouvaire',\n      target: 'Gavroche',\n      value: 1\n    }, {\n      source: 'Prouvaire',\n      target: 'Enjolras',\n      value: 4\n    }, {\n      source: 'Prouvaire',\n      target: 'Combeferre',\n      value: 2\n    }, {\n      source: 'Feuilly',\n      target: 'Gavroche',\n      value: 2\n    }, {\n      source: 'Feuilly',\n      target: 'Enjolras',\n      value: 6\n    }, {\n      source: 'Feuilly',\n      target: 'Prouvaire',\n      value: 2\n    }, {\n      source: 'Feuilly',\n      target: 'Combeferre',\n      value: 5\n    }, {\n      source: 'Feuilly',\n      target: 'Mabeuf',\n      value: 1\n    }, {\n      source: 'Feuilly',\n      target: 'Marius',\n      value: 1\n    }, {\n      source: 'Courfeyrac',\n      target: 'Marius',\n      value: 9\n    }, {\n      source: 'Courfeyrac',\n      target: 'Enjolras',\n      value: 17\n    }, {\n      source: 'Courfeyrac',\n      target: 'Combeferre',\n      value: 13\n    }, {\n      source: 'Courfeyrac',\n      target: 'Gavroche',\n      value: 7\n    }, {\n      source: 'Courfeyrac',\n      target: 'Mabeuf',\n      value: 2\n    }, {\n      source: 'Courfeyrac',\n      target: 'Eponine',\n      value: 1\n    }, {\n      source: 'Courfeyrac',\n      target: 'Feuilly',\n      value: 6\n    }, {\n      source: 'Courfeyrac',\n      target: 'Prouvaire',\n      value: 3\n    }, {\n      source: 'Bahorel',\n      target: 'Combeferre',\n      value: 5\n    }, {\n      source: 'Bahorel',\n      target: 'Gavroche',\n      value: 5\n    }, {\n      source: 'Bahorel',\n      target: 'Courfeyrac',\n      value: 6\n    }, {\n      source: 'Bahorel',\n      target: 'Mabeuf',\n      value: 2\n    }, {\n      source: 'Bahorel',\n      target: 'Enjolras',\n      value: 4\n    }, {\n      source: 'Bahorel',\n      target: 'Feuilly',\n      value: 3\n    }, {\n      source: 'Bahorel',\n      target: 'Prouvaire',\n      value: 2\n    }, {\n      source: 'Bahorel',\n      target: 'Marius',\n      value: 1\n    }, {\n      source: 'Bossuet',\n      target: 'Marius',\n      value: 5\n    }, {\n      source: 'Bossuet',\n      target: 'Courfeyrac',\n      value: 12\n    }, {\n      source: 'Bossuet',\n      target: 'Gavroche',\n      value: 5\n    }, {\n      source: 'Bossuet',\n      target: 'Bahorel',\n      value: 4\n    }, {\n      source: 'Bossuet',\n      target: 'Enjolras',\n      value: 10\n    }, {\n      source: 'Bossuet',\n      target: 'Feuilly',\n      value: 6\n    }, {\n      source: 'Bossuet',\n      target: 'Prouvaire',\n      value: 2\n    }, {\n      source: 'Bossuet',\n      target: 'Combeferre',\n      value: 9\n    }, {\n      source: 'Bossuet',\n      target: 'Mabeuf',\n      value: 1\n    }, {\n      source: 'Bossuet',\n      target: 'Valjean',\n      value: 1\n    }, {\n      source: 'Joly',\n      target: 'Bahorel',\n      value: 5\n    }, {\n      source: 'Joly',\n      target: 'Bossuet',\n      value: 7\n    }, {\n      source: 'Joly',\n      target: 'Gavroche',\n      value: 3\n    }, {\n      source: 'Joly',\n      target: 'Courfeyrac',\n      value: 5\n    }, {\n      source: 'Joly',\n      target: 'Enjolras',\n      value: 5\n    }, {\n      source: 'Joly',\n      target: 'Feuilly',\n      value: 5\n    }, {\n      source: 'Joly',\n      target: 'Prouvaire',\n      value: 2\n    }, {\n      source: 'Joly',\n      target: 'Combeferre',\n      value: 5\n    }, {\n      source: 'Joly',\n      target: 'Mabeuf',\n      value: 1\n    }, {\n      source: 'Joly',\n      target: 'Marius',\n      value: 2\n    }, {\n      source: 'Grantaire',\n      target: 'Bossuet',\n      value: 3\n    }, {\n      source: 'Grantaire',\n      target: 'Enjolras',\n      value: 3\n    }, {\n      source: 'Grantaire',\n      target: 'Combeferre',\n      value: 1\n    }, {\n      source: 'Grantaire',\n      target: 'Courfeyrac',\n      value: 2\n    }, {\n      source: 'Grantaire',\n      target: 'Joly',\n      value: 2\n    }, {\n      source: 'Grantaire',\n      target: 'Gavroche',\n      value: 1\n    }, {\n      source: 'Grantaire',\n      target: 'Bahorel',\n      value: 1\n    }, {\n      source: 'Grantaire',\n      target: 'Feuilly',\n      value: 1\n    }, {\n      source: 'Grantaire',\n      target: 'Prouvaire',\n      value: 1\n    }, {\n      source: 'MotherPlutarch',\n      target: 'Mabeuf',\n      value: 3\n    }, {\n      source: 'Gueulemer',\n      target: 'Thenardier',\n      value: 5\n    }, {\n      source: 'Gueulemer',\n      target: 'Valjean',\n      value: 1\n    }, {\n      source: 'Gueulemer',\n      target: 'Mme.Thenardier',\n      value: 1\n    }, {\n      source: 'Gueulemer',\n      target: 'Javert',\n      value: 1\n    }, {\n      source: 'Gueulemer',\n      target: 'Gavroche',\n      value: 1\n    }, {\n      source: 'Gueulemer',\n      target: 'Eponine',\n      value: 1\n    }, {\n      source: 'Babet',\n      target: 'Thenardier',\n      value: 6\n    }, {\n      source: 'Babet',\n      target: 'Gueulemer',\n      value: 6\n    }, {\n      source: 'Babet',\n      target: 'Valjean',\n      value: 1\n    }, {\n      source: 'Babet',\n      target: 'Mme.Thenardier',\n      value: 1\n    }, {\n      source: 'Babet',\n      target: 'Javert',\n      value: 2\n    }, {\n      source: 'Babet',\n      target: 'Gavroche',\n      value: 1\n    }, {\n      source: 'Babet',\n      target: 'Eponine',\n      value: 1\n    }, {\n      source: 'Claquesous',\n      target: 'Thenardier',\n      value: 4\n    }, {\n      source: 'Claquesous',\n      target: 'Babet',\n      value: 4\n    }, {\n      source: 'Claquesous',\n      target: 'Gueulemer',\n      value: 4\n    }, {\n      source: 'Claquesous',\n      target: 'Valjean',\n      value: 1\n    }, {\n      source: 'Claquesous',\n      target: 'Mme.Thenardier',\n      value: 1\n    }, {\n      source: 'Claquesous',\n      target: 'Javert',\n      value: 1\n    }, {\n      source: 'Claquesous',\n      target: 'Eponine',\n      value: 1\n    }, {\n      source: 'Claquesous',\n      target: 'Enjolras',\n      value: 1\n    }, {\n      source: 'Montparnasse',\n      target: 'Javert',\n      value: 1\n    }, {\n      source: 'Montparnasse',\n      target: 'Babet',\n      value: 2\n    }, {\n      source: 'Montparnasse',\n      target: 'Gueulemer',\n      value: 2\n    }, {\n      source: 'Montparnasse',\n      target: 'Claquesous',\n      value: 2\n    }, {\n      source: 'Montparnasse',\n      target: 'Valjean',\n      value: 1\n    }, {\n      source: 'Montparnasse',\n      target: 'Gavroche',\n      value: 1\n    }, {\n      source: 'Montparnasse',\n      target: 'Eponine',\n      value: 1\n    }, {\n      source: 'Montparnasse',\n      target: 'Thenardier',\n      value: 1\n    }, {\n      source: 'Toussaint',\n      target: 'Cosette',\n      value: 2\n    }, {\n      source: 'Toussaint',\n      target: 'Javert',\n      value: 1\n    }, {\n      source: 'Toussaint',\n      target: 'Valjean',\n      value: 1\n    }, {\n      source: 'Child1',\n      target: 'Gavroche',\n      value: 2\n    }, {\n      source: 'Child2',\n      target: 'Gavroche',\n      value: 2\n    }, {\n      source: 'Child2',\n      target: 'Child1',\n      value: 3\n    }, {\n      source: 'Brujon',\n      target: 'Babet',\n      value: 3\n    }, {\n      source: 'Brujon',\n      target: 'Gueulemer',\n      value: 3\n    }, {\n      source: 'Brujon',\n      target: 'Thenardier',\n      value: 3\n    }, {\n      source: 'Brujon',\n      target: 'Gavroche',\n      value: 1\n    }, {\n      source: 'Brujon',\n      target: 'Eponine',\n      value: 1\n    }, {\n      source: 'Brujon',\n      target: 'Claquesous',\n      value: 1\n    }, {\n      source: 'Brujon',\n      target: 'Montparnasse',\n      value: 1\n    }, {\n      source: 'Mme.Hucheloup',\n      target: 'Bossuet',\n      value: 1\n    }, {\n      source: 'Mme.Hucheloup',\n      target: 'Joly',\n      value: 1\n    }, {\n      source: 'Mme.Hucheloup',\n      target: 'Grantaire',\n      value: 1\n    }, {\n      source: 'Mme.Hucheloup',\n      target: 'Bahorel',\n      value: 1\n    }, {\n      source: 'Mme.Hucheloup',\n      target: 'Courfeyrac',\n      value: 1\n    }, {\n      source: 'Mme.Hucheloup',\n      target: 'Gavroche',\n      value: 1\n    }, {\n      source: 'Mme.Hucheloup',\n      target: 'Enjolras',\n      value: 1\n    }]\n  }; // start 3d force simulation\n\n  var simulation = (0, _d3Force3d.forceSimulation)(dataset.nodes, 3).force('link', (0, _d3Force3d.forceLink)().id(function (d) {\n    return d.id;\n  })).force('charge', (0, _d3Force3d.forceManyBody)()).force('center', (0, _d3Force3d.forceCenter)(0, 0));\n  simulation.nodes(dataset.nodes);\n  simulation.force('link').links(dataset.links);\n  simulation.tick(1000); // create a renderer\n\n  var renderer = new _gWebgl.Renderer();\n  renderer.registerPlugin(new _gPlugin3d.Plugin());\n  renderer.registerPlugin(new _gPluginControl.Plugin()); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: renderer\n  });\n\n  (async function () {\n    // wait for canvas' initialization complete\n    await canvas.ready; // use GPU device\n\n    var plugin = renderer.getPlugin('device-renderer');\n    var device = plugin.getDevice(); // create a sphere geometry\n\n    var sphereGeometry = new _gPlugin3d.SphereGeometry(device, {\n      radius: 10,\n      latitudeBands: 32,\n      longitudeBands: 32\n    }); // create a material with Phong lighting model\n\n    var material = new _gPlugin3d.MeshPhongMaterial(device, {\n      shininess: 30\n    }); // @see https://antv.vision/en/docs/specification/language/palette#%E5%88%86%E7%B1%BB%E8%89%B2%E6%9D%BF\n\n    var colorPalette = ['#5B8FF9', '#CDDDFD', '#61DDAA', '#CDF3E4', '#65789B', '#F6BD16', '#7262fd', '#78D3F8', '#9661BC', '#F6903D', '#008685', '#F08BB4'];\n    dataset.nodes.forEach(function (node) {\n      var fill = colorPalette[node.group]; // create a mesh\n\n      var sphere = new _gPlugin3d.Mesh({\n        style: {\n          fill: fill,\n          opacity: 1,\n          geometry: sphereGeometry,\n          material: material,\n          cursor: 'pointer'\n        }\n      });\n      sphere.setPosition(node.x + 300, node.y + 250, node.z);\n      canvas.appendChild(sphere);\n      sphere.addEventListener('mouseenter', function () {\n        sphere.style.fill = 'red';\n      });\n      sphere.addEventListener('mouseleave', function () {\n        sphere.style.fill = fill;\n      });\n    });\n    dataset.links.forEach(function (edge) {\n      var source = edge.source,\n          target = edge.target;\n      var line = new _g.Line({\n        style: {\n          x1: source.x + 300,\n          y1: source.y + 250,\n          z1: source.z,\n          x2: target.x + 300,\n          y2: target.y + 250,\n          z2: target.z,\n          stroke: 'black',\n          lineWidth: 2,\n          opacity: 0.5,\n          isBillboard: true // 始终面向屏幕\n\n        }\n      });\n      canvas.appendChild(line);\n    }); // add a directional light into scene\n\n    var light = new _gPlugin3d.DirectionalLight({\n      style: {\n        fill: 'white',\n        direction: [-1, 0, 1]\n      }\n    });\n    canvas.appendChild(light); // adjust camera's position\n\n    var camera = canvas.getCamera();\n    camera.setPerspective(0.1, 1000, 45, 600 / 500); // stats\n\n    var stats = new _stats.default();\n    stats.showPanel(0);\n    var $stats = stats.dom;\n    $stats.style.position = 'absolute';\n    $stats.style.left = '0px';\n    $stats.style.top = '0px';\n    var $wrapper = document.getElementById('container');\n    $wrapper.appendChild($stats);\n    canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n      if (stats) {\n        stats.update();\n      }\n    }); // GUI\n\n    var gui = new lil.GUI({\n      autoPlace: false\n    });\n    $wrapper.appendChild(gui.domElement);\n  })();\n});"},{"relativePath":"3d/demo/plane.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/3d/demo/plane.js","order":1,"filename":"plane.js","title":{"zh":"平面","en":"Plane"},"source":"import { Canvas, CanvasEvent } from '@antv/g';\nimport { Renderer } from '@antv/g-webgl';\nimport { MeshBasicMaterial, PlaneGeometry, Mesh, Plugin as Plugin3D } from '@antv/g-plugin-3d';\nimport { Plugin as PluginControl } from '@antv/g-plugin-control';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst renderer = new Renderer();\nrenderer.registerPlugin(new Plugin3D());\nrenderer.registerPlugin(new PluginControl());\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer,\n});\n\n(async () => {\n  // wait for canvas' initialization complete\n  await canvas.ready;\n\n  // use GPU device\n  const plugin = renderer.getPlugin('device-renderer');\n  const device = plugin.getDevice();\n\n  const planeGeometry = new PlaneGeometry(device, {\n    width: 200,\n    depth: 200,\n    widthSegments: 1,\n    depthSegments: 1,\n  });\n  const basicMaterial = new MeshBasicMaterial(device, {\n    wireframe: true,\n  });\n\n  const plane = new Mesh({\n    style: {\n      fill: '#1890FF',\n      opacity: 1,\n      geometry: planeGeometry,\n      material: basicMaterial,\n    },\n  });\n\n  plane.setPosition(300, 250, 0);\n  canvas.appendChild(plane);\n\n  const plane2 = new Mesh({\n    style: {\n      fill: '#1890FF',\n      opacity: 1,\n      width: 400,\n      depth: 400,\n      geometry: planeGeometry,\n      material: basicMaterial,\n    },\n  });\n  plane2.setPosition(300, 450, 0);\n  canvas.appendChild(plane2);\n\n  canvas.getCamera().setPosition(300, 0, 500);\n\n  // stats\n  const stats = new Stats();\n  stats.showPanel(0);\n  const $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  const $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n    if (stats) {\n      stats.update();\n    }\n    // plane.rotate(0, 1, 0);\n  });\n\n  // GUI\n  const gui = new lil.GUI({ autoPlace: false });\n  $wrapper.appendChild(gui.domElement);\n\n  const planeFolder = gui.addFolder('plane');\n  const planeConfig = {\n    opacity: 1,\n    fill: '#1890FF',\n  };\n  planeFolder.add(planeConfig, 'opacity', 0, 1, 0.1).onChange((opacity) => {\n    plane.style.opacity = opacity;\n  });\n  planeFolder.addColor(planeConfig, 'fill').onChange((color) => {\n    plane.style.fill = color;\n  });\n  planeFolder.open();\n\n  const geometryFolder = gui.addFolder('geometry');\n  const geometryConfig = {\n    width: 200,\n    depth: 200,\n    widthSegments: 5,\n    depthSegments: 5,\n  };\n  geometryFolder.add(geometryConfig, 'width', 50, 300).onChange((width) => {\n    planeGeometry.width = width;\n  });\n  geometryFolder.add(geometryConfig, 'depth', 50, 300).onChange((depth) => {\n    planeGeometry.depth = depth;\n  });\n  geometryFolder.add(geometryConfig, 'widthSegments', 1, 10, 1).onChange((widthSegments) => {\n    planeGeometry.widthSegments = widthSegments;\n  });\n  geometryFolder.add(geometryConfig, 'depthSegments', 1, 10, 1).onChange((depthSegments) => {\n    planeGeometry.depthSegments = depthSegments;\n  });\n  geometryFolder.open();\n})();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-webgl\", \"@antv/g-plugin-3d\", \"@antv/g-plugin-control\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-webgl\"), require(\"@antv/g-plugin-3d\"), require(\"@antv/g-plugin-control\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gWebgl, global.gPlugin3d, global.gPluginControl, global.lilGui, global.stats);\n    global.plane = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gWebgl, _gPlugin3d, _gPluginControl, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // create a renderer\n  var renderer = new _gWebgl.Renderer();\n  renderer.registerPlugin(new _gPlugin3d.Plugin());\n  renderer.registerPlugin(new _gPluginControl.Plugin()); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: renderer\n  });\n\n  (async function () {\n    // wait for canvas' initialization complete\n    await canvas.ready; // use GPU device\n\n    var plugin = renderer.getPlugin('device-renderer');\n    var device = plugin.getDevice();\n    var planeGeometry = new _gPlugin3d.PlaneGeometry(device, {\n      width: 200,\n      depth: 200,\n      widthSegments: 1,\n      depthSegments: 1\n    });\n    var basicMaterial = new _gPlugin3d.MeshBasicMaterial(device, {\n      wireframe: true\n    });\n    var plane = new _gPlugin3d.Mesh({\n      style: {\n        fill: '#1890FF',\n        opacity: 1,\n        geometry: planeGeometry,\n        material: basicMaterial\n      }\n    });\n    plane.setPosition(300, 250, 0);\n    canvas.appendChild(plane);\n    var plane2 = new _gPlugin3d.Mesh({\n      style: {\n        fill: '#1890FF',\n        opacity: 1,\n        width: 400,\n        depth: 400,\n        geometry: planeGeometry,\n        material: basicMaterial\n      }\n    });\n    plane2.setPosition(300, 450, 0);\n    canvas.appendChild(plane2);\n    canvas.getCamera().setPosition(300, 0, 500); // stats\n\n    var stats = new _stats.default();\n    stats.showPanel(0);\n    var $stats = stats.dom;\n    $stats.style.position = 'absolute';\n    $stats.style.left = '0px';\n    $stats.style.top = '0px';\n    var $wrapper = document.getElementById('container');\n    $wrapper.appendChild($stats);\n    canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n      if (stats) {\n        stats.update();\n      } // plane.rotate(0, 1, 0);\n\n    }); // GUI\n\n    var gui = new lil.GUI({\n      autoPlace: false\n    });\n    $wrapper.appendChild(gui.domElement);\n    var planeFolder = gui.addFolder('plane');\n    var planeConfig = {\n      opacity: 1,\n      fill: '#1890FF'\n    };\n    planeFolder.add(planeConfig, 'opacity', 0, 1, 0.1).onChange(function (opacity) {\n      plane.style.opacity = opacity;\n    });\n    planeFolder.addColor(planeConfig, 'fill').onChange(function (color) {\n      plane.style.fill = color;\n    });\n    planeFolder.open();\n    var geometryFolder = gui.addFolder('geometry');\n    var geometryConfig = {\n      width: 200,\n      depth: 200,\n      widthSegments: 5,\n      depthSegments: 5\n    };\n    geometryFolder.add(geometryConfig, 'width', 50, 300).onChange(function (width) {\n      planeGeometry.width = width;\n    });\n    geometryFolder.add(geometryConfig, 'depth', 50, 300).onChange(function (depth) {\n      planeGeometry.depth = depth;\n    });\n    geometryFolder.add(geometryConfig, 'widthSegments', 1, 10, 1).onChange(function (widthSegments) {\n      planeGeometry.widthSegments = widthSegments;\n    });\n    geometryFolder.add(geometryConfig, 'depthSegments', 1, 10, 1).onChange(function (depthSegments) {\n      planeGeometry.depthSegments = depthSegments;\n    });\n    geometryFolder.open();\n  })();\n});"},{"relativePath":"3d/demo/music-viz.tsx","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/3d/demo/music-viz.tsx","order":7,"filename":"music-viz.tsx","title":{"zh":"音乐可视化","en":"Music Visualization"},"screenshot":"https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*nKFQQZdL3-IAAAAAAAAAAAAAARQnAQ","source":"import React, { useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport Stats from 'stats.js';\nimport SimplexNoise from 'simplex-noise';\nimport { Canvas, CanvasEvent } from '@antv/g';\nimport { Renderer as WebGLRenderer } from '@antv/g-webgl';\nimport {\n  Mesh,\n  SphereGeometry,\n  PlaneGeometry,\n  MeshBasicMaterial,\n  Fog,\n  FogType,\n  Plugin as Plugin3D,\n  CullMode,\n  VertexAttributeBufferIndex,\n  VertexAttributeLocation,\n} from '@antv/g-plugin-3d';\nimport { Plugin as PluginControl } from '@antv/g-plugin-control';\n\n/**\n * ported from https://medium.com/@mag_ops/music-visualiser-with-three-js-web-audio-api-b30175e7b5ba\n * Web Audio API @see https://developer.mozilla.org/zh-CN/docs/Web/API/AudioContext\n */\n\nconst App = function MusicViz() {\n  const containerRef = useRef(null);\n  const audioRef = useRef(null);\n  let analyser;\n  let dataArray;\n  const noise = new SimplexNoise();\n\n  useEffect(() => {\n    // create a webgl renderer\n    const renderer = new WebGLRenderer();\n    renderer.registerPlugin(new Plugin3D());\n    renderer.registerPlugin(new PluginControl());\n\n    // create a canvas\n    const canvas = new Canvas({\n      container: containerRef.current,\n      width: 600,\n      height: 500,\n      renderer,\n      background: '#120f6c',\n    });\n\n    const camera = canvas.getCamera();\n    camera.setPosition(300, 100, 500);\n    camera.setPerspective(0.1, 1000, 75, 600 / 500);\n\n    canvas.appendChild(\n      new Fog({\n        style: {\n          fill: 'purple',\n          type: FogType.EXP2,\n          density: 0.0015,\n          start: 0,\n          end: 0,\n        },\n      }),\n    );\n\n    (async () => {\n      await canvas.ready;\n\n      const plugin = renderer.getPlugin('device-renderer');\n      const device = plugin.getDevice();\n\n      const sphereGeometry = new SphereGeometry(device, {\n        radius: 100,\n        latitudeBands: 32,\n        longitudeBands: 32,\n      });\n      const groundGeometry = new PlaneGeometry(device, {\n        width: 800,\n        depth: 800,\n        widthSegments: 20,\n        depthSegments: 20,\n      });\n      const skyGeometry = new PlaneGeometry(device, {\n        width: 800,\n        depth: 800,\n        widthSegments: 20,\n        depthSegments: 20,\n      });\n      const planeMaterial = new MeshBasicMaterial(device, {\n        wireframe: true,\n        wireframeColor: 'purple',\n        cullMode: CullMode.None,\n      });\n      const basicMaterial = new MeshBasicMaterial(device, {\n        wireframe: true,\n        wireframeColor: '#ff00ee',\n      });\n\n      const sphere = new Mesh({\n        style: {\n          x: 300,\n          y: 200,\n          fill: '#120f6c',\n          opacity: 1,\n          geometry: sphereGeometry,\n          material: basicMaterial,\n        },\n      });\n      canvas.appendChild(sphere);\n\n      const ground = new Mesh({\n        style: {\n          x: 300,\n          y: 250,\n          fill: '#120f6c',\n          opacity: 1,\n          geometry: groundGeometry,\n          material: planeMaterial,\n        },\n      });\n      canvas.appendChild(ground);\n\n      const sky = new Mesh({\n        style: {\n          x: 300,\n          y: 0,\n          fill: 'white',\n          opacity: 1,\n          geometry: skyGeometry,\n          material: planeMaterial,\n        },\n      });\n      canvas.appendChild(sky);\n\n      canvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n        if (stats) {\n          stats.update();\n        }\n\n        canvas.document.documentElement.setOrigin(300, 250, 0);\n        canvas.document.documentElement.rotate(0, 0.2, 0);\n\n        if (analyser && dataArray) {\n          analyser.getByteFrequencyData(dataArray);\n\n          const lowerHalfArray = dataArray.slice(0, dataArray.length / 2 - 1);\n          const upperHalfArray = dataArray.slice(dataArray.length / 2 - 1, dataArray.length - 1);\n\n          const overallAvg = avg(dataArray);\n          const lowerMax = max(lowerHalfArray);\n          const lowerAvg = avg(lowerHalfArray);\n          const upperMax = max(upperHalfArray);\n          const upperAvg = avg(upperHalfArray);\n\n          const lowerMaxFr = lowerMax / lowerHalfArray.length;\n          const lowerAvgFr = lowerAvg / lowerHalfArray.length;\n          const upperMaxFr = upperMax / upperHalfArray.length;\n          const upperAvgFr = upperAvg / upperHalfArray.length;\n\n          makeRoughGround(groundGeometry, modulate(lowerMaxFr, 0, 1, 0.5, 4));\n          makeRoughGround(skyGeometry, modulate(upperAvgFr, 0, 1, 0.5, 4));\n          makeRoughBall(\n            sphereGeometry,\n            modulate(Math.pow(lowerMaxFr, 0.8), 0, 1, 0, 8),\n            modulate(upperAvgFr, 0, 1, 0, 4),\n          );\n        }\n      });\n\n      const makeRoughGround = (geometry, distortionFr) => {\n        const bufferIndex = VertexAttributeBufferIndex.POSITION;\n        const positions = geometry.vertices[bufferIndex];\n\n        for (let i = 0; i < positions.length; i += 3) {\n          const x = positions[i];\n          const y = positions[i + 1];\n          const z = positions[i + 2];\n\n          const amp = 2;\n          const time = window.performance.now();\n          const distance = noise.noise2D(x + time * 0.003, z + time * 0.001) * distortionFr * amp;\n          positions[i + 1] = distance;\n        }\n\n        geometry.updateVertexBuffer(\n          bufferIndex,\n          VertexAttributeLocation.POSITION,\n          0,\n          new Uint8Array(positions.buffer),\n        );\n      };\n\n      const makeRoughBall = (geometry, bassFr, treFr) => {\n        const bufferIndex = VertexAttributeBufferIndex.POSITION;\n        const positions = geometry.vertices[bufferIndex];\n\n        for (let i = 0; i < positions.length; i += 3) {\n          const x = positions[i];\n          const y = positions[i + 1];\n          const z = positions[i + 2];\n\n          const amp = 7;\n          const time = window.performance.now();\n          const radius = 100;\n          const vec3 = [x, y, z];\n\n          normalize(vec3, vec3);\n          const rf = 0.0001;\n          const distance =\n            radius +\n            bassFr +\n            noise.noise3D(\n              vec3[0] + time * rf * 7,\n              vec3[1] + time * rf * 8,\n              vec3[2] + time * rf * 9,\n            ) *\n              amp *\n              treFr;\n\n          positions[i] = vec3[0] * distance;\n          positions[i + 1] = vec3[1] * distance;\n          positions[i + 2] = vec3[2] * distance;\n        }\n\n        geometry.updateVertexBuffer(\n          bufferIndex,\n          VertexAttributeLocation.POSITION,\n          0,\n          new Uint8Array(positions.buffer),\n        );\n      };\n\n      const stats = new Stats();\n      stats.showPanel(0);\n      const $stats = stats.dom;\n      $stats.style.position = 'absolute';\n      $stats.style.left = '0px';\n      $stats.style.top = '0px';\n      const $wrapper = containerRef.current;\n      $wrapper.appendChild($stats);\n    })();\n  }, []);\n\n  const handleFileChanged = (e) => {\n    const files = e.target.files;\n    const audio = audioRef.current;\n    audio.src = URL.createObjectURL(files[0]);\n    audio.load();\n    audio.play();\n\n    const context = new AudioContext();\n    const src = context.createMediaElementSource(audio);\n    analyser = context.createAnalyser();\n    src.connect(analyser);\n    analyser.connect(context.destination);\n    analyser.fftSize = 512;\n    const bufferLength = analyser.frequencyBinCount;\n    dataArray = new Uint8Array(bufferLength);\n  };\n\n  return (\n    <>\n      <label htmlFor=\"file\">\n        <input type=\"file\" id=\"file\" accept=\"audio/*\" onChange={handleFileChanged} />\n      </label>\n      <audio id=\"audio\" controls ref={audioRef}></audio>\n\n      <div\n        id=\"container1\"\n        ref={containerRef}\n        style={{\n          width: '100%',\n          height: '100%',\n        }}\n      />\n    </>\n  );\n};\n\n//some helper functions here\nfunction fractionate(val, minVal, maxVal) {\n  return (val - minVal) / (maxVal - minVal);\n}\n\nfunction modulate(val, minVal, maxVal, outMin, outMax) {\n  const fr = fractionate(val, minVal, maxVal);\n  const delta = outMax - outMin;\n  return outMin + fr * delta;\n}\n\nfunction avg(arr) {\n  const total = arr.reduce(function (sum, b) {\n    return sum + b;\n  });\n  return total / arr.length;\n}\n\nfunction max(arr) {\n  return arr.reduce(function (a, b) {\n    return Math.max(a, b);\n  });\n}\n\nfunction normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n\nReactDOM.render(<App />, document.getElementById('container'));\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"react\", \"react-dom\", \"stats.js\", \"simplex-noise\", \"@antv/g\", \"@antv/g-webgl\", \"@antv/g-plugin-3d\", \"@antv/g-plugin-control\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"react\"), require(\"react-dom\"), require(\"stats.js\"), require(\"simplex-noise\"), require(\"@antv/g\"), require(\"@antv/g-webgl\"), require(\"@antv/g-plugin-3d\"), require(\"@antv/g-plugin-control\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.react, global.reactDom, global.stats, global.simplexNoise, global.g, global.gWebgl, global.gPlugin3d, global.gPluginControl);\n    global.musicViz = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_react, _reactDom, _stats, _simplexNoise, _g, _gWebgl, _gPlugin3d, _gPluginControl) {\n  \"use strict\";\n\n  _react = _interopRequireWildcard(_react);\n  _reactDom = _interopRequireDefault(_reactDom);\n  _stats = _interopRequireDefault(_stats);\n  _simplexNoise = _interopRequireDefault(_simplexNoise);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * ported from https://medium.com/@mag_ops/music-visualiser-with-three-js-web-audio-api-b30175e7b5ba\n   * Web Audio API @see https://developer.mozilla.org/zh-CN/docs/Web/API/AudioContext\n   */\n  var App = function MusicViz() {\n    var containerRef = (0, _react.useRef)(null);\n    var audioRef = (0, _react.useRef)(null);\n    var analyser;\n    var dataArray;\n    var noise = new _simplexNoise.default();\n    (0, _react.useEffect)(function () {\n      // create a webgl renderer\n      var renderer = new _gWebgl.Renderer();\n      renderer.registerPlugin(new _gPlugin3d.Plugin());\n      renderer.registerPlugin(new _gPluginControl.Plugin()); // create a canvas\n\n      var canvas = new _g.Canvas({\n        container: containerRef.current,\n        width: 600,\n        height: 500,\n        renderer: renderer,\n        background: '#120f6c'\n      });\n      var camera = canvas.getCamera();\n      camera.setPosition(300, 100, 500);\n      camera.setPerspective(0.1, 1000, 75, 600 / 500);\n      canvas.appendChild(new _gPlugin3d.Fog({\n        style: {\n          fill: 'purple',\n          type: _gPlugin3d.FogType.EXP2,\n          density: 0.0015,\n          start: 0,\n          end: 0\n        }\n      }));\n\n      (async function () {\n        await canvas.ready;\n        var plugin = renderer.getPlugin('device-renderer');\n        var device = plugin.getDevice();\n        var sphereGeometry = new _gPlugin3d.SphereGeometry(device, {\n          radius: 100,\n          latitudeBands: 32,\n          longitudeBands: 32\n        });\n        var groundGeometry = new _gPlugin3d.PlaneGeometry(device, {\n          width: 800,\n          depth: 800,\n          widthSegments: 20,\n          depthSegments: 20\n        });\n        var skyGeometry = new _gPlugin3d.PlaneGeometry(device, {\n          width: 800,\n          depth: 800,\n          widthSegments: 20,\n          depthSegments: 20\n        });\n        var planeMaterial = new _gPlugin3d.MeshBasicMaterial(device, {\n          wireframe: true,\n          wireframeColor: 'purple',\n          cullMode: _gPlugin3d.CullMode.None\n        });\n        var basicMaterial = new _gPlugin3d.MeshBasicMaterial(device, {\n          wireframe: true,\n          wireframeColor: '#ff00ee'\n        });\n        var sphere = new _gPlugin3d.Mesh({\n          style: {\n            x: 300,\n            y: 200,\n            fill: '#120f6c',\n            opacity: 1,\n            geometry: sphereGeometry,\n            material: basicMaterial\n          }\n        });\n        canvas.appendChild(sphere);\n        var ground = new _gPlugin3d.Mesh({\n          style: {\n            x: 300,\n            y: 250,\n            fill: '#120f6c',\n            opacity: 1,\n            geometry: groundGeometry,\n            material: planeMaterial\n          }\n        });\n        canvas.appendChild(ground);\n        var sky = new _gPlugin3d.Mesh({\n          style: {\n            x: 300,\n            y: 0,\n            fill: 'white',\n            opacity: 1,\n            geometry: skyGeometry,\n            material: planeMaterial\n          }\n        });\n        canvas.appendChild(sky);\n        canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n          if (stats) {\n            stats.update();\n          }\n\n          canvas.document.documentElement.setOrigin(300, 250, 0);\n          canvas.document.documentElement.rotate(0, 0.2, 0);\n\n          if (analyser && dataArray) {\n            analyser.getByteFrequencyData(dataArray);\n            var lowerHalfArray = dataArray.slice(0, dataArray.length / 2 - 1);\n            var upperHalfArray = dataArray.slice(dataArray.length / 2 - 1, dataArray.length - 1);\n            var overallAvg = avg(dataArray);\n            var lowerMax = max(lowerHalfArray);\n            var lowerAvg = avg(lowerHalfArray);\n            var upperMax = max(upperHalfArray);\n            var upperAvg = avg(upperHalfArray);\n            var lowerMaxFr = lowerMax / lowerHalfArray.length;\n            var lowerAvgFr = lowerAvg / lowerHalfArray.length;\n            var upperMaxFr = upperMax / upperHalfArray.length;\n            var upperAvgFr = upperAvg / upperHalfArray.length;\n            makeRoughGround(groundGeometry, modulate(lowerMaxFr, 0, 1, 0.5, 4));\n            makeRoughGround(skyGeometry, modulate(upperAvgFr, 0, 1, 0.5, 4));\n            makeRoughBall(sphereGeometry, modulate(Math.pow(lowerMaxFr, 0.8), 0, 1, 0, 8), modulate(upperAvgFr, 0, 1, 0, 4));\n          }\n        });\n\n        var makeRoughGround = function makeRoughGround(geometry, distortionFr) {\n          var bufferIndex = _gPlugin3d.VertexAttributeBufferIndex.POSITION;\n          var positions = geometry.vertices[bufferIndex];\n\n          for (var i = 0; i < positions.length; i += 3) {\n            var x = positions[i];\n            var y = positions[i + 1];\n            var z = positions[i + 2];\n            var amp = 2;\n            var time = window.performance.now();\n            var distance = noise.noise2D(x + time * 0.003, z + time * 0.001) * distortionFr * amp;\n            positions[i + 1] = distance;\n          }\n\n          geometry.updateVertexBuffer(bufferIndex, _gPlugin3d.VertexAttributeLocation.POSITION, 0, new Uint8Array(positions.buffer));\n        };\n\n        var makeRoughBall = function makeRoughBall(geometry, bassFr, treFr) {\n          var bufferIndex = _gPlugin3d.VertexAttributeBufferIndex.POSITION;\n          var positions = geometry.vertices[bufferIndex];\n\n          for (var i = 0; i < positions.length; i += 3) {\n            var x = positions[i];\n            var y = positions[i + 1];\n            var z = positions[i + 2];\n            var amp = 7;\n            var time = window.performance.now();\n            var radius = 100;\n            var vec3 = [x, y, z];\n            normalize(vec3, vec3);\n            var rf = 0.0001;\n            var distance = radius + bassFr + noise.noise3D(vec3[0] + time * rf * 7, vec3[1] + time * rf * 8, vec3[2] + time * rf * 9) * amp * treFr;\n            positions[i] = vec3[0] * distance;\n            positions[i + 1] = vec3[1] * distance;\n            positions[i + 2] = vec3[2] * distance;\n          }\n\n          geometry.updateVertexBuffer(bufferIndex, _gPlugin3d.VertexAttributeLocation.POSITION, 0, new Uint8Array(positions.buffer));\n        };\n\n        var stats = new _stats.default();\n        stats.showPanel(0);\n        var $stats = stats.dom;\n        $stats.style.position = 'absolute';\n        $stats.style.left = '0px';\n        $stats.style.top = '0px';\n        var $wrapper = containerRef.current;\n        $wrapper.appendChild($stats);\n      })();\n    }, []);\n\n    var handleFileChanged = function handleFileChanged(e) {\n      var files = e.target.files;\n      var audio = audioRef.current;\n      audio.src = URL.createObjectURL(files[0]);\n      audio.load();\n      audio.play();\n      var context = new AudioContext();\n      var src = context.createMediaElementSource(audio);\n      analyser = context.createAnalyser();\n      src.connect(analyser);\n      analyser.connect(context.destination);\n      analyser.fftSize = 512;\n      var bufferLength = analyser.frequencyBinCount;\n      dataArray = new Uint8Array(bufferLength);\n    };\n\n    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(\"label\", {\n      htmlFor: \"file\"\n    }, /*#__PURE__*/_react.default.createElement(\"input\", {\n      type: \"file\",\n      id: \"file\",\n      accept: \"audio/*\",\n      onChange: handleFileChanged\n    })), /*#__PURE__*/_react.default.createElement(\"audio\", {\n      id: \"audio\",\n      controls: true,\n      ref: audioRef\n    }), /*#__PURE__*/_react.default.createElement(\"div\", {\n      id: \"container1\",\n      ref: containerRef,\n      style: {\n        width: '100%',\n        height: '100%'\n      }\n    }));\n  }; //some helper functions here\n\n\n  function fractionate(val, minVal, maxVal) {\n    return (val - minVal) / (maxVal - minVal);\n  }\n\n  function modulate(val, minVal, maxVal, outMin, outMax) {\n    var fr = fractionate(val, minVal, maxVal);\n    var delta = outMax - outMin;\n    return outMin + fr * delta;\n  }\n\n  function avg(arr) {\n    var total = arr.reduce(function (sum, b) {\n      return sum + b;\n    });\n    return total / arr.length;\n  }\n\n  function max(arr) {\n    return arr.reduce(function (a, b) {\n      return Math.max(a, b);\n    });\n  }\n\n  function normalize(out, a) {\n    var x = a[0];\n    var y = a[1];\n    var z = a[2];\n    var len = x * x + y * y + z * z;\n\n    if (len > 0) {\n      len = 1 / Math.sqrt(len);\n    }\n\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n    return out;\n  }\n\n  _reactDom.default.render( /*#__PURE__*/_react.default.createElement(App, null), document.getElementById('container'));\n});"},{"relativePath":"3d/demo/shader-material.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/3d/demo/shader-material.js","order":9,"filename":"shader-material.js","title":{"zh":"自定义 Material","en":"Use ShaderMaterial"},"source":"import { Canvas, CanvasEvent } from '@antv/g';\nimport { Renderer } from '@antv/g-webgl';\nimport {\n  ShaderMaterial,\n  BufferGeometry,\n  Mesh,\n  VertexBufferFrequency,\n  Format,\n  VertexAttributeBufferIndex,\n  VertexAttributeLocation,\n  Plugin as Plugin3D,\n} from '@antv/g-plugin-3d';\nimport Stats from 'stats.js';\nimport * as lil from 'lil-gui';\n\n// create a renderer\nconst renderer = new Renderer();\nrenderer.registerPlugin(new Plugin3D());\n\n// create a canvas\nconst CANVAS_WIDTH = 600;\nconst CANVAS_HEIGHT = 500;\nconst canvas = new Canvas({\n  container: 'container',\n  width: CANVAS_WIDTH,\n  height: CANVAS_HEIGHT,\n  renderer,\n});\n\n(async () => {\n  // wait for canvas' initialization complete\n  await canvas.ready;\n\n  // use GPU device\n  const plugin = renderer.getPlugin('device-renderer');\n  const device = plugin.getDevice();\n\n  // create buffer geometry\n  const bufferGeometry = new BufferGeometry(device);\n  bufferGeometry.setVertexBuffer({\n    bufferIndex: VertexAttributeBufferIndex.POSITION,\n    byteStride: 4 * 3,\n    frequency: VertexBufferFrequency.PerVertex,\n    attributes: [\n      {\n        format: Format.F32_RGB,\n        bufferByteOffset: 4 * 0,\n        location: VertexAttributeLocation.POSITION,\n      },\n    ],\n    // use 6 vertices\n    data: Float32Array.from([\n      -CANVAS_WIDTH / 2,\n      CANVAS_HEIGHT / 2,\n      100.0,\n      CANVAS_WIDTH / 2,\n      CANVAS_HEIGHT / 2,\n      100.0,\n      CANVAS_WIDTH / 2,\n      -CANVAS_HEIGHT / 2,\n      100.0,\n      CANVAS_WIDTH / 2,\n      -CANVAS_HEIGHT / 2,\n      100.0,\n      -CANVAS_WIDTH / 2,\n      -CANVAS_HEIGHT / 2,\n      100.0,\n      -CANVAS_WIDTH / 2,\n      CANVAS_HEIGHT / 2,\n      100.0,\n    ]),\n  });\n  // draw 6 vertices\n  bufferGeometry.vertexCount = 6;\n\n  const shaderMaterial = new ShaderMaterial(device, {\n    vertexShader: `\n    layout(std140) uniform ub_SceneParams {\n      mat4 u_ProjectionMatrix;\n      mat4 u_ViewMatrix;\n      vec3 u_CameraPosition;\n      float u_DevicePixelRatio;\n      vec2 u_Viewport;\n      float u_IsOrtho;\n    };\n    layout(std140) uniform ub_MaterialParams {\n      float u_Level;\n    };\n\n    layout(location = ${VertexAttributeLocation.MODEL_MATRIX0}) in vec4 a_ModelMatrix0;\n    layout(location = ${VertexAttributeLocation.MODEL_MATRIX1}) in vec4 a_ModelMatrix1;\n    layout(location = ${VertexAttributeLocation.MODEL_MATRIX2}) in vec4 a_ModelMatrix2;\n    layout(location = ${VertexAttributeLocation.MODEL_MATRIX3}) in vec4 a_ModelMatrix3;\n    layout(location = ${VertexAttributeLocation.POSITION}) in vec3 a_Position;\n\n    void main() {\n      mat4 u_ModelMatrix = mat4(a_ModelMatrix0, a_ModelMatrix1, a_ModelMatrix2, a_ModelMatrix3);\n      gl_Position = u_ProjectionMatrix * u_ViewMatrix * u_ModelMatrix * vec4(a_Position, 1.0);\n    }\n    `,\n    fragmentShader: ` \n    layout(std140) uniform ub_SceneParams {\n      mat4 u_ProjectionMatrix;\n      mat4 u_ViewMatrix;\n      vec3 u_CameraPosition;\n      float u_DevicePixelRatio;\n      vec2 u_Viewport;\n      float u_IsOrtho;\n    };\n\n    layout(std140) uniform ub_MaterialParams {\n      float u_Level;\n    };\n\n    out vec4 outputColor;\n\n    float random (vec2 st) {\n      return fract(sin(\n        dot(st.xy,vec2(12.9898,78.233)))*\n        43758.5453123);\n    }\n\n    float noise (in vec2 st) {\n      vec2 i = floor(st);\n      vec2 f = fract(st);\n\n      // Four corners in 2D of a tile\n      float a = random(i);\n      float b = random(i + vec2(1.0, 0.0));\n      float c = random(i + vec2(0.0, 1.0));\n      float d = random(i + vec2(1.0, 1.0));\n\n      vec2 u = smoothstep(0.,1.,f);\n\n      // Mix 4 coorners percentages\n      return mix(a, b, u.x) +\n              (c - a)* u.y * (1.0 - u.x) +\n              (d - b) * u.x * u.y;\n    }\n\n    // gradient noise\n    // float noise( in vec2 st ) {\n    //   vec2 i = floor(st);\n    //   vec2 f = fract(st);\n      \n    //   vec2 u = smoothstep(0., 1., f);\n\n    //   return mix( mix( dot( random( i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ), \n    //                   dot( random( i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n    //               mix( dot( random( i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ), \n    //                   dot( random( i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\n    // }\n\n    void main() {\n      vec2 st = gl_FragCoord.xy / u_Viewport;\n      vec2 pos = vec2(st * u_Level);\n      float n = noise(pos);\n      outputColor = vec4(vec3(n), 1.0);\n    }\n    `,\n  });\n  shaderMaterial.setUniforms({\n    u_Level: 5,\n  });\n  const mesh = new Mesh({\n    style: {\n      fill: '#1890FF',\n      opacity: 1,\n      geometry: bufferGeometry,\n      material: shaderMaterial,\n    },\n  });\n  mesh.setPosition(300, 250, 0);\n  canvas.appendChild(mesh);\n\n  // stats\n  const stats = new Stats();\n  stats.showPanel(0);\n  const $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  const $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n    if (stats) {\n      stats.update();\n    }\n  });\n\n  // GUI\n  const gui = new lil.GUI({ autoPlace: false });\n  $wrapper.appendChild(gui.domElement);\n\n  const noiseFolder = gui.addFolder('noise');\n  const noiseConfig = {\n    level: 5,\n  };\n  noiseFolder.add(noiseConfig, 'level', 1, 100, 1).onChange((level) => {\n    shaderMaterial.setUniforms({ u_Level: level });\n  });\n  noiseFolder.open();\n})();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-webgl\", \"@antv/g-plugin-3d\", \"stats.js\", \"lil-gui\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-webgl\"), require(\"@antv/g-plugin-3d\"), require(\"stats.js\"), require(\"lil-gui\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gWebgl, global.gPlugin3d, global.stats, global.lilGui);\n    global.shaderMaterial = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gWebgl, _gPlugin3d, _stats, lil) {\n  \"use strict\";\n\n  _stats = _interopRequireDefault(_stats);\n  lil = _interopRequireWildcard(lil);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  // create a renderer\n  var renderer = new _gWebgl.Renderer();\n  renderer.registerPlugin(new _gPlugin3d.Plugin()); // create a canvas\n\n  var CANVAS_WIDTH = 600;\n  var CANVAS_HEIGHT = 500;\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: CANVAS_WIDTH,\n    height: CANVAS_HEIGHT,\n    renderer: renderer\n  });\n\n  (async function () {\n    // wait for canvas' initialization complete\n    await canvas.ready; // use GPU device\n\n    var plugin = renderer.getPlugin('device-renderer');\n    var device = plugin.getDevice(); // create buffer geometry\n\n    var bufferGeometry = new _gPlugin3d.BufferGeometry(device);\n    bufferGeometry.setVertexBuffer({\n      bufferIndex: _gPlugin3d.VertexAttributeBufferIndex.POSITION,\n      byteStride: 4 * 3,\n      frequency: _gPlugin3d.VertexBufferFrequency.PerVertex,\n      attributes: [{\n        format: _gPlugin3d.Format.F32_RGB,\n        bufferByteOffset: 4 * 0,\n        location: _gPlugin3d.VertexAttributeLocation.POSITION\n      }],\n      // use 6 vertices\n      data: Float32Array.from([-CANVAS_WIDTH / 2, CANVAS_HEIGHT / 2, 100.0, CANVAS_WIDTH / 2, CANVAS_HEIGHT / 2, 100.0, CANVAS_WIDTH / 2, -CANVAS_HEIGHT / 2, 100.0, CANVAS_WIDTH / 2, -CANVAS_HEIGHT / 2, 100.0, -CANVAS_WIDTH / 2, -CANVAS_HEIGHT / 2, 100.0, -CANVAS_WIDTH / 2, CANVAS_HEIGHT / 2, 100.0])\n    }); // draw 6 vertices\n\n    bufferGeometry.vertexCount = 6;\n    var shaderMaterial = new _gPlugin3d.ShaderMaterial(device, {\n      vertexShader: \"\\n    layout(std140) uniform ub_SceneParams {\\n      mat4 u_ProjectionMatrix;\\n      mat4 u_ViewMatrix;\\n      vec3 u_CameraPosition;\\n      float u_DevicePixelRatio;\\n      vec2 u_Viewport;\\n      float u_IsOrtho;\\n    };\\n    layout(std140) uniform ub_MaterialParams {\\n      float u_Level;\\n    };\\n\\n    layout(location = \".concat(_gPlugin3d.VertexAttributeLocation.MODEL_MATRIX0, \") in vec4 a_ModelMatrix0;\\n    layout(location = \").concat(_gPlugin3d.VertexAttributeLocation.MODEL_MATRIX1, \") in vec4 a_ModelMatrix1;\\n    layout(location = \").concat(_gPlugin3d.VertexAttributeLocation.MODEL_MATRIX2, \") in vec4 a_ModelMatrix2;\\n    layout(location = \").concat(_gPlugin3d.VertexAttributeLocation.MODEL_MATRIX3, \") in vec4 a_ModelMatrix3;\\n    layout(location = \").concat(_gPlugin3d.VertexAttributeLocation.POSITION, \") in vec3 a_Position;\\n\\n    void main() {\\n      mat4 u_ModelMatrix = mat4(a_ModelMatrix0, a_ModelMatrix1, a_ModelMatrix2, a_ModelMatrix3);\\n      gl_Position = u_ProjectionMatrix * u_ViewMatrix * u_ModelMatrix * vec4(a_Position, 1.0);\\n    }\\n    \"),\n      fragmentShader: \" \\n    layout(std140) uniform ub_SceneParams {\\n      mat4 u_ProjectionMatrix;\\n      mat4 u_ViewMatrix;\\n      vec3 u_CameraPosition;\\n      float u_DevicePixelRatio;\\n      vec2 u_Viewport;\\n      float u_IsOrtho;\\n    };\\n\\n    layout(std140) uniform ub_MaterialParams {\\n      float u_Level;\\n    };\\n\\n    out vec4 outputColor;\\n\\n    float random (vec2 st) {\\n      return fract(sin(\\n        dot(st.xy,vec2(12.9898,78.233)))*\\n        43758.5453123);\\n    }\\n\\n    float noise (in vec2 st) {\\n      vec2 i = floor(st);\\n      vec2 f = fract(st);\\n\\n      // Four corners in 2D of a tile\\n      float a = random(i);\\n      float b = random(i + vec2(1.0, 0.0));\\n      float c = random(i + vec2(0.0, 1.0));\\n      float d = random(i + vec2(1.0, 1.0));\\n\\n      vec2 u = smoothstep(0.,1.,f);\\n\\n      // Mix 4 coorners percentages\\n      return mix(a, b, u.x) +\\n              (c - a)* u.y * (1.0 - u.x) +\\n              (d - b) * u.x * u.y;\\n    }\\n\\n    // gradient noise\\n    // float noise( in vec2 st ) {\\n    //   vec2 i = floor(st);\\n    //   vec2 f = fract(st);\\n      \\n    //   vec2 u = smoothstep(0., 1., f);\\n\\n    //   return mix( mix( dot( random( i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ), \\n    //                   dot( random( i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\\n    //               mix( dot( random( i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ), \\n    //                   dot( random( i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\\n    // }\\n\\n    void main() {\\n      vec2 st = gl_FragCoord.xy / u_Viewport;\\n      vec2 pos = vec2(st * u_Level);\\n      float n = noise(pos);\\n      outputColor = vec4(vec3(n), 1.0);\\n    }\\n    \"\n    });\n    shaderMaterial.setUniforms({\n      u_Level: 5\n    });\n    var mesh = new _gPlugin3d.Mesh({\n      style: {\n        fill: '#1890FF',\n        opacity: 1,\n        geometry: bufferGeometry,\n        material: shaderMaterial\n      }\n    });\n    mesh.setPosition(300, 250, 0);\n    canvas.appendChild(mesh); // stats\n\n    var stats = new _stats.default();\n    stats.showPanel(0);\n    var $stats = stats.dom;\n    $stats.style.position = 'absolute';\n    $stats.style.left = '0px';\n    $stats.style.top = '0px';\n    var $wrapper = document.getElementById('container');\n    $wrapper.appendChild($stats);\n    canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n      if (stats) {\n        stats.update();\n      }\n    }); // GUI\n\n    var gui = new lil.GUI({\n      autoPlace: false\n    });\n    $wrapper.appendChild(gui.domElement);\n    var noiseFolder = gui.addFolder('noise');\n    var noiseConfig = {\n      level: 5\n    };\n    noiseFolder.add(noiseConfig, 'level', 1, 100, 1).onChange(function (level) {\n      shaderMaterial.setUniforms({\n        u_Level: level\n      });\n    });\n    noiseFolder.open();\n  })();\n});"},{"relativePath":"3d/demo/sphere.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/3d/demo/sphere.js","order":3,"filename":"sphere.js","title":{"zh":"球","en":"Sphere"},"source":"import { Canvas, CanvasEvent } from '@antv/g';\nimport { Renderer } from '@antv/g-webgl';\nimport {\n  MeshPhongMaterial,\n  SphereGeometry,\n  AmbientLight,\n  DirectionalLight,\n  Mesh,\n  Fog,\n  FogType,\n  Plugin as Plugin3D,\n} from '@antv/g-plugin-3d';\nimport { Plugin as PluginControl } from '@antv/g-plugin-control';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst renderer = new Renderer();\nrenderer.registerPlugin(new Plugin3D());\nrenderer.registerPlugin(new PluginControl());\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer,\n  background: 'black',\n});\n\n(async () => {\n  // wait for canvas' initialization complete\n  await canvas.ready;\n  // use GPU device\n  const plugin = renderer.getPlugin('device-renderer');\n  const device = plugin.getDevice();\n\n  const map = plugin.loadTexture(\n    'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*npAsSLPX4A4AAAAAAAAAAAAAARQnAQ',\n  );\n  const specularMap = plugin.loadTexture(\n    'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*8wz0QaP_bjoAAAAAAAAAAAAAARQnAQ',\n  );\n  const bumpMap = plugin.loadTexture(\n    'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*kuUITY47ZhMAAAAAAAAAAAAAARQnAQ',\n  );\n  const cloudMap = plugin.loadTexture(\n    'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N2ooTq4cQroAAAAAAAAAAAAAARQnAQ',\n  );\n\n  // create a sphere geometry\n  const sphereGeometry = new SphereGeometry(device, {\n    radius: 200,\n    latitudeBands: 32,\n    longitudeBands: 32,\n  });\n  // create a material with Phong lighting model\n  const basicMaterial = new MeshPhongMaterial(device, {\n    map,\n    specular: 'white',\n    specularMap,\n    bumpMap,\n    bumpScale: 5,\n    shininess: 10,\n  });\n  const cloudMaterial = new MeshPhongMaterial(device, {\n    map: cloudMap,\n    doubleSide: true,\n    depthWrite: false,\n  });\n\n  // create a mesh\n  const sphere = new Mesh({\n    style: {\n      x: 300,\n      y: 250,\n      z: 0,\n      fill: '#1890FF',\n      opacity: 1,\n      geometry: sphereGeometry,\n      material: basicMaterial,\n    },\n  });\n  canvas.appendChild(sphere);\n\n  // const cloudMesh = new Mesh({\n  //   style: {\n  //     opacity: 0.2,\n  //     geometry: sphereGeometry,\n  //     material: cloudMaterial,\n  //   },\n  // });\n  // sphere.appendChild(cloudMesh);\n\n  // add a directional light into scene\n  const light = new DirectionalLight({\n    style: {\n      fill: 'white',\n      direction: [-1, 0, 1],\n    },\n  });\n  canvas.appendChild(light);\n\n  const ambientLight = new AmbientLight({\n    style: {\n      fill: '#000',\n    },\n  });\n  canvas.appendChild(ambientLight);\n\n  // create fog, append to canvas later\n  const fog = new Fog();\n\n  // stats\n  const stats = new Stats();\n  stats.showPanel(0);\n  const $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  const $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n    if (stats) {\n      stats.update();\n    }\n    sphere.rotate(0, 0.2, 0);\n  });\n\n  // GUI\n  const gui = new lil.GUI({ autoPlace: false });\n  $wrapper.appendChild(gui.domElement);\n\n  const ambientFolder = gui.addFolder('ambient light');\n  const ambientLightConfig = {\n    fill: '#000',\n  };\n  ambientFolder.addColor(ambientLightConfig, 'fill').onChange((fill) => {\n    ambientLight.style.fill = fill;\n  });\n\n  const lightFolder = gui.addFolder('directional light');\n  const lightConfig = {\n    fill: '#FFF',\n    intensity: Math.PI,\n    directionX: -1,\n    directionY: 0,\n    directionZ: 1,\n  };\n  lightFolder.addColor(lightConfig, 'fill').onChange((fill) => {\n    light.style.fill = fill;\n  });\n  lightFolder.add(lightConfig, 'intensity', 0, 20).onChange((intensity) => {\n    light.style.intensity = intensity;\n  });\n  lightFolder.add(lightConfig, 'directionX', -1, 1).onChange((directionX) => {\n    const direction = light.style.direction;\n    light.style.direction = [directionX, direction[1], direction[2]];\n  });\n  lightFolder.add(lightConfig, 'directionY', -1, 1).onChange((directionY) => {\n    const direction = light.style.direction;\n    light.style.direction = [direction[0], directionY, direction[2]];\n  });\n  lightFolder.add(lightConfig, 'directionZ', -1, 1).onChange((directionZ) => {\n    const direction = light.style.direction;\n    light.style.direction = [direction[0], direction[1], directionZ];\n  });\n  lightFolder.open();\n\n  const fogFolder = gui.addFolder('fog');\n  const fogConfig = {\n    enable: false,\n    type: FogType.NONE,\n    fill: '#000',\n    start: 1,\n    end: 1000,\n    density: 0,\n  };\n  fogFolder.add(fogConfig, 'enable').onChange((enable) => {\n    if (enable) {\n      canvas.appendChild(fog);\n    } else {\n      canvas.removeChild(fog);\n    }\n  });\n  fogFolder\n    .add(fogConfig, 'type', [FogType.NONE, FogType.EXP, FogType.EXP2, FogType.LINEAR])\n    .onChange((type) => {\n      fog.style.type = type;\n    });\n  fogFolder.addColor(fogConfig, 'fill').onChange((fill) => {\n    fog.style.fill = fill;\n  });\n  fogFolder.add(fogConfig, 'start', 0, 1000).onChange((start) => {\n    fog.style.start = start;\n  });\n  fogFolder.add(fogConfig, 'end', 0, 1000).onChange((end) => {\n    fog.style.end = end;\n  });\n  fogFolder.add(fogConfig, 'density', 0, 5).onChange((density) => {\n    fog.style.density = density;\n  });\n  fogFolder.open();\n\n  const sphereFolder = gui.addFolder('sphere');\n  const sphereConfig = {\n    opacity: 1,\n    fill: '#1890FF',\n  };\n  sphereFolder.add(sphereConfig, 'opacity', 0, 1, 0.1).onChange((opacity) => {\n    sphere.style.opacity = opacity;\n  });\n  sphereFolder.addColor(sphereConfig, 'fill').onChange((color) => {\n    sphere.style.fill = color;\n  });\n  sphereFolder.open();\n\n  const geometryFolder = gui.addFolder('geometry');\n  const geometryConfig = {\n    radius: 200,\n    latitudeBands: 32,\n    longitudeBands: 32,\n  };\n  geometryFolder.add(geometryConfig, 'radius', 50, 300).onChange((radius) => {\n    sphereGeometry.radius = radius;\n  });\n  geometryFolder.add(geometryConfig, 'latitudeBands', 8, 64, 1).onChange((latitudeBands) => {\n    sphereGeometry.latitudeBands = latitudeBands;\n  });\n  geometryFolder.add(geometryConfig, 'longitudeBands', 8, 64, 1).onChange((longitudeBands) => {\n    sphereGeometry.longitudeBands = longitudeBands;\n  });\n  geometryFolder.open();\n\n  const materialFolder = gui.addFolder('material');\n  const materialConfig = {\n    map: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*npAsSLPX4A4AAAAAAAAAAAAAARQnAQ',\n    emissive: '#000000',\n    specular: '#FFFFFF',\n    specularMap:\n      'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*8wz0QaP_bjoAAAAAAAAAAAAAARQnAQ',\n    shininess: 10,\n    bumpMap:\n      'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*kuUITY47ZhMAAAAAAAAAAAAAARQnAQ',\n    bumpScale: 5,\n    wireframe: false,\n  };\n  materialFolder\n    .add(materialConfig, 'map', [\n      'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*npAsSLPX4A4AAAAAAAAAAAAAARQnAQ',\n      'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ',\n      'none',\n    ])\n    .onChange((mapURL) => {\n      if (mapURL === 'none') {\n        sphere.style.material.map = null;\n      } else {\n        const map = plugin.loadTexture(mapURL);\n        sphere.style.material.map = map;\n      }\n    });\n  materialFolder.addColor(materialConfig, 'emissive').onChange((emissive) => {\n    sphere.style.material.emissive = emissive;\n  });\n  materialFolder.addColor(materialConfig, 'specular').onChange((specular) => {\n    sphere.style.material.specular = specular;\n  });\n  materialFolder\n    .add(materialConfig, 'specularMap', [\n      'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*8wz0QaP_bjoAAAAAAAAAAAAAARQnAQ',\n      'none',\n    ])\n    .onChange((specularMapURL) => {\n      if (specularMapURL === 'none') {\n        sphere.style.material.specularMap = null;\n      } else {\n        const specularMap = plugin.loadTexture(specularMapURL);\n        sphere.style.material.specularMap = specularMap;\n      }\n    });\n  materialFolder.add(materialConfig, 'shininess', 0, 100).onChange((shininess) => {\n    sphere.style.material.shininess = shininess;\n  });\n  materialFolder\n    .add(materialConfig, 'bumpMap', [\n      'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*kuUITY47ZhMAAAAAAAAAAAAAARQnAQ',\n      'none',\n    ])\n    .onChange((bumpMapURL) => {\n      if (bumpMapURL === 'none') {\n        sphere.style.material.bumpMap = null;\n      } else {\n        const bumpMap = plugin.loadTexture(bumpMapURL);\n        sphere.style.material.bumpMap = bumpMap;\n      }\n    });\n  materialFolder.add(materialConfig, 'bumpScale', 0, 10).onChange((bumpScale) => {\n    sphere.style.material.bumpScale = bumpScale;\n  });\n  materialFolder.add(materialConfig, 'wireframe').onChange((enable) => {\n    sphere.style.material.wireframe = !!enable;\n  });\n  materialFolder.open();\n})();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-webgl\", \"@antv/g-plugin-3d\", \"@antv/g-plugin-control\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-webgl\"), require(\"@antv/g-plugin-3d\"), require(\"@antv/g-plugin-control\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gWebgl, global.gPlugin3d, global.gPluginControl, global.lilGui, global.stats);\n    global.sphere = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gWebgl, _gPlugin3d, _gPluginControl, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // create a renderer\n  var renderer = new _gWebgl.Renderer();\n  renderer.registerPlugin(new _gPlugin3d.Plugin());\n  renderer.registerPlugin(new _gPluginControl.Plugin()); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: renderer,\n    background: 'black'\n  });\n\n  (async function () {\n    // wait for canvas' initialization complete\n    await canvas.ready; // use GPU device\n\n    var plugin = renderer.getPlugin('device-renderer');\n    var device = plugin.getDevice();\n    var map = plugin.loadTexture('https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*npAsSLPX4A4AAAAAAAAAAAAAARQnAQ');\n    var specularMap = plugin.loadTexture('https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*8wz0QaP_bjoAAAAAAAAAAAAAARQnAQ');\n    var bumpMap = plugin.loadTexture('https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*kuUITY47ZhMAAAAAAAAAAAAAARQnAQ');\n    var cloudMap = plugin.loadTexture('https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N2ooTq4cQroAAAAAAAAAAAAAARQnAQ'); // create a sphere geometry\n\n    var sphereGeometry = new _gPlugin3d.SphereGeometry(device, {\n      radius: 200,\n      latitudeBands: 32,\n      longitudeBands: 32\n    }); // create a material with Phong lighting model\n\n    var basicMaterial = new _gPlugin3d.MeshPhongMaterial(device, {\n      map: map,\n      specular: 'white',\n      specularMap: specularMap,\n      bumpMap: bumpMap,\n      bumpScale: 5,\n      shininess: 10\n    });\n    var cloudMaterial = new _gPlugin3d.MeshPhongMaterial(device, {\n      map: cloudMap,\n      doubleSide: true,\n      depthWrite: false\n    }); // create a mesh\n\n    var sphere = new _gPlugin3d.Mesh({\n      style: {\n        x: 300,\n        y: 250,\n        z: 0,\n        fill: '#1890FF',\n        opacity: 1,\n        geometry: sphereGeometry,\n        material: basicMaterial\n      }\n    });\n    canvas.appendChild(sphere); // const cloudMesh = new Mesh({\n    //   style: {\n    //     opacity: 0.2,\n    //     geometry: sphereGeometry,\n    //     material: cloudMaterial,\n    //   },\n    // });\n    // sphere.appendChild(cloudMesh);\n    // add a directional light into scene\n\n    var light = new _gPlugin3d.DirectionalLight({\n      style: {\n        fill: 'white',\n        direction: [-1, 0, 1]\n      }\n    });\n    canvas.appendChild(light);\n    var ambientLight = new _gPlugin3d.AmbientLight({\n      style: {\n        fill: '#000'\n      }\n    });\n    canvas.appendChild(ambientLight); // create fog, append to canvas later\n\n    var fog = new _gPlugin3d.Fog(); // stats\n\n    var stats = new _stats.default();\n    stats.showPanel(0);\n    var $stats = stats.dom;\n    $stats.style.position = 'absolute';\n    $stats.style.left = '0px';\n    $stats.style.top = '0px';\n    var $wrapper = document.getElementById('container');\n    $wrapper.appendChild($stats);\n    canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n      if (stats) {\n        stats.update();\n      }\n\n      sphere.rotate(0, 0.2, 0);\n    }); // GUI\n\n    var gui = new lil.GUI({\n      autoPlace: false\n    });\n    $wrapper.appendChild(gui.domElement);\n    var ambientFolder = gui.addFolder('ambient light');\n    var ambientLightConfig = {\n      fill: '#000'\n    };\n    ambientFolder.addColor(ambientLightConfig, 'fill').onChange(function (fill) {\n      ambientLight.style.fill = fill;\n    });\n    var lightFolder = gui.addFolder('directional light');\n    var lightConfig = {\n      fill: '#FFF',\n      intensity: Math.PI,\n      directionX: -1,\n      directionY: 0,\n      directionZ: 1\n    };\n    lightFolder.addColor(lightConfig, 'fill').onChange(function (fill) {\n      light.style.fill = fill;\n    });\n    lightFolder.add(lightConfig, 'intensity', 0, 20).onChange(function (intensity) {\n      light.style.intensity = intensity;\n    });\n    lightFolder.add(lightConfig, 'directionX', -1, 1).onChange(function (directionX) {\n      var direction = light.style.direction;\n      light.style.direction = [directionX, direction[1], direction[2]];\n    });\n    lightFolder.add(lightConfig, 'directionY', -1, 1).onChange(function (directionY) {\n      var direction = light.style.direction;\n      light.style.direction = [direction[0], directionY, direction[2]];\n    });\n    lightFolder.add(lightConfig, 'directionZ', -1, 1).onChange(function (directionZ) {\n      var direction = light.style.direction;\n      light.style.direction = [direction[0], direction[1], directionZ];\n    });\n    lightFolder.open();\n    var fogFolder = gui.addFolder('fog');\n    var fogConfig = {\n      enable: false,\n      type: _gPlugin3d.FogType.NONE,\n      fill: '#000',\n      start: 1,\n      end: 1000,\n      density: 0\n    };\n    fogFolder.add(fogConfig, 'enable').onChange(function (enable) {\n      if (enable) {\n        canvas.appendChild(fog);\n      } else {\n        canvas.removeChild(fog);\n      }\n    });\n    fogFolder.add(fogConfig, 'type', [_gPlugin3d.FogType.NONE, _gPlugin3d.FogType.EXP, _gPlugin3d.FogType.EXP2, _gPlugin3d.FogType.LINEAR]).onChange(function (type) {\n      fog.style.type = type;\n    });\n    fogFolder.addColor(fogConfig, 'fill').onChange(function (fill) {\n      fog.style.fill = fill;\n    });\n    fogFolder.add(fogConfig, 'start', 0, 1000).onChange(function (start) {\n      fog.style.start = start;\n    });\n    fogFolder.add(fogConfig, 'end', 0, 1000).onChange(function (end) {\n      fog.style.end = end;\n    });\n    fogFolder.add(fogConfig, 'density', 0, 5).onChange(function (density) {\n      fog.style.density = density;\n    });\n    fogFolder.open();\n    var sphereFolder = gui.addFolder('sphere');\n    var sphereConfig = {\n      opacity: 1,\n      fill: '#1890FF'\n    };\n    sphereFolder.add(sphereConfig, 'opacity', 0, 1, 0.1).onChange(function (opacity) {\n      sphere.style.opacity = opacity;\n    });\n    sphereFolder.addColor(sphereConfig, 'fill').onChange(function (color) {\n      sphere.style.fill = color;\n    });\n    sphereFolder.open();\n    var geometryFolder = gui.addFolder('geometry');\n    var geometryConfig = {\n      radius: 200,\n      latitudeBands: 32,\n      longitudeBands: 32\n    };\n    geometryFolder.add(geometryConfig, 'radius', 50, 300).onChange(function (radius) {\n      sphereGeometry.radius = radius;\n    });\n    geometryFolder.add(geometryConfig, 'latitudeBands', 8, 64, 1).onChange(function (latitudeBands) {\n      sphereGeometry.latitudeBands = latitudeBands;\n    });\n    geometryFolder.add(geometryConfig, 'longitudeBands', 8, 64, 1).onChange(function (longitudeBands) {\n      sphereGeometry.longitudeBands = longitudeBands;\n    });\n    geometryFolder.open();\n    var materialFolder = gui.addFolder('material');\n    var materialConfig = {\n      map: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*npAsSLPX4A4AAAAAAAAAAAAAARQnAQ',\n      emissive: '#000000',\n      specular: '#FFFFFF',\n      specularMap: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*8wz0QaP_bjoAAAAAAAAAAAAAARQnAQ',\n      shininess: 10,\n      bumpMap: 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*kuUITY47ZhMAAAAAAAAAAAAAARQnAQ',\n      bumpScale: 5,\n      wireframe: false\n    };\n    materialFolder.add(materialConfig, 'map', ['https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*npAsSLPX4A4AAAAAAAAAAAAAARQnAQ', 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ', 'none']).onChange(function (mapURL) {\n      if (mapURL === 'none') {\n        sphere.style.material.map = null;\n      } else {\n        var _map = plugin.loadTexture(mapURL);\n\n        sphere.style.material.map = _map;\n      }\n    });\n    materialFolder.addColor(materialConfig, 'emissive').onChange(function (emissive) {\n      sphere.style.material.emissive = emissive;\n    });\n    materialFolder.addColor(materialConfig, 'specular').onChange(function (specular) {\n      sphere.style.material.specular = specular;\n    });\n    materialFolder.add(materialConfig, 'specularMap', ['https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*8wz0QaP_bjoAAAAAAAAAAAAAARQnAQ', 'none']).onChange(function (specularMapURL) {\n      if (specularMapURL === 'none') {\n        sphere.style.material.specularMap = null;\n      } else {\n        var _specularMap = plugin.loadTexture(specularMapURL);\n\n        sphere.style.material.specularMap = _specularMap;\n      }\n    });\n    materialFolder.add(materialConfig, 'shininess', 0, 100).onChange(function (shininess) {\n      sphere.style.material.shininess = shininess;\n    });\n    materialFolder.add(materialConfig, 'bumpMap', ['https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*kuUITY47ZhMAAAAAAAAAAAAAARQnAQ', 'none']).onChange(function (bumpMapURL) {\n      if (bumpMapURL === 'none') {\n        sphere.style.material.bumpMap = null;\n      } else {\n        var _bumpMap = plugin.loadTexture(bumpMapURL);\n\n        sphere.style.material.bumpMap = _bumpMap;\n      }\n    });\n    materialFolder.add(materialConfig, 'bumpScale', 0, 10).onChange(function (bumpScale) {\n      sphere.style.material.bumpScale = bumpScale;\n    });\n    materialFolder.add(materialConfig, 'wireframe').onChange(function (enable) {\n      sphere.style.material.wireframe = !!enable;\n    });\n    materialFolder.open();\n  })();\n});"},{"relativePath":"3d/demo/torus.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/3d/demo/torus.js","order":5,"filename":"torus.js","title":{"zh":"圆环","en":"Torus"},"source":"import { Canvas, CanvasEvent } from '@antv/g';\nimport { Renderer } from '@antv/g-webgl';\nimport {\n  MeshPhongMaterial,\n  TorusGeometry,\n  DirectionalLight,\n  Mesh,\n  FogType,\n  Plugin as Plugin3D,\n} from '@antv/g-plugin-3d';\nimport { Plugin as PluginControl } from '@antv/g-plugin-control';\nimport * as lil from 'lil-gui';\nimport Stats from 'stats.js';\n\n// create a renderer\nconst renderer = new Renderer();\nrenderer.registerPlugin(new Plugin3D());\nrenderer.registerPlugin(new PluginControl());\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer,\n});\n\n(async () => {\n  // wait for canvas' initialization complete\n  await canvas.ready;\n  // use GPU device\n  const plugin = renderer.getPlugin('device-renderer');\n  const device = plugin.getDevice();\n\n  const torusGeometry = new TorusGeometry(device, {\n    tubeRadius: 30,\n    ringRadius: 200,\n  });\n  const basicMaterial = new MeshPhongMaterial(device);\n\n  const torus = new Mesh({\n    style: {\n      x: 300,\n      y: 250,\n      fill: 'white',\n      opacity: 1,\n      geometry: torusGeometry,\n      material: basicMaterial,\n    },\n  });\n\n  canvas.appendChild(torus);\n\n  // add a directional light into scene\n  const light = new DirectionalLight({\n    style: {\n      fill: 'white',\n      direction: [-1, 0, 1],\n    },\n  });\n  canvas.appendChild(light);\n\n  const camera = canvas.getCamera();\n  camera.setPosition(300, 0, 500);\n\n  // stats\n  const stats = new Stats();\n  stats.showPanel(0);\n  const $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  const $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n    if (stats) {\n      stats.update();\n    }\n    torus.rotate(0, 0.2, 0);\n  });\n\n  // GUI\n  const gui = new lil.GUI({ autoPlace: false });\n  $wrapper.appendChild(gui.domElement);\n\n  const torusFolder = gui.addFolder('torus');\n  const torusConfig = {\n    opacity: 1,\n    fill: '#1890FF',\n  };\n  torusFolder.add(torusConfig, 'opacity', 0, 1, 0.1).onChange((opacity) => {\n    torus.style.opacity = opacity;\n  });\n  torusFolder.addColor(torusConfig, 'fill').onChange((color) => {\n    torus.style.fill = color;\n  });\n  torusFolder.open();\n\n  const geometryFolder = gui.addFolder('geometry');\n  const geometryConfig = {\n    tubeRadius: 30,\n    ringRadius: 200,\n    segments: 30,\n    sides: 20,\n  };\n  geometryFolder.add(geometryConfig, 'tubeRadius', 10, 300).onChange((tubeRadius) => {\n    torusGeometry.tubeRadius = tubeRadius;\n  });\n  geometryFolder.add(geometryConfig, 'ringRadius', 10, 300).onChange((ringRadius) => {\n    torusGeometry.ringRadius = ringRadius;\n  });\n  geometryFolder.add(geometryConfig, 'segments', 2, 30, 1).onChange((segments) => {\n    torusGeometry.segments = segments;\n  });\n  geometryFolder.add(geometryConfig, 'sides', 2, 30, 1).onChange((sides) => {\n    torusGeometry.sides = sides;\n  });\n  geometryFolder.open();\n\n  const materialFolder = gui.addFolder('material');\n  const materialConfig = {\n    wireframe: false,\n    map: 'none',\n    fogType: FogType.NONE,\n    fogColor: '#000000',\n    fogDensity: 0.5,\n    fogStart: 1,\n    fogEnd: 1000,\n  };\n  materialFolder.add(materialConfig, 'wireframe').onChange((enable) => {\n    torus.style.material.wireframe = !!enable;\n  });\n  materialFolder\n    .add(materialConfig, 'map', [\n      'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*npAsSLPX4A4AAAAAAAAAAAAAARQnAQ',\n      'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ',\n      'none',\n    ])\n    .onChange((mapURL) => {\n      if (mapURL === 'none') {\n        torus.style.material.map = null;\n      } else {\n        const map = plugin.loadTexture(mapURL);\n        torus.style.material.map = map;\n      }\n    });\n  const fogTypes = [FogType.NONE, FogType.EXP, FogType.EXP2, FogType.LINEAR];\n  materialFolder.add(materialConfig, 'fogType', fogTypes).onChange((fogType) => {\n    // FogType.NONE\n    torus.style.material.fogType = fogType;\n  });\n  materialFolder.addColor(materialConfig, 'fogColor').onChange((fogColor) => {\n    torus.style.material.fogColor = fogColor;\n  });\n  materialFolder.add(materialConfig, 'fogDensity', 0, 10).onChange((fogDensity) => {\n    torus.style.material.fogDensity = fogDensity;\n  });\n  materialFolder.add(materialConfig, 'fogStart', 0, 1000).onChange((fogStart) => {\n    torus.style.material.fogStart = fogStart;\n  });\n  materialFolder.add(materialConfig, 'fogEnd', 0, 1000).onChange((fogEnd) => {\n    torus.style.material.fogEnd = fogEnd;\n  });\n  materialFolder.open();\n})();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-webgl\", \"@antv/g-plugin-3d\", \"@antv/g-plugin-control\", \"lil-gui\", \"stats.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-webgl\"), require(\"@antv/g-plugin-3d\"), require(\"@antv/g-plugin-control\"), require(\"lil-gui\"), require(\"stats.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gWebgl, global.gPlugin3d, global.gPluginControl, global.lilGui, global.stats);\n    global.torus = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gWebgl, _gPlugin3d, _gPluginControl, lil, _stats) {\n  \"use strict\";\n\n  lil = _interopRequireWildcard(lil);\n  _stats = _interopRequireDefault(_stats);\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  // create a renderer\n  var renderer = new _gWebgl.Renderer();\n  renderer.registerPlugin(new _gPlugin3d.Plugin());\n  renderer.registerPlugin(new _gPluginControl.Plugin()); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: renderer\n  });\n\n  (async function () {\n    // wait for canvas' initialization complete\n    await canvas.ready; // use GPU device\n\n    var plugin = renderer.getPlugin('device-renderer');\n    var device = plugin.getDevice();\n    var torusGeometry = new _gPlugin3d.TorusGeometry(device, {\n      tubeRadius: 30,\n      ringRadius: 200\n    });\n    var basicMaterial = new _gPlugin3d.MeshPhongMaterial(device);\n    var torus = new _gPlugin3d.Mesh({\n      style: {\n        x: 300,\n        y: 250,\n        fill: 'white',\n        opacity: 1,\n        geometry: torusGeometry,\n        material: basicMaterial\n      }\n    });\n    canvas.appendChild(torus); // add a directional light into scene\n\n    var light = new _gPlugin3d.DirectionalLight({\n      style: {\n        fill: 'white',\n        direction: [-1, 0, 1]\n      }\n    });\n    canvas.appendChild(light);\n    var camera = canvas.getCamera();\n    camera.setPosition(300, 0, 500); // stats\n\n    var stats = new _stats.default();\n    stats.showPanel(0);\n    var $stats = stats.dom;\n    $stats.style.position = 'absolute';\n    $stats.style.left = '0px';\n    $stats.style.top = '0px';\n    var $wrapper = document.getElementById('container');\n    $wrapper.appendChild($stats);\n    canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n      if (stats) {\n        stats.update();\n      }\n\n      torus.rotate(0, 0.2, 0);\n    }); // GUI\n\n    var gui = new lil.GUI({\n      autoPlace: false\n    });\n    $wrapper.appendChild(gui.domElement);\n    var torusFolder = gui.addFolder('torus');\n    var torusConfig = {\n      opacity: 1,\n      fill: '#1890FF'\n    };\n    torusFolder.add(torusConfig, 'opacity', 0, 1, 0.1).onChange(function (opacity) {\n      torus.style.opacity = opacity;\n    });\n    torusFolder.addColor(torusConfig, 'fill').onChange(function (color) {\n      torus.style.fill = color;\n    });\n    torusFolder.open();\n    var geometryFolder = gui.addFolder('geometry');\n    var geometryConfig = {\n      tubeRadius: 30,\n      ringRadius: 200,\n      segments: 30,\n      sides: 20\n    };\n    geometryFolder.add(geometryConfig, 'tubeRadius', 10, 300).onChange(function (tubeRadius) {\n      torusGeometry.tubeRadius = tubeRadius;\n    });\n    geometryFolder.add(geometryConfig, 'ringRadius', 10, 300).onChange(function (ringRadius) {\n      torusGeometry.ringRadius = ringRadius;\n    });\n    geometryFolder.add(geometryConfig, 'segments', 2, 30, 1).onChange(function (segments) {\n      torusGeometry.segments = segments;\n    });\n    geometryFolder.add(geometryConfig, 'sides', 2, 30, 1).onChange(function (sides) {\n      torusGeometry.sides = sides;\n    });\n    geometryFolder.open();\n    var materialFolder = gui.addFolder('material');\n    var materialConfig = {\n      wireframe: false,\n      map: 'none',\n      fogType: _gPlugin3d.FogType.NONE,\n      fogColor: '#000000',\n      fogDensity: 0.5,\n      fogStart: 1,\n      fogEnd: 1000\n    };\n    materialFolder.add(materialConfig, 'wireframe').onChange(function (enable) {\n      torus.style.material.wireframe = !!enable;\n    });\n    materialFolder.add(materialConfig, 'map', ['https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*npAsSLPX4A4AAAAAAAAAAAAAARQnAQ', 'https://gw.alipayobjects.com/mdn/rms_6ae20b/afts/img/A*N4ZMS7gHsUIAAAAAAAAAAABkARQnAQ', 'none']).onChange(function (mapURL) {\n      if (mapURL === 'none') {\n        torus.style.material.map = null;\n      } else {\n        var map = plugin.loadTexture(mapURL);\n        torus.style.material.map = map;\n      }\n    });\n    var fogTypes = [_gPlugin3d.FogType.NONE, _gPlugin3d.FogType.EXP, _gPlugin3d.FogType.EXP2, _gPlugin3d.FogType.LINEAR];\n    materialFolder.add(materialConfig, 'fogType', fogTypes).onChange(function (fogType) {\n      // FogType.NONE\n      torus.style.material.fogType = fogType;\n    });\n    materialFolder.addColor(materialConfig, 'fogColor').onChange(function (fogColor) {\n      torus.style.material.fogColor = fogColor;\n    });\n    materialFolder.add(materialConfig, 'fogDensity', 0, 10).onChange(function (fogDensity) {\n      torus.style.material.fogDensity = fogDensity;\n    });\n    materialFolder.add(materialConfig, 'fogStart', 0, 1000).onChange(function (fogStart) {\n      torus.style.material.fogStart = fogStart;\n    });\n    materialFolder.add(materialConfig, 'fogEnd', 0, 1000).onChange(function (fogEnd) {\n      torus.style.material.fogEnd = fogEnd;\n    });\n    materialFolder.open();\n  })();\n});"},{"relativePath":"3d/demo/point.js","absolutePath":"/Users/panyuqi/Documents/webgl/g/packages/site/examples/3d/demo/point.js","order":0,"filename":"point.js","title":{"zh":"点","en":"Point"},"source":"import { Canvas, CanvasEvent } from '@antv/g';\nimport { Renderer } from '@antv/g-webgl';\nimport {\n  PointMaterial,\n  BufferGeometry,\n  Mesh,\n  VertexBufferFrequency,\n  Format,\n  VertexAttributeBufferIndex,\n  VertexAttributeLocation,\n  Plugin as Plugin3D,\n  PrimitiveTopology,\n} from '@antv/g-plugin-3d';\nimport { Plugin as PluginControl } from '@antv/g-plugin-control';\nimport Stats from 'stats.js';\nimport * as lil from 'lil-gui';\n\n/**\n * ported from @see https://threejs.org/examples/#webgl_points_sprites\n */\n\n// create a renderer\nconst renderer = new Renderer();\nrenderer.registerPlugin(new Plugin3D());\nrenderer.registerPlugin(new PluginControl());\n\n// create a canvas\nconst canvas = new Canvas({\n  container: 'container',\n  width: 600,\n  height: 500,\n  renderer,\n  background: 'black',\n});\n\n(async () => {\n  // wait for canvas' initialization complete\n  await canvas.ready;\n\n  // use GPU device\n  const plugin = renderer.getPlugin('device-renderer');\n  const device = plugin.getDevice();\n\n  // create buffer geometry\n  const bufferGeometry = new BufferGeometry(device);\n  bufferGeometry.setVertexBuffer({\n    bufferIndex: VertexAttributeBufferIndex.POSITION,\n    byteStride: 4 * 3,\n    frequency: VertexBufferFrequency.PerVertex,\n    attributes: [\n      {\n        format: Format.F32_RGB,\n        bufferByteOffset: 4 * 0,\n        location: VertexAttributeLocation.POSITION,\n      },\n    ],\n    // use 6 vertices\n    data: Float32Array.from([\n      -100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, -100.0, 100.0, -100.0, -100.0, 100.0,\n    ]),\n  });\n  // draw 4 vertices\n  bufferGeometry.vertexCount = 4;\n  // use GL_POINT instead of GL_TRIANGLES\n  bufferGeometry.drawMode = PrimitiveTopology.Points;\n\n  // load texture with URL\n  const map = plugin.loadTexture('https://threejs.org/examples/textures/sprites/snowflake1.png');\n  const pointMaterial = new PointMaterial(device, {\n    size: 100,\n    map,\n    depthTest: false,\n  });\n\n  const mesh = new Mesh({\n    style: {\n      fill: '#1890FF',\n      opacity: 1,\n      geometry: bufferGeometry,\n      material: pointMaterial,\n    },\n  });\n  mesh.setPosition(300, 250, 0);\n  canvas.appendChild(mesh);\n\n  // stats\n  const stats = new Stats();\n  stats.showPanel(0);\n  const $stats = stats.dom;\n  $stats.style.position = 'absolute';\n  $stats.style.left = '0px';\n  $stats.style.top = '0px';\n  const $wrapper = document.getElementById('container');\n  $wrapper.appendChild($stats);\n  canvas.addEventListener(CanvasEvent.AFTER_RENDER, () => {\n    if (stats) {\n      stats.update();\n    }\n  });\n\n  // GUI\n  const gui = new lil.GUI({ autoPlace: false });\n  $wrapper.appendChild(gui.domElement);\n\n  const pointFolder = gui.addFolder('point');\n  const pointConfig = {\n    size: 100,\n    vertexNum: 4,\n  };\n  pointFolder.add(pointConfig, 'size', 1, 100, 1).onChange((size) => {\n    pointMaterial.size = size;\n  });\n  pointFolder.add(pointConfig, 'vertexNum', 0, 4, 1).onChange((vertexNum) => {\n    bufferGeometry.vertexCount = vertexNum;\n  });\n  pointFolder.open();\n})();\n","babeledSource":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@antv/g\", \"@antv/g-webgl\", \"@antv/g-plugin-3d\", \"@antv/g-plugin-control\", \"stats.js\", \"lil-gui\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@antv/g\"), require(\"@antv/g-webgl\"), require(\"@antv/g-plugin-3d\"), require(\"@antv/g-plugin-control\"), require(\"stats.js\"), require(\"lil-gui\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.g, global.gWebgl, global.gPlugin3d, global.gPluginControl, global.stats, global.lilGui);\n    global.point = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_g, _gWebgl, _gPlugin3d, _gPluginControl, _stats, lil) {\n  \"use strict\";\n\n  _stats = _interopRequireDefault(_stats);\n  lil = _interopRequireWildcard(lil);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  /**\n   * ported from @see https://threejs.org/examples/#webgl_points_sprites\n   */\n  // create a renderer\n  var renderer = new _gWebgl.Renderer();\n  renderer.registerPlugin(new _gPlugin3d.Plugin());\n  renderer.registerPlugin(new _gPluginControl.Plugin()); // create a canvas\n\n  var canvas = new _g.Canvas({\n    container: 'container',\n    width: 600,\n    height: 500,\n    renderer: renderer,\n    background: 'black'\n  });\n\n  (async function () {\n    // wait for canvas' initialization complete\n    await canvas.ready; // use GPU device\n\n    var plugin = renderer.getPlugin('device-renderer');\n    var device = plugin.getDevice(); // create buffer geometry\n\n    var bufferGeometry = new _gPlugin3d.BufferGeometry(device);\n    bufferGeometry.setVertexBuffer({\n      bufferIndex: _gPlugin3d.VertexAttributeBufferIndex.POSITION,\n      byteStride: 4 * 3,\n      frequency: _gPlugin3d.VertexBufferFrequency.PerVertex,\n      attributes: [{\n        format: _gPlugin3d.Format.F32_RGB,\n        bufferByteOffset: 4 * 0,\n        location: _gPlugin3d.VertexAttributeLocation.POSITION\n      }],\n      // use 6 vertices\n      data: Float32Array.from([-100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, -100.0, 100.0, -100.0, -100.0, 100.0])\n    }); // draw 4 vertices\n\n    bufferGeometry.vertexCount = 4; // use GL_POINT instead of GL_TRIANGLES\n\n    bufferGeometry.drawMode = _gPlugin3d.PrimitiveTopology.Points; // load texture with URL\n\n    var map = plugin.loadTexture('https://threejs.org/examples/textures/sprites/snowflake1.png');\n    var pointMaterial = new _gPlugin3d.PointMaterial(device, {\n      size: 100,\n      map: map,\n      depthTest: false\n    });\n    var mesh = new _gPlugin3d.Mesh({\n      style: {\n        fill: '#1890FF',\n        opacity: 1,\n        geometry: bufferGeometry,\n        material: pointMaterial\n      }\n    });\n    mesh.setPosition(300, 250, 0);\n    canvas.appendChild(mesh); // stats\n\n    var stats = new _stats.default();\n    stats.showPanel(0);\n    var $stats = stats.dom;\n    $stats.style.position = 'absolute';\n    $stats.style.left = '0px';\n    $stats.style.top = '0px';\n    var $wrapper = document.getElementById('container');\n    $wrapper.appendChild($stats);\n    canvas.addEventListener(_g.CanvasEvent.AFTER_RENDER, function () {\n      if (stats) {\n        stats.update();\n      }\n    }); // GUI\n\n    var gui = new lil.GUI({\n      autoPlace: false\n    });\n    $wrapper.appendChild(gui.domElement);\n    var pointFolder = gui.addFolder('point');\n    var pointConfig = {\n      size: 100,\n      vertexNum: 4\n    };\n    pointFolder.add(pointConfig, 'size', 1, 100, 1).onChange(function (size) {\n      pointMaterial.size = size;\n    });\n    pointFolder.add(pointConfig, 'vertexNum', 0, 4, 1).onChange(function (vertexNum) {\n      bufferGeometry.vertexCount = vertexNum;\n    });\n    pointFolder.open();\n  })();\n});"}]}},"staticQueryHashes":["1976131296","3000541721","3000541721","738567659"]}